[{"name":"BOOLEAN","description":"org.modelix.model.data.Primitive.BOOLEAN","location":"model-api/org.modelix.model.data/-primitive/-b-o-o-l-e-a-n/index.html","searchKeys":["BOOLEAN","BOOLEAN","org.modelix.model.data.Primitive.BOOLEAN"]},{"name":"INT","description":"org.modelix.model.data.Primitive.INT","location":"model-api/org.modelix.model.data/-primitive/-i-n-t/index.html","searchKeys":["INT","INT","org.modelix.model.data.Primitive.INT"]},{"name":"STRING","description":"org.modelix.model.data.Primitive.STRING","location":"model-api/org.modelix.model.data/-primitive/-s-t-r-i-n-g/index.html","searchKeys":["STRING","STRING","org.modelix.model.data.Primitive.STRING"]},{"name":"abstract class AbstractArea : IArea","description":"org.modelix.model.area.AbstractArea","location":"model-api/org.modelix.model.area/-abstract-area/index.html","searchKeys":["AbstractArea","abstract class AbstractArea : IArea","org.modelix.model.area.AbstractArea"]},{"name":"abstract class AreaListenerWrapper(val wrappedListener: IAreaListener) : IAreaListener","description":"org.modelix.model.area.AreaListenerWrapper","location":"model-api/org.modelix.model.area/-area-listener-wrapper/index.html","searchKeys":["AreaListenerWrapper","abstract class AreaListenerWrapper(val wrappedListener: IAreaListener) : IAreaListener","org.modelix.model.area.AreaListenerWrapper"]},{"name":"abstract class LinkFromName : RoleFromName, ILink","description":"org.modelix.model.api.LinkFromName","location":"model-api/org.modelix.model.api/-link-from-name/index.html","searchKeys":["LinkFromName","abstract class LinkFromName : RoleFromName, ILink","org.modelix.model.api.LinkFromName"]},{"name":"abstract class NodeChangeEvent(val node: INode) : IAreaChangeEvent","description":"org.modelix.model.area.NodeChangeEvent","location":"model-api/org.modelix.model.area/-node-change-event/index.html","searchKeys":["NodeChangeEvent","abstract class NodeChangeEvent(val node: INode) : IAreaChangeEvent","org.modelix.model.area.NodeChangeEvent"]},{"name":"abstract class RoleChangeEvent(val node: INode, val role: String) : NodeChangeEvent","description":"org.modelix.model.area.RoleChangeEvent","location":"model-api/org.modelix.model.area/-role-change-event/index.html","searchKeys":["RoleChangeEvent","abstract class RoleChangeEvent(val node: INode, val role: String) : NodeChangeEvent","org.modelix.model.area.RoleChangeEvent"]},{"name":"abstract class RoleFromName : IRole","description":"org.modelix.model.api.RoleFromName","location":"model-api/org.modelix.model.api/-role-from-name/index.html","searchKeys":["RoleFromName","abstract class RoleFromName : IRole","org.modelix.model.api.RoleFromName"]},{"name":"abstract class Transaction(val branch: IBranch) : ITransaction","description":"org.modelix.model.api.Transaction","location":"model-api/org.modelix.model.api/-transaction/index.html","searchKeys":["Transaction","abstract class Transaction(val branch: IBranch) : ITransaction","org.modelix.model.api.Transaction"]},{"name":"abstract fun <T, U> from(iterable: ArrayLike<T>, mapfn: (v: T, k: Number) -> U): Array<U>","description":"tsstdlib.ArrayConstructor.from","location":"model-api/tsstdlib/-array-constructor/from.html","searchKeys":["from","abstract fun <T, U> from(iterable: ArrayLike<T>, mapfn: (v: T, k: Number) -> U): Array<U>","tsstdlib.ArrayConstructor.from"]},{"name":"abstract fun <T, U> from(iterable: ArrayLike<T>, mapfn: (v: T, k: Number) -> U, thisArg: Any = definedExternally): Array<U>","description":"tsstdlib.ArrayConstructor.from","location":"model-api/tsstdlib/-array-constructor/from.html","searchKeys":["from","abstract fun <T, U> from(iterable: ArrayLike<T>, mapfn: (v: T, k: Number) -> U, thisArg: Any = definedExternally): Array<U>","tsstdlib.ArrayConstructor.from"]},{"name":"abstract fun <T, U> from(iterable: Iterable<T>, mapfn: (v: T, k: Number) -> U): Array<U>","description":"tsstdlib.ArrayConstructor.from","location":"model-api/tsstdlib/-array-constructor/from.html","searchKeys":["from","abstract fun <T, U> from(iterable: Iterable<T>, mapfn: (v: T, k: Number) -> U): Array<U>","tsstdlib.ArrayConstructor.from"]},{"name":"abstract fun <T, U> from(iterable: Iterable<T>, mapfn: (v: T, k: Number) -> U, thisArg: Any = definedExternally): Array<U>","description":"tsstdlib.ArrayConstructor.from","location":"model-api/tsstdlib/-array-constructor/from.html","searchKeys":["from","abstract fun <T, U> from(iterable: Iterable<T>, mapfn: (v: T, k: Number) -> U, thisArg: Any = definedExternally): Array<U>","tsstdlib.ArrayConstructor.from"]},{"name":"abstract fun <T> computeRead(computable: () -> T): T","description":"org.modelix.model.api.IBranch.computeRead","location":"model-api/org.modelix.model.api/-i-branch/compute-read.html","searchKeys":["computeRead","abstract fun <T> computeRead(computable: () -> T): T","org.modelix.model.api.IBranch.computeRead"]},{"name":"abstract fun <T> computeWrite(computable: () -> T): T","description":"org.modelix.model.api.IBranch.computeWrite","location":"model-api/org.modelix.model.api/-i-branch/compute-write.html","searchKeys":["computeWrite","abstract fun <T> computeWrite(computable: () -> T): T","org.modelix.model.api.IBranch.computeWrite"]},{"name":"abstract fun <T> executeRead(f: () -> T): T","description":"org.modelix.model.area.IArea.executeRead","location":"model-api/org.modelix.model.area/-i-area/execute-read.html","searchKeys":["executeRead","abstract fun <T> executeRead(f: () -> T): T","org.modelix.model.area.IArea.executeRead"]},{"name":"abstract fun <T> executeWrite(f: () -> T): T","description":"org.modelix.model.area.IArea.executeWrite","location":"model-api/org.modelix.model.area/-i-area/execute-write.html","searchKeys":["executeWrite","abstract fun <T> executeWrite(f: () -> T): T","org.modelix.model.area.IArea.executeWrite"]},{"name":"abstract fun <T> from(iterable: ArrayLike<T>): Array<T>","description":"tsstdlib.ArrayConstructor.from","location":"model-api/tsstdlib/-array-constructor/from.html","searchKeys":["from","abstract fun <T> from(iterable: ArrayLike<T>): Array<T>","tsstdlib.ArrayConstructor.from"]},{"name":"abstract fun <T> from(iterable: Iterable<T>): Array<T>","description":"tsstdlib.ArrayConstructor.from","location":"model-api/tsstdlib/-array-constructor/from.html","searchKeys":["from","abstract fun <T> from(iterable: Iterable<T>): Array<T>","tsstdlib.ArrayConstructor.from"]},{"name":"abstract fun <T> of(vararg items: T): Array<T>","description":"tsstdlib.ArrayConstructor.of","location":"model-api/tsstdlib/-array-constructor/of.html","searchKeys":["of","abstract fun <T> of(vararg items: T): Array<T>","tsstdlib.ArrayConstructor.of"]},{"name":"abstract fun addListener(l: IAreaListener)","description":"org.modelix.model.area.IArea.addListener","location":"model-api/org.modelix.model.area/-i-area/add-listener.html","searchKeys":["addListener","abstract fun addListener(l: IAreaListener)","org.modelix.model.area.IArea.addListener"]},{"name":"abstract fun addListener(l: IBranchListener)","description":"org.modelix.model.api.IBranch.addListener","location":"model-api/org.modelix.model.api/-i-branch/add-listener.html","searchKeys":["addListener","abstract fun addListener(l: IBranchListener)","org.modelix.model.api.IBranch.addListener"]},{"name":"abstract fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConcept?)","description":"org.modelix.model.api.IWriteTransaction.addNewChild","location":"model-api/org.modelix.model.api/-i-write-transaction/add-new-child.html","searchKeys":["addNewChild","abstract fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConcept?)","org.modelix.model.api.IWriteTransaction.addNewChild"]},{"name":"abstract fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConcept?): ITree","description":"org.modelix.model.api.ITree.addNewChild","location":"model-api/org.modelix.model.api/-i-tree/add-new-child.html","searchKeys":["addNewChild","abstract fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConcept?): ITree","org.modelix.model.api.ITree.addNewChild"]},{"name":"abstract fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConceptReference?)","description":"org.modelix.model.api.IWriteTransaction.addNewChild","location":"model-api/org.modelix.model.api/-i-write-transaction/add-new-child.html","searchKeys":["addNewChild","abstract fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConceptReference?)","org.modelix.model.api.IWriteTransaction.addNewChild"]},{"name":"abstract fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConceptReference?): ITree","description":"org.modelix.model.api.ITree.addNewChild","location":"model-api/org.modelix.model.api/-i-tree/add-new-child.html","searchKeys":["addNewChild","abstract fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConceptReference?): ITree","org.modelix.model.api.ITree.addNewChild"]},{"name":"abstract fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConcept?): Long","description":"org.modelix.model.api.IWriteTransaction.addNewChild","location":"model-api/org.modelix.model.api/-i-write-transaction/add-new-child.html","searchKeys":["addNewChild","abstract fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConcept?): Long","org.modelix.model.api.IWriteTransaction.addNewChild"]},{"name":"abstract fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConceptReference?): Long","description":"org.modelix.model.api.IWriteTransaction.addNewChild","location":"model-api/org.modelix.model.api/-i-write-transaction/add-new-child.html","searchKeys":["addNewChild","abstract fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConceptReference?): Long","org.modelix.model.api.IWriteTransaction.addNewChild"]},{"name":"abstract fun addNewChild(role: String?, index: Int, concept: IConcept?): INode","description":"org.modelix.model.api.INode.addNewChild","location":"model-api/org.modelix.model.api/-i-node/add-new-child.html","searchKeys":["addNewChild","abstract fun addNewChild(role: String?, index: Int, concept: IConcept?): INode","org.modelix.model.api.INode.addNewChild"]},{"name":"abstract fun addNewChild(role: String?, index: Number, concept: IConceptJS?): INodeJS","description":"INodeJS.addNewChild","location":"model-api/[root]/-i-node-j-s/add-new-child.html","searchKeys":["addNewChild","abstract fun addNewChild(role: String?, index: Number, concept: IConceptJS?): INodeJS","INodeJS.addNewChild"]},{"name":"abstract fun addNewChildren(parentId: Long, role: String?, index: Int, childIds: LongArray, concepts: Array<IConceptReference?>)","description":"org.modelix.model.api.IWriteTransaction.addNewChildren","location":"model-api/org.modelix.model.api/-i-write-transaction/add-new-children.html","searchKeys":["addNewChildren","abstract fun addNewChildren(parentId: Long, role: String?, index: Int, childIds: LongArray, concepts: Array<IConceptReference?>)","org.modelix.model.api.IWriteTransaction.addNewChildren"]},{"name":"abstract fun addNewChildren(parentId: Long, role: String?, index: Int, concepts: Array<IConceptReference?>): LongArray","description":"org.modelix.model.api.IWriteTransaction.addNewChildren","location":"model-api/org.modelix.model.api/-i-write-transaction/add-new-children.html","searchKeys":["addNewChildren","abstract fun addNewChildren(parentId: Long, role: String?, index: Int, concepts: Array<IConceptReference?>): LongArray","org.modelix.model.api.IWriteTransaction.addNewChildren"]},{"name":"abstract fun addNewChildren(parentId: Long, role: String?, index: Int, newIds: LongArray, concepts: Array<IConcept?>): ITree","description":"org.modelix.model.api.ITree.addNewChildren","location":"model-api/org.modelix.model.api/-i-tree/add-new-children.html","searchKeys":["addNewChildren","abstract fun addNewChildren(parentId: Long, role: String?, index: Int, newIds: LongArray, concepts: Array<IConcept?>): ITree","org.modelix.model.api.ITree.addNewChildren"]},{"name":"abstract fun addNewChildren(parentId: Long, role: String?, index: Int, newIds: LongArray, concepts: Array<IConceptReference?>): ITree","description":"org.modelix.model.api.ITree.addNewChildren","location":"model-api/org.modelix.model.api/-i-tree/add-new-children.html","searchKeys":["addNewChildren","abstract fun addNewChildren(parentId: Long, role: String?, index: Int, newIds: LongArray, concepts: Array<IConceptReference?>): ITree","org.modelix.model.api.ITree.addNewChildren"]},{"name":"abstract fun areaChanged(changes: IAreaChangeList)","description":"org.modelix.model.area.IAreaListener.areaChanged","location":"model-api/org.modelix.model.area/-i-area-listener/area-changed.html","searchKeys":["areaChanged","abstract fun areaChanged(changes: IAreaChangeList)","org.modelix.model.area.IAreaListener.areaChanged"]},{"name":"abstract fun canRead(): Boolean","description":"org.modelix.model.api.IBranch.canRead","location":"model-api/org.modelix.model.api/-i-branch/can-read.html","searchKeys":["canRead","abstract fun canRead(): Boolean","org.modelix.model.api.IBranch.canRead"]},{"name":"abstract fun canRead(): Boolean","description":"org.modelix.model.area.IArea.canRead","location":"model-api/org.modelix.model.area/-i-area/can-read.html","searchKeys":["canRead","abstract fun canRead(): Boolean","org.modelix.model.area.IArea.canRead"]},{"name":"abstract fun canWrite(): Boolean","description":"org.modelix.model.api.IBranch.canWrite","location":"model-api/org.modelix.model.api/-i-branch/can-write.html","searchKeys":["canWrite","abstract fun canWrite(): Boolean","org.modelix.model.api.IBranch.canWrite"]},{"name":"abstract fun canWrite(): Boolean","description":"org.modelix.model.area.IArea.canWrite","location":"model-api/org.modelix.model.area/-i-area/can-write.html","searchKeys":["canWrite","abstract fun canWrite(): Boolean","org.modelix.model.area.IArea.canWrite"]},{"name":"abstract fun childrenChanged(nodeId: Long, role: String?)","description":"org.modelix.model.api.ITreeChangeVisitor.childrenChanged","location":"model-api/org.modelix.model.api/-i-tree-change-visitor/children-changed.html","searchKeys":["childrenChanged","abstract fun childrenChanged(nodeId: Long, role: String?)","org.modelix.model.api.ITreeChangeVisitor.childrenChanged"]},{"name":"abstract fun clear()","description":"tsstdlib.Map.clear","location":"model-api/tsstdlib/-map/clear.html","searchKeys":["clear","abstract fun clear()","tsstdlib.Map.clear"]},{"name":"abstract fun collectAreas(): List<IArea>","description":"org.modelix.model.area.IArea.collectAreas","location":"model-api/org.modelix.model.area/-i-area/collect-areas.html","searchKeys":["collectAreas","abstract fun collectAreas(): List<IArea>","org.modelix.model.area.IArea.collectAreas"]},{"name":"abstract fun containmentChanged(nodeId: Long)","description":"org.modelix.model.api.ITreeChangeVisitor.containmentChanged","location":"model-api/org.modelix.model.api/-i-tree-change-visitor/containment-changed.html","searchKeys":["containmentChanged","abstract fun containmentChanged(nodeId: Long)","org.modelix.model.api.ITreeChangeVisitor.containmentChanged"]},{"name":"abstract fun containsNode(nodeId: Long): Boolean","description":"org.modelix.model.api.ITransaction.containsNode","location":"model-api/org.modelix.model.api/-i-transaction/contains-node.html","searchKeys":["containsNode","abstract fun containsNode(nodeId: Long): Boolean","org.modelix.model.api.ITransaction.containsNode"]},{"name":"abstract fun containsNode(nodeId: Long): Boolean","description":"org.modelix.model.api.ITree.containsNode","location":"model-api/org.modelix.model.api/-i-tree/contains-node.html","searchKeys":["containsNode","abstract fun containsNode(nodeId: Long): Boolean","org.modelix.model.api.ITree.containsNode"]},{"name":"abstract fun delete(key: K): Boolean","description":"tsstdlib.Map.delete","location":"model-api/tsstdlib/-map/delete.html","searchKeys":["delete","abstract fun delete(key: K): Boolean","tsstdlib.Map.delete"]},{"name":"abstract fun deleteNode(nodeId: Long)","description":"org.modelix.model.api.IWriteTransaction.deleteNode","location":"model-api/org.modelix.model.api/-i-write-transaction/delete-node.html","searchKeys":["deleteNode","abstract fun deleteNode(nodeId: Long)","org.modelix.model.api.IWriteTransaction.deleteNode"]},{"name":"abstract fun deleteNode(nodeId: Long): ITree","description":"org.modelix.model.api.ITree.deleteNode","location":"model-api/org.modelix.model.api/-i-tree/delete-node.html","searchKeys":["deleteNode","abstract fun deleteNode(nodeId: Long): ITree","org.modelix.model.api.ITree.deleteNode"]},{"name":"abstract fun deleteNodes(nodeIds: LongArray): ITree","description":"org.modelix.model.api.ITree.deleteNodes","location":"model-api/org.modelix.model.api/-i-tree/delete-nodes.html","searchKeys":["deleteNodes","abstract fun deleteNodes(nodeIds: LongArray): ITree","org.modelix.model.api.ITree.deleteNodes"]},{"name":"abstract fun deserialize(serialized: String): INodeReference?","description":"org.modelix.model.api.INodeReferenceSerializer.deserialize","location":"model-api/org.modelix.model.api/-i-node-reference-serializer/deserialize.html","searchKeys":["deserialize","abstract fun deserialize(serialized: String): INodeReference?","org.modelix.model.api.INodeReferenceSerializer.deserialize"]},{"name":"abstract fun entries(): IterableIterator<dynamic>","description":"tsstdlib.Map.entries","location":"model-api/tsstdlib/-map/entries.html","searchKeys":["entries","abstract fun entries(): IterableIterator<dynamic>","tsstdlib.Map.entries"]},{"name":"abstract fun forEach(callbackfn: (value: V, key: K, map: Map<K, V>) -> Unit, thisArg: Any = definedExternally)","description":"tsstdlib.Map.forEach","location":"model-api/tsstdlib/-map/for-each.html","searchKeys":["forEach","abstract fun forEach(callbackfn: (value: V, key: K, map: Map<K, V>) -> Unit, thisArg: Any = definedExternally)","tsstdlib.Map.forEach"]},{"name":"abstract fun generate(): Long","description":"org.modelix.model.api.IIdGenerator.generate","location":"model-api/org.modelix.model.api/-i-id-generator/generate.html","searchKeys":["generate","abstract fun generate(): Long","org.modelix.model.api.IIdGenerator.generate"]},{"name":"abstract fun generateIds(quantity: Number, callback: (data: IdRangeData) -> Unit): IdGenerator","description":"IModelServerConnection.generateIds","location":"model-api/[root]/-i-model-server-connection/generate-ids.html","searchKeys":["generateIds","abstract fun generateIds(quantity: Number, callback: (data: IdRangeData) -> Unit): IdGenerator","IModelServerConnection.generateIds"]},{"name":"abstract fun get(key: K): V?","description":"tsstdlib.Map.get","location":"model-api/tsstdlib/-map/get.html","searchKeys":["get","abstract fun get(key: K): V?","tsstdlib.Map.get"]},{"name":"abstract fun getAllChildLinks(): List<IChildLink>","description":"org.modelix.model.api.IConcept.getAllChildLinks","location":"model-api/org.modelix.model.api/-i-concept/get-all-child-links.html","searchKeys":["getAllChildLinks","abstract fun getAllChildLinks(): List<IChildLink>","org.modelix.model.api.IConcept.getAllChildLinks"]},{"name":"abstract fun getAllChildren(): Array<INodeJS>","description":"INodeJS.getAllChildren","location":"model-api/[root]/-i-node-j-s/get-all-children.html","searchKeys":["getAllChildren","abstract fun getAllChildren(): Array<INodeJS>","INodeJS.getAllChildren"]},{"name":"abstract fun getAllChildren(parentId: Long): Iterable<Long>","description":"org.modelix.model.api.ITransaction.getAllChildren","location":"model-api/org.modelix.model.api/-i-transaction/get-all-children.html","searchKeys":["getAllChildren","abstract fun getAllChildren(parentId: Long): Iterable<Long>","org.modelix.model.api.ITransaction.getAllChildren"]},{"name":"abstract fun getAllChildren(parentId: Long): Iterable<Long>","description":"org.modelix.model.api.ITree.getAllChildren","location":"model-api/org.modelix.model.api/-i-tree/get-all-children.html","searchKeys":["getAllChildren","abstract fun getAllChildren(parentId: Long): Iterable<Long>","org.modelix.model.api.ITree.getAllChildren"]},{"name":"abstract fun getAllConcepts(): List<IConcept>","description":"org.modelix.model.api.ILanguageRepository.getAllConcepts","location":"model-api/org.modelix.model.api/-i-language-repository/get-all-concepts.html","searchKeys":["getAllConcepts","abstract fun getAllConcepts(): List<IConcept>","org.modelix.model.api.ILanguageRepository.getAllConcepts"]},{"name":"abstract fun getAllProperties(): List<IProperty>","description":"org.modelix.model.api.IConcept.getAllProperties","location":"model-api/org.modelix.model.api/-i-concept/get-all-properties.html","searchKeys":["getAllProperties","abstract fun getAllProperties(): List<IProperty>","org.modelix.model.api.IConcept.getAllProperties"]},{"name":"abstract fun getAllReferenceLinks(): List<IReferenceLink>","description":"org.modelix.model.api.IConcept.getAllReferenceLinks","location":"model-api/org.modelix.model.api/-i-concept/get-all-reference-links.html","searchKeys":["getAllReferenceLinks","abstract fun getAllReferenceLinks(): List<IReferenceLink>","org.modelix.model.api.IConcept.getAllReferenceLinks"]},{"name":"abstract fun getArea(): IArea","description":"org.modelix.model.api.INode.getArea","location":"model-api/org.modelix.model.api/-i-node/get-area.html","searchKeys":["getArea","abstract fun getArea(): IArea","org.modelix.model.api.INode.getArea"]},{"name":"abstract fun getChildLink(name: String): IChildLink","description":"org.modelix.model.api.IConcept.getChildLink","location":"model-api/org.modelix.model.api/-i-concept/get-child-link.html","searchKeys":["getChildLink","abstract fun getChildLink(name: String): IChildLink","org.modelix.model.api.IConcept.getChildLink"]},{"name":"abstract fun getChildRoles(sourceId: Long): Iterable<String?>","description":"org.modelix.model.api.ITree.getChildRoles","location":"model-api/org.modelix.model.api/-i-tree/get-child-roles.html","searchKeys":["getChildRoles","abstract fun getChildRoles(sourceId: Long): Iterable<String?>","org.modelix.model.api.ITree.getChildRoles"]},{"name":"abstract fun getChildren(parentId: Long, role: String?): Iterable<Long>","description":"org.modelix.model.api.ITransaction.getChildren","location":"model-api/org.modelix.model.api/-i-transaction/get-children.html","searchKeys":["getChildren","abstract fun getChildren(parentId: Long, role: String?): Iterable<Long>","org.modelix.model.api.ITransaction.getChildren"]},{"name":"abstract fun getChildren(parentId: Long, role: String?): Iterable<Long>","description":"org.modelix.model.api.ITree.getChildren","location":"model-api/org.modelix.model.api/-i-tree/get-children.html","searchKeys":["getChildren","abstract fun getChildren(parentId: Long, role: String?): Iterable<Long>","org.modelix.model.api.ITree.getChildren"]},{"name":"abstract fun getChildren(role: String?): Array<INodeJS>","description":"INodeJS.getChildren","location":"model-api/[root]/-i-node-j-s/get-children.html","searchKeys":["getChildren","abstract fun getChildren(role: String?): Array<INodeJS>","INodeJS.getChildren"]},{"name":"abstract fun getChildren(role: String?): Iterable<INode>","description":"org.modelix.model.api.INode.getChildren","location":"model-api/org.modelix.model.api/-i-node/get-children.html","searchKeys":["getChildren","abstract fun getChildren(role: String?): Iterable<INode>","org.modelix.model.api.INode.getChildren"]},{"name":"abstract fun getConcept(): IConcept","description":"org.modelix.model.api.IRole.getConcept","location":"model-api/org.modelix.model.api/-i-role/get-concept.html","searchKeys":["getConcept","abstract fun getConcept(): IConcept","org.modelix.model.api.IRole.getConcept"]},{"name":"abstract fun getConcept(): IConceptJS?","description":"INodeJS.getConcept","location":"model-api/[root]/-i-node-j-s/get-concept.html","searchKeys":["getConcept","abstract fun getConcept(): IConceptJS?","INodeJS.getConcept"]},{"name":"abstract fun getConcept(nodeId: Long): IConcept?","description":"org.modelix.model.api.ITransaction.getConcept","location":"model-api/org.modelix.model.api/-i-transaction/get-concept.html","searchKeys":["getConcept","abstract fun getConcept(nodeId: Long): IConcept?","org.modelix.model.api.ITransaction.getConcept"]},{"name":"abstract fun getConcept(nodeId: Long): IConcept?","description":"org.modelix.model.api.ITree.getConcept","location":"model-api/org.modelix.model.api/-i-tree/get-concept.html","searchKeys":["getConcept","abstract fun getConcept(nodeId: Long): IConcept?","org.modelix.model.api.ITree.getConcept"]},{"name":"abstract fun getConceptReference(): IConceptReference?","description":"org.modelix.model.api.INode.getConceptReference","location":"model-api/org.modelix.model.api/-i-node/get-concept-reference.html","searchKeys":["getConceptReference","abstract fun getConceptReference(): IConceptReference?","org.modelix.model.api.INode.getConceptReference"]},{"name":"abstract fun getConceptReference(nodeId: Long): IConceptReference?","description":"org.modelix.model.api.ITransaction.getConceptReference","location":"model-api/org.modelix.model.api/-i-transaction/get-concept-reference.html","searchKeys":["getConceptReference","abstract fun getConceptReference(nodeId: Long): IConceptReference?","org.modelix.model.api.ITransaction.getConceptReference"]},{"name":"abstract fun getConceptReference(nodeId: Long): IConceptReference?","description":"org.modelix.model.api.ITree.getConceptReference","location":"model-api/org.modelix.model.api/-i-tree/get-concept-reference.html","searchKeys":["getConceptReference","abstract fun getConceptReference(nodeId: Long): IConceptReference?","org.modelix.model.api.ITree.getConceptReference"]},{"name":"abstract fun getConceptUID(): String?","description":"INodeJS.getConceptUID","location":"model-api/[root]/-i-node-j-s/get-concept-u-i-d.html","searchKeys":["getConceptUID","abstract fun getConceptUID(): String?","INodeJS.getConceptUID"]},{"name":"abstract fun getConcepts(): List<IConcept>","description":"org.modelix.model.api.ILanguage.getConcepts","location":"model-api/org.modelix.model.api/-i-language/get-concepts.html","searchKeys":["getConcepts","abstract fun getConcepts(): List<IConcept>","org.modelix.model.api.ILanguage.getConcepts"]},{"name":"abstract fun getDirectSuperConcepts(): Array<IConceptJS>","description":"IConceptJS.getDirectSuperConcepts","location":"model-api/[root]/-i-concept-j-s/get-direct-super-concepts.html","searchKeys":["getDirectSuperConcepts","abstract fun getDirectSuperConcepts(): Array<IConceptJS>","IConceptJS.getDirectSuperConcepts"]},{"name":"abstract fun getDirectSuperConcepts(): List<IConcept>","description":"org.modelix.model.api.IConcept.getDirectSuperConcepts","location":"model-api/org.modelix.model.api/-i-concept/get-direct-super-concepts.html","searchKeys":["getDirectSuperConcepts","abstract fun getDirectSuperConcepts(): List<IConcept>","org.modelix.model.api.IConcept.getDirectSuperConcepts"]},{"name":"abstract fun getId(): String","description":"org.modelix.model.api.IBranch.getId","location":"model-api/org.modelix.model.api/-i-branch/get-id.html","searchKeys":["getId","abstract fun getId(): String","org.modelix.model.api.IBranch.getId"]},{"name":"abstract fun getId(): String?","description":"org.modelix.model.api.ITree.getId","location":"model-api/org.modelix.model.api/-i-tree/get-id.html","searchKeys":["getId","abstract fun getId(): String?","org.modelix.model.api.ITree.getId"]},{"name":"abstract fun getLongName(): String","description":"org.modelix.model.api.IConcept.getLongName","location":"model-api/org.modelix.model.api/-i-concept/get-long-name.html","searchKeys":["getLongName","abstract fun getLongName(): String","org.modelix.model.api.IConcept.getLongName"]},{"name":"abstract fun getName(): String","description":"org.modelix.model.api.ILanguage.getName","location":"model-api/org.modelix.model.api/-i-language/get-name.html","searchKeys":["getName","abstract fun getName(): String","org.modelix.model.api.ILanguage.getName"]},{"name":"abstract fun getOwnChildLinks(): List<IChildLink>","description":"org.modelix.model.api.IConcept.getOwnChildLinks","location":"model-api/org.modelix.model.api/-i-concept/get-own-child-links.html","searchKeys":["getOwnChildLinks","abstract fun getOwnChildLinks(): List<IChildLink>","org.modelix.model.api.IConcept.getOwnChildLinks"]},{"name":"abstract fun getOwnProperties(): List<IProperty>","description":"org.modelix.model.api.IConcept.getOwnProperties","location":"model-api/org.modelix.model.api/-i-concept/get-own-properties.html","searchKeys":["getOwnProperties","abstract fun getOwnProperties(): List<IProperty>","org.modelix.model.api.IConcept.getOwnProperties"]},{"name":"abstract fun getOwnReferenceLinks(): List<IReferenceLink>","description":"org.modelix.model.api.IConcept.getOwnReferenceLinks","location":"model-api/org.modelix.model.api/-i-concept/get-own-reference-links.html","searchKeys":["getOwnReferenceLinks","abstract fun getOwnReferenceLinks(): List<IReferenceLink>","org.modelix.model.api.IConcept.getOwnReferenceLinks"]},{"name":"abstract fun getParent(): INodeJS?","description":"INodeJS.getParent","location":"model-api/[root]/-i-node-j-s/get-parent.html","searchKeys":["getParent","abstract fun getParent(): INodeJS?","INodeJS.getParent"]},{"name":"abstract fun getParent(nodeId: Long): Long","description":"org.modelix.model.api.ITransaction.getParent","location":"model-api/org.modelix.model.api/-i-transaction/get-parent.html","searchKeys":["getParent","abstract fun getParent(nodeId: Long): Long","org.modelix.model.api.ITransaction.getParent"]},{"name":"abstract fun getParent(nodeId: Long): Long","description":"org.modelix.model.api.ITree.getParent","location":"model-api/org.modelix.model.api/-i-tree/get-parent.html","searchKeys":["getParent","abstract fun getParent(nodeId: Long): Long","org.modelix.model.api.ITree.getParent"]},{"name":"abstract fun getProperty(name: String): IProperty","description":"org.modelix.model.api.IConcept.getProperty","location":"model-api/org.modelix.model.api/-i-concept/get-property.html","searchKeys":["getProperty","abstract fun getProperty(name: String): IProperty","org.modelix.model.api.IConcept.getProperty"]},{"name":"abstract fun getProperty(nodeId: Long, role: String): String?","description":"org.modelix.model.api.ITransaction.getProperty","location":"model-api/org.modelix.model.api/-i-transaction/get-property.html","searchKeys":["getProperty","abstract fun getProperty(nodeId: Long, role: String): String?","org.modelix.model.api.ITransaction.getProperty"]},{"name":"abstract fun getProperty(nodeId: Long, role: String): String?","description":"org.modelix.model.api.ITree.getProperty","location":"model-api/org.modelix.model.api/-i-tree/get-property.html","searchKeys":["getProperty","abstract fun getProperty(nodeId: Long, role: String): String?","org.modelix.model.api.ITree.getProperty"]},{"name":"abstract fun getPropertyRoles(): Array<String>","description":"INodeJS.getPropertyRoles","location":"model-api/[root]/-i-node-j-s/get-property-roles.html","searchKeys":["getPropertyRoles","abstract fun getPropertyRoles(): Array<String>","INodeJS.getPropertyRoles"]},{"name":"abstract fun getPropertyRoles(): List<String>","description":"org.modelix.model.api.INode.getPropertyRoles","location":"model-api/org.modelix.model.api/-i-node/get-property-roles.html","searchKeys":["getPropertyRoles","abstract fun getPropertyRoles(): List<String>","org.modelix.model.api.INode.getPropertyRoles"]},{"name":"abstract fun getPropertyRoles(sourceId: Long): Iterable<String>","description":"org.modelix.model.api.ITransaction.getPropertyRoles","location":"model-api/org.modelix.model.api/-i-transaction/get-property-roles.html","searchKeys":["getPropertyRoles","abstract fun getPropertyRoles(sourceId: Long): Iterable<String>","org.modelix.model.api.ITransaction.getPropertyRoles"]},{"name":"abstract fun getPropertyRoles(sourceId: Long): Iterable<String>","description":"org.modelix.model.api.ITree.getPropertyRoles","location":"model-api/org.modelix.model.api/-i-tree/get-property-roles.html","searchKeys":["getPropertyRoles","abstract fun getPropertyRoles(sourceId: Long): Iterable<String>","org.modelix.model.api.ITree.getPropertyRoles"]},{"name":"abstract fun getPropertyValue(role: String): String?","description":"INodeJS.getPropertyValue","location":"model-api/[root]/-i-node-j-s/get-property-value.html","searchKeys":["getPropertyValue","abstract fun getPropertyValue(role: String): String?","INodeJS.getPropertyValue"]},{"name":"abstract fun getPropertyValue(role: String): String?","description":"org.modelix.model.api.INode.getPropertyValue","location":"model-api/org.modelix.model.api/-i-node/get-property-value.html","searchKeys":["getPropertyValue","abstract fun getPropertyValue(role: String): String?","org.modelix.model.api.INode.getPropertyValue"]},{"name":"abstract fun getReference(): IAreaReference","description":"org.modelix.model.area.IArea.getReference","location":"model-api/org.modelix.model.area/-i-area/get-reference.html","searchKeys":["getReference","abstract fun getReference(): IAreaReference","org.modelix.model.area.IArea.getReference"]},{"name":"abstract fun getReference(): IConceptReference","description":"org.modelix.model.api.IConcept.getReference","location":"model-api/org.modelix.model.api/-i-concept/get-reference.html","searchKeys":["getReference","abstract fun getReference(): IConceptReference","org.modelix.model.api.IConcept.getReference"]},{"name":"abstract fun getReference(): INodeReferenceJS","description":"INodeJS.getReference","location":"model-api/[root]/-i-node-j-s/get-reference.html","searchKeys":["getReference","abstract fun getReference(): INodeReferenceJS","INodeJS.getReference"]},{"name":"abstract fun getReferenceLink(name: String): IReferenceLink","description":"org.modelix.model.api.IConcept.getReferenceLink","location":"model-api/org.modelix.model.api/-i-concept/get-reference-link.html","searchKeys":["getReferenceLink","abstract fun getReferenceLink(name: String): IReferenceLink","org.modelix.model.api.IConcept.getReferenceLink"]},{"name":"abstract fun getReferenceRoles(): Array<String>","description":"INodeJS.getReferenceRoles","location":"model-api/[root]/-i-node-j-s/get-reference-roles.html","searchKeys":["getReferenceRoles","abstract fun getReferenceRoles(): Array<String>","INodeJS.getReferenceRoles"]},{"name":"abstract fun getReferenceRoles(): List<String>","description":"org.modelix.model.api.INode.getReferenceRoles","location":"model-api/org.modelix.model.api/-i-node/get-reference-roles.html","searchKeys":["getReferenceRoles","abstract fun getReferenceRoles(): List<String>","org.modelix.model.api.INode.getReferenceRoles"]},{"name":"abstract fun getReferenceRoles(sourceId: Long): Iterable<String>","description":"org.modelix.model.api.ITransaction.getReferenceRoles","location":"model-api/org.modelix.model.api/-i-transaction/get-reference-roles.html","searchKeys":["getReferenceRoles","abstract fun getReferenceRoles(sourceId: Long): Iterable<String>","org.modelix.model.api.ITransaction.getReferenceRoles"]},{"name":"abstract fun getReferenceRoles(sourceId: Long): Iterable<String>","description":"org.modelix.model.api.ITree.getReferenceRoles","location":"model-api/org.modelix.model.api/-i-tree/get-reference-roles.html","searchKeys":["getReferenceRoles","abstract fun getReferenceRoles(sourceId: Long): Iterable<String>","org.modelix.model.api.ITree.getReferenceRoles"]},{"name":"abstract fun getReferenceTarget(role: String): INode?","description":"org.modelix.model.api.INode.getReferenceTarget","location":"model-api/org.modelix.model.api/-i-node/get-reference-target.html","searchKeys":["getReferenceTarget","abstract fun getReferenceTarget(role: String): INode?","org.modelix.model.api.INode.getReferenceTarget"]},{"name":"abstract fun getReferenceTarget(sourceId: Long, role: String): INodeReference?","description":"org.modelix.model.api.ITransaction.getReferenceTarget","location":"model-api/org.modelix.model.api/-i-transaction/get-reference-target.html","searchKeys":["getReferenceTarget","abstract fun getReferenceTarget(sourceId: Long, role: String): INodeReference?","org.modelix.model.api.ITransaction.getReferenceTarget"]},{"name":"abstract fun getReferenceTarget(sourceId: Long, role: String): INodeReference?","description":"org.modelix.model.api.ITree.getReferenceTarget","location":"model-api/org.modelix.model.api/-i-tree/get-reference-target.html","searchKeys":["getReferenceTarget","abstract fun getReferenceTarget(sourceId: Long, role: String): INodeReference?","org.modelix.model.api.ITree.getReferenceTarget"]},{"name":"abstract fun getReferenceTargetNode(role: String): INodeJS?","description":"INodeJS.getReferenceTargetNode","location":"model-api/[root]/-i-node-j-s/get-reference-target-node.html","searchKeys":["getReferenceTargetNode","abstract fun getReferenceTargetNode(role: String): INodeJS?","INodeJS.getReferenceTargetNode"]},{"name":"abstract fun getReferenceTargetRef(role: String): INodeReferenceJS?","description":"INodeJS.getReferenceTargetRef","location":"model-api/[root]/-i-node-j-s/get-reference-target-ref.html","searchKeys":["getReferenceTargetRef","abstract fun getReferenceTargetRef(role: String): INodeReferenceJS?","INodeJS.getReferenceTargetRef"]},{"name":"abstract fun getRole(nodeId: Long): String?","description":"org.modelix.model.api.ITransaction.getRole","location":"model-api/org.modelix.model.api/-i-transaction/get-role.html","searchKeys":["getRole","abstract fun getRole(nodeId: Long): String?","org.modelix.model.api.ITransaction.getRole"]},{"name":"abstract fun getRole(nodeId: Long): String?","description":"org.modelix.model.api.ITree.getRole","location":"model-api/org.modelix.model.api/-i-tree/get-role.html","searchKeys":["getRole","abstract fun getRole(nodeId: Long): String?","org.modelix.model.api.ITree.getRole"]},{"name":"abstract fun getRoleInParent(): String?","description":"INodeJS.getRoleInParent","location":"model-api/[root]/-i-node-j-s/get-role-in-parent.html","searchKeys":["getRoleInParent","abstract fun getRoleInParent(): String?","INodeJS.getRoleInParent"]},{"name":"abstract fun getRoot(): INode","description":"org.modelix.model.area.IArea.getRoot","location":"model-api/org.modelix.model.area/-i-area/get-root.html","searchKeys":["getRoot","abstract fun getRoot(): INode","org.modelix.model.area.IArea.getRoot"]},{"name":"abstract fun getShortName(): String","description":"org.modelix.model.api.IConcept.getShortName","location":"model-api/org.modelix.model.api/-i-concept/get-short-name.html","searchKeys":["getShortName","abstract fun getShortName(): String","org.modelix.model.api.IConcept.getShortName"]},{"name":"abstract fun getSimpleName(): String","description":"org.modelix.model.api.IRole.getSimpleName","location":"model-api/org.modelix.model.api/-i-role/get-simple-name.html","searchKeys":["getSimpleName","abstract fun getSimpleName(): String","org.modelix.model.api.IRole.getSimpleName"]},{"name":"abstract fun getUID(): String","description":"IConceptJS.getUID","location":"model-api/[root]/-i-concept-j-s/get-u-i-d.html","searchKeys":["getUID","abstract fun getUID(): String","IConceptJS.getUID"]},{"name":"abstract fun getUID(): String","description":"org.modelix.model.api.IConcept.getUID","location":"model-api/org.modelix.model.api/-i-concept/get-u-i-d.html","searchKeys":["getUID","abstract fun getUID(): String","org.modelix.model.api.IConcept.getUID"]},{"name":"abstract fun getUID(): String","description":"org.modelix.model.api.IConceptReference.getUID","location":"model-api/org.modelix.model.api/-i-concept-reference/get-u-i-d.html","searchKeys":["getUID","abstract fun getUID(): String","org.modelix.model.api.IConceptReference.getUID"]},{"name":"abstract fun getUID(): String","description":"org.modelix.model.api.ILanguage.getUID","location":"model-api/org.modelix.model.api/-i-language/get-u-i-d.html","searchKeys":["getUID","abstract fun getUID(): String","org.modelix.model.api.ILanguage.getUID"]},{"name":"abstract fun getUID(): String","description":"org.modelix.model.api.IRole.getUID","location":"model-api/org.modelix.model.api/-i-role/get-u-i-d.html","searchKeys":["getUID","abstract fun getUID(): String","org.modelix.model.api.IRole.getUID"]},{"name":"abstract fun getUserObject(key: Any): Any?","description":"org.modelix.model.api.ITransaction.getUserObject","location":"model-api/org.modelix.model.api/-i-transaction/get-user-object.html","searchKeys":["getUserObject","abstract fun getUserObject(key: Any): Any?","org.modelix.model.api.ITransaction.getUserObject"]},{"name":"abstract fun getWrappedNode(): INode","description":"org.modelix.model.api.INodeWrapper.getWrappedNode","location":"model-api/org.modelix.model.api/-i-node-wrapper/get-wrapped-node.html","searchKeys":["getWrappedNode","abstract fun getWrappedNode(): INode","org.modelix.model.api.INodeWrapper.getWrappedNode"]},{"name":"abstract fun has(key: K): Boolean","description":"tsstdlib.Map.has","location":"model-api/tsstdlib/-map/has.html","searchKeys":["has","abstract fun has(key: K): Boolean","tsstdlib.Map.has"]},{"name":"abstract fun isAbstract(): Boolean","description":"org.modelix.model.api.IConcept.isAbstract","location":"model-api/org.modelix.model.api/-i-concept/is-abstract.html","searchKeys":["isAbstract","abstract fun isAbstract(): Boolean","org.modelix.model.api.IConcept.isAbstract"]},{"name":"abstract fun isArray(arg: Any): Boolean","description":"tsstdlib.ArrayConstructor.isArray","location":"model-api/tsstdlib/-array-constructor/is-array.html","searchKeys":["isArray","abstract fun isArray(arg: Any): Boolean","tsstdlib.ArrayConstructor.isArray"]},{"name":"abstract fun isExactly(concept: IConcept?): Boolean","description":"org.modelix.model.api.IConcept.isExactly","location":"model-api/org.modelix.model.api/-i-concept/is-exactly.html","searchKeys":["isExactly","abstract fun isExactly(concept: IConcept?): Boolean","org.modelix.model.api.IConcept.isExactly"]},{"name":"abstract fun isSubConceptOf(superConcept: IConcept?): Boolean","description":"org.modelix.model.api.IConcept.isSubConceptOf","location":"model-api/org.modelix.model.api/-i-concept/is-sub-concept-of.html","searchKeys":["isSubConceptOf","abstract fun isSubConceptOf(superConcept: IConcept?): Boolean","org.modelix.model.api.IConcept.isSubConceptOf"]},{"name":"abstract fun join(separator: String = definedExternally): String","description":"tsstdlib.ConcatArray.join","location":"model-api/tsstdlib/-concat-array/join.html","searchKeys":["join","abstract fun join(separator: String = definedExternally): String","tsstdlib.ConcatArray.join"]},{"name":"abstract fun keys(): IterableIterator<K>","description":"tsstdlib.Map.keys","location":"model-api/tsstdlib/-map/keys.html","searchKeys":["keys","abstract fun keys(): IterableIterator<K>","tsstdlib.Map.keys"]},{"name":"abstract fun moveChild(newParentId: Long, newRole: String?, newIndex: Int, childId: Long)","description":"org.modelix.model.api.IWriteTransaction.moveChild","location":"model-api/org.modelix.model.api/-i-write-transaction/move-child.html","searchKeys":["moveChild","abstract fun moveChild(newParentId: Long, newRole: String?, newIndex: Int, childId: Long)","org.modelix.model.api.IWriteTransaction.moveChild"]},{"name":"abstract fun moveChild(newParentId: Long, newRole: String?, newIndex: Int, childId: Long): ITree","description":"org.modelix.model.api.ITree.moveChild","location":"model-api/org.modelix.model.api/-i-tree/move-child.html","searchKeys":["moveChild","abstract fun moveChild(newParentId: Long, newRole: String?, newIndex: Int, childId: Long): ITree","org.modelix.model.api.ITree.moveChild"]},{"name":"abstract fun moveChild(role: String?, index: Int, child: INode)","description":"org.modelix.model.api.INode.moveChild","location":"model-api/org.modelix.model.api/-i-node/move-child.html","searchKeys":["moveChild","abstract fun moveChild(role: String?, index: Int, child: INode)","org.modelix.model.api.INode.moveChild"]},{"name":"abstract fun moveChild(role: String?, index: Number, child: INodeJS)","description":"INodeJS.moveChild","location":"model-api/[root]/-i-node-j-s/move-child.html","searchKeys":["moveChild","abstract fun moveChild(role: String?, index: Number, child: INodeJS)","INodeJS.moveChild"]},{"name":"abstract fun next(vararg args: Any): dynamic","description":"tsstdlib.Iterator.next","location":"model-api/tsstdlib/-iterator/next.html","searchKeys":["next","abstract fun next(vararg args: Any): dynamic","tsstdlib.Iterator.next"]},{"name":"abstract fun nodeAdded(nodeId: Long)","description":"org.modelix.model.api.ITreeChangeVisitorEx.nodeAdded","location":"model-api/org.modelix.model.api/-i-tree-change-visitor-ex/node-added.html","searchKeys":["nodeAdded","abstract fun nodeAdded(nodeId: Long)","org.modelix.model.api.ITreeChangeVisitorEx.nodeAdded"]},{"name":"abstract fun nodeRemoved(nodeId: Long)","description":"org.modelix.model.api.ITreeChangeVisitorEx.nodeRemoved","location":"model-api/org.modelix.model.api/-i-tree-change-visitor-ex/node-removed.html","searchKeys":["nodeRemoved","abstract fun nodeRemoved(nodeId: Long)","org.modelix.model.api.ITreeChangeVisitorEx.nodeRemoved"]},{"name":"abstract fun onMessage(listener: (message: String) -> Unit)","description":"IModelServerConnection.onMessage","location":"model-api/[root]/-i-model-server-connection/on-message.html","searchKeys":["onMessage","abstract fun onMessage(listener: (message: String) -> Unit)","IModelServerConnection.onMessage"]},{"name":"abstract fun onModelUpdate(listener: (data: VersionData) -> Unit)","description":"IModelServerConnection.onModelUpdate","location":"model-api/[root]/-i-model-server-connection/on-model-update.html","searchKeys":["onModelUpdate","abstract fun onModelUpdate(listener: (data: VersionData) -> Unit)","IModelServerConnection.onModelUpdate"]},{"name":"abstract fun propertyChanged(nodeId: Long, role: String)","description":"org.modelix.model.api.ITreeChangeVisitor.propertyChanged","location":"model-api/org.modelix.model.api/-i-tree-change-visitor/property-changed.html","searchKeys":["propertyChanged","abstract fun propertyChanged(nodeId: Long, role: String)","org.modelix.model.api.ITreeChangeVisitor.propertyChanged"]},{"name":"abstract fun putUserObject(key: Any, value: Any?)","description":"org.modelix.model.api.ITransaction.putUserObject","location":"model-api/org.modelix.model.api/-i-transaction/put-user-object.html","searchKeys":["putUserObject","abstract fun putUserObject(key: Any, value: Any?)","org.modelix.model.api.ITransaction.putUserObject"]},{"name":"abstract fun referenceChanged(nodeId: Long, role: String)","description":"org.modelix.model.api.ITreeChangeVisitor.referenceChanged","location":"model-api/org.modelix.model.api/-i-tree-change-visitor/reference-changed.html","searchKeys":["referenceChanged","abstract fun referenceChanged(nodeId: Long, role: String)","org.modelix.model.api.ITreeChangeVisitor.referenceChanged"]},{"name":"abstract fun removeChild(child: INode)","description":"org.modelix.model.api.INode.removeChild","location":"model-api/org.modelix.model.api/-i-node/remove-child.html","searchKeys":["removeChild","abstract fun removeChild(child: INode)","org.modelix.model.api.INode.removeChild"]},{"name":"abstract fun removeChild(child: INodeJS)","description":"INodeJS.removeChild","location":"model-api/[root]/-i-node-j-s/remove-child.html","searchKeys":["removeChild","abstract fun removeChild(child: INodeJS)","INodeJS.removeChild"]},{"name":"abstract fun removeListener(l: IAreaListener)","description":"org.modelix.model.area.IArea.removeListener","location":"model-api/org.modelix.model.area/-i-area/remove-listener.html","searchKeys":["removeListener","abstract fun removeListener(l: IAreaListener)","org.modelix.model.area.IArea.removeListener"]},{"name":"abstract fun removeListener(l: IBranchListener)","description":"org.modelix.model.api.IBranch.removeListener","location":"model-api/org.modelix.model.api/-i-branch/remove-listener.html","searchKeys":["removeListener","abstract fun removeListener(l: IBranchListener)","org.modelix.model.api.IBranch.removeListener"]},{"name":"abstract fun resolve(area: IArea?): IConcept?","description":"org.modelix.model.api.IConceptReference.resolve","location":"model-api/org.modelix.model.api/-i-concept-reference/resolve.html","searchKeys":["resolve","abstract fun resolve(area: IArea?): IConcept?","org.modelix.model.api.IConceptReference.resolve"]},{"name":"abstract fun resolveArea(ref: IAreaReference): IArea?","description":"org.modelix.model.area.IArea.resolveArea","location":"model-api/org.modelix.model.area/-i-area/resolve-area.html","searchKeys":["resolveArea","abstract fun resolveArea(ref: IAreaReference): IArea?","org.modelix.model.area.IArea.resolveArea"]},{"name":"abstract fun resolveBranch(id: String): IBranch?","description":"org.modelix.model.area.IArea.resolveBranch","location":"model-api/org.modelix.model.area/-i-area/resolve-branch.html","searchKeys":["resolveBranch","abstract fun resolveBranch(id: String): IBranch?","org.modelix.model.area.IArea.resolveBranch"]},{"name":"abstract fun resolveConcept(ref: IConceptReference): IConcept?","description":"org.modelix.model.area.IArea.resolveConcept","location":"model-api/org.modelix.model.area/-i-area/resolve-concept.html","searchKeys":["resolveConcept","abstract fun resolveConcept(ref: IConceptReference): IConcept?","org.modelix.model.area.IArea.resolveConcept"]},{"name":"abstract fun resolveConcept(uid: String): IConcept?","description":"org.modelix.model.api.ILanguageRepository.resolveConcept","location":"model-api/org.modelix.model.api/-i-language-repository/resolve-concept.html","searchKeys":["resolveConcept","abstract fun resolveConcept(uid: String): IConcept?","org.modelix.model.api.ILanguageRepository.resolveConcept"]},{"name":"abstract fun resolveNode(ref: INodeReference): INode?","description":"org.modelix.model.api.INodeResolutionScope.resolveNode","location":"model-api/org.modelix.model.api/-i-node-resolution-scope/resolve-node.html","searchKeys":["resolveNode","abstract fun resolveNode(ref: INodeReference): INode?","org.modelix.model.api.INodeResolutionScope.resolveNode"]},{"name":"abstract fun resolveOriginalNode(ref: INodeReference): INode?","description":"org.modelix.model.area.IArea.resolveOriginalNode","location":"model-api/org.modelix.model.area/-i-area/resolve-original-node.html","searchKeys":["resolveOriginalNode","abstract fun resolveOriginalNode(ref: INodeReference): INode?","org.modelix.model.area.IArea.resolveOriginalNode"]},{"name":"abstract fun runRead(runnable: () -> Unit)","description":"org.modelix.model.api.IBranch.runRead","location":"model-api/org.modelix.model.api/-i-branch/run-read.html","searchKeys":["runRead","abstract fun runRead(runnable: () -> Unit)","org.modelix.model.api.IBranch.runRead"]},{"name":"abstract fun runWrite(runnable: () -> Unit)","description":"org.modelix.model.api.IBranch.runWrite","location":"model-api/org.modelix.model.api/-i-branch/run-write.html","searchKeys":["runWrite","abstract fun runWrite(runnable: () -> Unit)","org.modelix.model.api.IBranch.runWrite"]},{"name":"abstract fun sendUpdate(data: Array<NodeUpdateData>)","description":"IModelServerConnection.sendUpdate","location":"model-api/[root]/-i-model-server-connection/send-update.html","searchKeys":["sendUpdate","abstract fun sendUpdate(data: Array<NodeUpdateData>)","IModelServerConnection.sendUpdate"]},{"name":"abstract fun serialize(): String","description":"org.modelix.model.api.IConceptReference.serialize","location":"model-api/org.modelix.model.api/-i-concept-reference/serialize.html","searchKeys":["serialize","abstract fun serialize(): String","org.modelix.model.api.IConceptReference.serialize"]},{"name":"abstract fun serialize(ref: INodeReference): String?","description":"org.modelix.model.api.INodeReferenceSerializer.serialize","location":"model-api/org.modelix.model.api/-i-node-reference-serializer/serialize.html","searchKeys":["serialize","abstract fun serialize(ref: INodeReference): String?","org.modelix.model.api.INodeReferenceSerializer.serialize"]},{"name":"abstract fun set(key: K, value: V): Map<K, V>","description":"tsstdlib.Map.set","location":"model-api/tsstdlib/-map/set.html","searchKeys":["set","abstract fun set(key: K, value: V): Map<K, V>","tsstdlib.Map.set"]},{"name":"abstract fun setProperty(nodeId: Long, role: String, value: String?)","description":"org.modelix.model.api.IWriteTransaction.setProperty","location":"model-api/org.modelix.model.api/-i-write-transaction/set-property.html","searchKeys":["setProperty","abstract fun setProperty(nodeId: Long, role: String, value: String?)","org.modelix.model.api.IWriteTransaction.setProperty"]},{"name":"abstract fun setProperty(nodeId: Long, role: String, value: String?): ITree","description":"org.modelix.model.api.ITree.setProperty","location":"model-api/org.modelix.model.api/-i-tree/set-property.html","searchKeys":["setProperty","abstract fun setProperty(nodeId: Long, role: String, value: String?): ITree","org.modelix.model.api.ITree.setProperty"]},{"name":"abstract fun setPropertyValue(role: String, value: String?)","description":"INodeJS.setPropertyValue","location":"model-api/[root]/-i-node-j-s/set-property-value.html","searchKeys":["setPropertyValue","abstract fun setPropertyValue(role: String, value: String?)","INodeJS.setPropertyValue"]},{"name":"abstract fun setPropertyValue(role: String, value: String?)","description":"org.modelix.model.api.INode.setPropertyValue","location":"model-api/org.modelix.model.api/-i-node/set-property-value.html","searchKeys":["setPropertyValue","abstract fun setPropertyValue(role: String, value: String?)","org.modelix.model.api.INode.setPropertyValue"]},{"name":"abstract fun setReferenceTarget(role: String, target: INode?)","description":"org.modelix.model.api.INode.setReferenceTarget","location":"model-api/org.modelix.model.api/-i-node/set-reference-target.html","searchKeys":["setReferenceTarget","abstract fun setReferenceTarget(role: String, target: INode?)","org.modelix.model.api.INode.setReferenceTarget"]},{"name":"abstract fun setReferenceTarget(sourceId: Long, role: String, target: INodeReference?)","description":"org.modelix.model.api.IWriteTransaction.setReferenceTarget","location":"model-api/org.modelix.model.api/-i-write-transaction/set-reference-target.html","searchKeys":["setReferenceTarget","abstract fun setReferenceTarget(sourceId: Long, role: String, target: INodeReference?)","org.modelix.model.api.IWriteTransaction.setReferenceTarget"]},{"name":"abstract fun setReferenceTarget(sourceId: Long, role: String, target: INodeReference?): ITree","description":"org.modelix.model.api.ITree.setReferenceTarget","location":"model-api/org.modelix.model.api/-i-tree/set-reference-target.html","searchKeys":["setReferenceTarget","abstract fun setReferenceTarget(sourceId: Long, role: String, target: INodeReference?): ITree","org.modelix.model.api.ITree.setReferenceTarget"]},{"name":"abstract fun setReferenceTargetNode(role: String, target: INodeJS?)","description":"INodeJS.setReferenceTargetNode","location":"model-api/[root]/-i-node-j-s/set-reference-target-node.html","searchKeys":["setReferenceTargetNode","abstract fun setReferenceTargetNode(role: String, target: INodeJS?)","INodeJS.setReferenceTargetNode"]},{"name":"abstract fun setReferenceTargetRef(role: String, target: INodeReferenceJS?)","description":"INodeJS.setReferenceTargetRef","location":"model-api/[root]/-i-node-j-s/set-reference-target-ref.html","searchKeys":["setReferenceTargetRef","abstract fun setReferenceTargetRef(role: String, target: INodeReferenceJS?)","INodeJS.setReferenceTargetRef"]},{"name":"abstract fun slice(start: Number = definedExternally, end: Number = definedExternally): Array<T>","description":"tsstdlib.ConcatArray.slice","location":"model-api/tsstdlib/-concat-array/slice.html","searchKeys":["slice","abstract fun slice(start: Number = definedExternally, end: Number = definedExternally): Array<T>","tsstdlib.ConcatArray.slice"]},{"name":"abstract fun treeChanged(oldTree: ITree?, newTree: ITree)","description":"org.modelix.model.api.IBranchListener.treeChanged","location":"model-api/org.modelix.model.api/-i-branch-listener/tree-changed.html","searchKeys":["treeChanged","abstract fun treeChanged(oldTree: ITree?, newTree: ITree)","org.modelix.model.api.IBranchListener.treeChanged"]},{"name":"abstract fun unwrap(): INodeJS","description":"ITypedNode.unwrap","location":"model-api/[root]/-i-typed-node/unwrap.html","searchKeys":["unwrap","abstract fun unwrap(): INodeJS","ITypedNode.unwrap"]},{"name":"abstract fun unwrapBranch(): IBranch","description":"org.modelix.model.api.IBranchWrapper.unwrapBranch","location":"model-api/org.modelix.model.api/-i-branch-wrapper/unwrap-branch.html","searchKeys":["unwrapBranch","abstract fun unwrapBranch(): IBranch","org.modelix.model.api.IBranchWrapper.unwrapBranch"]},{"name":"abstract fun usesRoleIds(): Boolean","description":"org.modelix.model.api.ITree.usesRoleIds","location":"model-api/org.modelix.model.api/-i-tree/uses-role-ids.html","searchKeys":["usesRoleIds","abstract fun usesRoleIds(): Boolean","org.modelix.model.api.ITree.usesRoleIds"]},{"name":"abstract fun values(): IterableIterator<V>","description":"tsstdlib.Map.values","location":"model-api/tsstdlib/-map/values.html","searchKeys":["values","abstract fun values(): IterableIterator<V>","tsstdlib.Map.values"]},{"name":"abstract fun visitChanges(oldVersion: ITree, visitor: ITreeChangeVisitor)","description":"org.modelix.model.api.ITree.visitChanges","location":"model-api/org.modelix.model.api/-i-tree/visit-changes.html","searchKeys":["visitChanges","abstract fun visitChanges(oldVersion: ITree, visitor: ITreeChangeVisitor)","org.modelix.model.api.ITree.visitChanges"]},{"name":"abstract fun visitChanges(visitor: (IAreaChangeEvent) -> Boolean)","description":"org.modelix.model.area.IAreaChangeList.visitChanges","location":"model-api/org.modelix.model.area/-i-area-change-list/visit-changes.html","searchKeys":["visitChanges","abstract fun visitChanges(visitor: (IAreaChangeEvent) -> Boolean)","org.modelix.model.area.IAreaChangeList.visitChanges"]},{"name":"abstract fun withNode(substitute: INode): NodeChangeEvent","description":"org.modelix.model.area.NodeChangeEvent.withNode","location":"model-api/org.modelix.model.area/-node-change-event/with-node.html","searchKeys":["withNode","abstract fun withNode(substitute: INode): NodeChangeEvent","org.modelix.model.area.NodeChangeEvent.withNode"]},{"name":"abstract operator fun <T> invoke(vararg items: T): Array<T>","description":"tsstdlib.ArrayConstructor.invoke","location":"model-api/tsstdlib/-array-constructor/invoke.html","searchKeys":["invoke","abstract operator fun <T> invoke(vararg items: T): Array<T>","tsstdlib.ArrayConstructor.invoke"]},{"name":"abstract operator fun get(n: Number): T?","description":"tsstdlib.ArrayLike.get","location":"model-api/tsstdlib/-array-like/get.html","searchKeys":["get","abstract operator fun get(n: Number): T?","tsstdlib.ArrayLike.get"]},{"name":"abstract operator fun get(n: Number): T?","description":"tsstdlib.ConcatArray.get","location":"model-api/tsstdlib/-concat-array/get.html","searchKeys":["get","abstract operator fun get(n: Number): T?","tsstdlib.ConcatArray.get"]},{"name":"abstract operator fun invoke(): Array<Any>","description":"tsstdlib.ArrayConstructor.invoke","location":"model-api/tsstdlib/-array-constructor/invoke.html","searchKeys":["invoke","abstract operator fun invoke(): Array<Any>","tsstdlib.ArrayConstructor.invoke"]},{"name":"abstract operator fun invoke(arrayLength: Number = definedExternally): Array<Any>","description":"tsstdlib.ArrayConstructor.invoke","location":"model-api/tsstdlib/-array-constructor/invoke.html","searchKeys":["invoke","abstract operator fun invoke(arrayLength: Number = definedExternally): Array<Any>","tsstdlib.ArrayConstructor.invoke"]},{"name":"abstract operator fun set(n: Number, value: T)","description":"tsstdlib.ArrayLike.set","location":"model-api/tsstdlib/-array-like/set.html","searchKeys":["set","abstract operator fun set(n: Number, value: T)","tsstdlib.ArrayLike.set"]},{"name":"abstract operator fun set(n: Number, value: T)","description":"tsstdlib.ConcatArray.set","location":"model-api/tsstdlib/-concat-array/set.html","searchKeys":["set","abstract operator fun set(n: Number, value: T)","tsstdlib.ConcatArray.set"]},{"name":"abstract override fun addNewChild(role: IChildLink, index: Int, concept: IConcept?): INode","description":"org.modelix.model.api.IDeprecatedNodeDefaults.addNewChild","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/add-new-child.html","searchKeys":["addNewChild","abstract override fun addNewChild(role: IChildLink, index: Int, concept: IConcept?): INode","org.modelix.model.api.IDeprecatedNodeDefaults.addNewChild"]},{"name":"abstract override fun addNewChild(role: IChildLink, index: Int, concept: IConceptReference?): INode","description":"org.modelix.model.api.IDeprecatedNodeDefaults.addNewChild","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/add-new-child.html","searchKeys":["addNewChild","abstract override fun addNewChild(role: IChildLink, index: Int, concept: IConceptReference?): INode","org.modelix.model.api.IDeprecatedNodeDefaults.addNewChild"]},{"name":"abstract override fun deserialize(serialized: String): INodeReference","description":"org.modelix.model.api.INodeReferenceSerializerEx.deserialize","location":"model-api/org.modelix.model.api/-i-node-reference-serializer-ex/deserialize.html","searchKeys":["deserialize","abstract override fun deserialize(serialized: String): INodeReference","org.modelix.model.api.INodeReferenceSerializerEx.deserialize"]},{"name":"abstract override fun getChildren(link: IChildLink): Iterable<INode>","description":"org.modelix.model.api.IDeprecatedNodeDefaults.getChildren","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/get-children.html","searchKeys":["getChildren","abstract override fun getChildren(link: IChildLink): Iterable<INode>","org.modelix.model.api.IDeprecatedNodeDefaults.getChildren"]},{"name":"abstract override fun getContainmentLink(): IChildLink?","description":"org.modelix.model.api.IDeprecatedNodeDefaults.getContainmentLink","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/get-containment-link.html","searchKeys":["getContainmentLink","abstract override fun getContainmentLink(): IChildLink?","org.modelix.model.api.IDeprecatedNodeDefaults.getContainmentLink"]},{"name":"abstract override fun getPropertyLinks(): List<IProperty>","description":"org.modelix.model.api.IDeprecatedNodeDefaults.getPropertyLinks","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/get-property-links.html","searchKeys":["getPropertyLinks","abstract override fun getPropertyLinks(): List<IProperty>","org.modelix.model.api.IDeprecatedNodeDefaults.getPropertyLinks"]},{"name":"abstract override fun getPropertyValue(property: IProperty): String?","description":"org.modelix.model.api.IDeprecatedNodeDefaults.getPropertyValue","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/get-property-value.html","searchKeys":["getPropertyValue","abstract override fun getPropertyValue(property: IProperty): String?","org.modelix.model.api.IDeprecatedNodeDefaults.getPropertyValue"]},{"name":"abstract override fun getReferenceLinks(): List<IReferenceLink>","description":"org.modelix.model.api.IDeprecatedNodeDefaults.getReferenceLinks","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/get-reference-links.html","searchKeys":["getReferenceLinks","abstract override fun getReferenceLinks(): List<IReferenceLink>","org.modelix.model.api.IDeprecatedNodeDefaults.getReferenceLinks"]},{"name":"abstract override fun getReferenceTarget(link: IReferenceLink): INode?","description":"org.modelix.model.api.IDeprecatedNodeDefaults.getReferenceTarget","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/get-reference-target.html","searchKeys":["getReferenceTarget","abstract override fun getReferenceTarget(link: IReferenceLink): INode?","org.modelix.model.api.IDeprecatedNodeDefaults.getReferenceTarget"]},{"name":"abstract override fun getReferenceTargetRef(role: IReferenceLink): INodeReference?","description":"org.modelix.model.api.IDeprecatedNodeDefaults.getReferenceTargetRef","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/get-reference-target-ref.html","searchKeys":["getReferenceTargetRef","abstract override fun getReferenceTargetRef(role: IReferenceLink): INodeReference?","org.modelix.model.api.IDeprecatedNodeDefaults.getReferenceTargetRef"]},{"name":"abstract override fun moveChild(role: IChildLink, index: Int, child: INode)","description":"org.modelix.model.api.IDeprecatedNodeDefaults.moveChild","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/move-child.html","searchKeys":["moveChild","abstract override fun moveChild(role: IChildLink, index: Int, child: INode)","org.modelix.model.api.IDeprecatedNodeDefaults.moveChild"]},{"name":"abstract override fun resolveNode(ref: INodeReference): INode?","description":"org.modelix.model.area.IArea.resolveNode","location":"model-api/org.modelix.model.area/-i-area/resolve-node.html","searchKeys":["resolveNode","abstract override fun resolveNode(ref: INodeReference): INode?","org.modelix.model.area.IArea.resolveNode"]},{"name":"abstract override fun serialize(ref: INodeReference): String","description":"org.modelix.model.api.INodeReferenceSerializerEx.serialize","location":"model-api/org.modelix.model.api/-i-node-reference-serializer-ex/serialize.html","searchKeys":["serialize","abstract override fun serialize(ref: INodeReference): String","org.modelix.model.api.INodeReferenceSerializerEx.serialize"]},{"name":"abstract override fun setPropertyValue(property: IProperty, value: String?)","description":"org.modelix.model.api.IDeprecatedNodeDefaults.setPropertyValue","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/set-property-value.html","searchKeys":["setPropertyValue","abstract override fun setPropertyValue(property: IProperty, value: String?)","org.modelix.model.api.IDeprecatedNodeDefaults.setPropertyValue"]},{"name":"abstract override fun setReferenceTarget(link: IReferenceLink, target: INode?)","description":"org.modelix.model.api.IDeprecatedNodeDefaults.setReferenceTarget","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/set-reference-target.html","searchKeys":["setReferenceTarget","abstract override fun setReferenceTarget(link: IReferenceLink, target: INode?)","org.modelix.model.api.IDeprecatedNodeDefaults.setReferenceTarget"]},{"name":"abstract override fun setReferenceTarget(role: IReferenceLink, target: INodeReference?)","description":"org.modelix.model.api.IDeprecatedNodeDefaults.setReferenceTarget","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/set-reference-target.html","searchKeys":["setReferenceTarget","abstract override fun setReferenceTarget(role: IReferenceLink, target: INodeReference?)","org.modelix.model.api.IDeprecatedNodeDefaults.setReferenceTarget"]},{"name":"abstract override var tree: ITree","description":"org.modelix.model.api.IWriteTransaction.tree","location":"model-api/org.modelix.model.api/-i-write-transaction/tree.html","searchKeys":["tree","abstract override var tree: ITree","org.modelix.model.api.IWriteTransaction.tree"]},{"name":"abstract val allChildren: Iterable<INode>","description":"org.modelix.model.api.INode.allChildren","location":"model-api/org.modelix.model.api/-i-node/all-children.html","searchKeys":["allChildren","abstract val allChildren: Iterable<INode>","org.modelix.model.api.INode.allChildren"]},{"name":"abstract val branch: IBranch","description":"org.modelix.model.api.ITransaction.branch","location":"model-api/org.modelix.model.api/-i-transaction/branch.html","searchKeys":["branch","abstract val branch: IBranch","org.modelix.model.api.ITransaction.branch"]},{"name":"abstract val childConcept: IConcept","description":"org.modelix.model.api.IChildLink.childConcept","location":"model-api/org.modelix.model.api/-i-child-link/child-concept.html","searchKeys":["childConcept","abstract val childConcept: IConcept","org.modelix.model.api.IChildLink.childConcept"]},{"name":"abstract val concept: IConcept?","description":"org.modelix.model.api.INode.concept","location":"model-api/org.modelix.model.api/-i-node/concept.html","searchKeys":["concept","abstract val concept: IConcept?","org.modelix.model.api.INode.concept"]},{"name":"abstract val deprecationMessage: String?","description":"org.modelix.model.data.IDeprecatable.deprecationMessage","location":"model-api/org.modelix.model.data/-i-deprecatable/deprecation-message.html","searchKeys":["deprecationMessage","abstract val deprecationMessage: String?","org.modelix.model.data.IDeprecatable.deprecationMessage"]},{"name":"abstract val isMultiple: Boolean","description":"org.modelix.model.api.IChildLink.isMultiple","location":"model-api/org.modelix.model.api/-i-child-link/is-multiple.html","searchKeys":["isMultiple","abstract val isMultiple: Boolean","org.modelix.model.api.IChildLink.isMultiple"]},{"name":"abstract val isOptional: Boolean","description":"org.modelix.model.api.IRole.isOptional","location":"model-api/org.modelix.model.api/-i-role/is-optional.html","searchKeys":["isOptional","abstract val isOptional: Boolean","org.modelix.model.api.IRole.isOptional"]},{"name":"abstract val isValid: Boolean","description":"org.modelix.model.api.INode.isValid","location":"model-api/org.modelix.model.api/-i-node/is-valid.html","searchKeys":["isValid","abstract val isValid: Boolean","org.modelix.model.api.INode.isValid"]},{"name":"abstract val language: ILanguage?","description":"org.modelix.model.api.IConcept.language","location":"model-api/org.modelix.model.api/-i-concept/language.html","searchKeys":["language","abstract val language: ILanguage?","org.modelix.model.api.IConcept.language"]},{"name":"abstract val length: Number","description":"tsstdlib.ArrayLike.length","location":"model-api/tsstdlib/-array-like/length.html","searchKeys":["length","abstract val length: Number","tsstdlib.ArrayLike.length"]},{"name":"abstract val length: Number","description":"tsstdlib.ConcatArray.length","location":"model-api/tsstdlib/-concat-array/length.html","searchKeys":["length","abstract val length: Number","tsstdlib.ConcatArray.length"]},{"name":"abstract val name: String","description":"org.modelix.model.data.IConceptFeatureData.name","location":"model-api/org.modelix.model.data/-i-concept-feature-data/name.html","searchKeys":["name","abstract val name: String","org.modelix.model.data.IConceptFeatureData.name"]},{"name":"abstract val parent: INode?","description":"org.modelix.model.api.INode.parent","location":"model-api/org.modelix.model.api/-i-node/parent.html","searchKeys":["parent","abstract val parent: INode?","org.modelix.model.api.INode.parent"]},{"name":"abstract val prefix: String","description":"org.modelix.model.api.INodeReferenceSerializerEx.prefix","location":"model-api/org.modelix.model.api/-i-node-reference-serializer-ex/prefix.html","searchKeys":["prefix","abstract val prefix: String","org.modelix.model.api.INodeReferenceSerializerEx.prefix"]},{"name":"abstract val prototype: Array<Any>","description":"tsstdlib.ArrayConstructor.prototype","location":"model-api/tsstdlib/-array-constructor/prototype.html","searchKeys":["prototype","abstract val prototype: Array<Any>","tsstdlib.ArrayConstructor.prototype"]},{"name":"abstract val prototype: Map<Any, Any>","description":"tsstdlib.MapConstructor.prototype","location":"model-api/tsstdlib/-map-constructor/prototype.html","searchKeys":["prototype","abstract val prototype: Map<Any, Any>","tsstdlib.MapConstructor.prototype"]},{"name":"abstract val readTransaction: IReadTransaction","description":"org.modelix.model.api.IBranch.readTransaction","location":"model-api/org.modelix.model.api/-i-branch/read-transaction.html","searchKeys":["readTransaction","abstract val readTransaction: IReadTransaction","org.modelix.model.api.IBranch.readTransaction"]},{"name":"abstract val reference: INodeReference","description":"org.modelix.model.api.INode.reference","location":"model-api/org.modelix.model.api/-i-node/reference.html","searchKeys":["reference","abstract val reference: INodeReference","org.modelix.model.api.INode.reference"]},{"name":"abstract val return: (value: TReturn) -> dynamic?","description":"tsstdlib.Iterator.return","location":"model-api/tsstdlib/-iterator/return.html","searchKeys":["return","abstract val return: (value: TReturn) -> dynamic?","tsstdlib.Iterator.return"]},{"name":"abstract val roleInParent: String?","description":"org.modelix.model.api.INode.roleInParent","location":"model-api/org.modelix.model.api/-i-node/role-in-parent.html","searchKeys":["roleInParent","abstract val roleInParent: String?","org.modelix.model.api.INode.roleInParent"]},{"name":"abstract val size: Number","description":"tsstdlib.Map.size","location":"model-api/tsstdlib/-map/size.html","searchKeys":["size","abstract val size: Number","tsstdlib.Map.size"]},{"name":"abstract val supportedReferenceClasses: Set<KClass<out INodeReference>>","description":"org.modelix.model.api.INodeReferenceSerializerEx.supportedReferenceClasses","location":"model-api/org.modelix.model.api/-i-node-reference-serializer-ex/supported-reference-classes.html","searchKeys":["supportedReferenceClasses","abstract val supportedReferenceClasses: Set<KClass<out INodeReference>>","org.modelix.model.api.INodeReferenceSerializerEx.supportedReferenceClasses"]},{"name":"abstract val targetConcept: IConcept","description":"org.modelix.model.api.ILink.targetConcept","location":"model-api/org.modelix.model.api/-i-link/target-concept.html","searchKeys":["targetConcept","abstract val targetConcept: IConcept","org.modelix.model.api.ILink.targetConcept"]},{"name":"abstract val throw: (e: Any) -> dynamic?","description":"tsstdlib.Iterator.throw","location":"model-api/tsstdlib/-iterator/throw.html","searchKeys":["throw","abstract val throw: (e: Any) -> dynamic?","tsstdlib.Iterator.throw"]},{"name":"abstract val transaction: ITransaction","description":"org.modelix.model.api.IBranch.transaction","location":"model-api/org.modelix.model.api/-i-branch/transaction.html","searchKeys":["transaction","abstract val transaction: ITransaction","org.modelix.model.api.IBranch.transaction"]},{"name":"abstract val tree: ITree","description":"org.modelix.model.api.ITransaction.tree","location":"model-api/org.modelix.model.api/-i-transaction/tree.html","searchKeys":["tree","abstract val tree: ITree","org.modelix.model.api.ITransaction.tree"]},{"name":"abstract val uid: String?","description":"org.modelix.model.data.IConceptFeatureData.uid","location":"model-api/org.modelix.model.data/-i-concept-feature-data/uid.html","searchKeys":["uid","abstract val uid: String?","org.modelix.model.data.IConceptFeatureData.uid"]},{"name":"abstract val writeTransaction: IWriteTransaction","description":"org.modelix.model.api.IBranch.writeTransaction","location":"model-api/org.modelix.model.api/-i-branch/write-transaction.html","searchKeys":["writeTransaction","abstract val writeTransaction: IWriteTransaction","org.modelix.model.api.IBranch.writeTransaction"]},{"name":"abstract var children: Any","description":"NodeData.children","location":"model-api/[root]/-node-data/children.html","searchKeys":["children","abstract var children: Any","NodeData.children"]},{"name":"abstract var children: Any","description":"NodeUpdateData.children","location":"model-api/[root]/-node-update-data/children.html","searchKeys":["children","abstract var children: Any","NodeUpdateData.children"]},{"name":"abstract var concept: String?","description":"NodeUpdateData.concept","location":"model-api/[root]/-node-update-data/concept.html","searchKeys":["concept","abstract var concept: String?","NodeUpdateData.concept"]},{"name":"abstract var done: Boolean","description":"tsstdlib.IteratorReturnResult.done","location":"model-api/tsstdlib/-iterator-return-result/done.html","searchKeys":["done","abstract var done: Boolean","tsstdlib.IteratorReturnResult.done"]},{"name":"abstract var first: NodeId","description":"IdRangeData.first","location":"model-api/[root]/-id-range-data/first.html","searchKeys":["first","abstract var first: NodeId","IdRangeData.first"]},{"name":"abstract var index: Number?","description":"NodeUpdateData.index","location":"model-api/[root]/-node-update-data/--index--.html","searchKeys":["index","abstract var index: Number?","NodeUpdateData.index"]},{"name":"abstract var last: NodeId","description":"IdRangeData.last","location":"model-api/[root]/-id-range-data/last.html","searchKeys":["last","abstract var last: NodeId","IdRangeData.last"]},{"name":"abstract var nodeId: NodeId","description":"NodeData.nodeId","location":"model-api/[root]/-node-data/node-id.html","searchKeys":["nodeId","abstract var nodeId: NodeId","NodeData.nodeId"]},{"name":"abstract var nodeId: NodeId","description":"NodeUpdateData.nodeId","location":"model-api/[root]/-node-update-data/node-id.html","searchKeys":["nodeId","abstract var nodeId: NodeId","NodeUpdateData.nodeId"]},{"name":"abstract var nodes: Array<NodeData>?","description":"VersionData.nodes","location":"model-api/[root]/-version-data/nodes.html","searchKeys":["nodes","abstract var nodes: Array<NodeData>?","VersionData.nodes"]},{"name":"abstract var parent: NodeId?","description":"NodeUpdateData.parent","location":"model-api/[root]/-node-update-data/parent.html","searchKeys":["parent","abstract var parent: NodeId?","NodeUpdateData.parent"]},{"name":"abstract var properties: Any","description":"NodeData.properties","location":"model-api/[root]/-node-data/properties.html","searchKeys":["properties","abstract var properties: Any","NodeData.properties"]},{"name":"abstract var properties: Any","description":"NodeUpdateData.properties","location":"model-api/[root]/-node-update-data/properties.html","searchKeys":["properties","abstract var properties: Any","NodeUpdateData.properties"]},{"name":"abstract var references: Any","description":"NodeData.references","location":"model-api/[root]/-node-data/references.html","searchKeys":["references","abstract var references: Any","NodeData.references"]},{"name":"abstract var references: Any","description":"NodeUpdateData.references","location":"model-api/[root]/-node-update-data/references.html","searchKeys":["references","abstract var references: Any","NodeUpdateData.references"]},{"name":"abstract var repositoryId: String","description":"VersionData.repositoryId","location":"model-api/[root]/-version-data/repository-id.html","searchKeys":["repositoryId","abstract var repositoryId: String","VersionData.repositoryId"]},{"name":"abstract var role: String?","description":"NodeUpdateData.role","location":"model-api/[root]/-node-update-data/role.html","searchKeys":["role","abstract var role: String?","NodeUpdateData.role"]},{"name":"abstract var root: NodeData?","description":"VersionData.root","location":"model-api/[root]/-version-data/root.html","searchKeys":["root","abstract var root: NodeData?","VersionData.root"]},{"name":"abstract var value: TReturn","description":"tsstdlib.IteratorReturnResult.value","location":"model-api/tsstdlib/-iterator-return-result/value.html","searchKeys":["value","abstract var value: TReturn","tsstdlib.IteratorReturnResult.value"]},{"name":"abstract var value: TYield","description":"tsstdlib.IteratorYieldResult.value","location":"model-api/tsstdlib/-iterator-yield-result/value.html","searchKeys":["value","abstract var value: TYield","tsstdlib.IteratorYieldResult.value"]},{"name":"abstract var versionHash: String","description":"VersionData.versionHash","location":"model-api/[root]/-version-data/version-hash.html","searchKeys":["versionHash","abstract var versionHash: String","VersionData.versionHash"]},{"name":"class AreaWithMounts(val rootArea: IArea, mounts: Map<INode, IArea>) : IArea","description":"org.modelix.model.area.AreaWithMounts","location":"model-api/org.modelix.model.area/-area-with-mounts/index.html","searchKeys":["AreaWithMounts","class AreaWithMounts(val rootArea: IArea, mounts: Map<INode, IArea>) : IArea","org.modelix.model.area.AreaWithMounts"]},{"name":"class ChildrenChangeEvent(val node: INode, val role: String) : RoleChangeEvent","description":"org.modelix.model.area.ChildrenChangeEvent","location":"model-api/org.modelix.model.area/-children-change-event/index.html","searchKeys":["ChildrenChangeEvent","class ChildrenChangeEvent(val node: INode, val role: String) : RoleChangeEvent","org.modelix.model.area.ChildrenChangeEvent"]},{"name":"class CompositeArea : IArea","description":"org.modelix.model.area.CompositeArea","location":"model-api/org.modelix.model.area/-composite-area/index.html","searchKeys":["CompositeArea","class CompositeArea : IArea","org.modelix.model.area.CompositeArea"]},{"name":"class CompositeNodeResolutionScope(val scopes: List<INodeResolutionScope>) : INodeResolutionScope","description":"org.modelix.model.api.CompositeNodeResolutionScope","location":"model-api/org.modelix.model.api/-composite-node-resolution-scope/index.html","searchKeys":["CompositeNodeResolutionScope","class CompositeNodeResolutionScope(val scopes: List<INodeResolutionScope>) : INodeResolutionScope","org.modelix.model.api.CompositeNodeResolutionScope"]},{"name":"class ConceptReferenceKSerializer : KSerializer<ConceptReference> ","description":"org.modelix.model.api.ConceptReferenceKSerializer","location":"model-api/org.modelix.model.api/-concept-reference-k-serializer/index.html","searchKeys":["ConceptReferenceKSerializer","class ConceptReferenceKSerializer : KSerializer<ConceptReference> ","org.modelix.model.api.ConceptReferenceKSerializer"]},{"name":"class Entry(val area: IArea, val listener: IAreaListener)","description":"org.modelix.model.area.AreaListenerRegistry.Entry","location":"model-api/org.modelix.model.area/-area-listener-registry/-entry/index.html","searchKeys":["Entry","class Entry(val area: IArea, val listener: IAreaListener)","org.modelix.model.area.AreaListenerRegistry.Entry"]},{"name":"class IdGeneratorDummy : IIdGenerator","description":"org.modelix.model.api.IdGeneratorDummy","location":"model-api/org.modelix.model.api/-id-generator-dummy/index.html","searchKeys":["IdGeneratorDummy","class IdGeneratorDummy : IIdGenerator","org.modelix.model.api.IdGeneratorDummy"]},{"name":"class NodeAdapterJS(val node: INode) : INodeJS_","description":"org.modelix.model.api.NodeAdapterJS","location":"model-api/org.modelix.model.api/-node-adapter-j-s/index.html","searchKeys":["NodeAdapterJS","class NodeAdapterJS(val node: INode) : INodeJS_","org.modelix.model.api.NodeAdapterJS"]},{"name":"class NodeReferenceKSerializer : KSerializer<INodeReference> ","description":"org.modelix.model.api.NodeReferenceKSerializer","location":"model-api/org.modelix.model.api/-node-reference-k-serializer/index.html","searchKeys":["NodeReferenceKSerializer","class NodeReferenceKSerializer : KSerializer<INodeReference> ","org.modelix.model.api.NodeReferenceKSerializer"]},{"name":"class PBranch(tree: ITree, idGenerator: IIdGenerator) : IBranch","description":"org.modelix.model.api.PBranch","location":"model-api/org.modelix.model.api/-p-branch/index.html","searchKeys":["PBranch","class PBranch(tree: ITree, idGenerator: IIdGenerator) : IBranch","org.modelix.model.api.PBranch"]},{"name":"class PropertyChangeEvent(val node: INode, val role: String) : RoleChangeEvent","description":"org.modelix.model.area.PropertyChangeEvent","location":"model-api/org.modelix.model.area/-property-change-event/index.html","searchKeys":["PropertyChangeEvent","class PropertyChangeEvent(val node: INode, val role: String) : RoleChangeEvent","org.modelix.model.area.PropertyChangeEvent"]},{"name":"class PropertyTypeSerializer : KSerializer<PropertyType> ","description":"org.modelix.model.data.PropertyTypeSerializer","location":"model-api/org.modelix.model.data/-property-type-serializer/index.html","searchKeys":["PropertyTypeSerializer","class PropertyTypeSerializer : KSerializer<PropertyType> ","org.modelix.model.data.PropertyTypeSerializer"]},{"name":"class RandomModelChangeGenerator(val rootNode: INode, rand: Random)","description":"org.modelix.model.test.RandomModelChangeGenerator","location":"model-api/org.modelix.model.test/-random-model-change-generator/index.html","searchKeys":["RandomModelChangeGenerator","class RandomModelChangeGenerator(val rootNode: INode, rand: Random)","org.modelix.model.test.RandomModelChangeGenerator"]},{"name":"class ReadTransaction(val tree: ITree, val branch: IBranch) : Transaction, IReadTransaction","description":"org.modelix.model.api.ReadTransaction","location":"model-api/org.modelix.model.api/-read-transaction/index.html","searchKeys":["ReadTransaction","class ReadTransaction(val tree: ITree, val branch: IBranch) : Transaction, IReadTransaction","org.modelix.model.api.ReadTransaction"]},{"name":"class ReferenceChangeEvent(val node: INode, val role: String) : RoleChangeEvent","description":"org.modelix.model.area.ReferenceChangeEvent","location":"model-api/org.modelix.model.area/-reference-change-event/index.html","searchKeys":["ReferenceChangeEvent","class ReferenceChangeEvent(val node: INode, val role: String) : RoleChangeEvent","org.modelix.model.area.ReferenceChangeEvent"]},{"name":"class SimpleChildLink(simpleName: String, val isMultiple: Boolean, val isOptional: Boolean, val targetConcept: IConcept, uid: String? = null) : IChildLink","description":"org.modelix.model.api.SimpleChildLink","location":"model-api/org.modelix.model.api/-simple-child-link/index.html","searchKeys":["SimpleChildLink","class SimpleChildLink(simpleName: String, val isMultiple: Boolean, val isOptional: Boolean, val targetConcept: IConcept, uid: String? = null) : IChildLink","org.modelix.model.api.SimpleChildLink"]},{"name":"class SimpleProperty constructor(simpleName: String, val isOptional: Boolean = true, uid: String? = null) : IProperty","description":"org.modelix.model.api.SimpleProperty","location":"model-api/org.modelix.model.api/-simple-property/index.html","searchKeys":["SimpleProperty","class SimpleProperty constructor(simpleName: String, val isOptional: Boolean = true, uid: String? = null) : IProperty","org.modelix.model.api.SimpleProperty"]},{"name":"class SimpleReferenceLink constructor(simpleName: String, val isOptional: Boolean, var targetConcept: IConcept, uid: String? = null) : IReferenceLink","description":"org.modelix.model.api.SimpleReferenceLink","location":"model-api/org.modelix.model.api/-simple-reference-link/index.html","searchKeys":["SimpleReferenceLink","class SimpleReferenceLink constructor(simpleName: String, val isOptional: Boolean, var targetConcept: IConcept, uid: String? = null) : IReferenceLink","org.modelix.model.api.SimpleReferenceLink"]},{"name":"class TreePointer(tree_: ITree, val idGenerator: IIdGenerator = IdGeneratorDummy()) : IBranch, IWriteTransaction, IReadTransaction","description":"org.modelix.model.api.TreePointer","location":"model-api/org.modelix.model.api/-tree-pointer/index.html","searchKeys":["TreePointer","class TreePointer(tree_: ITree, val idGenerator: IIdGenerator = IdGeneratorDummy()) : IBranch, IWriteTransaction, IReadTransaction","org.modelix.model.api.TreePointer"]},{"name":"class WriteTransaction(_tree: ITree, val branch: IBranch, idGenerator: IIdGenerator) : Transaction, IWriteTransaction","description":"org.modelix.model.api.WriteTransaction","location":"model-api/org.modelix.model.api/-write-transaction/index.html","searchKeys":["WriteTransaction","class WriteTransaction(_tree: ITree, val branch: IBranch, idGenerator: IIdGenerator) : Transaction, IWriteTransaction","org.modelix.model.api.WriteTransaction"]},{"name":"const val ALIAS_KEY: String","description":"org.modelix.model.data.ConceptData.Companion.ALIAS_KEY","location":"model-api/org.modelix.model.data/-concept-data/-companion/-a-l-i-a-s_-k-e-y.html","searchKeys":["ALIAS_KEY","const val ALIAS_KEY: String","org.modelix.model.data.ConceptData.Companion.ALIAS_KEY"]},{"name":"const val DETACHED_NODES_ROLE: String","description":"org.modelix.model.api.ITree.Companion.DETACHED_NODES_ROLE","location":"model-api/org.modelix.model.api/-i-tree/-companion/-d-e-t-a-c-h-e-d_-n-o-d-e-s_-r-o-l-e.html","searchKeys":["DETACHED_NODES_ROLE","const val DETACHED_NODES_ROLE: String","org.modelix.model.api.ITree.Companion.DETACHED_NODES_ROLE"]},{"name":"const val ID_PROPERTY_KEY: String","description":"org.modelix.model.data.NodeData.Companion.ID_PROPERTY_KEY","location":"model-api/org.modelix.model.data/-node-data/-companion/-i-d_-p-r-o-p-e-r-t-y_-k-e-y.html","searchKeys":["ID_PROPERTY_KEY","const val ID_PROPERTY_KEY: String","org.modelix.model.data.NodeData.Companion.ID_PROPERTY_KEY"]},{"name":"const val ROOT_ID: Long = 1","description":"org.modelix.model.api.ITree.Companion.ROOT_ID","location":"model-api/org.modelix.model.api/-i-tree/-companion/-r-o-o-t_-i-d.html","searchKeys":["ROOT_ID","const val ROOT_ID: Long = 1","org.modelix.model.api.ITree.Companion.ROOT_ID"]},{"name":"const val SEPARATOR: String","description":"org.modelix.model.api.INodeReferenceSerializerEx.Companion.SEPARATOR","location":"model-api/org.modelix.model.api/-i-node-reference-serializer-ex/-companion/-s-e-p-a-r-a-t-o-r.html","searchKeys":["SEPARATOR","const val SEPARATOR: String","org.modelix.model.api.INodeReferenceSerializerEx.Companion.SEPARATOR"]},{"name":"const val idPropertyKey: String","description":"org.modelix.model.data.NodeData.Companion.idPropertyKey","location":"model-api/org.modelix.model.data/-node-data/-companion/id-property-key.html","searchKeys":["idPropertyKey","const val idPropertyKey: String","org.modelix.model.data.NodeData.Companion.idPropertyKey"]},{"name":"constructor()","description":"LanguageRegistry.LanguageRegistry","location":"model-api/[root]/-language-registry/-language-registry.html","searchKeys":["LanguageRegistry","constructor()","LanguageRegistry.LanguageRegistry"]},{"name":"constructor()","description":"org.modelix.model.api.ConceptReferenceKSerializer.ConceptReferenceKSerializer","location":"model-api/org.modelix.model.api/-concept-reference-k-serializer/-concept-reference-k-serializer.html","searchKeys":["ConceptReferenceKSerializer","constructor()","org.modelix.model.api.ConceptReferenceKSerializer.ConceptReferenceKSerializer"]},{"name":"constructor()","description":"org.modelix.model.api.IdGeneratorDummy.IdGeneratorDummy","location":"model-api/org.modelix.model.api/-id-generator-dummy/-id-generator-dummy.html","searchKeys":["IdGeneratorDummy","constructor()","org.modelix.model.api.IdGeneratorDummy.IdGeneratorDummy"]},{"name":"constructor()","description":"org.modelix.model.api.LinkFromName.LinkFromName","location":"model-api/org.modelix.model.api/-link-from-name/-link-from-name.html","searchKeys":["LinkFromName","constructor()","org.modelix.model.api.LinkFromName.LinkFromName"]},{"name":"constructor()","description":"org.modelix.model.api.NodeReferenceKSerializer.NodeReferenceKSerializer","location":"model-api/org.modelix.model.api/-node-reference-k-serializer/-node-reference-k-serializer.html","searchKeys":["NodeReferenceKSerializer","constructor()","org.modelix.model.api.NodeReferenceKSerializer.NodeReferenceKSerializer"]},{"name":"constructor()","description":"org.modelix.model.api.RoleFromName.RoleFromName","location":"model-api/org.modelix.model.api/-role-from-name/-role-from-name.html","searchKeys":["RoleFromName","constructor()","org.modelix.model.api.RoleFromName.RoleFromName"]},{"name":"constructor()","description":"org.modelix.model.area.AbstractArea.AbstractArea","location":"model-api/org.modelix.model.area/-abstract-area/-abstract-area.html","searchKeys":["AbstractArea","constructor()","org.modelix.model.area.AbstractArea.AbstractArea"]},{"name":"constructor()","description":"org.modelix.model.area.CompositeArea.Root.Root","location":"model-api/org.modelix.model.area/-composite-area/-root/-root.html","searchKeys":["Root","constructor()","org.modelix.model.area.CompositeArea.Root.Root"]},{"name":"constructor()","description":"org.modelix.model.data.PropertyTypeSerializer.PropertyTypeSerializer","location":"model-api/org.modelix.model.data/-property-type-serializer/-property-type-serializer.html","searchKeys":["PropertyTypeSerializer","constructor()","org.modelix.model.data.PropertyTypeSerializer.PropertyTypeSerializer"]},{"name":"constructor(_node: INodeJS)","description":"TypedNode.TypedNode","location":"model-api/[root]/-typed-node/-typed-node.html","searchKeys":["TypedNode","constructor(_node: INodeJS)","TypedNode.TypedNode"]},{"name":"constructor(_tree: ITree, branch: IBranch, idGenerator: IIdGenerator)","description":"org.modelix.model.api.WriteTransaction.WriteTransaction","location":"model-api/org.modelix.model.api/-write-transaction/-write-transaction.html","searchKeys":["WriteTransaction","constructor(_tree: ITree, branch: IBranch, idGenerator: IIdGenerator)","org.modelix.model.api.WriteTransaction.WriteTransaction"]},{"name":"constructor(area: IArea, listener: IAreaListener)","description":"org.modelix.model.area.AreaListenerRegistry.Entry.Entry","location":"model-api/org.modelix.model.area/-area-listener-registry/-entry/-entry.html","searchKeys":["Entry","constructor(area: IArea, listener: IAreaListener)","org.modelix.model.area.AreaListenerRegistry.Entry.Entry"]},{"name":"constructor(areaRef: CompositeArea.AreaReference)","description":"org.modelix.model.area.CompositeArea.RootNodeReference.RootNodeReference","location":"model-api/org.modelix.model.area/-composite-area/-root-node-reference/-root-node-reference.html","searchKeys":["RootNodeReference","constructor(areaRef: CompositeArea.AreaReference)","org.modelix.model.area.CompositeArea.RootNodeReference.RootNodeReference"]},{"name":"constructor(areaRefs: List<IAreaReference>)","description":"org.modelix.model.area.CompositeArea.AreaReference.AreaReference","location":"model-api/org.modelix.model.area/-composite-area/-area-reference/-area-reference.html","searchKeys":["AreaReference","constructor(areaRefs: List<IAreaReference>)","org.modelix.model.area.CompositeArea.AreaReference.AreaReference"]},{"name":"constructor(areas: List<IArea>)","description":"org.modelix.model.area.CompositeArea.CompositeArea","location":"model-api/org.modelix.model.area/-composite-area/-composite-area.html","searchKeys":["CompositeArea","constructor(areas: List<IArea>)","org.modelix.model.area.CompositeArea.CompositeArea"]},{"name":"constructor(branch: IBranch)","description":"org.modelix.model.api.Transaction.Transaction","location":"model-api/org.modelix.model.api/-transaction/-transaction.html","searchKeys":["Transaction","constructor(branch: IBranch)","org.modelix.model.api.Transaction.Transaction"]},{"name":"constructor(branch: IBranch)","description":"org.modelix.model.area.PArea.PArea","location":"model-api/org.modelix.model.area/-p-area/-p-area.html","searchKeys":["PArea","constructor(branch: IBranch)","org.modelix.model.area.PArea.PArea"]},{"name":"constructor(branchId: String?)","description":"org.modelix.model.area.PArea.AreaReference.AreaReference","location":"model-api/org.modelix.model.area/-p-area/-area-reference/-area-reference.html","searchKeys":["AreaReference","constructor(branchId: String?)","org.modelix.model.area.PArea.AreaReference.AreaReference"]},{"name":"constructor(conceptName: String, is_abstract: Boolean = false, directSuperConcepts: Iterable<IConcept> = emptyList(), uid: String? = null)","description":"org.modelix.model.api.SimpleConcept.SimpleConcept","location":"model-api/org.modelix.model.api/-simple-concept/-simple-concept.html","searchKeys":["SimpleConcept","constructor(conceptName: String, is_abstract: Boolean = false, directSuperConcepts: Iterable<IConcept> = emptyList(), uid: String? = null)","org.modelix.model.api.SimpleConcept.SimpleConcept"]},{"name":"constructor(id: Long)","description":"org.modelix.model.api.LocalPNodeReference.LocalPNodeReference","location":"model-api/org.modelix.model.api/-local-p-node-reference/-local-p-node-reference.html","searchKeys":["LocalPNodeReference","constructor(id: Long)","org.modelix.model.api.LocalPNodeReference.LocalPNodeReference"]},{"name":"constructor(id: Long, branchId: String)","description":"org.modelix.model.api.PNodeReference.PNodeReference","location":"model-api/org.modelix.model.api/-p-node-reference/-p-node-reference.html","searchKeys":["PNodeReference","constructor(id: Long, branchId: String)","org.modelix.model.api.PNodeReference.PNodeReference"]},{"name":"constructor(id: String? = null, concept: String? = null, role: String? = null, children: List<NodeData> = emptyList(), properties: Map<String, String> = emptyMap(), references: Map<String, String> = emptyMap())","description":"org.modelix.model.data.NodeData.NodeData","location":"model-api/org.modelix.model.data/-node-data/-node-data.html","searchKeys":["NodeData","constructor(id: String? = null, concept: String? = null, role: String? = null, children: List<NodeData> = emptyList(), properties: Map<String, String> = emptyMap(), references: Map<String, String> = emptyMap())","org.modelix.model.data.NodeData.NodeData"]},{"name":"constructor(id: String? = null, root: NodeData)","description":"org.modelix.model.data.ModelData.ModelData","location":"model-api/org.modelix.model.data/-model-data/-model-data.html","searchKeys":["ModelData","constructor(id: String? = null, root: NodeData)","org.modelix.model.data.ModelData.ModelData"]},{"name":"constructor(name: String)","description":"GeneratedLanguage.GeneratedLanguage","location":"model-api/[root]/-generated-language/-generated-language.html","searchKeys":["GeneratedLanguage","constructor(name: String)","GeneratedLanguage.GeneratedLanguage"]},{"name":"constructor(name: String)","description":"org.modelix.model.api.ChildLinkFromName.ChildLinkFromName","location":"model-api/org.modelix.model.api/-child-link-from-name/-child-link-from-name.html","searchKeys":["ChildLinkFromName","constructor(name: String)","org.modelix.model.api.ChildLinkFromName.ChildLinkFromName"]},{"name":"constructor(name: String)","description":"org.modelix.model.api.PropertyFromName.PropertyFromName","location":"model-api/org.modelix.model.api/-property-from-name/-property-from-name.html","searchKeys":["PropertyFromName","constructor(name: String)","org.modelix.model.api.PropertyFromName.PropertyFromName"]},{"name":"constructor(name: String)","description":"org.modelix.model.api.ReferenceLinkFromName.ReferenceLinkFromName","location":"model-api/org.modelix.model.api/-reference-link-from-name/-reference-link-from-name.html","searchKeys":["ReferenceLinkFromName","constructor(name: String)","org.modelix.model.api.ReferenceLinkFromName.ReferenceLinkFromName"]},{"name":"constructor(name: String, uid: String? = null)","description":"org.modelix.model.api.SimpleLanguage.SimpleLanguage","location":"model-api/org.modelix.model.api/-simple-language/-simple-language.html","searchKeys":["SimpleLanguage","constructor(name: String, uid: String? = null)","org.modelix.model.api.SimpleLanguage.SimpleLanguage"]},{"name":"constructor(next: Any, last: Any)","description":"IdGenerator.IdGenerator","location":"model-api/[root]/-id-generator/-id-generator.html","searchKeys":["IdGenerator","constructor(next: Any, last: Any)","IdGenerator.IdGenerator"]},{"name":"constructor(node: INode)","description":"org.modelix.model.api.NodeAdapterJS.NodeAdapterJS","location":"model-api/org.modelix.model.api/-node-adapter-j-s/-node-adapter-j-s.html","searchKeys":["NodeAdapterJS","constructor(node: INode)","org.modelix.model.api.NodeAdapterJS.NodeAdapterJS"]},{"name":"constructor(node: INode)","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.NodeWrapper","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/-node-wrapper.html","searchKeys":["NodeWrapper","constructor(node: INode)","org.modelix.model.area.AreaWithMounts.NodeWrapper.NodeWrapper"]},{"name":"constructor(node: INode)","description":"org.modelix.model.area.CompositeArea.NodeWrapper.NodeWrapper","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/-node-wrapper.html","searchKeys":["NodeWrapper","constructor(node: INode)","org.modelix.model.area.CompositeArea.NodeWrapper.NodeWrapper"]},{"name":"constructor(node: INode)","description":"org.modelix.model.area.NodeChangeEvent.NodeChangeEvent","location":"model-api/org.modelix.model.area/-node-change-event/-node-change-event.html","searchKeys":["NodeChangeEvent","constructor(node: INode)","org.modelix.model.area.NodeChangeEvent.NodeChangeEvent"]},{"name":"constructor(node: INode, role: String)","description":"org.modelix.model.area.ChildrenChangeEvent.ChildrenChangeEvent","location":"model-api/org.modelix.model.area/-children-change-event/-children-change-event.html","searchKeys":["ChildrenChangeEvent","constructor(node: INode, role: String)","org.modelix.model.area.ChildrenChangeEvent.ChildrenChangeEvent"]},{"name":"constructor(node: INode, role: String)","description":"org.modelix.model.area.PropertyChangeEvent.PropertyChangeEvent","location":"model-api/org.modelix.model.area/-property-change-event/-property-change-event.html","searchKeys":["PropertyChangeEvent","constructor(node: INode, role: String)","org.modelix.model.area.PropertyChangeEvent.PropertyChangeEvent"]},{"name":"constructor(node: INode, role: String)","description":"org.modelix.model.area.ReferenceChangeEvent.ReferenceChangeEvent","location":"model-api/org.modelix.model.area/-reference-change-event/-reference-change-event.html","searchKeys":["ReferenceChangeEvent","constructor(node: INode, role: String)","org.modelix.model.area.ReferenceChangeEvent.ReferenceChangeEvent"]},{"name":"constructor(node: INode, role: String)","description":"org.modelix.model.area.RoleChangeEvent.RoleChangeEvent","location":"model-api/org.modelix.model.area/-role-change-event/-role-change-event.html","searchKeys":["RoleChangeEvent","constructor(node: INode, role: String)","org.modelix.model.area.RoleChangeEvent.RoleChangeEvent"]},{"name":"constructor(node: INodeJS)","description":"UnknownTypedNode.UnknownTypedNode","location":"model-api/[root]/-unknown-typed-node/-unknown-typed-node.html","searchKeys":["UnknownTypedNode","constructor(node: INodeJS)","UnknownTypedNode.UnknownTypedNode"]},{"name":"constructor(nodeId: Long, branch: IBranch)","description":"org.modelix.model.api.PNodeAdapter.PNodeAdapter","location":"model-api/org.modelix.model.api/-p-node-adapter/-p-node-adapter.html","searchKeys":["PNodeAdapter","constructor(nodeId: Long, branch: IBranch)","org.modelix.model.api.PNodeAdapter.PNodeAdapter"]},{"name":"constructor(nodeId: String)","description":"org.modelix.model.api.NodeReferenceById.NodeReferenceById","location":"model-api/org.modelix.model.api/-node-reference-by-id/-node-reference-by-id.html","searchKeys":["NodeReferenceById","constructor(nodeId: String)","org.modelix.model.api.NodeReferenceById.NodeReferenceById"]},{"name":"constructor(nodeRef: INodeReference, areaRef: CompositeArea.AreaReference)","description":"org.modelix.model.area.CompositeArea.NodeWrapperReference.NodeWrapperReference","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper-reference/-node-wrapper-reference.html","searchKeys":["NodeWrapperReference","constructor(nodeRef: INodeReference, areaRef: CompositeArea.AreaReference)","org.modelix.model.area.CompositeArea.NodeWrapperReference.NodeWrapperReference"]},{"name":"constructor(parentNode: INodeJS, role: String?)","description":"ChildListAccessor.ChildListAccessor","location":"model-api/[root]/-child-list-accessor/-child-list-accessor.html","searchKeys":["ChildListAccessor","constructor(parentNode: INodeJS, role: String?)","ChildListAccessor.ChildListAccessor"]},{"name":"constructor(parentNode: INodeJS, role: String?)","description":"SingleChildAccessor.SingleChildAccessor","location":"model-api/[root]/-single-child-accessor/-single-child-accessor.html","searchKeys":["SingleChildAccessor","constructor(parentNode: INodeJS, role: String?)","SingleChildAccessor.SingleChildAccessor"]},{"name":"constructor(pckg: String, enumName: String)","description":"org.modelix.model.data.EnumPropertyType.EnumPropertyType","location":"model-api/org.modelix.model.data/-enum-property-type/-enum-property-type.html","searchKeys":["EnumPropertyType","constructor(pckg: String, enumName: String)","org.modelix.model.data.EnumPropertyType.EnumPropertyType"]},{"name":"constructor(primitive: Primitive)","description":"org.modelix.model.data.PrimitivePropertyType.PrimitivePropertyType","location":"model-api/org.modelix.model.data/-primitive-property-type/-primitive-property-type.html","searchKeys":["PrimitivePropertyType","constructor(primitive: Primitive)","org.modelix.model.data.PrimitivePropertyType.PrimitivePropertyType"]},{"name":"constructor(rootArea: IArea, mounts: Map<INode, IArea>)","description":"org.modelix.model.area.AreaWithMounts.AreaWithMounts","location":"model-api/org.modelix.model.area/-area-with-mounts/-area-with-mounts.html","searchKeys":["AreaWithMounts","constructor(rootArea: IArea, mounts: Map<INode, IArea>)","org.modelix.model.area.AreaWithMounts.AreaWithMounts"]},{"name":"constructor(rootArea: IAreaReference, mountKeys: List<INodeReference>, mountValues: List<IAreaReference>)","description":"org.modelix.model.area.AreaWithMounts.AreaReference.AreaReference","location":"model-api/org.modelix.model.area/-area-with-mounts/-area-reference/-area-reference.html","searchKeys":["AreaReference","constructor(rootArea: IAreaReference, mountKeys: List<INodeReference>, mountValues: List<IAreaReference>)","org.modelix.model.area.AreaWithMounts.AreaReference.AreaReference"]},{"name":"constructor(rootNode: INode, rand: Random)","description":"org.modelix.model.test.RandomModelChangeGenerator.RandomModelChangeGenerator","location":"model-api/org.modelix.model.test/-random-model-change-generator/-random-model-change-generator.html","searchKeys":["RandomModelChangeGenerator","constructor(rootNode: INode, rand: Random)","org.modelix.model.test.RandomModelChangeGenerator.RandomModelChangeGenerator"]},{"name":"constructor(scopes: List<INodeResolutionScope>)","description":"org.modelix.model.api.CompositeNodeResolutionScope.CompositeNodeResolutionScope","location":"model-api/org.modelix.model.api/-composite-node-resolution-scope/-composite-node-resolution-scope.html","searchKeys":["CompositeNodeResolutionScope","constructor(scopes: List<INodeResolutionScope>)","org.modelix.model.api.CompositeNodeResolutionScope.CompositeNodeResolutionScope"]},{"name":"constructor(serialized: String)","description":"org.modelix.model.api.NodeReference.NodeReference","location":"model-api/org.modelix.model.api/-node-reference/-node-reference.html","searchKeys":["NodeReference","constructor(serialized: String)","org.modelix.model.api.NodeReference.NodeReference"]},{"name":"constructor(server: IModelServerConnection)","description":"ModelService.ModelService","location":"model-api/[root]/-model-service/-model-service.html","searchKeys":["ModelService","constructor(server: IModelServerConnection)","ModelService.ModelService"]},{"name":"constructor(simpleName: String, isMultiple: Boolean, isOptional: Boolean, targetConcept: IConcept, uid: String? = null)","description":"org.modelix.model.api.SimpleChildLink.SimpleChildLink","location":"model-api/org.modelix.model.api/-simple-child-link/-simple-child-link.html","searchKeys":["SimpleChildLink","constructor(simpleName: String, isMultiple: Boolean, isOptional: Boolean, targetConcept: IConcept, uid: String? = null)","org.modelix.model.api.SimpleChildLink.SimpleChildLink"]},{"name":"constructor(simpleName: String, isOptional: Boolean = true, uid: String? = null)","description":"org.modelix.model.api.SimpleProperty.SimpleProperty","location":"model-api/org.modelix.model.api/-simple-property/-simple-property.html","searchKeys":["SimpleProperty","constructor(simpleName: String, isOptional: Boolean = true, uid: String? = null)","org.modelix.model.api.SimpleProperty.SimpleProperty"]},{"name":"constructor(simpleName: String, isOptional: Boolean, targetConcept: IConcept, uid: String? = null)","description":"org.modelix.model.api.SimpleReferenceLink.SimpleReferenceLink","location":"model-api/org.modelix.model.api/-simple-reference-link/-simple-reference-link.html","searchKeys":["SimpleReferenceLink","constructor(simpleName: String, isOptional: Boolean, targetConcept: IConcept, uid: String? = null)","org.modelix.model.api.SimpleReferenceLink.SimpleReferenceLink"]},{"name":"constructor(tree: ITree, branch: IBranch)","description":"org.modelix.model.api.ReadTransaction.ReadTransaction","location":"model-api/org.modelix.model.api/-read-transaction/-read-transaction.html","searchKeys":["ReadTransaction","constructor(tree: ITree, branch: IBranch)","org.modelix.model.api.ReadTransaction.ReadTransaction"]},{"name":"constructor(tree: ITree, idGenerator: IIdGenerator)","description":"org.modelix.model.api.PBranch.PBranch","location":"model-api/org.modelix.model.api/-p-branch/-p-branch.html","searchKeys":["PBranch","constructor(tree: ITree, idGenerator: IIdGenerator)","org.modelix.model.api.PBranch.PBranch"]},{"name":"constructor(tree_: ITree, idGenerator: IIdGenerator = IdGeneratorDummy())","description":"org.modelix.model.api.TreePointer.TreePointer","location":"model-api/org.modelix.model.api/-tree-pointer/-tree-pointer.html","searchKeys":["TreePointer","constructor(tree_: ITree, idGenerator: IIdGenerator = IdGeneratorDummy())","org.modelix.model.api.TreePointer.TreePointer"]},{"name":"constructor(uid: String)","description":"GeneratedConcept.GeneratedConcept","location":"model-api/[root]/-generated-concept/-generated-concept.html","searchKeys":["GeneratedConcept","constructor(uid: String)","GeneratedConcept.GeneratedConcept"]},{"name":"constructor(uid: String)","description":"org.modelix.model.api.ConceptReference.ConceptReference","location":"model-api/org.modelix.model.api/-concept-reference/-concept-reference.html","searchKeys":["ConceptReference","constructor(uid: String)","org.modelix.model.api.ConceptReference.ConceptReference"]},{"name":"constructor(uid: String, name: String, presentation: String? = null)","description":"org.modelix.model.data.EnumMemberData.EnumMemberData","location":"model-api/org.modelix.model.data/-enum-member-data/-enum-member-data.html","searchKeys":["EnumMemberData","constructor(uid: String, name: String, presentation: String? = null)","org.modelix.model.data.EnumMemberData.EnumMemberData"]},{"name":"constructor(uid: String? = null, name: String, abstract: Boolean = false, properties: List<PropertyData> = emptyList(), children: List<ChildLinkData> = emptyList(), references: List<ReferenceLinkData> = emptyList(), extends: List<String> = emptyList(), deprecationMessage: String? = null, metaProperties: MutableMap<String, String> = mutableMapOf())","description":"org.modelix.model.data.ConceptData.ConceptData","location":"model-api/org.modelix.model.data/-concept-data/-concept-data.html","searchKeys":["ConceptData","constructor(uid: String? = null, name: String, abstract: Boolean = false, properties: List<PropertyData> = emptyList(), children: List<ChildLinkData> = emptyList(), references: List<ReferenceLinkData> = emptyList(), extends: List<String> = emptyList(), deprecationMessage: String? = null, metaProperties: MutableMap<String, String> = mutableMapOf())","org.modelix.model.data.ConceptData.ConceptData"]},{"name":"constructor(uid: String? = null, name: String, concepts: List<ConceptData>, enums: List<EnumData> = emptyList())","description":"org.modelix.model.data.LanguageData.LanguageData","location":"model-api/org.modelix.model.data/-language-data/-language-data.html","searchKeys":["LanguageData","constructor(uid: String? = null, name: String, concepts: List<ConceptData>, enums: List<EnumData> = emptyList())","org.modelix.model.data.LanguageData.LanguageData"]},{"name":"constructor(uid: String? = null, name: String, members: List<EnumMemberData> = emptyList(), defaultIndex: Int, deprecationMessage: String? = null)","description":"org.modelix.model.data.EnumData.EnumData","location":"model-api/org.modelix.model.data/-enum-data/-enum-data.html","searchKeys":["EnumData","constructor(uid: String? = null, name: String, members: List<EnumMemberData> = emptyList(), defaultIndex: Int, deprecationMessage: String? = null)","org.modelix.model.data.EnumData.EnumData"]},{"name":"constructor(uid: String? = null, name: String, type: PropertyType = PrimitivePropertyType(Primitive.STRING), optional: Boolean = true, deprecationMessage: String? = null)","description":"org.modelix.model.data.PropertyData.PropertyData","location":"model-api/org.modelix.model.data/-property-data/-property-data.html","searchKeys":["PropertyData","constructor(uid: String? = null, name: String, type: PropertyType = PrimitivePropertyType(Primitive.STRING), optional: Boolean = true, deprecationMessage: String? = null)","org.modelix.model.data.PropertyData.PropertyData"]},{"name":"constructor(uid: String? = null, name: String, type: String, multiple: Boolean = false, optional: Boolean = true, deprecationMessage: String? = null)","description":"org.modelix.model.data.ChildLinkData.ChildLinkData","location":"model-api/org.modelix.model.data/-child-link-data/-child-link-data.html","searchKeys":["ChildLinkData","constructor(uid: String? = null, name: String, type: String, multiple: Boolean = false, optional: Boolean = true, deprecationMessage: String? = null)","org.modelix.model.data.ChildLinkData.ChildLinkData"]},{"name":"constructor(uid: String? = null, name: String, type: String, optional: Boolean = true, deprecationMessage: String? = null)","description":"org.modelix.model.data.ReferenceLinkData.ReferenceLinkData","location":"model-api/org.modelix.model.data/-reference-link-data/-reference-link-data.html","searchKeys":["ReferenceLinkData","constructor(uid: String? = null, name: String, type: String, optional: Boolean = true, deprecationMessage: String? = null)","org.modelix.model.data.ReferenceLinkData.ReferenceLinkData"]},{"name":"constructor(vararg areas: IArea)","description":"org.modelix.model.area.CompositeArea.CompositeArea","location":"model-api/org.modelix.model.area/-composite-area/-composite-area.html","searchKeys":["CompositeArea","constructor(vararg areas: IArea)","org.modelix.model.area.CompositeArea.CompositeArea"]},{"name":"constructor(wrappedListener: IAreaListener)","description":"org.modelix.model.area.AreaListenerWrapper.AreaListenerWrapper","location":"model-api/org.modelix.model.area/-area-listener-wrapper/-area-listener-wrapper.html","searchKeys":["AreaListenerWrapper","constructor(wrappedListener: IAreaListener)","org.modelix.model.area.AreaListenerWrapper.AreaListenerWrapper"]},{"name":"constructor(wrappedListener: IAreaListener)","description":"org.modelix.model.area.CompositeArea.ListenerWrapper.ListenerWrapper","location":"model-api/org.modelix.model.area/-composite-area/-listener-wrapper/-listener-wrapper.html","searchKeys":["ListenerWrapper","constructor(wrappedListener: IAreaListener)","org.modelix.model.area.CompositeArea.ListenerWrapper.ListenerWrapper"]},{"name":"data class AreaReference(val areaRefs: List<IAreaReference>) : IAreaReference","description":"org.modelix.model.area.CompositeArea.AreaReference","location":"model-api/org.modelix.model.area/-composite-area/-area-reference/index.html","searchKeys":["AreaReference","data class AreaReference(val areaRefs: List<IAreaReference>) : IAreaReference","org.modelix.model.area.CompositeArea.AreaReference"]},{"name":"data class AreaReference(val branchId: String?) : IAreaReference","description":"org.modelix.model.area.PArea.AreaReference","location":"model-api/org.modelix.model.area/-p-area/-area-reference/index.html","searchKeys":["AreaReference","data class AreaReference(val branchId: String?) : IAreaReference","org.modelix.model.area.PArea.AreaReference"]},{"name":"data class AreaReference(val rootArea: IAreaReference, val mountKeys: List<INodeReference>, val mountValues: List<IAreaReference>) : IAreaReference","description":"org.modelix.model.area.AreaWithMounts.AreaReference","location":"model-api/org.modelix.model.area/-area-with-mounts/-area-reference/index.html","searchKeys":["AreaReference","data class AreaReference(val rootArea: IAreaReference, val mountKeys: List<INodeReference>, val mountValues: List<IAreaReference>) : IAreaReference","org.modelix.model.area.AreaWithMounts.AreaReference"]},{"name":"data class ChildLinkData(val uid: String? = null, val name: String, val type: String, val multiple: Boolean = false, val optional: Boolean = true, val deprecationMessage: String? = null) : IConceptFeatureData, IDeprecatable","description":"org.modelix.model.data.ChildLinkData","location":"model-api/org.modelix.model.data/-child-link-data/index.html","searchKeys":["ChildLinkData","data class ChildLinkData(val uid: String? = null, val name: String, val type: String, val multiple: Boolean = false, val optional: Boolean = true, val deprecationMessage: String? = null) : IConceptFeatureData, IDeprecatable","org.modelix.model.data.ChildLinkData"]},{"name":"data class ChildLinkFromName(val name: String) : LinkFromName, IChildLink","description":"org.modelix.model.api.ChildLinkFromName","location":"model-api/org.modelix.model.api/-child-link-from-name/index.html","searchKeys":["ChildLinkFromName","data class ChildLinkFromName(val name: String) : LinkFromName, IChildLink","org.modelix.model.api.ChildLinkFromName"]},{"name":"data class ConceptData(val uid: String? = null, val name: String, val abstract: Boolean = false, val properties: List<PropertyData> = emptyList(), val children: List<ChildLinkData> = emptyList(), val references: List<ReferenceLinkData> = emptyList(), val extends: List<String> = emptyList(), val deprecationMessage: String? = null, val metaProperties: MutableMap<String, String> = mutableMapOf()) : IDeprecatable","description":"org.modelix.model.data.ConceptData","location":"model-api/org.modelix.model.data/-concept-data/index.html","searchKeys":["ConceptData","data class ConceptData(val uid: String? = null, val name: String, val abstract: Boolean = false, val properties: List<PropertyData> = emptyList(), val children: List<ChildLinkData> = emptyList(), val references: List<ReferenceLinkData> = emptyList(), val extends: List<String> = emptyList(), val deprecationMessage: String? = null, val metaProperties: MutableMap<String, String> = mutableMapOf()) : IDeprecatable","org.modelix.model.data.ConceptData"]},{"name":"data class ConceptReference(val uid: String) : IConceptReference","description":"org.modelix.model.api.ConceptReference","location":"model-api/org.modelix.model.api/-concept-reference/index.html","searchKeys":["ConceptReference","data class ConceptReference(val uid: String) : IConceptReference","org.modelix.model.api.ConceptReference"]},{"name":"data class EnumData(val uid: String? = null, val name: String, val members: List<EnumMemberData> = emptyList(), val defaultIndex: Int, val deprecationMessage: String? = null) : IDeprecatable","description":"org.modelix.model.data.EnumData","location":"model-api/org.modelix.model.data/-enum-data/index.html","searchKeys":["EnumData","data class EnumData(val uid: String? = null, val name: String, val members: List<EnumMemberData> = emptyList(), val defaultIndex: Int, val deprecationMessage: String? = null) : IDeprecatable","org.modelix.model.data.EnumData"]},{"name":"data class EnumMemberData(val uid: String, val name: String, val presentation: String? = null)","description":"org.modelix.model.data.EnumMemberData","location":"model-api/org.modelix.model.data/-enum-member-data/index.html","searchKeys":["EnumMemberData","data class EnumMemberData(val uid: String, val name: String, val presentation: String? = null)","org.modelix.model.data.EnumMemberData"]},{"name":"data class EnumPropertyType(val pckg: String, val enumName: String) : PropertyType","description":"org.modelix.model.data.EnumPropertyType","location":"model-api/org.modelix.model.data/-enum-property-type/index.html","searchKeys":["EnumPropertyType","data class EnumPropertyType(val pckg: String, val enumName: String) : PropertyType","org.modelix.model.data.EnumPropertyType"]},{"name":"data class LanguageData(val uid: String? = null, val name: String, val concepts: List<ConceptData>, val enums: List<EnumData> = emptyList())","description":"org.modelix.model.data.LanguageData","location":"model-api/org.modelix.model.data/-language-data/index.html","searchKeys":["LanguageData","data class LanguageData(val uid: String? = null, val name: String, val concepts: List<ConceptData>, val enums: List<EnumData> = emptyList())","org.modelix.model.data.LanguageData"]},{"name":"data class LocalPNodeReference(val id: Long) : INodeReference","description":"org.modelix.model.api.LocalPNodeReference","location":"model-api/org.modelix.model.api/-local-p-node-reference/index.html","searchKeys":["LocalPNodeReference","data class LocalPNodeReference(val id: Long) : INodeReference","org.modelix.model.api.LocalPNodeReference"]},{"name":"data class ModelData(val id: String? = null, val root: NodeData)","description":"org.modelix.model.data.ModelData","location":"model-api/org.modelix.model.data/-model-data/index.html","searchKeys":["ModelData","data class ModelData(val id: String? = null, val root: NodeData)","org.modelix.model.data.ModelData"]},{"name":"data class NodeData(val id: String? = null, val concept: String? = null, val role: String? = null, val children: List<NodeData> = emptyList(), val properties: Map<String, String> = emptyMap(), val references: Map<String, String> = emptyMap())","description":"org.modelix.model.data.NodeData","location":"model-api/org.modelix.model.data/-node-data/index.html","searchKeys":["NodeData","data class NodeData(val id: String? = null, val concept: String? = null, val role: String? = null, val children: List<NodeData> = emptyList(), val properties: Map<String, String> = emptyMap(), val references: Map<String, String> = emptyMap())","org.modelix.model.data.NodeData"]},{"name":"data class NodeReference(val serialized: String) : INodeReference","description":"org.modelix.model.api.NodeReference","location":"model-api/org.modelix.model.api/-node-reference/index.html","searchKeys":["NodeReference","data class NodeReference(val serialized: String) : INodeReference","org.modelix.model.api.NodeReference"]},{"name":"data class NodeReferenceById(val nodeId: String) : INodeReference","description":"org.modelix.model.api.NodeReferenceById","location":"model-api/org.modelix.model.api/-node-reference-by-id/index.html","searchKeys":["NodeReferenceById","data class NodeReferenceById(val nodeId: String) : INodeReference","org.modelix.model.api.NodeReferenceById"]},{"name":"data class NodeWrapperReference(val nodeRef: INodeReference, val areaRef: CompositeArea.AreaReference) : INodeReference","description":"org.modelix.model.area.CompositeArea.NodeWrapperReference","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper-reference/index.html","searchKeys":["NodeWrapperReference","data class NodeWrapperReference(val nodeRef: INodeReference, val areaRef: CompositeArea.AreaReference) : INodeReference","org.modelix.model.area.CompositeArea.NodeWrapperReference"]},{"name":"data class PArea(val branch: IBranch) : IArea","description":"org.modelix.model.area.PArea","location":"model-api/org.modelix.model.area/-p-area/index.html","searchKeys":["PArea","data class PArea(val branch: IBranch) : IArea","org.modelix.model.area.PArea"]},{"name":"data class PNodeReference(val id: Long, val branchId: String) : INodeReference","description":"org.modelix.model.api.PNodeReference","location":"model-api/org.modelix.model.api/-p-node-reference/index.html","searchKeys":["PNodeReference","data class PNodeReference(val id: Long, val branchId: String) : INodeReference","org.modelix.model.api.PNodeReference"]},{"name":"data class PrimitivePropertyType(val primitive: Primitive) : PropertyType","description":"org.modelix.model.data.PrimitivePropertyType","location":"model-api/org.modelix.model.data/-primitive-property-type/index.html","searchKeys":["PrimitivePropertyType","data class PrimitivePropertyType(val primitive: Primitive) : PropertyType","org.modelix.model.data.PrimitivePropertyType"]},{"name":"data class PropertyData(val uid: String? = null, val name: String, val type: PropertyType = PrimitivePropertyType(Primitive.STRING), val optional: Boolean = true, val deprecationMessage: String? = null) : IConceptFeatureData, IDeprecatable","description":"org.modelix.model.data.PropertyData","location":"model-api/org.modelix.model.data/-property-data/index.html","searchKeys":["PropertyData","data class PropertyData(val uid: String? = null, val name: String, val type: PropertyType = PrimitivePropertyType(Primitive.STRING), val optional: Boolean = true, val deprecationMessage: String? = null) : IConceptFeatureData, IDeprecatable","org.modelix.model.data.PropertyData"]},{"name":"data class PropertyFromName(val name: String) : RoleFromName, IProperty","description":"org.modelix.model.api.PropertyFromName","location":"model-api/org.modelix.model.api/-property-from-name/index.html","searchKeys":["PropertyFromName","data class PropertyFromName(val name: String) : RoleFromName, IProperty","org.modelix.model.api.PropertyFromName"]},{"name":"data class ReferenceLinkData(val uid: String? = null, val name: String, val type: String, val optional: Boolean = true, val deprecationMessage: String? = null) : IConceptFeatureData, IDeprecatable","description":"org.modelix.model.data.ReferenceLinkData","location":"model-api/org.modelix.model.data/-reference-link-data/index.html","searchKeys":["ReferenceLinkData","data class ReferenceLinkData(val uid: String? = null, val name: String, val type: String, val optional: Boolean = true, val deprecationMessage: String? = null) : IConceptFeatureData, IDeprecatable","org.modelix.model.data.ReferenceLinkData"]},{"name":"data class ReferenceLinkFromName(val name: String) : LinkFromName, IReferenceLink","description":"org.modelix.model.api.ReferenceLinkFromName","location":"model-api/org.modelix.model.api/-reference-link-from-name/index.html","searchKeys":["ReferenceLinkFromName","data class ReferenceLinkFromName(val name: String) : LinkFromName, IReferenceLink","org.modelix.model.api.ReferenceLinkFromName"]},{"name":"data class RootNodeReference(val areaRef: CompositeArea.AreaReference) : INodeReference","description":"org.modelix.model.area.CompositeArea.RootNodeReference","location":"model-api/org.modelix.model.area/-composite-area/-root-node-reference/index.html","searchKeys":["RootNodeReference","data class RootNodeReference(val areaRef: CompositeArea.AreaReference) : INodeReference","org.modelix.model.area.CompositeArea.RootNodeReference"]},{"name":"enum Primitive : Enum<Primitive> ","description":"org.modelix.model.data.Primitive","location":"model-api/org.modelix.model.data/-primitive/index.html","searchKeys":["Primitive","enum Primitive : Enum<Primitive> ","org.modelix.model.data.Primitive"]},{"name":"expect class ContextValue<E>","description":"org.modelix.model.api.ContextValue","location":"model-api/org.modelix.model.api/-context-value/index.html","searchKeys":["ContextValue","expect class ContextValue<E>","org.modelix.model.api.ContextValue"]},{"name":"expect constructor()","description":"org.modelix.model.api.ContextValue.ContextValue","location":"model-api/org.modelix.model.api/-context-value/-context-value.html","searchKeys":["ContextValue","expect constructor()","org.modelix.model.api.ContextValue.ContextValue"]},{"name":"expect constructor(defaultValue: E)","description":"org.modelix.model.api.ContextValue.ContextValue","location":"model-api/org.modelix.model.api/-context-value/-context-value.html","searchKeys":["ContextValue","expect constructor(defaultValue: E)","org.modelix.model.api.ContextValue.ContextValue"]},{"name":"expect fun <T> computeWith(newValue: E, r: () -> T): T","description":"org.modelix.model.api.ContextValue.computeWith","location":"model-api/org.modelix.model.api/-context-value/compute-with.html","searchKeys":["computeWith","expect fun <T> computeWith(newValue: E, r: () -> T): T","org.modelix.model.api.ContextValue.computeWith"]},{"name":"expect fun getValue(): E?","description":"org.modelix.model.api.ContextValue.getValue","location":"model-api/org.modelix.model.api/-context-value/get-value.html","searchKeys":["getValue","expect fun getValue(): E?","org.modelix.model.api.ContextValue.getValue"]},{"name":"expect inline fun <R> runSynchronized(lock: Any, block: () -> R): R","description":"org.modelix.model.api.runSynchronized","location":"model-api/org.modelix.model.api/run-synchronized.html","searchKeys":["runSynchronized","expect inline fun <R> runSynchronized(lock: Any, block: () -> R): R","org.modelix.model.api.runSynchronized"]},{"name":"external interface ArrayConstructor","description":"tsstdlib.ArrayConstructor","location":"model-api/tsstdlib/-array-constructor/index.html","searchKeys":["ArrayConstructor","external interface ArrayConstructor","tsstdlib.ArrayConstructor"]},{"name":"external interface ArrayLike<T>","description":"tsstdlib.ArrayLike","location":"model-api/tsstdlib/-array-like/index.html","searchKeys":["ArrayLike","external interface ArrayLike<T>","tsstdlib.ArrayLike"]},{"name":"external interface ConcatArray<T>","description":"tsstdlib.ConcatArray","location":"model-api/tsstdlib/-concat-array/index.html","searchKeys":["ConcatArray","external interface ConcatArray<T>","tsstdlib.ConcatArray"]},{"name":"external interface IConceptJS","description":"IConceptJS","location":"model-api/[root]/-i-concept-j-s/index.html","searchKeys":["IConceptJS","external interface IConceptJS","IConceptJS"]},{"name":"external interface ILanguage","description":"ILanguage","location":"model-api/[root]/-i-language/index.html","searchKeys":["ILanguage","external interface ILanguage","ILanguage"]},{"name":"external interface IModelServerConnection","description":"IModelServerConnection","location":"model-api/[root]/-i-model-server-connection/index.html","searchKeys":["IModelServerConnection","external interface IModelServerConnection","IModelServerConnection"]},{"name":"external interface INodeJS","description":"INodeJS","location":"model-api/[root]/-i-node-j-s/index.html","searchKeys":["INodeJS","external interface INodeJS","INodeJS"]},{"name":"external interface ITypedNode","description":"ITypedNode","location":"model-api/[root]/-i-typed-node/index.html","searchKeys":["ITypedNode","external interface ITypedNode","ITypedNode"]},{"name":"external interface IdRangeData","description":"IdRangeData","location":"model-api/[root]/-id-range-data/index.html","searchKeys":["IdRangeData","external interface IdRangeData","IdRangeData"]},{"name":"external interface Iterable<T>","description":"tsstdlib.Iterable","location":"model-api/tsstdlib/-iterable/index.html","searchKeys":["Iterable","external interface Iterable<T>","tsstdlib.Iterable"]},{"name":"external interface IterableIterator<T> : Iterator<T, Any, Nothing?> ","description":"tsstdlib.IterableIterator","location":"model-api/tsstdlib/-iterable-iterator/index.html","searchKeys":["IterableIterator","external interface IterableIterator<T> : Iterator<T, Any, Nothing?> ","tsstdlib.IterableIterator"]},{"name":"external interface Iterator<T, TReturn, TNext>","description":"tsstdlib.Iterator","location":"model-api/tsstdlib/-iterator/index.html","searchKeys":["Iterator","external interface Iterator<T, TReturn, TNext>","tsstdlib.Iterator"]},{"name":"external interface IteratorReturnResult<TReturn>","description":"tsstdlib.IteratorReturnResult","location":"model-api/tsstdlib/-iterator-return-result/index.html","searchKeys":["IteratorReturnResult","external interface IteratorReturnResult<TReturn>","tsstdlib.IteratorReturnResult"]},{"name":"external interface IteratorYieldResult<TYield>","description":"tsstdlib.IteratorYieldResult","location":"model-api/tsstdlib/-iterator-yield-result/index.html","searchKeys":["IteratorYieldResult","external interface IteratorYieldResult<TYield>","tsstdlib.IteratorYieldResult"]},{"name":"external interface Map<K, V>","description":"tsstdlib.Map","location":"model-api/tsstdlib/-map/index.html","searchKeys":["Map","external interface Map<K, V>","tsstdlib.Map"]},{"name":"external interface MapConstructor","description":"tsstdlib.MapConstructor","location":"model-api/tsstdlib/-map-constructor/index.html","searchKeys":["MapConstructor","external interface MapConstructor","tsstdlib.MapConstructor"]},{"name":"external interface NodeData","description":"NodeData","location":"model-api/[root]/-node-data/index.html","searchKeys":["NodeData","external interface NodeData","NodeData"]},{"name":"external interface NodeUpdateData","description":"NodeUpdateData","location":"model-api/[root]/-node-update-data/index.html","searchKeys":["NodeUpdateData","external interface NodeUpdateData","NodeUpdateData"]},{"name":"external interface VersionData","description":"VersionData","location":"model-api/[root]/-version-data/index.html","searchKeys":["VersionData","external interface VersionData","VersionData"]},{"name":"fun <In : Any, Out : Any> getCachedWrapper(node: In, wrapperFunction: (node: In) -> Out): Out","description":"org.modelix.model.api.NodeAdapterCache.getCachedWrapper","location":"model-api/org.modelix.model.api/-node-adapter-cache/get-cached-wrapper.html","searchKeys":["getCachedWrapper","fun <In : Any, Out : Any> getCachedWrapper(node: In, wrapperFunction: (node: In) -> Out): Out","org.modelix.model.api.NodeAdapterCache.getCachedWrapper"]},{"name":"fun <T1, T2> List<Pair<T1, T2?>>.filterSecondNotNull(): List<Pair<T1, T2>>","description":"org.modelix.model.api.filterSecondNotNull","location":"model-api/org.modelix.model.api/filter-second-not-null.html","searchKeys":["filterSecondNotNull","fun <T1, T2> List<Pair<T1, T2?>>.filterSecondNotNull(): List<Pair<T1, T2>>","org.modelix.model.api.filterSecondNotNull"]},{"name":"fun <T> ensureInContext(scope: INodeResolutionScope, body: () -> T): T","description":"org.modelix.model.api.INodeResolutionScope.Companion.ensureInContext","location":"model-api/org.modelix.model.api/-i-node-resolution-scope/-companion/ensure-in-context.html","searchKeys":["ensureInContext","fun <T> ensureInContext(scope: INodeResolutionScope, body: () -> T): T","org.modelix.model.api.INodeResolutionScope.Companion.ensureInContext"]},{"name":"fun <T> offer(area: IArea, r: () -> T): T","description":"org.modelix.model.area.ContextArea.offer","location":"model-api/org.modelix.model.area/-context-area/offer.html","searchKeys":["offer","fun <T> offer(area: IArea, r: () -> T): T","org.modelix.model.area.ContextArea.offer"]},{"name":"fun <T> runWith(useRoleIds: Boolean, body: () -> T): T","description":"org.modelix.model.api.RoleAccessContext.runWith","location":"model-api/org.modelix.model.api/-role-access-context/run-with.html","searchKeys":["runWith","fun <T> runWith(useRoleIds: Boolean, body: () -> T): T","org.modelix.model.api.RoleAccessContext.runWith"]},{"name":"fun <T> runWithAdditionalScope(scope: INodeResolutionScope, body: () -> T): T","description":"org.modelix.model.api.INodeResolutionScope.Companion.runWithAdditionalScope","location":"model-api/org.modelix.model.api/-i-node-resolution-scope/-companion/run-with-additional-scope.html","searchKeys":["runWithAdditionalScope","fun <T> runWithAdditionalScope(scope: INodeResolutionScope, body: () -> T): T","org.modelix.model.api.INodeResolutionScope.Companion.runWithAdditionalScope"]},{"name":"fun <T> withAdditionalContext(area: IArea, runnable: () -> T): T","description":"org.modelix.model.area.ContextArea.withAdditionalContext","location":"model-api/org.modelix.model.area/-context-area/with-additional-context.html","searchKeys":["withAdditionalContext","fun <T> withAdditionalContext(area: IArea, runnable: () -> T): T","org.modelix.model.area.ContextArea.withAdditionalContext"]},{"name":"fun IBranch.deepUnwrap(): IBranch","description":"org.modelix.model.api.deepUnwrap","location":"model-api/org.modelix.model.api/deep-unwrap.html","searchKeys":["deepUnwrap","fun IBranch.deepUnwrap(): IBranch","org.modelix.model.api.deepUnwrap"]},{"name":"fun IBranch.getArea(): PArea","description":"org.modelix.model.area.getArea","location":"model-api/org.modelix.model.area/get-area.html","searchKeys":["getArea","fun IBranch.getArea(): PArea","org.modelix.model.area.getArea"]},{"name":"fun IBranch.getNode(id: Long): INode","description":"org.modelix.model.api.getNode","location":"model-api/org.modelix.model.api/get-node.html","searchKeys":["getNode","fun IBranch.getNode(id: Long): INode","org.modelix.model.api.getNode"]},{"name":"fun IBranch.getRootNode(): INode","description":"org.modelix.model.api.getRootNode","location":"model-api/org.modelix.model.api/get-root-node.html","searchKeys":["getRootNode","fun IBranch.getRootNode(): INode","org.modelix.model.api.getRootNode"]},{"name":"fun IConcept.getAllConcepts(): List<IConcept>","description":"org.modelix.model.api.getAllConcepts","location":"model-api/org.modelix.model.api/get-all-concepts.html","searchKeys":["getAllConcepts","fun IConcept.getAllConcepts(): List<IConcept>","org.modelix.model.api.getAllConcepts"]},{"name":"fun IConcept.getAllSubConcepts(includeSelf: Boolean): Set<IConcept>","description":"org.modelix.model.api.getAllSubConcepts","location":"model-api/org.modelix.model.api/get-all-sub-concepts.html","searchKeys":["getAllSubConcepts","fun IConcept.getAllSubConcepts(includeSelf: Boolean): Set<IConcept>","org.modelix.model.api.getAllSubConcepts"]},{"name":"fun IConcept.getDirectSubConcepts(): Set<IConcept>","description":"org.modelix.model.api.getDirectSubConcepts","location":"model-api/org.modelix.model.api/get-direct-sub-concepts.html","searchKeys":["getDirectSubConcepts","fun IConcept.getDirectSubConcepts(): Set<IConcept>","org.modelix.model.api.getDirectSubConcepts"]},{"name":"fun IConcept.getInstantiatableSubConcepts(): List<IConcept>","description":"org.modelix.model.api.getInstantiatableSubConcepts","location":"model-api/org.modelix.model.api/get-instantiatable-sub-concepts.html","searchKeys":["getInstantiatableSubConcepts","fun IConcept.getInstantiatableSubConcepts(): List<IConcept>","org.modelix.model.api.getInstantiatableSubConcepts"]},{"name":"fun IConcept?.isSubConceptOf(superConcept: IConcept?): Boolean","description":"org.modelix.model.api.isSubConceptOf","location":"model-api/org.modelix.model.api/is-sub-concept-of.html","searchKeys":["isSubConceptOf","fun IConcept?.isSubConceptOf(superConcept: IConcept?): Boolean","org.modelix.model.api.isSubConceptOf"]},{"name":"fun IConceptReference.resolve(): IConcept","description":"org.modelix.model.api.resolve","location":"model-api/org.modelix.model.api/resolve.html","searchKeys":["resolve","fun IConceptReference.resolve(): IConcept","org.modelix.model.api.resolve"]},{"name":"fun IConceptReference.tryResolve(): IConcept?","description":"org.modelix.model.api.tryResolve","location":"model-api/org.modelix.model.api/try-resolve.html","searchKeys":["tryResolve","fun IConceptReference.tryResolve(): IConcept?","org.modelix.model.api.tryResolve"]},{"name":"fun INode.addNewChild(role: IChildLink, index: Int, concept: IConcept?): INode","description":"org.modelix.model.api.addNewChild","location":"model-api/org.modelix.model.api/add-new-child.html","searchKeys":["addNewChild","fun INode.addNewChild(role: IChildLink, index: Int, concept: IConcept?): INode","org.modelix.model.api.addNewChild"]},{"name":"fun INode.addNewChild(role: String?): INode","description":"org.modelix.model.api.addNewChild","location":"model-api/org.modelix.model.api/add-new-child.html","searchKeys":["addNewChild","fun INode.addNewChild(role: String?): INode","org.modelix.model.api.addNewChild"]},{"name":"fun INode.addNewChild(role: String?, concept: IConcept?): INode","description":"org.modelix.model.api.addNewChild","location":"model-api/org.modelix.model.api/add-new-child.html","searchKeys":["addNewChild","fun INode.addNewChild(role: String?, concept: IConcept?): INode","org.modelix.model.api.addNewChild"]},{"name":"fun INode.addNewChild(role: String?, concept: IConceptReference?): INode","description":"org.modelix.model.api.addNewChild","location":"model-api/org.modelix.model.api/add-new-child.html","searchKeys":["addNewChild","fun INode.addNewChild(role: String?, concept: IConceptReference?): INode","org.modelix.model.api.addNewChild"]},{"name":"fun INode.addNewChild(role: String?, index: Int): INode","description":"org.modelix.model.api.addNewChild","location":"model-api/org.modelix.model.api/add-new-child.html","searchKeys":["addNewChild","fun INode.addNewChild(role: String?, index: Int): INode","org.modelix.model.api.addNewChild"]},{"name":"fun INode.asData(): NodeData","description":"org.modelix.model.data.asData","location":"model-api/org.modelix.model.data/as-data.html","searchKeys":["asData","fun INode.asData(): NodeData","org.modelix.model.data.asData"]},{"name":"fun INode.getAncestors(includeSelf: Boolean = false): Sequence<INode>","description":"org.modelix.model.api.getAncestors","location":"model-api/org.modelix.model.api/get-ancestors.html","searchKeys":["getAncestors","fun INode.getAncestors(includeSelf: Boolean = false): Sequence<INode>","org.modelix.model.api.getAncestors"]},{"name":"fun INode.getChildren(link: IChildLink): Iterable<INode>","description":"org.modelix.model.api.getChildren","location":"model-api/org.modelix.model.api/get-children.html","searchKeys":["getChildren","fun INode.getChildren(link: IChildLink): Iterable<INode>","org.modelix.model.api.getChildren"]},{"name":"fun INode.getConcept(): IConcept?","description":"org.modelix.model.api.getConcept","location":"model-api/org.modelix.model.api/get-concept.html","searchKeys":["getConcept","fun INode.getConcept(): IConcept?","org.modelix.model.api.getConcept"]},{"name":"fun INode.getContainmentLink(): IChildLink?","description":"org.modelix.model.api.getContainmentLink","location":"model-api/org.modelix.model.api/get-containment-link.html","searchKeys":["getContainmentLink","fun INode.getContainmentLink(): IChildLink?","org.modelix.model.api.getContainmentLink"]},{"name":"fun INode.getDescendants(includeSelf: Boolean): Sequence<INode>","description":"org.modelix.model.api.getDescendants","location":"model-api/org.modelix.model.api/get-descendants.html","searchKeys":["getDescendants","fun INode.getDescendants(includeSelf: Boolean): Sequence<INode>","org.modelix.model.api.getDescendants"]},{"name":"fun INode.getPropertyValue(property: IProperty): String?","description":"org.modelix.model.api.getPropertyValue","location":"model-api/org.modelix.model.api/get-property-value.html","searchKeys":["getPropertyValue","fun INode.getPropertyValue(property: IProperty): String?","org.modelix.model.api.getPropertyValue"]},{"name":"fun INode.getReferenceTarget(link: IReferenceLink): INode?","description":"org.modelix.model.api.getReferenceTarget","location":"model-api/org.modelix.model.api/get-reference-target.html","searchKeys":["getReferenceTarget","fun INode.getReferenceTarget(link: IReferenceLink): INode?","org.modelix.model.api.getReferenceTarget"]},{"name":"fun INode.getReferenceTargetRef(link: IReferenceLink): INodeReference?","description":"org.modelix.model.api.getReferenceTargetRef","location":"model-api/org.modelix.model.api/get-reference-target-ref.html","searchKeys":["getReferenceTargetRef","fun INode.getReferenceTargetRef(link: IReferenceLink): INodeReference?","org.modelix.model.api.getReferenceTargetRef"]},{"name":"fun INode.getResolvedConcept(): IConcept?","description":"org.modelix.model.api.getResolvedConcept","location":"model-api/org.modelix.model.api/get-resolved-concept.html","searchKeys":["getResolvedConcept","fun INode.getResolvedConcept(): IConcept?","org.modelix.model.api.getResolvedConcept"]},{"name":"fun INode.getResolvedReferenceTarget(role: String): INode?","description":"org.modelix.model.api.getResolvedReferenceTarget","location":"model-api/org.modelix.model.api/get-resolved-reference-target.html","searchKeys":["getResolvedReferenceTarget","fun INode.getResolvedReferenceTarget(role: String): INode?","org.modelix.model.api.getResolvedReferenceTarget"]},{"name":"fun INode.getRoot(): INode","description":"org.modelix.model.api.getRoot","location":"model-api/org.modelix.model.api/get-root.html","searchKeys":["getRoot","fun INode.getRoot(): INode","org.modelix.model.api.getRoot"]},{"name":"fun INode.index(): Int","description":"org.modelix.model.api.index","location":"model-api/org.modelix.model.api/--index--.html","searchKeys":["index","fun INode.index(): Int","org.modelix.model.api.index"]},{"name":"fun INode.isInstanceOf(superConcept: IConcept?): Boolean","description":"org.modelix.model.api.isInstanceOf","location":"model-api/org.modelix.model.api/is-instance-of.html","searchKeys":["isInstanceOf","fun INode.isInstanceOf(superConcept: IConcept?): Boolean","org.modelix.model.api.isInstanceOf"]},{"name":"fun INode.isInstanceOfSafe(superConcept: IConcept): Boolean","description":"org.modelix.model.api.isInstanceOfSafe","location":"model-api/org.modelix.model.api/is-instance-of-safe.html","searchKeys":["isInstanceOfSafe","fun INode.isInstanceOfSafe(superConcept: IConcept): Boolean","org.modelix.model.api.isInstanceOfSafe"]},{"name":"fun INode.moveChild(role: IChildLink, index: Int, child: INode)","description":"org.modelix.model.api.moveChild","location":"model-api/org.modelix.model.api/move-child.html","searchKeys":["moveChild","fun INode.moveChild(role: IChildLink, index: Int, child: INode)","org.modelix.model.api.moveChild"]},{"name":"fun INode.remove()","description":"org.modelix.model.api.remove","location":"model-api/org.modelix.model.api/remove.html","searchKeys":["remove","fun INode.remove()","org.modelix.model.api.remove"]},{"name":"fun INode.resolveChildLink(role: String): IChildLink","description":"org.modelix.model.api.resolveChildLink","location":"model-api/org.modelix.model.api/resolve-child-link.html","searchKeys":["resolveChildLink","fun INode.resolveChildLink(role: String): IChildLink","org.modelix.model.api.resolveChildLink"]},{"name":"fun INode.resolveChildLinkOrFallback(role: String?): IChildLink","description":"org.modelix.model.api.resolveChildLinkOrFallback","location":"model-api/org.modelix.model.api/resolve-child-link-or-fallback.html","searchKeys":["resolveChildLinkOrFallback","fun INode.resolveChildLinkOrFallback(role: String?): IChildLink","org.modelix.model.api.resolveChildLinkOrFallback"]},{"name":"fun INode.resolveProperty(role: String): IProperty","description":"org.modelix.model.api.resolveProperty","location":"model-api/org.modelix.model.api/resolve-property.html","searchKeys":["resolveProperty","fun INode.resolveProperty(role: String): IProperty","org.modelix.model.api.resolveProperty"]},{"name":"fun INode.resolvePropertyOrFallback(role: String): IProperty","description":"org.modelix.model.api.resolvePropertyOrFallback","location":"model-api/org.modelix.model.api/resolve-property-or-fallback.html","searchKeys":["resolvePropertyOrFallback","fun INode.resolvePropertyOrFallback(role: String): IProperty","org.modelix.model.api.resolvePropertyOrFallback"]},{"name":"fun INode.resolveReferenceLink(role: String): IReferenceLink","description":"org.modelix.model.api.resolveReferenceLink","location":"model-api/org.modelix.model.api/resolve-reference-link.html","searchKeys":["resolveReferenceLink","fun INode.resolveReferenceLink(role: String): IReferenceLink","org.modelix.model.api.resolveReferenceLink"]},{"name":"fun INode.resolveReferenceLinkOrFallback(role: String): IReferenceLink","description":"org.modelix.model.api.resolveReferenceLinkOrFallback","location":"model-api/org.modelix.model.api/resolve-reference-link-or-fallback.html","searchKeys":["resolveReferenceLinkOrFallback","fun INode.resolveReferenceLinkOrFallback(role: String): IReferenceLink","org.modelix.model.api.resolveReferenceLinkOrFallback"]},{"name":"fun INode.setPropertyValue(property: IProperty, value: String?)","description":"org.modelix.model.api.setPropertyValue","location":"model-api/org.modelix.model.api/set-property-value.html","searchKeys":["setPropertyValue","fun INode.setPropertyValue(property: IProperty, value: String?)","org.modelix.model.api.setPropertyValue"]},{"name":"fun INode.setReferenceTarget(link: IReferenceLink, target: INode?)","description":"org.modelix.model.api.setReferenceTarget","location":"model-api/org.modelix.model.api/set-reference-target.html","searchKeys":["setReferenceTarget","fun INode.setReferenceTarget(link: IReferenceLink, target: INode?)","org.modelix.model.api.setReferenceTarget"]},{"name":"fun INode.setReferenceTarget(link: IReferenceLink, target: INodeReference?)","description":"org.modelix.model.api.setReferenceTarget","location":"model-api/org.modelix.model.api/set-reference-target.html","searchKeys":["setReferenceTarget","fun INode.setReferenceTarget(link: IReferenceLink, target: INodeReference?)","org.modelix.model.api.setReferenceTarget"]},{"name":"fun INode.tryGetConcept(): IConcept?","description":"org.modelix.model.api.tryGetConcept","location":"model-api/org.modelix.model.api/try-get-concept.html","searchKeys":["tryGetConcept","fun INode.tryGetConcept(): IConcept?","org.modelix.model.api.tryGetConcept"]},{"name":"fun INode.tryResolveChildLink(role: String): IChildLink?","description":"org.modelix.model.api.tryResolveChildLink","location":"model-api/org.modelix.model.api/try-resolve-child-link.html","searchKeys":["tryResolveChildLink","fun INode.tryResolveChildLink(role: String): IChildLink?","org.modelix.model.api.tryResolveChildLink"]},{"name":"fun INode.tryResolveProperty(role: String): IProperty?","description":"org.modelix.model.api.tryResolveProperty","location":"model-api/org.modelix.model.api/try-resolve-property.html","searchKeys":["tryResolveProperty","fun INode.tryResolveProperty(role: String): IProperty?","org.modelix.model.api.tryResolveProperty"]},{"name":"fun INode.tryResolveReferenceLink(role: String): IReferenceLink?","description":"org.modelix.model.api.tryResolveReferenceLink","location":"model-api/org.modelix.model.api/try-resolve-reference-link.html","searchKeys":["tryResolveReferenceLink","fun INode.tryResolveReferenceLink(role: String): IReferenceLink?","org.modelix.model.api.tryResolveReferenceLink"]},{"name":"fun INode.usesRoleIds(): Boolean","description":"org.modelix.model.api.usesRoleIds","location":"model-api/org.modelix.model.api/uses-role-ids.html","searchKeys":["usesRoleIds","fun INode.usesRoleIds(): Boolean","org.modelix.model.api.usesRoleIds"]},{"name":"fun INode?.getAncestor(concept: IConcept?, includeSelf: Boolean): INode?","description":"org.modelix.model.api.getAncestor","location":"model-api/org.modelix.model.api/get-ancestor.html","searchKeys":["getAncestor","fun INode?.getAncestor(concept: IConcept?, includeSelf: Boolean): INode?","org.modelix.model.api.getAncestor"]},{"name":"fun INodeReference.resolveIn(scope: INodeResolutionScope): INode?","description":"org.modelix.model.api.resolveIn","location":"model-api/org.modelix.model.api/resolve-in.html","searchKeys":["resolveIn","fun INodeReference.resolveIn(scope: INodeResolutionScope): INode?","org.modelix.model.api.resolveIn"]},{"name":"fun INodeReference.resolveInCurrentContext(): INode?","description":"org.modelix.model.api.resolveInCurrentContext","location":"model-api/org.modelix.model.api/resolve-in-current-context.html","searchKeys":["resolveInCurrentContext","fun INodeReference.resolveInCurrentContext(): INode?","org.modelix.model.api.resolveInCurrentContext"]},{"name":"fun INodeReference.serialize(): String","description":"org.modelix.model.api.serialize","location":"model-api/org.modelix.model.api/serialize.html","searchKeys":["serialize","fun INodeReference.serialize(): String","org.modelix.model.api.serialize"]},{"name":"fun IRole.key(): String","description":"org.modelix.model.api.key","location":"model-api/org.modelix.model.api/key.html","searchKeys":["key","fun IRole.key(): String","org.modelix.model.api.key"]},{"name":"fun IRole.key(node: INode): String","description":"org.modelix.model.api.key","location":"model-api/org.modelix.model.api/key.html","searchKeys":["key","fun IRole.key(node: INode): String","org.modelix.model.api.key"]},{"name":"fun IRole.key(t: ITransaction): String","description":"org.modelix.model.api.key","location":"model-api/org.modelix.model.api/key.html","searchKeys":["key","fun IRole.key(t: ITransaction): String","org.modelix.model.api.key"]},{"name":"fun IRole.key(tree: ITree): String","description":"org.modelix.model.api.key","location":"model-api/org.modelix.model.api/key.html","searchKeys":["key","fun IRole.key(tree: ITree): String","org.modelix.model.api.key"]},{"name":"fun ModelData.nodeUID(node: NodeData): String","description":"org.modelix.model.data.nodeUID","location":"model-api/org.modelix.model.data/node-u-i-d.html","searchKeys":["nodeUID","fun ModelData.nodeUID(node: NodeData): String","org.modelix.model.data.nodeUID"]},{"name":"fun NodeData.uid(model: ModelData): String","description":"org.modelix.model.data.uid","location":"model-api/org.modelix.model.data/uid.html","searchKeys":["uid","fun NodeData.uid(model: ModelData): String","org.modelix.model.data.uid"]},{"name":"fun addChildLink(l: SimpleChildLink): SimpleConcept","description":"org.modelix.model.api.SimpleConcept.addChildLink","location":"model-api/org.modelix.model.api/-simple-concept/add-child-link.html","searchKeys":["addChildLink","fun addChildLink(l: SimpleChildLink): SimpleConcept","org.modelix.model.api.SimpleConcept.addChildLink"]},{"name":"fun addConcept(concept: SimpleConcept)","description":"org.modelix.model.api.SimpleLanguage.addConcept","location":"model-api/org.modelix.model.api/-simple-language/add-concept.html","searchKeys":["addConcept","fun addConcept(concept: SimpleConcept)","org.modelix.model.api.SimpleLanguage.addConcept"]},{"name":"fun addOperationOnly(): RandomModelChangeGenerator","description":"org.modelix.model.test.RandomModelChangeGenerator.addOperationOnly","location":"model-api/org.modelix.model.test/-random-model-change-generator/add-operation-only.html","searchKeys":["addOperationOnly","fun addOperationOnly(): RandomModelChangeGenerator","org.modelix.model.test.RandomModelChangeGenerator.addOperationOnly"]},{"name":"fun addProperty(p: SimpleProperty): SimpleConcept","description":"org.modelix.model.api.SimpleConcept.addProperty","location":"model-api/org.modelix.model.api/-simple-concept/add-property.html","searchKeys":["addProperty","fun addProperty(p: SimpleProperty): SimpleConcept","org.modelix.model.api.SimpleConcept.addProperty"]},{"name":"fun addReferenceLink(l: SimpleReferenceLink): SimpleConcept","description":"org.modelix.model.api.SimpleConcept.addReferenceLink","location":"model-api/org.modelix.model.api/-simple-concept/add-reference-link.html","searchKeys":["addReferenceLink","fun addReferenceLink(l: SimpleReferenceLink): SimpleConcept","org.modelix.model.api.SimpleConcept.addReferenceLink"]},{"name":"fun applyRandomChange()","description":"org.modelix.model.test.RandomModelChangeGenerator.applyRandomChange","location":"model-api/org.modelix.model.test/-random-model-change-generator/apply-random-change.html","searchKeys":["applyRandomChange","fun applyRandomChange()","org.modelix.model.test.RandomModelChangeGenerator.applyRandomChange"]},{"name":"fun close()","description":"org.modelix.model.api.WriteTransaction.close","location":"model-api/org.modelix.model.api/-write-transaction/close.html","searchKeys":["close","fun close()","org.modelix.model.api.WriteTransaction.close"]},{"name":"fun containsNode(nodeId: Long): Boolean","description":"org.modelix.model.area.PArea.containsNode","location":"model-api/org.modelix.model.area/-p-area/contains-node.html","searchKeys":["containsNode","fun containsNode(nodeId: Long): Boolean","org.modelix.model.area.PArea.containsNode"]},{"name":"fun deepUnwrapNode(node: INode): INode","description":"org.modelix.model.api.deepUnwrapNode","location":"model-api/org.modelix.model.api/deep-unwrap-node.html","searchKeys":["deepUnwrapNode","fun deepUnwrapNode(node: INode): INode","org.modelix.model.api.deepUnwrapNode"]},{"name":"fun deserialize(serialized: String): INodeReference","description":"org.modelix.model.api.INodeReferenceSerializer.Companion.deserialize","location":"model-api/org.modelix.model.api/-i-node-reference-serializer/-companion/deserialize.html","searchKeys":["deserialize","fun deserialize(serialized: String): INodeReference","org.modelix.model.api.INodeReferenceSerializer.Companion.deserialize"]},{"name":"fun deserialize(serialized: String): PNodeReference","description":"org.modelix.model.api.PNodeReference.Companion.deserialize","location":"model-api/org.modelix.model.api/-p-node-reference/-companion/deserialize.html","searchKeys":["deserialize","fun deserialize(serialized: String): PNodeReference","org.modelix.model.api.PNodeReference.Companion.deserialize"]},{"name":"fun deserialize(serialized: String?): ConceptReference?","description":"org.modelix.model.api.IConceptReference.Companion.deserialize","location":"model-api/org.modelix.model.api/-i-concept-reference/-companion/deserialize.html","searchKeys":["deserialize","fun deserialize(serialized: String?): ConceptReference?","org.modelix.model.api.IConceptReference.Companion.deserialize"]},{"name":"fun ensureRegistered()","description":"org.modelix.model.api.PNodeReferenceSerializer.ensureRegistered","location":"model-api/org.modelix.model.api/-p-node-reference-serializer/ensure-registered.html","searchKeys":["ensureRegistered","fun ensureRegistered()","org.modelix.model.api.PNodeReferenceSerializer.ensureRegistered"]},{"name":"fun flatten(): List<IArea>","description":"org.modelix.model.area.CompositeArea.flatten","location":"model-api/org.modelix.model.area/-composite-area/flatten.html","searchKeys":["flatten","fun flatten(): List<IArea>","org.modelix.model.area.CompositeArea.flatten"]},{"name":"fun fromJson(json: String): LanguageData","description":"org.modelix.model.data.LanguageData.Companion.fromJson","location":"model-api/org.modelix.model.data/-language-data/-companion/from-json.html","searchKeys":["fromJson","fun fromJson(json: String): LanguageData","org.modelix.model.data.LanguageData.Companion.fromJson"]},{"name":"fun fromJson(serialized: String): ModelData","description":"org.modelix.model.data.ModelData.Companion.fromJson","location":"model-api/org.modelix.model.data/-model-data/-companion/from-json.html","searchKeys":["fromJson","fun fromJson(serialized: String): ModelData","org.modelix.model.data.ModelData.Companion.fromJson"]},{"name":"fun fromName(name: String): IChildLink","description":"org.modelix.model.api.IChildLink.Companion.fromName","location":"model-api/org.modelix.model.api/-i-child-link/-companion/from-name.html","searchKeys":["fromName","fun fromName(name: String): IChildLink","org.modelix.model.api.IChildLink.Companion.fromName"]},{"name":"fun fromName(name: String): IProperty","description":"org.modelix.model.api.IProperty.Companion.fromName","location":"model-api/org.modelix.model.api/-i-property/-companion/from-name.html","searchKeys":["fromName","fun fromName(name: String): IProperty","org.modelix.model.api.IProperty.Companion.fromName"]},{"name":"fun fromName(name: String): IReferenceLink","description":"org.modelix.model.api.IReferenceLink.Companion.fromName","location":"model-api/org.modelix.model.api/-i-reference-link/-companion/from-name.html","searchKeys":["fromName","fun fromName(name: String): IReferenceLink","org.modelix.model.api.IReferenceLink.Companion.fromName"]},{"name":"fun getAllLanguages(): List<SimpleLanguage>","description":"org.modelix.model.api.BuiltinLanguages.getAllLanguages","location":"model-api/org.modelix.model.api/-builtin-languages/get-all-languages.html","searchKeys":["getAllLanguages","fun getAllLanguages(): List<SimpleLanguage>","org.modelix.model.api.BuiltinLanguages.getAllLanguages"]},{"name":"fun getArea(): IArea?","description":"org.modelix.model.area.ContextArea.getArea","location":"model-api/org.modelix.model.area/-context-area/get-area.html","searchKeys":["getArea","fun getArea(): IArea?","org.modelix.model.area.ContextArea.getArea"]},{"name":"fun getAreas(): List<IArea>","description":"org.modelix.model.area.CompositeArea.getAreas","location":"model-api/org.modelix.model.area/-composite-area/get-areas.html","searchKeys":["getAreas","fun getAreas(): List<IArea>","org.modelix.model.area.CompositeArea.getAreas"]},{"name":"fun getCurrentScope(): INodeResolutionScope","description":"org.modelix.model.api.INodeResolutionScope.Companion.getCurrentScope","location":"model-api/org.modelix.model.api/-i-node-resolution-scope/-companion/get-current-scope.html","searchKeys":["getCurrentScope","fun getCurrentScope(): INodeResolutionScope","org.modelix.model.api.INodeResolutionScope.Companion.getCurrentScope"]},{"name":"fun getCurrentScopes(): List<INodeResolutionScope>","description":"org.modelix.model.api.INodeResolutionScope.Companion.getCurrentScopes","location":"model-api/org.modelix.model.api/-i-node-resolution-scope/-companion/get-current-scopes.html","searchKeys":["getCurrentScopes","fun getCurrentScopes(): List<INodeResolutionScope>","org.modelix.model.api.INodeResolutionScope.Companion.getCurrentScopes"]},{"name":"fun getDirectSubConcepts(superConcept: IConcept): Set<IConcept>","description":"org.modelix.model.api.ILanguageRepository.Companion.getDirectSubConcepts","location":"model-api/org.modelix.model.api/-i-language-repository/-companion/get-direct-sub-concepts.html","searchKeys":["getDirectSubConcepts","fun getDirectSubConcepts(superConcept: IConcept): Set<IConcept>","org.modelix.model.api.ILanguageRepository.Companion.getDirectSubConcepts"]},{"name":"fun getHiddenNode(mountedAreaRoot: INode): INode?","description":"org.modelix.model.area.AreaWithMounts.getHiddenNode","location":"model-api/org.modelix.model.area/-area-with-mounts/get-hidden-node.html","searchKeys":["getHiddenNode","fun getHiddenNode(mountedAreaRoot: INode): INode?","org.modelix.model.area.AreaWithMounts.getHiddenNode"]},{"name":"fun getKey(role: IRole): String","description":"org.modelix.model.api.RoleAccessContext.getKey","location":"model-api/org.modelix.model.api/-role-access-context/get-key.html","searchKeys":["getKey","fun getKey(role: IRole): String","org.modelix.model.api.RoleAccessContext.getKey"]},{"name":"fun getListeners(area: IArea): List<AreaListenerRegistry.Entry>","description":"org.modelix.model.area.AreaListenerRegistry.getListeners","location":"model-api/org.modelix.model.area/-area-listener-registry/get-listeners.html","searchKeys":["getListeners","fun getListeners(area: IArea): List<AreaListenerRegistry.Entry>","org.modelix.model.area.AreaListenerRegistry.getListeners"]},{"name":"fun getMountedArea(hiddenRoot: INode): IArea?","description":"org.modelix.model.area.AreaWithMounts.getMountedArea","location":"model-api/org.modelix.model.area/-area-with-mounts/get-mounted-area.html","searchKeys":["getMountedArea","fun getMountedArea(hiddenRoot: INode): IArea?","org.modelix.model.area.AreaWithMounts.getMountedArea"]},{"name":"fun getMountedAreaRoot(hiddenRoot: INode): INode?","description":"org.modelix.model.area.AreaWithMounts.getMountedAreaRoot","location":"model-api/org.modelix.model.area/-area-with-mounts/get-mounted-area-root.html","searchKeys":["getMountedAreaRoot","fun getMountedAreaRoot(hiddenRoot: INode): INode?","org.modelix.model.area.AreaWithMounts.getMountedAreaRoot"]},{"name":"fun growingOperationsOnly(): RandomModelChangeGenerator","description":"org.modelix.model.test.RandomModelChangeGenerator.growingOperationsOnly","location":"model-api/org.modelix.model.test/-random-model-change-generator/growing-operations-only.html","searchKeys":["growingOperationsOnly","fun growingOperationsOnly(): RandomModelChangeGenerator","org.modelix.model.test.RandomModelChangeGenerator.growingOperationsOnly"]},{"name":"fun isJsNode(node: Any?): Boolean","description":"org.modelix.model.api.JSNodeConverter.isJsNode","location":"model-api/org.modelix.model.api/-j-s-node-converter/is-js-node.html","searchKeys":["isJsNode","fun isJsNode(node: Any?): Boolean","org.modelix.model.api.JSNodeConverter.isJsNode"]},{"name":"fun isUsingRoleIds(): Boolean","description":"org.modelix.model.api.RoleAccessContext.isUsingRoleIds","location":"model-api/org.modelix.model.api/-role-access-context/is-using-role-ids.html","searchKeys":["isUsingRoleIds","fun isUsingRoleIds(): Boolean","org.modelix.model.api.RoleAccessContext.isUsingRoleIds"]},{"name":"fun isVisible(node: INode): Boolean","description":"org.modelix.model.area.AreaWithMounts.isVisible","location":"model-api/org.modelix.model.area/-area-with-mounts/is-visible.html","searchKeys":["isVisible","fun isVisible(node: INode): Boolean","org.modelix.model.area.AreaWithMounts.isVisible"]},{"name":"fun load(branch: IBranch)","description":"org.modelix.model.data.ModelData.load","location":"model-api/org.modelix.model.data/-model-data/load.html","searchKeys":["load","fun load(branch: IBranch)","org.modelix.model.data.ModelData.load"]},{"name":"fun nodeFromJs(node: Any?): Any?","description":"org.modelix.model.api.JSNodeConverter.nodeFromJs","location":"model-api/org.modelix.model.api/-j-s-node-converter/node-from-js.html","searchKeys":["nodeFromJs","fun nodeFromJs(node: Any?): Any?","org.modelix.model.api.JSNodeConverter.nodeFromJs"]},{"name":"fun nodeToJs(node: INode?): Any?","description":"org.modelix.model.api.JSNodeConverter.nodeToJs","location":"model-api/org.modelix.model.api/-j-s-node-converter/node-to-js.html","searchKeys":["nodeToJs","fun nodeToJs(node: INode?): Any?","org.modelix.model.api.JSNodeConverter.nodeToJs"]},{"name":"fun register()","description":"org.modelix.model.api.SimpleLanguage.register","location":"model-api/org.modelix.model.api/-simple-language/register.html","searchKeys":["register","fun register()","org.modelix.model.api.SimpleLanguage.register"]},{"name":"fun register(repository: ILanguageRepository)","description":"org.modelix.model.api.ILanguageRepository.Companion.register","location":"model-api/org.modelix.model.api/-i-language-repository/-companion/register.html","searchKeys":["register","fun register(repository: ILanguageRepository)","org.modelix.model.api.ILanguageRepository.Companion.register"]},{"name":"fun register(serializer: INodeReferenceSerializer)","description":"org.modelix.model.api.INodeReferenceSerializer.Companion.register","location":"model-api/org.modelix.model.api/-i-node-reference-serializer/-companion/register.html","searchKeys":["register","fun register(serializer: INodeReferenceSerializer)","org.modelix.model.api.INodeReferenceSerializer.Companion.register"]},{"name":"fun register(serializer: INodeReferenceSerializer, replace: Boolean)","description":"org.modelix.model.api.INodeReferenceSerializer.Companion.register","location":"model-api/org.modelix.model.api/-i-node-reference-serializer/-companion/register.html","searchKeys":["register","fun register(serializer: INodeReferenceSerializer, replace: Boolean)","org.modelix.model.api.INodeReferenceSerializer.Companion.register"]},{"name":"fun registerConcept(concept: IConcept)","description":"org.modelix.model.api.DefaultLanguageRepository.registerConcept","location":"model-api/org.modelix.model.api/-default-language-repository/register-concept.html","searchKeys":["registerConcept","fun registerConcept(concept: IConcept)","org.modelix.model.api.DefaultLanguageRepository.registerConcept"]},{"name":"fun registerDeserializer(key: Any, deserializer: (String) -> IConceptReference?)","description":"org.modelix.model.api.IConceptReference.Companion.registerDeserializer","location":"model-api/org.modelix.model.api/-i-concept-reference/-companion/register-deserializer.html","searchKeys":["registerDeserializer","fun registerDeserializer(key: Any, deserializer: (String) -> IConceptReference?)","org.modelix.model.api.IConceptReference.Companion.registerDeserializer"]},{"name":"fun registerLanguage(language: ILanguage)","description":"org.modelix.model.api.DefaultLanguageRepository.registerLanguage","location":"model-api/org.modelix.model.api/-default-language-repository/register-language.html","searchKeys":["registerLanguage","fun registerLanguage(language: ILanguage)","org.modelix.model.api.DefaultLanguageRepository.registerLanguage"]},{"name":"fun registerListener(area: IArea, listener: IAreaListener)","description":"org.modelix.model.area.AreaListenerRegistry.registerListener","location":"model-api/org.modelix.model.area/-area-listener-registry/register-listener.html","searchKeys":["registerListener","fun registerListener(area: IArea, listener: IAreaListener)","org.modelix.model.area.AreaListenerRegistry.registerListener"]},{"name":"fun resolveConcept(ref: IConceptReference): IConcept","description":"org.modelix.model.api.ILanguageRepository.Companion.resolveConcept","location":"model-api/org.modelix.model.api/-i-language-repository/-companion/resolve-concept.html","searchKeys":["resolveConcept","fun resolveConcept(ref: IConceptReference): IConcept","org.modelix.model.api.ILanguageRepository.Companion.resolveConcept"]},{"name":"fun serialize(ref: INodeReference): String","description":"org.modelix.model.api.INodeReferenceSerializer.Companion.serialize","location":"model-api/org.modelix.model.api/-i-node-reference-serializer/-companion/serialize.html","searchKeys":["serialize","fun serialize(ref: INodeReference): String","org.modelix.model.api.INodeReferenceSerializer.Companion.serialize"]},{"name":"fun toCompactJson(): String","description":"org.modelix.model.data.LanguageData.toCompactJson","location":"model-api/org.modelix.model.data/-language-data/to-compact-json.html","searchKeys":["toCompactJson","fun toCompactJson(): String","org.modelix.model.data.LanguageData.toCompactJson"]},{"name":"fun toCompactJson(): String","description":"org.modelix.model.data.ModelData.toCompactJson","location":"model-api/org.modelix.model.data/-model-data/to-compact-json.html","searchKeys":["toCompactJson","fun toCompactJson(): String","org.modelix.model.data.ModelData.toCompactJson"]},{"name":"fun toGlobal(branchId: String): PNodeReference","description":"org.modelix.model.api.LocalPNodeReference.toGlobal","location":"model-api/org.modelix.model.api/-local-p-node-reference/to-global.html","searchKeys":["toGlobal","fun toGlobal(branchId: String): PNodeReference","org.modelix.model.api.LocalPNodeReference.toGlobal"]},{"name":"fun toINode(node: Any): INode","description":"org.modelix.model.api.JSNodeConverter.toINode","location":"model-api/org.modelix.model.api/-j-s-node-converter/to-i-node.html","searchKeys":["toINode","fun toINode(node: Any): INode","org.modelix.model.api.JSNodeConverter.toINode"]},{"name":"fun toJson(): String","description":"org.modelix.model.data.LanguageData.toJson","location":"model-api/org.modelix.model.data/-language-data/to-json.html","searchKeys":["toJson","fun toJson(): String","org.modelix.model.data.LanguageData.toJson"]},{"name":"fun toJson(): String","description":"org.modelix.model.data.ModelData.toJson","location":"model-api/org.modelix.model.data/-model-data/to-json.html","searchKeys":["toJson","fun toJson(): String","org.modelix.model.data.ModelData.toJson"]},{"name":"fun toLocal(): LocalPNodeReference","description":"org.modelix.model.api.PNodeReference.toLocal","location":"model-api/org.modelix.model.api/-p-node-reference/to-local.html","searchKeys":["toLocal","fun toLocal(): LocalPNodeReference","org.modelix.model.api.PNodeReference.toLocal"]},{"name":"fun translateEvent(event: IAreaChangeEvent): IAreaChangeEvent","description":"org.modelix.model.area.CompositeArea.ListenerWrapper.translateEvent","location":"model-api/org.modelix.model.area/-composite-area/-listener-wrapper/translate-event.html","searchKeys":["translateEvent","fun translateEvent(event: IAreaChangeEvent): IAreaChangeEvent","org.modelix.model.area.CompositeArea.ListenerWrapper.translateEvent"]},{"name":"fun tryDeserialize(serialized: String): INodeReference?","description":"org.modelix.model.api.INodeReferenceSerializer.Companion.tryDeserialize","location":"model-api/org.modelix.model.api/-i-node-reference-serializer/-companion/try-deserialize.html","searchKeys":["tryDeserialize","fun tryDeserialize(serialized: String): INodeReference?","org.modelix.model.api.INodeReferenceSerializer.Companion.tryDeserialize"]},{"name":"fun tryDeserialize(serialized: String): PNodeReference?","description":"org.modelix.model.api.PNodeReference.Companion.tryDeserialize","location":"model-api/org.modelix.model.api/-p-node-reference/-companion/try-deserialize.html","searchKeys":["tryDeserialize","fun tryDeserialize(serialized: String): PNodeReference?","org.modelix.model.api.PNodeReference.Companion.tryDeserialize"]},{"name":"fun tryResolveConcept(ref: IConceptReference): IConcept?","description":"org.modelix.model.api.ILanguageRepository.Companion.tryResolveConcept","location":"model-api/org.modelix.model.api/-i-language-repository/-companion/try-resolve-concept.html","searchKeys":["tryResolveConcept","fun tryResolveConcept(ref: IConceptReference): IConcept?","org.modelix.model.api.ILanguageRepository.Companion.tryResolveConcept"]},{"name":"fun unregister()","description":"org.modelix.model.api.SimpleLanguage.unregister","location":"model-api/org.modelix.model.api/-simple-language/unregister.html","searchKeys":["unregister","fun unregister()","org.modelix.model.api.SimpleLanguage.unregister"]},{"name":"fun unregister(repository: ILanguageRepository)","description":"org.modelix.model.api.ILanguageRepository.Companion.unregister","location":"model-api/org.modelix.model.api/-i-language-repository/-companion/unregister.html","searchKeys":["unregister","fun unregister(repository: ILanguageRepository)","org.modelix.model.api.ILanguageRepository.Companion.unregister"]},{"name":"fun unregister(serializer: INodeReferenceSerializer)","description":"org.modelix.model.api.INodeReferenceSerializer.Companion.unregister","location":"model-api/org.modelix.model.api/-i-node-reference-serializer/-companion/unregister.html","searchKeys":["unregister","fun unregister(serializer: INodeReferenceSerializer)","org.modelix.model.api.INodeReferenceSerializer.Companion.unregister"]},{"name":"fun unregisterArea(area: IArea)","description":"org.modelix.model.area.AreaListenerRegistry.unregisterArea","location":"model-api/org.modelix.model.area/-area-listener-registry/unregister-area.html","searchKeys":["unregisterArea","fun unregisterArea(area: IArea)","org.modelix.model.area.AreaListenerRegistry.unregisterArea"]},{"name":"fun unregisterLanguage(language: ILanguage)","description":"org.modelix.model.api.DefaultLanguageRepository.unregisterLanguage","location":"model-api/org.modelix.model.api/-default-language-repository/unregister-language.html","searchKeys":["unregisterLanguage","fun unregisterLanguage(language: ILanguage)","org.modelix.model.api.DefaultLanguageRepository.unregisterLanguage"]},{"name":"fun unregisterListener(area: IArea, listener: IAreaListener)","description":"org.modelix.model.area.AreaListenerRegistry.unregisterListener","location":"model-api/org.modelix.model.area/-area-listener-registry/unregister-listener.html","searchKeys":["unregisterListener","fun unregisterListener(area: IArea, listener: IAreaListener)","org.modelix.model.area.AreaListenerRegistry.unregisterListener"]},{"name":"fun unregisterSerializer(key: Any)","description":"org.modelix.model.api.IConceptReference.Companion.unregisterSerializer","location":"model-api/org.modelix.model.api/-i-concept-reference/-companion/unregister-serializer.html","searchKeys":["unregisterSerializer","fun unregisterSerializer(key: Any)","org.modelix.model.api.IConceptReference.Companion.unregisterSerializer"]},{"name":"fun unregisterWrappedListener(area: IArea, wrappedListener: IAreaListener)","description":"org.modelix.model.area.AreaListenerRegistry.unregisterWrappedListener","location":"model-api/org.modelix.model.area/-area-listener-registry/unregister-wrapped-listener.html","searchKeys":["unregisterWrappedListener","fun unregisterWrappedListener(area: IArea, wrappedListener: IAreaListener)","org.modelix.model.area.AreaListenerRegistry.unregisterWrappedListener"]},{"name":"fun unwrapNode(node: Any?): Any?","description":"org.modelix.model.api.JSNodeConverter.unwrapNode","location":"model-api/org.modelix.model.api/-j-s-node-converter/unwrap-node.html","searchKeys":["unwrapNode","fun unwrapNode(node: Any?): Any?","org.modelix.model.api.JSNodeConverter.unwrapNode"]},{"name":"fun unwrapNode(node: INode): INode","description":"org.modelix.model.area.AreaWithMounts.unwrapNode","location":"model-api/org.modelix.model.area/-area-with-mounts/unwrap-node.html","searchKeys":["unwrapNode","fun unwrapNode(node: INode): INode","org.modelix.model.area.AreaWithMounts.unwrapNode"]},{"name":"fun unwrapNode(node: INode): INode","description":"org.modelix.model.area.CompositeArea.unwrapNode","location":"model-api/org.modelix.model.area/-composite-area/unwrap-node.html","searchKeys":["unwrapNode","fun unwrapNode(node: INode): INode","org.modelix.model.area.CompositeArea.unwrapNode"]},{"name":"fun unwrapNodeRef(ref: INodeReference): INodeReference","description":"org.modelix.model.area.CompositeArea.unwrapNodeRef","location":"model-api/org.modelix.model.area/-composite-area/unwrap-node-ref.html","searchKeys":["unwrapNodeRef","fun unwrapNodeRef(ref: INodeReference): INodeReference","org.modelix.model.area.CompositeArea.unwrapNodeRef"]},{"name":"fun valueOf(value: String): Primitive","description":"org.modelix.model.data.Primitive.valueOf","location":"model-api/org.modelix.model.data/-primitive/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Primitive","org.modelix.model.data.Primitive.valueOf"]},{"name":"fun values(): Array<Primitive>","description":"org.modelix.model.data.Primitive.values","location":"model-api/org.modelix.model.data/-primitive/values.html","searchKeys":["values","fun values(): Array<Primitive>","org.modelix.model.data.Primitive.values"]},{"name":"fun withoutMove(): RandomModelChangeGenerator","description":"org.modelix.model.test.RandomModelChangeGenerator.withoutMove","location":"model-api/org.modelix.model.test/-random-model-change-generator/without-move.html","searchKeys":["withoutMove","fun withoutMove(): RandomModelChangeGenerator","org.modelix.model.test.RandomModelChangeGenerator.withoutMove"]},{"name":"fun wrap(id: Long, branch: IBranch): INode?","description":"org.modelix.model.api.PNodeAdapter.Companion.wrap","location":"model-api/org.modelix.model.api/-p-node-adapter/-companion/wrap.html","searchKeys":["wrap","fun wrap(id: Long, branch: IBranch): INode?","org.modelix.model.api.PNodeAdapter.Companion.wrap"]},{"name":"fun wrapNode(node: INode?): CompositeArea.NodeWrapper?","description":"org.modelix.model.area.CompositeArea.wrapNode","location":"model-api/org.modelix.model.area/-composite-area/wrap-node.html","searchKeys":["wrapNode","fun wrapNode(node: INode?): CompositeArea.NodeWrapper?","org.modelix.model.area.CompositeArea.wrapNode"]},{"name":"inline fun <K, V : Any> Iterable<K>.associateWithNotNull(valueSelector: (K) -> V?): Map<K, V>","description":"org.modelix.model.data.associateWithNotNull","location":"model-api/org.modelix.model.data/associate-with-not-null.html","searchKeys":["associateWithNotNull","inline fun <K, V : Any> Iterable<K>.associateWithNotNull(valueSelector: (K) -> V?): Map<K, V>","org.modelix.model.data.associateWithNotNull"]},{"name":"inner class ListenerWrapper(val wrappedListener: IAreaListener) : AreaListenerWrapper","description":"org.modelix.model.area.CompositeArea.ListenerWrapper","location":"model-api/org.modelix.model.area/-composite-area/-listener-wrapper/index.html","searchKeys":["ListenerWrapper","inner class ListenerWrapper(val wrappedListener: IAreaListener) : AreaListenerWrapper","org.modelix.model.area.CompositeArea.ListenerWrapper"]},{"name":"inner class NodeWrapper(val node: INode) : INode, INodeWrapper","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/index.html","searchKeys":["NodeWrapper","inner class NodeWrapper(val node: INode) : INode, INodeWrapper","org.modelix.model.area.AreaWithMounts.NodeWrapper"]},{"name":"inner class NodeWrapper(val node: INode) : INode, INodeWrapper","description":"org.modelix.model.area.CompositeArea.NodeWrapper","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/index.html","searchKeys":["NodeWrapper","inner class NodeWrapper(val node: INode) : INode, INodeWrapper","org.modelix.model.area.CompositeArea.NodeWrapper"]},{"name":"inner class Root : INode","description":"org.modelix.model.area.CompositeArea.Root","location":"model-api/org.modelix.model.area/-composite-area/-root/index.html","searchKeys":["Root","inner class Root : INode","org.modelix.model.area.CompositeArea.Root"]},{"name":"interface IArea : INodeResolutionScope","description":"org.modelix.model.area.IArea","location":"model-api/org.modelix.model.area/-i-area/index.html","searchKeys":["IArea","interface IArea : INodeResolutionScope","org.modelix.model.area.IArea"]},{"name":"interface IAreaChangeEvent","description":"org.modelix.model.area.IAreaChangeEvent","location":"model-api/org.modelix.model.area/-i-area-change-event/index.html","searchKeys":["IAreaChangeEvent","interface IAreaChangeEvent","org.modelix.model.area.IAreaChangeEvent"]},{"name":"interface IAreaChangeList","description":"org.modelix.model.area.IAreaChangeList","location":"model-api/org.modelix.model.area/-i-area-change-list/index.html","searchKeys":["IAreaChangeList","interface IAreaChangeList","org.modelix.model.area.IAreaChangeList"]},{"name":"interface IAreaListener","description":"org.modelix.model.area.IAreaListener","location":"model-api/org.modelix.model.area/-i-area-listener/index.html","searchKeys":["IAreaListener","interface IAreaListener","org.modelix.model.area.IAreaListener"]},{"name":"interface IAreaReference","description":"org.modelix.model.area.IAreaReference","location":"model-api/org.modelix.model.area/-i-area-reference/index.html","searchKeys":["IAreaReference","interface IAreaReference","org.modelix.model.area.IAreaReference"]},{"name":"interface IBranch","description":"org.modelix.model.api.IBranch","location":"model-api/org.modelix.model.api/-i-branch/index.html","searchKeys":["IBranch","interface IBranch","org.modelix.model.api.IBranch"]},{"name":"interface IBranchListener","description":"org.modelix.model.api.IBranchListener","location":"model-api/org.modelix.model.api/-i-branch-listener/index.html","searchKeys":["IBranchListener","interface IBranchListener","org.modelix.model.api.IBranchListener"]},{"name":"interface IBranchWrapper : IBranch","description":"org.modelix.model.api.IBranchWrapper","location":"model-api/org.modelix.model.api/-i-branch-wrapper/index.html","searchKeys":["IBranchWrapper","interface IBranchWrapper : IBranch","org.modelix.model.api.IBranchWrapper"]},{"name":"interface IChildLink : ILink","description":"org.modelix.model.api.IChildLink","location":"model-api/org.modelix.model.api/-i-child-link/index.html","searchKeys":["IChildLink","interface IChildLink : ILink","org.modelix.model.api.IChildLink"]},{"name":"interface IConcept","description":"org.modelix.model.api.IConcept","location":"model-api/org.modelix.model.api/-i-concept/index.html","searchKeys":["IConcept","interface IConcept","org.modelix.model.api.IConcept"]},{"name":"interface IConceptFeatureData","description":"org.modelix.model.data.IConceptFeatureData","location":"model-api/org.modelix.model.data/-i-concept-feature-data/index.html","searchKeys":["IConceptFeatureData","interface IConceptFeatureData","org.modelix.model.data.IConceptFeatureData"]},{"name":"interface IConceptReference","description":"org.modelix.model.api.IConceptReference","location":"model-api/org.modelix.model.api/-i-concept-reference/index.html","searchKeys":["IConceptReference","interface IConceptReference","org.modelix.model.api.IConceptReference"]},{"name":"interface IDeprecatable","description":"org.modelix.model.data.IDeprecatable","location":"model-api/org.modelix.model.data/-i-deprecatable/index.html","searchKeys":["IDeprecatable","interface IDeprecatable","org.modelix.model.data.IDeprecatable"]},{"name":"interface IDeprecatedNodeDefaults : INode","description":"org.modelix.model.api.IDeprecatedNodeDefaults","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/index.html","searchKeys":["IDeprecatedNodeDefaults","interface IDeprecatedNodeDefaults : INode","org.modelix.model.api.IDeprecatedNodeDefaults"]},{"name":"interface IIdGenerator","description":"org.modelix.model.api.IIdGenerator","location":"model-api/org.modelix.model.api/-i-id-generator/index.html","searchKeys":["IIdGenerator","interface IIdGenerator","org.modelix.model.api.IIdGenerator"]},{"name":"interface ILanguage","description":"org.modelix.model.api.ILanguage","location":"model-api/org.modelix.model.api/-i-language/index.html","searchKeys":["ILanguage","interface ILanguage","org.modelix.model.api.ILanguage"]},{"name":"interface ILanguageRepository","description":"org.modelix.model.api.ILanguageRepository","location":"model-api/org.modelix.model.api/-i-language-repository/index.html","searchKeys":["ILanguageRepository","interface ILanguageRepository","org.modelix.model.api.ILanguageRepository"]},{"name":"interface ILink : IRole","description":"org.modelix.model.api.ILink","location":"model-api/org.modelix.model.api/-i-link/index.html","searchKeys":["ILink","interface ILink : IRole","org.modelix.model.api.ILink"]},{"name":"interface INode","description":"org.modelix.model.api.INode","location":"model-api/org.modelix.model.api/-i-node/index.html","searchKeys":["INode","interface INode","org.modelix.model.api.INode"]},{"name":"interface INodeEx : INode","description":"org.modelix.model.api.INodeEx","location":"model-api/org.modelix.model.api/-i-node-ex/index.html","searchKeys":["INodeEx","interface INodeEx : INode","org.modelix.model.api.INodeEx"]},{"name":"interface INodeJS_ : INodeJS","description":"org.modelix.model.api.INodeJS_","location":"model-api/org.modelix.model.api/-i-node-j-s_/index.html","searchKeys":["INodeJS_","interface INodeJS_ : INodeJS","org.modelix.model.api.INodeJS_"]},{"name":"interface INodeReference","description":"org.modelix.model.api.INodeReference","location":"model-api/org.modelix.model.api/-i-node-reference/index.html","searchKeys":["INodeReference","interface INodeReference","org.modelix.model.api.INodeReference"]},{"name":"interface INodeReferenceSerializer","description":"org.modelix.model.api.INodeReferenceSerializer","location":"model-api/org.modelix.model.api/-i-node-reference-serializer/index.html","searchKeys":["INodeReferenceSerializer","interface INodeReferenceSerializer","org.modelix.model.api.INodeReferenceSerializer"]},{"name":"interface INodeReferenceSerializerEx : INodeReferenceSerializer","description":"org.modelix.model.api.INodeReferenceSerializerEx","location":"model-api/org.modelix.model.api/-i-node-reference-serializer-ex/index.html","searchKeys":["INodeReferenceSerializerEx","interface INodeReferenceSerializerEx : INodeReferenceSerializer","org.modelix.model.api.INodeReferenceSerializerEx"]},{"name":"interface INodeResolutionScope","description":"org.modelix.model.api.INodeResolutionScope","location":"model-api/org.modelix.model.api/-i-node-resolution-scope/index.html","searchKeys":["INodeResolutionScope","interface INodeResolutionScope","org.modelix.model.api.INodeResolutionScope"]},{"name":"interface INodeWrapper : INode","description":"org.modelix.model.api.INodeWrapper","location":"model-api/org.modelix.model.api/-i-node-wrapper/index.html","searchKeys":["INodeWrapper","interface INodeWrapper : INode","org.modelix.model.api.INodeWrapper"]},{"name":"interface IProperty : IRole","description":"org.modelix.model.api.IProperty","location":"model-api/org.modelix.model.api/-i-property/index.html","searchKeys":["IProperty","interface IProperty : IRole","org.modelix.model.api.IProperty"]},{"name":"interface IReadTransaction : ITransaction","description":"org.modelix.model.api.IReadTransaction","location":"model-api/org.modelix.model.api/-i-read-transaction/index.html","searchKeys":["IReadTransaction","interface IReadTransaction : ITransaction","org.modelix.model.api.IReadTransaction"]},{"name":"interface IReferenceLink : ILink","description":"org.modelix.model.api.IReferenceLink","location":"model-api/org.modelix.model.api/-i-reference-link/index.html","searchKeys":["IReferenceLink","interface IReferenceLink : ILink","org.modelix.model.api.IReferenceLink"]},{"name":"interface IRole","description":"org.modelix.model.api.IRole","location":"model-api/org.modelix.model.api/-i-role/index.html","searchKeys":["IRole","interface IRole","org.modelix.model.api.IRole"]},{"name":"interface ITransaction","description":"org.modelix.model.api.ITransaction","location":"model-api/org.modelix.model.api/-i-transaction/index.html","searchKeys":["ITransaction","interface ITransaction","org.modelix.model.api.ITransaction"]},{"name":"interface ITree","description":"org.modelix.model.api.ITree","location":"model-api/org.modelix.model.api/-i-tree/index.html","searchKeys":["ITree","interface ITree","org.modelix.model.api.ITree"]},{"name":"interface ITreeChangeVisitor","description":"org.modelix.model.api.ITreeChangeVisitor","location":"model-api/org.modelix.model.api/-i-tree-change-visitor/index.html","searchKeys":["ITreeChangeVisitor","interface ITreeChangeVisitor","org.modelix.model.api.ITreeChangeVisitor"]},{"name":"interface ITreeChangeVisitorEx : ITreeChangeVisitor","description":"org.modelix.model.api.ITreeChangeVisitorEx","location":"model-api/org.modelix.model.api/-i-tree-change-visitor-ex/index.html","searchKeys":["ITreeChangeVisitorEx","interface ITreeChangeVisitorEx : ITreeChangeVisitor","org.modelix.model.api.ITreeChangeVisitorEx"]},{"name":"interface IWriteTransaction : ITransaction","description":"org.modelix.model.api.IWriteTransaction","location":"model-api/org.modelix.model.api/-i-write-transaction/index.html","searchKeys":["IWriteTransaction","interface IWriteTransaction : ITransaction","org.modelix.model.api.IWriteTransaction"]},{"name":"interface PropertyType","description":"org.modelix.model.data.PropertyType","location":"model-api/org.modelix.model.data/-property-type/index.html","searchKeys":["PropertyType","interface PropertyType","org.modelix.model.data.PropertyType"]},{"name":"object AreaListenerRegistry","description":"org.modelix.model.area.AreaListenerRegistry","location":"model-api/org.modelix.model.area/-area-listener-registry/index.html","searchKeys":["AreaListenerRegistry","object AreaListenerRegistry","org.modelix.model.area.AreaListenerRegistry"]},{"name":"object Attribute : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.jetbrains_mps_lang_core.Attribute","location":"model-api/org.modelix.model.api/-builtin-languages/jetbrains_mps_lang_core/-attribute/index.html","searchKeys":["Attribute","object Attribute : SimpleConcept","org.modelix.model.api.BuiltinLanguages.jetbrains_mps_lang_core.Attribute"]},{"name":"object BaseConcept : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.jetbrains_mps_lang_core.BaseConcept","location":"model-api/org.modelix.model.api/-builtin-languages/jetbrains_mps_lang_core/-base-concept/index.html","searchKeys":["BaseConcept","object BaseConcept : SimpleConcept","org.modelix.model.api.BuiltinLanguages.jetbrains_mps_lang_core.BaseConcept"]},{"name":"object BranchInfo : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.ModelixRuntimelang.BranchInfo","location":"model-api/org.modelix.model.api/-builtin-languages/-modelix-runtimelang/-branch-info/index.html","searchKeys":["BranchInfo","object BranchInfo : SimpleConcept","org.modelix.model.api.BuiltinLanguages.ModelixRuntimelang.BranchInfo"]},{"name":"object BuiltinLanguages","description":"org.modelix.model.api.BuiltinLanguages","location":"model-api/org.modelix.model.api/-builtin-languages/index.html","searchKeys":["BuiltinLanguages","object BuiltinLanguages","org.modelix.model.api.BuiltinLanguages"]},{"name":"object Companion","description":"LanguageRegistry.Companion","location":"model-api/[root]/-language-registry/-companion/index.html","searchKeys":["Companion","object Companion","LanguageRegistry.Companion"]},{"name":"object Companion","description":"org.modelix.model.api.IChildLink.Companion","location":"model-api/org.modelix.model.api/-i-child-link/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.api.IChildLink.Companion"]},{"name":"object Companion","description":"org.modelix.model.api.IConceptReference.Companion","location":"model-api/org.modelix.model.api/-i-concept-reference/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.api.IConceptReference.Companion"]},{"name":"object Companion","description":"org.modelix.model.api.ILanguageRepository.Companion","location":"model-api/org.modelix.model.api/-i-language-repository/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.api.ILanguageRepository.Companion"]},{"name":"object Companion","description":"org.modelix.model.api.INodeReferenceSerializer.Companion","location":"model-api/org.modelix.model.api/-i-node-reference-serializer/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.api.INodeReferenceSerializer.Companion"]},{"name":"object Companion","description":"org.modelix.model.api.INodeReferenceSerializerEx.Companion","location":"model-api/org.modelix.model.api/-i-node-reference-serializer-ex/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.api.INodeReferenceSerializerEx.Companion"]},{"name":"object Companion","description":"org.modelix.model.api.INodeResolutionScope.Companion","location":"model-api/org.modelix.model.api/-i-node-resolution-scope/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.api.INodeResolutionScope.Companion"]},{"name":"object Companion","description":"org.modelix.model.api.IProperty.Companion","location":"model-api/org.modelix.model.api/-i-property/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.api.IProperty.Companion"]},{"name":"object Companion","description":"org.modelix.model.api.IReferenceLink.Companion","location":"model-api/org.modelix.model.api/-i-reference-link/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.api.IReferenceLink.Companion"]},{"name":"object Companion","description":"org.modelix.model.api.ITree.Companion","location":"model-api/org.modelix.model.api/-i-tree/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.api.ITree.Companion"]},{"name":"object Companion","description":"org.modelix.model.api.PNodeAdapter.Companion","location":"model-api/org.modelix.model.api/-p-node-adapter/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.api.PNodeAdapter.Companion"]},{"name":"object Companion","description":"org.modelix.model.api.PNodeReference.Companion","location":"model-api/org.modelix.model.api/-p-node-reference/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.api.PNodeReference.Companion"]},{"name":"object Companion","description":"org.modelix.model.data.ConceptData.Companion","location":"model-api/org.modelix.model.data/-concept-data/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.data.ConceptData.Companion"]},{"name":"object Companion","description":"org.modelix.model.data.LanguageData.Companion","location":"model-api/org.modelix.model.data/-language-data/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.data.LanguageData.Companion"]},{"name":"object Companion","description":"org.modelix.model.data.ModelData.Companion","location":"model-api/org.modelix.model.data/-model-data/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.data.ModelData.Companion"]},{"name":"object Companion","description":"org.modelix.model.data.NodeData.Companion","location":"model-api/org.modelix.model.data/-node-data/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.data.NodeData.Companion"]},{"name":"object ContextArea","description":"org.modelix.model.area.ContextArea","location":"model-api/org.modelix.model.area/-context-area/index.html","searchKeys":["ContextArea","object ContextArea","org.modelix.model.area.ContextArea"]},{"name":"object DefaultLanguageRepository : ILanguageRepository","description":"org.modelix.model.api.DefaultLanguageRepository","location":"model-api/org.modelix.model.api/-default-language-repository/index.html","searchKeys":["DefaultLanguageRepository","object DefaultLanguageRepository : ILanguageRepository","org.modelix.model.api.DefaultLanguageRepository"]},{"name":"object DevKit : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.DevKit","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-dev-kit/index.html","searchKeys":["DevKit","object DevKit : SimpleConcept","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.DevKit"]},{"name":"object DevkitDependency : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.DevkitDependency","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-devkit-dependency/index.html","searchKeys":["DevkitDependency","object DevkitDependency : SimpleConcept","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.DevkitDependency"]},{"name":"object INamedConcept : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.jetbrains_mps_lang_core.INamedConcept","location":"model-api/org.modelix.model.api/-builtin-languages/jetbrains_mps_lang_core/-i-named-concept/index.html","searchKeys":["INamedConcept","object INamedConcept : SimpleConcept","org.modelix.model.api.BuiltinLanguages.jetbrains_mps_lang_core.INamedConcept"]},{"name":"object JSNodeConverter","description":"org.modelix.model.api.JSNodeConverter","location":"model-api/org.modelix.model.api/-j-s-node-converter/index.html","searchKeys":["JSNodeConverter","object JSNodeConverter","org.modelix.model.api.JSNodeConverter"]},{"name":"object JavaModuleFacet : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.JavaModuleFacet","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-java-module-facet/index.html","searchKeys":["JavaModuleFacet","object JavaModuleFacet : SimpleConcept","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.JavaModuleFacet"]},{"name":"object Language : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Language","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-language/index.html","searchKeys":["Language","object Language : SimpleConcept","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Language"]},{"name":"object LanguageDependency : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.LanguageDependency","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-language-dependency/index.html","searchKeys":["LanguageDependency","object LanguageDependency : SimpleConcept","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.LanguageDependency"]},{"name":"object MPSRepositoryConcepts : SimpleLanguage","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/index.html","searchKeys":["MPSRepositoryConcepts","object MPSRepositoryConcepts : SimpleLanguage","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts"]},{"name":"object Model : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Model","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-model/index.html","searchKeys":["Model","object Model : SimpleConcept","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Model"]},{"name":"object ModelReference : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModelReference","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-model-reference/index.html","searchKeys":["ModelReference","object ModelReference : SimpleConcept","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModelReference"]},{"name":"object ModelServerInfo : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.ModelixRuntimelang.ModelServerInfo","location":"model-api/org.modelix.model.api/-builtin-languages/-modelix-runtimelang/-model-server-info/index.html","searchKeys":["ModelServerInfo","object ModelServerInfo : SimpleConcept","org.modelix.model.api.BuiltinLanguages.ModelixRuntimelang.ModelServerInfo"]},{"name":"object ModelixRuntimelang : SimpleLanguage","description":"org.modelix.model.api.BuiltinLanguages.ModelixRuntimelang","location":"model-api/org.modelix.model.api/-builtin-languages/-modelix-runtimelang/index.html","searchKeys":["ModelixRuntimelang","object ModelixRuntimelang : SimpleLanguage","org.modelix.model.api.BuiltinLanguages.ModelixRuntimelang"]},{"name":"object Module : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Module","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-module/index.html","searchKeys":["Module","object Module : SimpleConcept","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Module"]},{"name":"object ModuleDependency : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModuleDependency","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-module-dependency/index.html","searchKeys":["ModuleDependency","object ModuleDependency : SimpleConcept","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModuleDependency"]},{"name":"object ModuleFacet : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModuleFacet","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-module-facet/index.html","searchKeys":["ModuleFacet","object ModuleFacet : SimpleConcept","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModuleFacet"]},{"name":"object ModuleReference : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModuleReference","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-module-reference/index.html","searchKeys":["ModuleReference","object ModuleReference : SimpleConcept","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModuleReference"]},{"name":"object NodeAdapterCache","description":"org.modelix.model.api.NodeAdapterCache","location":"model-api/org.modelix.model.api/-node-adapter-cache/index.html","searchKeys":["NodeAdapterCache","object NodeAdapterCache","org.modelix.model.api.NodeAdapterCache"]},{"name":"object NodeAttribute : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.jetbrains_mps_lang_core.NodeAttribute","location":"model-api/org.modelix.model.api/-builtin-languages/jetbrains_mps_lang_core/-node-attribute/index.html","searchKeys":["NodeAttribute","object NodeAttribute : SimpleConcept","org.modelix.model.api.BuiltinLanguages.jetbrains_mps_lang_core.NodeAttribute"]},{"name":"object NullChildLink : IChildLink","description":"org.modelix.model.api.NullChildLink","location":"model-api/org.modelix.model.api/-null-child-link/index.html","searchKeys":["NullChildLink","object NullChildLink : IChildLink","org.modelix.model.api.NullChildLink"]},{"name":"object NullNodeResolutionScope : INodeResolutionScope","description":"org.modelix.model.api.NullNodeResolutionScope","location":"model-api/org.modelix.model.api/-null-node-resolution-scope/index.html","searchKeys":["NullNodeResolutionScope","object NullNodeResolutionScope : INodeResolutionScope","org.modelix.model.api.NullNodeResolutionScope"]},{"name":"object PNodeReferenceSerializer : INodeReferenceSerializerEx","description":"org.modelix.model.api.PNodeReferenceSerializer","location":"model-api/org.modelix.model.api/-p-node-reference-serializer/index.html","searchKeys":["PNodeReferenceSerializer","object PNodeReferenceSerializer : INodeReferenceSerializerEx","org.modelix.model.api.PNodeReferenceSerializer"]},{"name":"object Project : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Project","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-project/index.html","searchKeys":["Project","object Project : SimpleConcept","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Project"]},{"name":"object ProjectModule : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ProjectModule","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-project-module/index.html","searchKeys":["ProjectModule","object ProjectModule : SimpleConcept","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ProjectModule"]},{"name":"object Repository : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Repository","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-repository/index.html","searchKeys":["Repository","object Repository : SimpleConcept","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Repository"]},{"name":"object RepositoryInfo : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.ModelixRuntimelang.RepositoryInfo","location":"model-api/org.modelix.model.api/-builtin-languages/-modelix-runtimelang/-repository-info/index.html","searchKeys":["RepositoryInfo","object RepositoryInfo : SimpleConcept","org.modelix.model.api.BuiltinLanguages.ModelixRuntimelang.RepositoryInfo"]},{"name":"object RoleAccessContext","description":"org.modelix.model.api.RoleAccessContext","location":"model-api/org.modelix.model.api/-role-access-context/index.html","searchKeys":["RoleAccessContext","object RoleAccessContext","org.modelix.model.api.RoleAccessContext"]},{"name":"object SingleLanguageDependency : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.SingleLanguageDependency","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-single-language-dependency/index.html","searchKeys":["SingleLanguageDependency","object SingleLanguageDependency : SimpleConcept","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.SingleLanguageDependency"]},{"name":"object Solution : SimpleConcept","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Solution","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-solution/index.html","searchKeys":["Solution","object Solution : SimpleConcept","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Solution"]},{"name":"object jetbrains_mps_lang_core : SimpleLanguage","description":"org.modelix.model.api.BuiltinLanguages.jetbrains_mps_lang_core","location":"model-api/org.modelix.model.api/-builtin-languages/jetbrains_mps_lang_core/index.html","searchKeys":["jetbrains_mps_lang_core","object jetbrains_mps_lang_core : SimpleLanguage","org.modelix.model.api.BuiltinLanguages.jetbrains_mps_lang_core"]},{"name":"open class PNodeAdapter(val nodeId: Long, val branch: IBranch) : INode, INodeEx","description":"org.modelix.model.api.PNodeAdapter","location":"model-api/org.modelix.model.api/-p-node-adapter/index.html","searchKeys":["PNodeAdapter","open class PNodeAdapter(val nodeId: Long, val branch: IBranch) : INode, INodeEx","org.modelix.model.api.PNodeAdapter"]},{"name":"open class SimpleConcept(conceptName: String, is_abstract: Boolean = false, directSuperConcepts: Iterable<IConcept> = emptyList(), uid: String? = null) : IConcept","description":"org.modelix.model.api.SimpleConcept","location":"model-api/org.modelix.model.api/-simple-concept/index.html","searchKeys":["SimpleConcept","open class SimpleConcept(conceptName: String, is_abstract: Boolean = false, directSuperConcepts: Iterable<IConcept> = emptyList(), uid: String? = null) : IConcept","org.modelix.model.api.SimpleConcept"]},{"name":"open class SimpleLanguage(name: String, uid: String? = null) : ILanguage","description":"org.modelix.model.api.SimpleLanguage","location":"model-api/org.modelix.model.api/-simple-language/index.html","searchKeys":["SimpleLanguage","open class SimpleLanguage(name: String, uid: String? = null) : ILanguage","org.modelix.model.api.SimpleLanguage"]},{"name":"open external class ChildListAccessor<ChildT : ITypedNode>(parentNode: INodeJS, role: String?) : Iterable<ChildT> ","description":"ChildListAccessor","location":"model-api/[root]/-child-list-accessor/index.html","searchKeys":["ChildListAccessor","open external class ChildListAccessor<ChildT : ITypedNode>(parentNode: INodeJS, role: String?) : Iterable<ChildT> ","ChildListAccessor"]},{"name":"open external class GeneratedConcept(uid: String) : IConceptJS","description":"GeneratedConcept","location":"model-api/[root]/-generated-concept/index.html","searchKeys":["GeneratedConcept","open external class GeneratedConcept(uid: String) : IConceptJS","GeneratedConcept"]},{"name":"open external class GeneratedLanguage(name: String) : ILanguage","description":"GeneratedLanguage","location":"model-api/[root]/-generated-language/index.html","searchKeys":["GeneratedLanguage","open external class GeneratedLanguage(name: String) : ILanguage","GeneratedLanguage"]},{"name":"open external class IdGenerator(next: Any, last: Any)","description":"IdGenerator","location":"model-api/[root]/-id-generator/index.html","searchKeys":["IdGenerator","open external class IdGenerator(next: Any, last: Any)","IdGenerator"]},{"name":"open external class LanguageRegistry","description":"LanguageRegistry","location":"model-api/[root]/-language-registry/index.html","searchKeys":["LanguageRegistry","open external class LanguageRegistry","LanguageRegistry"]},{"name":"open external class ModelService(server: IModelServerConnection)","description":"ModelService","location":"model-api/[root]/-model-service/index.html","searchKeys":["ModelService","open external class ModelService(server: IModelServerConnection)","ModelService"]},{"name":"open external class SingleChildAccessor<ChildT : ITypedNode>(parentNode: INodeJS, role: String?) : Iterable<ChildT> ","description":"SingleChildAccessor","location":"model-api/[root]/-single-child-accessor/index.html","searchKeys":["SingleChildAccessor","open external class SingleChildAccessor<ChildT : ITypedNode>(parentNode: INodeJS, role: String?) : Iterable<ChildT> ","SingleChildAccessor"]},{"name":"open external class TypedNode(_node: INodeJS) : ITypedNode","description":"TypedNode","location":"model-api/[root]/-typed-node/index.html","searchKeys":["TypedNode","open external class TypedNode(_node: INodeJS) : ITypedNode","TypedNode"]},{"name":"open external class UnknownTypedNode(node: INodeJS) : TypedNode","description":"UnknownTypedNode","location":"model-api/[root]/-unknown-typed-node/index.html","searchKeys":["UnknownTypedNode","open external class UnknownTypedNode(node: INodeJS) : TypedNode","UnknownTypedNode"]},{"name":"open fun <T> computeReadT(computable: (IReadTransaction) -> T): T","description":"org.modelix.model.api.IBranch.computeReadT","location":"model-api/org.modelix.model.api/-i-branch/compute-read-t.html","searchKeys":["computeReadT","open fun <T> computeReadT(computable: (IReadTransaction) -> T): T","org.modelix.model.api.IBranch.computeReadT"]},{"name":"open fun <T> computeWriteT(computable: (IWriteTransaction) -> T): T","description":"org.modelix.model.api.IBranch.computeWriteT","location":"model-api/org.modelix.model.api/-i-branch/compute-write-t.html","searchKeys":["computeWriteT","open fun <T> computeWriteT(computable: (IWriteTransaction) -> T): T","org.modelix.model.api.IBranch.computeWriteT"]},{"name":"open fun <T> runWith(body: () -> T): T","description":"org.modelix.model.api.INodeResolutionScope.runWith","location":"model-api/org.modelix.model.api/-i-node-resolution-scope/run-with.html","searchKeys":["runWith","open fun <T> runWith(body: () -> T): T","org.modelix.model.api.INodeResolutionScope.runWith"]},{"name":"open fun <T> runWithAdditionalScope(body: () -> T): T","description":"org.modelix.model.api.INodeResolutionScope.runWithAdditionalScope","location":"model-api/org.modelix.model.api/-i-node-resolution-scope/run-with-additional-scope.html","searchKeys":["runWithAdditionalScope","open fun <T> runWithAdditionalScope(body: () -> T): T","org.modelix.model.api.INodeResolutionScope.runWithAdditionalScope"]},{"name":"open fun addNew(subconcept: IConceptJS?): ChildT","description":"ChildListAccessor.addNew","location":"model-api/[root]/-child-list-accessor/add-new.html","searchKeys":["addNew","open fun addNew(subconcept: IConceptJS?): ChildT","ChildListAccessor.addNew"]},{"name":"open fun addNewChild(role: IChildLink, index: Int, concept: IConcept?): INode","description":"org.modelix.model.api.INode.addNewChild","location":"model-api/org.modelix.model.api/-i-node/add-new-child.html","searchKeys":["addNewChild","open fun addNewChild(role: IChildLink, index: Int, concept: IConcept?): INode","org.modelix.model.api.INode.addNewChild"]},{"name":"open fun addNewChild(role: IChildLink, index: Int, concept: IConceptReference?): INode","description":"org.modelix.model.api.INode.addNewChild","location":"model-api/org.modelix.model.api/-i-node/add-new-child.html","searchKeys":["addNewChild","open fun addNewChild(role: IChildLink, index: Int, concept: IConceptReference?): INode","org.modelix.model.api.INode.addNewChild"]},{"name":"open fun addNewChild(role: String?, index: Int, concept: IConceptReference?): INode","description":"org.modelix.model.api.INode.addNewChild","location":"model-api/org.modelix.model.api/-i-node/add-new-child.html","searchKeys":["addNewChild","open fun addNewChild(role: String?, index: Int, concept: IConceptReference?): INode","org.modelix.model.api.INode.addNewChild"]},{"name":"open fun addNewChildren(role: String?, index: Int, concepts: List<IConceptReference?>): List<INode>","description":"org.modelix.model.api.INode.addNewChildren","location":"model-api/org.modelix.model.api/-i-node/add-new-children.html","searchKeys":["addNewChildren","open fun addNewChildren(role: String?, index: Int, concepts: List<IConceptReference?>): List<INode>","org.modelix.model.api.INode.addNewChildren"]},{"name":"open fun addNewNode(parent: NodeId, role: String, index: Number, concept: String)","description":"ModelService.addNewNode","location":"model-api/[root]/-model-service/add-new-node.html","searchKeys":["addNewNode","open fun addNewNode(parent: NodeId, role: String, index: Number, concept: String)","ModelService.addNewNode"]},{"name":"open fun assertRegistered()","description":"GeneratedLanguage.assertRegistered","location":"model-api/[root]/-generated-language/assert-registered.html","searchKeys":["assertRegistered","open fun assertRegistered()","GeneratedLanguage.assertRegistered"]},{"name":"open fun containsNode(nodeId: NodeId): Boolean","description":"ModelService.containsNode","location":"model-api/[root]/-model-service/contains-node.html","searchKeys":["containsNode","open fun containsNode(nodeId: NodeId): Boolean","ModelService.containsNode"]},{"name":"open fun generate(): NodeId","description":"IdGenerator.generate","location":"model-api/[root]/-id-generator/generate.html","searchKeys":["generate","open fun generate(): NodeId","IdGenerator.generate"]},{"name":"open fun get(): ChildT?","description":"SingleChildAccessor.get","location":"model-api/[root]/-single-child-accessor/get.html","searchKeys":["get","open fun get(): ChildT?","SingleChildAccessor.get"]},{"name":"open fun getAll(): Array<GeneratedLanguage>","description":"LanguageRegistry.getAll","location":"model-api/[root]/-language-registry/get-all.html","searchKeys":["getAll","open fun getAll(): Array<GeneratedLanguage>","LanguageRegistry.getAll"]},{"name":"open fun getAllChildrenAsFlow(): Flow<INode>","description":"org.modelix.model.api.INode.getAllChildrenAsFlow","location":"model-api/org.modelix.model.api/-i-node/get-all-children-as-flow.html","searchKeys":["getAllChildrenAsFlow","open fun getAllChildrenAsFlow(): Flow<INode>","org.modelix.model.api.INode.getAllChildrenAsFlow"]},{"name":"open fun getAllChildrenAsFlow(parentId: Long): Flow<Long>","description":"org.modelix.model.api.ITree.getAllChildrenAsFlow","location":"model-api/org.modelix.model.api/-i-tree/get-all-children-as-flow.html","searchKeys":["getAllChildrenAsFlow","open fun getAllChildrenAsFlow(parentId: Long): Flow<Long>","org.modelix.model.api.ITree.getAllChildrenAsFlow"]},{"name":"open fun getAllProperties(): List<Pair<IProperty, String>>","description":"org.modelix.model.api.INode.getAllProperties","location":"model-api/org.modelix.model.api/-i-node/get-all-properties.html","searchKeys":["getAllProperties","open fun getAllProperties(): List<Pair<IProperty, String>>","org.modelix.model.api.INode.getAllProperties"]},{"name":"open fun getAllReferenceTargetRefs(): List<Pair<IReferenceLink, INodeReference>>","description":"org.modelix.model.api.INode.getAllReferenceTargetRefs","location":"model-api/org.modelix.model.api/-i-node/get-all-reference-target-refs.html","searchKeys":["getAllReferenceTargetRefs","open fun getAllReferenceTargetRefs(): List<Pair<IReferenceLink, INodeReference>>","org.modelix.model.api.INode.getAllReferenceTargetRefs"]},{"name":"open fun getAllReferenceTargetRefsAsFlow(): Flow<Pair<IReferenceLink, INodeReference>>","description":"org.modelix.model.api.INode.getAllReferenceTargetRefsAsFlow","location":"model-api/org.modelix.model.api/-i-node/get-all-reference-target-refs-as-flow.html","searchKeys":["getAllReferenceTargetRefsAsFlow","open fun getAllReferenceTargetRefsAsFlow(): Flow<Pair<IReferenceLink, INodeReference>>","org.modelix.model.api.INode.getAllReferenceTargetRefsAsFlow"]},{"name":"open fun getAllReferenceTargets(): List<Pair<IReferenceLink, INode>>","description":"org.modelix.model.api.INode.getAllReferenceTargets","location":"model-api/org.modelix.model.api/-i-node/get-all-reference-targets.html","searchKeys":["getAllReferenceTargets","open fun getAllReferenceTargets(): List<Pair<IReferenceLink, INode>>","org.modelix.model.api.INode.getAllReferenceTargets"]},{"name":"open fun getAllReferenceTargetsAsFlow(): Flow<Pair<IReferenceLink, INode>>","description":"org.modelix.model.api.INode.getAllReferenceTargetsAsFlow","location":"model-api/org.modelix.model.api/-i-node/get-all-reference-targets-as-flow.html","searchKeys":["getAllReferenceTargetsAsFlow","open fun getAllReferenceTargetsAsFlow(): Flow<Pair<IReferenceLink, INode>>","org.modelix.model.api.INode.getAllReferenceTargetsAsFlow"]},{"name":"open fun getAllReferenceTargetsAsFlow(nodeId: Long): Flow<Pair<String, INodeReference>>","description":"org.modelix.model.api.ITree.getAllReferenceTargetsAsFlow","location":"model-api/org.modelix.model.api/-i-tree/get-all-reference-targets-as-flow.html","searchKeys":["getAllReferenceTargetsAsFlow","open fun getAllReferenceTargetsAsFlow(nodeId: Long): Flow<Pair<String, INodeReference>>","org.modelix.model.api.ITree.getAllReferenceTargetsAsFlow"]},{"name":"open fun getChildren(link: IChildLink): Iterable<INode>","description":"org.modelix.model.api.INode.getChildren","location":"model-api/org.modelix.model.api/-i-node/get-children.html","searchKeys":["getChildren","open fun getChildren(link: IChildLink): Iterable<INode>","org.modelix.model.api.INode.getChildren"]},{"name":"open fun getChildren(parentId: NodeId, role: String): Array<NodeId>","description":"ModelService.getChildren","location":"model-api/[root]/-model-service/get-children.html","searchKeys":["getChildren","open fun getChildren(parentId: NodeId, role: String): Array<NodeId>","ModelService.getChildren"]},{"name":"open fun getChildrenAsFlow(parentId: Long, role: String): Flow<Long>","description":"org.modelix.model.api.ITree.getChildrenAsFlow","location":"model-api/org.modelix.model.api/-i-tree/get-children-as-flow.html","searchKeys":["getChildrenAsFlow","open fun getChildrenAsFlow(parentId: Long, role: String): Flow<Long>","org.modelix.model.api.ITree.getChildrenAsFlow"]},{"name":"open fun getChildrenAsFlow(role: IChildLink): Flow<INode>","description":"org.modelix.model.api.INode.getChildrenAsFlow","location":"model-api/org.modelix.model.api/-i-node/get-children-as-flow.html","searchKeys":["getChildrenAsFlow","open fun getChildrenAsFlow(role: IChildLink): Flow<INode>","org.modelix.model.api.INode.getChildrenAsFlow"]},{"name":"open fun getConcepts(): Array<GeneratedConcept>","description":"GeneratedLanguage.getConcepts","location":"model-api/[root]/-generated-language/get-concepts.html","searchKeys":["getConcepts","open fun getConcepts(): Array<GeneratedConcept>","GeneratedLanguage.getConcepts"]},{"name":"open fun getContainmentLink(): IChildLink?","description":"org.modelix.model.api.INode.getContainmentLink","location":"model-api/org.modelix.model.api/-i-node/get-containment-link.html","searchKeys":["getContainmentLink","open fun getContainmentLink(): IChildLink?","org.modelix.model.api.INode.getContainmentLink"]},{"name":"open fun getDescendantsAsFlow(includeSelf: Boolean = false): Flow<INode>","description":"org.modelix.model.api.INode.getDescendantsAsFlow","location":"model-api/org.modelix.model.api/-i-node/get-descendants-as-flow.html","searchKeys":["getDescendantsAsFlow","open fun getDescendantsAsFlow(includeSelf: Boolean = false): Flow<INode>","org.modelix.model.api.INode.getDescendantsAsFlow"]},{"name":"open fun getDescendantsAsFlow(nodeId: Long, includeSelf: Boolean = false): Flow<Long>","description":"org.modelix.model.api.ITree.getDescendantsAsFlow","location":"model-api/org.modelix.model.api/-i-tree/get-descendants-as-flow.html","searchKeys":["getDescendantsAsFlow","open fun getDescendantsAsFlow(nodeId: Long, includeSelf: Boolean = false): Flow<Long>","org.modelix.model.api.ITree.getDescendantsAsFlow"]},{"name":"open fun getLockOrderingPriority(): Long","description":"org.modelix.model.area.IArea.getLockOrderingPriority","location":"model-api/org.modelix.model.area/-i-area/get-lock-ordering-priority.html","searchKeys":["getLockOrderingPriority","open fun getLockOrderingPriority(): Long","org.modelix.model.area.IArea.getLockOrderingPriority"]},{"name":"open fun getName(): String","description":"GeneratedLanguage.getName","location":"model-api/[root]/-generated-language/get-name.html","searchKeys":["getName","open fun getName(): String","GeneratedLanguage.getName"]},{"name":"open fun getNodeData(id: NodeId): NodeData?","description":"ModelService.getNodeData","location":"model-api/[root]/-model-service/get-node-data.html","searchKeys":["getNodeData","open fun getNodeData(id: NodeId): NodeData?","ModelService.getNodeData"]},{"name":"open fun getParentAsFlow(): Flow<INode>","description":"org.modelix.model.api.INode.getParentAsFlow","location":"model-api/org.modelix.model.api/-i-node/get-parent-as-flow.html","searchKeys":["getParentAsFlow","open fun getParentAsFlow(): Flow<INode>","org.modelix.model.api.INode.getParentAsFlow"]},{"name":"open fun getParentAsFlow(nodeId: Long): Flow<Long>","description":"org.modelix.model.api.ITree.getParentAsFlow","location":"model-api/org.modelix.model.api/-i-tree/get-parent-as-flow.html","searchKeys":["getParentAsFlow","open fun getParentAsFlow(nodeId: Long): Flow<Long>","org.modelix.model.api.ITree.getParentAsFlow"]},{"name":"open fun getPriority(): Int","description":"org.modelix.model.api.ILanguageRepository.getPriority","location":"model-api/org.modelix.model.api/-i-language-repository/get-priority.html","searchKeys":["getPriority","open fun getPriority(): Int","org.modelix.model.api.ILanguageRepository.getPriority"]},{"name":"open fun getProperty(nodeId: NodeId, role: String): String?","description":"ModelService.getProperty","location":"model-api/[root]/-model-service/get-property.html","searchKeys":["getProperty","open fun getProperty(nodeId: NodeId, role: String): String?","ModelService.getProperty"]},{"name":"open fun getPropertyLinks(): List<IProperty>","description":"org.modelix.model.api.INode.getPropertyLinks","location":"model-api/org.modelix.model.api/-i-node/get-property-links.html","searchKeys":["getPropertyLinks","open fun getPropertyLinks(): List<IProperty>","org.modelix.model.api.INode.getPropertyLinks"]},{"name":"open fun getPropertyValue(property: IProperty): String?","description":"org.modelix.model.api.INode.getPropertyValue","location":"model-api/org.modelix.model.api/-i-node/get-property-value.html","searchKeys":["getPropertyValue","open fun getPropertyValue(property: IProperty): String?","org.modelix.model.api.INode.getPropertyValue"]},{"name":"open fun getPropertyValueAsFlow(nodeId: Long, role: String): Flow<String?>","description":"org.modelix.model.api.ITree.getPropertyValueAsFlow","location":"model-api/org.modelix.model.api/-i-tree/get-property-value-as-flow.html","searchKeys":["getPropertyValueAsFlow","open fun getPropertyValueAsFlow(nodeId: Long, role: String): Flow<String?>","org.modelix.model.api.ITree.getPropertyValueAsFlow"]},{"name":"open fun getPropertyValueAsFlow(role: IProperty): Flow<String?>","description":"org.modelix.model.api.INode.getPropertyValueAsFlow","location":"model-api/org.modelix.model.api/-i-node/get-property-value-as-flow.html","searchKeys":["getPropertyValueAsFlow","open fun getPropertyValueAsFlow(role: IProperty): Flow<String?>","org.modelix.model.api.INode.getPropertyValueAsFlow"]},{"name":"open fun getReferenceLinks(): List<IReferenceLink>","description":"org.modelix.model.api.INode.getReferenceLinks","location":"model-api/org.modelix.model.api/-i-node/get-reference-links.html","searchKeys":["getReferenceLinks","open fun getReferenceLinks(): List<IReferenceLink>","org.modelix.model.api.INode.getReferenceLinks"]},{"name":"open fun getReferenceTarget(link: IReferenceLink): INode?","description":"org.modelix.model.api.INode.getReferenceTarget","location":"model-api/org.modelix.model.api/-i-node/get-reference-target.html","searchKeys":["getReferenceTarget","open fun getReferenceTarget(link: IReferenceLink): INode?","org.modelix.model.api.INode.getReferenceTarget"]},{"name":"open fun getReferenceTargetAsFlow(nodeId: Long, role: String): Flow<INodeReference>","description":"org.modelix.model.api.ITree.getReferenceTargetAsFlow","location":"model-api/org.modelix.model.api/-i-tree/get-reference-target-as-flow.html","searchKeys":["getReferenceTargetAsFlow","open fun getReferenceTargetAsFlow(nodeId: Long, role: String): Flow<INodeReference>","org.modelix.model.api.ITree.getReferenceTargetAsFlow"]},{"name":"open fun getReferenceTargetAsFlow(role: IReferenceLink): Flow<INode>","description":"org.modelix.model.api.INode.getReferenceTargetAsFlow","location":"model-api/org.modelix.model.api/-i-node/get-reference-target-as-flow.html","searchKeys":["getReferenceTargetAsFlow","open fun getReferenceTargetAsFlow(role: IReferenceLink): Flow<INode>","org.modelix.model.api.INode.getReferenceTargetAsFlow"]},{"name":"open fun getReferenceTargetRef(role: IReferenceLink): INodeReference?","description":"org.modelix.model.api.INode.getReferenceTargetRef","location":"model-api/org.modelix.model.api/-i-node/get-reference-target-ref.html","searchKeys":["getReferenceTargetRef","open fun getReferenceTargetRef(role: IReferenceLink): INodeReference?","org.modelix.model.api.INode.getReferenceTargetRef"]},{"name":"open fun getReferenceTargetRef(role: String): INodeReference?","description":"org.modelix.model.api.INode.getReferenceTargetRef","location":"model-api/org.modelix.model.api/-i-node/get-reference-target-ref.html","searchKeys":["getReferenceTargetRef","open fun getReferenceTargetRef(role: String): INodeReference?","org.modelix.model.api.INode.getReferenceTargetRef"]},{"name":"open fun getReferenceTargetRefAsFlow(role: IReferenceLink): Flow<INodeReference>","description":"org.modelix.model.api.INode.getReferenceTargetRefAsFlow","location":"model-api/org.modelix.model.api/-i-node/get-reference-target-ref-as-flow.html","searchKeys":["getReferenceTargetRefAsFlow","open fun getReferenceTargetRefAsFlow(role: IReferenceLink): Flow<INodeReference>","org.modelix.model.api.INode.getReferenceTargetRefAsFlow"]},{"name":"open fun getUID(): String","description":"GeneratedLanguage.getUID","location":"model-api/[root]/-generated-language/get-u-i-d.html","searchKeys":["getUID","open fun getUID(): String","GeneratedLanguage.getUID"]},{"name":"open fun insertNew(index: Number, subconcept: IConceptJS?): ChildT","description":"ChildListAccessor.insertNew","location":"model-api/[root]/-child-list-accessor/insert-new.html","searchKeys":["insertNew","open fun insertNew(index: Number, subconcept: IConceptJS?): ChildT","ChildListAccessor.insertNew"]},{"name":"open fun isRegistered(): Boolean","description":"GeneratedLanguage.isRegistered","location":"model-api/[root]/-generated-language/is-registered.html","searchKeys":["isRegistered","open fun isRegistered(): Boolean","GeneratedLanguage.isRegistered"]},{"name":"open fun isRegistered(lang: GeneratedLanguage): Boolean","description":"LanguageRegistry.isRegistered","location":"model-api/[root]/-language-registry/is-registered.html","searchKeys":["isRegistered","open fun isRegistered(lang: GeneratedLanguage): Boolean","LanguageRegistry.isRegistered"]},{"name":"open fun moveChild(role: IChildLink, index: Int, child: INode)","description":"org.modelix.model.api.INode.moveChild","location":"model-api/org.modelix.model.api/-i-node/move-child.html","searchKeys":["moveChild","open fun moveChild(role: IChildLink, index: Int, child: INode)","org.modelix.model.api.INode.moveChild"]},{"name":"open fun register()","description":"GeneratedLanguage.register","location":"model-api/[root]/-generated-language/register.html","searchKeys":["register","open fun register()","GeneratedLanguage.register"]},{"name":"open fun register(lang: GeneratedLanguage)","description":"LanguageRegistry.register","location":"model-api/[root]/-language-registry/register.html","searchKeys":["register","open fun register(lang: GeneratedLanguage)","LanguageRegistry.register"]},{"name":"open fun removeReference(role: IReferenceLink)","description":"org.modelix.model.api.INode.removeReference","location":"model-api/org.modelix.model.api/-i-node/remove-reference.html","searchKeys":["removeReference","open fun removeReference(role: IReferenceLink)","org.modelix.model.api.INode.removeReference"]},{"name":"open fun resolveConcept(uid: String): IConceptJS?","description":"LanguageRegistry.resolveConcept","location":"model-api/[root]/-language-registry/resolve-concept.html","searchKeys":["resolveConcept","open fun resolveConcept(uid: String): IConceptJS?","LanguageRegistry.resolveConcept"]},{"name":"open fun resolveNode(area: IArea?): INode?","description":"org.modelix.model.api.INodeReference.resolveNode","location":"model-api/org.modelix.model.api/-i-node-reference/resolve-node.html","searchKeys":["resolveNode","open fun resolveNode(area: IArea?): INode?","org.modelix.model.api.INodeReference.resolveNode"]},{"name":"open fun runReadT(f: (IReadTransaction) -> Unit)","description":"org.modelix.model.api.IBranch.runReadT","location":"model-api/org.modelix.model.api/-i-branch/run-read-t.html","searchKeys":["runReadT","open fun runReadT(f: (IReadTransaction) -> Unit)","org.modelix.model.api.IBranch.runReadT"]},{"name":"open fun runWriteT(f: (IWriteTransaction) -> Unit)","description":"org.modelix.model.api.IBranch.runWriteT","location":"model-api/org.modelix.model.api/-i-branch/run-write-t.html","searchKeys":["runWriteT","open fun runWriteT(f: (IWriteTransaction) -> Unit)","org.modelix.model.api.IBranch.runWriteT"]},{"name":"open fun serialize(): String","description":"org.modelix.model.api.INodeReference.serialize","location":"model-api/org.modelix.model.api/-i-node-reference/serialize.html","searchKeys":["serialize","open fun serialize(): String","org.modelix.model.api.INodeReference.serialize"]},{"name":"open fun setNew(): ChildT","description":"SingleChildAccessor.setNew","location":"model-api/[root]/-single-child-accessor/set-new.html","searchKeys":["setNew","open fun setNew(): ChildT","SingleChildAccessor.setNew"]},{"name":"open fun setProperty(nodeId: NodeId, role: String, value: String?)","description":"ModelService.setProperty","location":"model-api/[root]/-model-service/set-property.html","searchKeys":["setProperty","open fun setProperty(nodeId: NodeId, role: String, value: String?)","ModelService.setProperty"]},{"name":"open fun setPropertyValue(property: IProperty, value: String?)","description":"org.modelix.model.api.INode.setPropertyValue","location":"model-api/org.modelix.model.api/-i-node/set-property-value.html","searchKeys":["setPropertyValue","open fun setPropertyValue(property: IProperty, value: String?)","org.modelix.model.api.INode.setPropertyValue"]},{"name":"open fun setReferenceTarget(link: IReferenceLink, target: INode?)","description":"org.modelix.model.api.INode.setReferenceTarget","location":"model-api/org.modelix.model.api/-i-node/set-reference-target.html","searchKeys":["setReferenceTarget","open fun setReferenceTarget(link: IReferenceLink, target: INode?)","org.modelix.model.api.INode.setReferenceTarget"]},{"name":"open fun setReferenceTarget(role: IReferenceLink, target: INodeReference?)","description":"org.modelix.model.api.INode.setReferenceTarget","location":"model-api/org.modelix.model.api/-i-node/set-reference-target.html","searchKeys":["setReferenceTarget","open fun setReferenceTarget(role: IReferenceLink, target: INodeReference?)","org.modelix.model.api.INode.setReferenceTarget"]},{"name":"open fun setReferenceTarget(role: String, target: INodeReference?)","description":"org.modelix.model.api.INode.setReferenceTarget","location":"model-api/org.modelix.model.api/-i-node/set-reference-target.html","searchKeys":["setReferenceTarget","open fun setReferenceTarget(role: String, target: INodeReference?)","org.modelix.model.api.INode.setReferenceTarget"]},{"name":"open fun setReferenceTarget(sourceId: Long, role: String, targetId: Long): ITree","description":"org.modelix.model.api.ITree.setReferenceTarget","location":"model-api/org.modelix.model.api/-i-tree/set-reference-target.html","searchKeys":["setReferenceTarget","open fun setReferenceTarget(sourceId: Long, role: String, targetId: Long): ITree","org.modelix.model.api.ITree.setReferenceTarget"]},{"name":"open fun unregister()","description":"GeneratedLanguage.unregister","location":"model-api/[root]/-generated-language/unregister.html","searchKeys":["unregister","open fun unregister()","GeneratedLanguage.unregister"]},{"name":"open fun unregister(lang: GeneratedLanguage)","description":"LanguageRegistry.unregister","location":"model-api/[root]/-language-registry/unregister.html","searchKeys":["unregister","open fun unregister(lang: GeneratedLanguage)","LanguageRegistry.unregister"]},{"name":"open fun usesRoleIds(): Boolean","description":"org.modelix.model.api.INode.usesRoleIds","location":"model-api/org.modelix.model.api/-i-node/uses-role-ids.html","searchKeys":["usesRoleIds","open fun usesRoleIds(): Boolean","org.modelix.model.api.INode.usesRoleIds"]},{"name":"open fun wrapNode(node: INodeJS): ITypedNode","description":"LanguageRegistry.wrapNode","location":"model-api/[root]/-language-registry/wrap-node.html","searchKeys":["wrapNode","open fun wrapNode(node: INodeJS): ITypedNode","LanguageRegistry.wrapNode"]},{"name":"open operator override fun equals(o: Any?): Boolean","description":"org.modelix.model.api.PNodeAdapter.equals","location":"model-api/org.modelix.model.api/-p-node-adapter/equals.html","searchKeys":["equals","open operator override fun equals(o: Any?): Boolean","org.modelix.model.api.PNodeAdapter.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.modelix.model.api.NodeAdapterJS.equals","location":"model-api/org.modelix.model.api/-node-adapter-j-s/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.modelix.model.api.NodeAdapterJS.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.equals","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.modelix.model.area.AreaWithMounts.NodeWrapper.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.modelix.model.area.AreaWithMounts.equals","location":"model-api/org.modelix.model.area/-area-with-mounts/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.modelix.model.area.AreaWithMounts.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.modelix.model.area.CompositeArea.NodeWrapper.equals","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.modelix.model.area.CompositeArea.NodeWrapper.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.modelix.model.area.CompositeArea.Root.equals","location":"model-api/org.modelix.model.area/-composite-area/-root/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.modelix.model.area.CompositeArea.Root.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.modelix.model.area.CompositeArea.equals","location":"model-api/org.modelix.model.area/-composite-area/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.modelix.model.area.CompositeArea.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.modelix.model.area.PArea.equals","location":"model-api/org.modelix.model.area/-p-area/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.modelix.model.area.PArea.equals"]},{"name":"open override fun <T> computeRead(computable: () -> T): T","description":"org.modelix.model.api.PBranch.computeRead","location":"model-api/org.modelix.model.api/-p-branch/compute-read.html","searchKeys":["computeRead","open override fun <T> computeRead(computable: () -> T): T","org.modelix.model.api.PBranch.computeRead"]},{"name":"open override fun <T> computeRead(computable: () -> T): T","description":"org.modelix.model.api.TreePointer.computeRead","location":"model-api/org.modelix.model.api/-tree-pointer/compute-read.html","searchKeys":["computeRead","open override fun <T> computeRead(computable: () -> T): T","org.modelix.model.api.TreePointer.computeRead"]},{"name":"open override fun <T> computeWrite(computable: () -> T): T","description":"org.modelix.model.api.PBranch.computeWrite","location":"model-api/org.modelix.model.api/-p-branch/compute-write.html","searchKeys":["computeWrite","open override fun <T> computeWrite(computable: () -> T): T","org.modelix.model.api.PBranch.computeWrite"]},{"name":"open override fun <T> computeWrite(computable: () -> T): T","description":"org.modelix.model.api.TreePointer.computeWrite","location":"model-api/org.modelix.model.api/-tree-pointer/compute-write.html","searchKeys":["computeWrite","open override fun <T> computeWrite(computable: () -> T): T","org.modelix.model.api.TreePointer.computeWrite"]},{"name":"open override fun <T> executeRead(f: () -> T): T","description":"org.modelix.model.area.AbstractArea.executeRead","location":"model-api/org.modelix.model.area/-abstract-area/execute-read.html","searchKeys":["executeRead","open override fun <T> executeRead(f: () -> T): T","org.modelix.model.area.AbstractArea.executeRead"]},{"name":"open override fun <T> executeRead(f: () -> T): T","description":"org.modelix.model.area.AreaWithMounts.executeRead","location":"model-api/org.modelix.model.area/-area-with-mounts/execute-read.html","searchKeys":["executeRead","open override fun <T> executeRead(f: () -> T): T","org.modelix.model.area.AreaWithMounts.executeRead"]},{"name":"open override fun <T> executeRead(f: () -> T): T","description":"org.modelix.model.area.CompositeArea.executeRead","location":"model-api/org.modelix.model.area/-composite-area/execute-read.html","searchKeys":["executeRead","open override fun <T> executeRead(f: () -> T): T","org.modelix.model.area.CompositeArea.executeRead"]},{"name":"open override fun <T> executeRead(f: () -> T): T","description":"org.modelix.model.area.PArea.executeRead","location":"model-api/org.modelix.model.area/-p-area/execute-read.html","searchKeys":["executeRead","open override fun <T> executeRead(f: () -> T): T","org.modelix.model.area.PArea.executeRead"]},{"name":"open override fun <T> executeWrite(f: () -> T): T","description":"org.modelix.model.area.AbstractArea.executeWrite","location":"model-api/org.modelix.model.area/-abstract-area/execute-write.html","searchKeys":["executeWrite","open override fun <T> executeWrite(f: () -> T): T","org.modelix.model.area.AbstractArea.executeWrite"]},{"name":"open override fun <T> executeWrite(f: () -> T): T","description":"org.modelix.model.area.AreaWithMounts.executeWrite","location":"model-api/org.modelix.model.area/-area-with-mounts/execute-write.html","searchKeys":["executeWrite","open override fun <T> executeWrite(f: () -> T): T","org.modelix.model.area.AreaWithMounts.executeWrite"]},{"name":"open override fun <T> executeWrite(f: () -> T): T","description":"org.modelix.model.area.CompositeArea.executeWrite","location":"model-api/org.modelix.model.area/-composite-area/execute-write.html","searchKeys":["executeWrite","open override fun <T> executeWrite(f: () -> T): T","org.modelix.model.area.CompositeArea.executeWrite"]},{"name":"open override fun <T> executeWrite(f: () -> T): T","description":"org.modelix.model.area.PArea.executeWrite","location":"model-api/org.modelix.model.area/-p-area/execute-write.html","searchKeys":["executeWrite","open override fun <T> executeWrite(f: () -> T): T","org.modelix.model.area.PArea.executeWrite"]},{"name":"open override fun addListener(l: IAreaListener)","description":"org.modelix.model.area.AbstractArea.addListener","location":"model-api/org.modelix.model.area/-abstract-area/add-listener.html","searchKeys":["addListener","open override fun addListener(l: IAreaListener)","org.modelix.model.area.AbstractArea.addListener"]},{"name":"open override fun addListener(l: IAreaListener)","description":"org.modelix.model.area.AreaWithMounts.addListener","location":"model-api/org.modelix.model.area/-area-with-mounts/add-listener.html","searchKeys":["addListener","open override fun addListener(l: IAreaListener)","org.modelix.model.area.AreaWithMounts.addListener"]},{"name":"open override fun addListener(l: IAreaListener)","description":"org.modelix.model.area.CompositeArea.addListener","location":"model-api/org.modelix.model.area/-composite-area/add-listener.html","searchKeys":["addListener","open override fun addListener(l: IAreaListener)","org.modelix.model.area.CompositeArea.addListener"]},{"name":"open override fun addListener(l: IAreaListener)","description":"org.modelix.model.area.PArea.addListener","location":"model-api/org.modelix.model.area/-p-area/add-listener.html","searchKeys":["addListener","open override fun addListener(l: IAreaListener)","org.modelix.model.area.PArea.addListener"]},{"name":"open override fun addListener(l: IBranchListener)","description":"org.modelix.model.api.PBranch.addListener","location":"model-api/org.modelix.model.api/-p-branch/add-listener.html","searchKeys":["addListener","open override fun addListener(l: IBranchListener)","org.modelix.model.api.PBranch.addListener"]},{"name":"open override fun addListener(l: IBranchListener)","description":"org.modelix.model.api.TreePointer.addListener","location":"model-api/org.modelix.model.api/-tree-pointer/add-listener.html","searchKeys":["addListener","open override fun addListener(l: IBranchListener)","org.modelix.model.api.TreePointer.addListener"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConcept?)","description":"org.modelix.model.api.TreePointer.addNewChild","location":"model-api/org.modelix.model.api/-tree-pointer/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConcept?)","org.modelix.model.api.TreePointer.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConcept?)","description":"org.modelix.model.api.WriteTransaction.addNewChild","location":"model-api/org.modelix.model.api/-write-transaction/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConcept?)","org.modelix.model.api.WriteTransaction.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConceptReference?)","description":"org.modelix.model.api.TreePointer.addNewChild","location":"model-api/org.modelix.model.api/-tree-pointer/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConceptReference?)","org.modelix.model.api.TreePointer.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConceptReference?)","description":"org.modelix.model.api.WriteTransaction.addNewChild","location":"model-api/org.modelix.model.api/-write-transaction/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConceptReference?)","org.modelix.model.api.WriteTransaction.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConcept?): Long","description":"org.modelix.model.api.TreePointer.addNewChild","location":"model-api/org.modelix.model.api/-tree-pointer/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConcept?): Long","org.modelix.model.api.TreePointer.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConcept?): Long","description":"org.modelix.model.api.WriteTransaction.addNewChild","location":"model-api/org.modelix.model.api/-write-transaction/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConcept?): Long","org.modelix.model.api.WriteTransaction.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConceptReference?): Long","description":"org.modelix.model.api.TreePointer.addNewChild","location":"model-api/org.modelix.model.api/-tree-pointer/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConceptReference?): Long","org.modelix.model.api.TreePointer.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConceptReference?): Long","description":"org.modelix.model.api.WriteTransaction.addNewChild","location":"model-api/org.modelix.model.api/-write-transaction/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConceptReference?): Long","org.modelix.model.api.WriteTransaction.addNewChild"]},{"name":"open override fun addNewChild(role: IChildLink, index: Int, concept: IConcept?): INode","description":"org.modelix.model.api.PNodeAdapter.addNewChild","location":"model-api/org.modelix.model.api/-p-node-adapter/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(role: IChildLink, index: Int, concept: IConcept?): INode","org.modelix.model.api.PNodeAdapter.addNewChild"]},{"name":"open override fun addNewChild(role: IChildLink, index: Int, concept: IConceptReference?): INode","description":"org.modelix.model.api.PNodeAdapter.addNewChild","location":"model-api/org.modelix.model.api/-p-node-adapter/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(role: IChildLink, index: Int, concept: IConceptReference?): INode","org.modelix.model.api.PNodeAdapter.addNewChild"]},{"name":"open override fun addNewChild(role: String?, index: Int, concept: IConcept?): INode","description":"org.modelix.model.api.IDeprecatedNodeDefaults.addNewChild","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(role: String?, index: Int, concept: IConcept?): INode","org.modelix.model.api.IDeprecatedNodeDefaults.addNewChild"]},{"name":"open override fun addNewChild(role: String?, index: Int, concept: IConcept?): INode","description":"org.modelix.model.api.PNodeAdapter.addNewChild","location":"model-api/org.modelix.model.api/-p-node-adapter/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(role: String?, index: Int, concept: IConcept?): INode","org.modelix.model.api.PNodeAdapter.addNewChild"]},{"name":"open override fun addNewChild(role: String?, index: Int, concept: IConcept?): INode","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.addNewChild","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(role: String?, index: Int, concept: IConcept?): INode","org.modelix.model.area.AreaWithMounts.NodeWrapper.addNewChild"]},{"name":"open override fun addNewChild(role: String?, index: Int, concept: IConcept?): INode","description":"org.modelix.model.area.CompositeArea.NodeWrapper.addNewChild","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(role: String?, index: Int, concept: IConcept?): INode","org.modelix.model.area.CompositeArea.NodeWrapper.addNewChild"]},{"name":"open override fun addNewChild(role: String?, index: Int, concept: IConcept?): INode","description":"org.modelix.model.area.CompositeArea.Root.addNewChild","location":"model-api/org.modelix.model.area/-composite-area/-root/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(role: String?, index: Int, concept: IConcept?): INode","org.modelix.model.area.CompositeArea.Root.addNewChild"]},{"name":"open override fun addNewChild(role: String?, index: Int, concept: IConceptReference?): INode","description":"org.modelix.model.api.IDeprecatedNodeDefaults.addNewChild","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(role: String?, index: Int, concept: IConceptReference?): INode","org.modelix.model.api.IDeprecatedNodeDefaults.addNewChild"]},{"name":"open override fun addNewChild(role: String?, index: Int, concept: IConceptReference?): INode","description":"org.modelix.model.api.PNodeAdapter.addNewChild","location":"model-api/org.modelix.model.api/-p-node-adapter/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(role: String?, index: Int, concept: IConceptReference?): INode","org.modelix.model.api.PNodeAdapter.addNewChild"]},{"name":"open override fun addNewChild(role: String?, index: Number, concept: IConceptJS?): INodeJS","description":"org.modelix.model.api.NodeAdapterJS.addNewChild","location":"model-api/org.modelix.model.api/-node-adapter-j-s/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(role: String?, index: Number, concept: IConceptJS?): INodeJS","org.modelix.model.api.NodeAdapterJS.addNewChild"]},{"name":"open override fun addNewChildren(parentId: Long, role: String?, index: Int, childIds: LongArray, concepts: Array<IConceptReference?>)","description":"org.modelix.model.api.TreePointer.addNewChildren","location":"model-api/org.modelix.model.api/-tree-pointer/add-new-children.html","searchKeys":["addNewChildren","open override fun addNewChildren(parentId: Long, role: String?, index: Int, childIds: LongArray, concepts: Array<IConceptReference?>)","org.modelix.model.api.TreePointer.addNewChildren"]},{"name":"open override fun addNewChildren(parentId: Long, role: String?, index: Int, childIds: LongArray, concepts: Array<IConceptReference?>)","description":"org.modelix.model.api.WriteTransaction.addNewChildren","location":"model-api/org.modelix.model.api/-write-transaction/add-new-children.html","searchKeys":["addNewChildren","open override fun addNewChildren(parentId: Long, role: String?, index: Int, childIds: LongArray, concepts: Array<IConceptReference?>)","org.modelix.model.api.WriteTransaction.addNewChildren"]},{"name":"open override fun addNewChildren(parentId: Long, role: String?, index: Int, concepts: Array<IConceptReference?>): LongArray","description":"org.modelix.model.api.TreePointer.addNewChildren","location":"model-api/org.modelix.model.api/-tree-pointer/add-new-children.html","searchKeys":["addNewChildren","open override fun addNewChildren(parentId: Long, role: String?, index: Int, concepts: Array<IConceptReference?>): LongArray","org.modelix.model.api.TreePointer.addNewChildren"]},{"name":"open override fun addNewChildren(parentId: Long, role: String?, index: Int, concepts: Array<IConceptReference?>): LongArray","description":"org.modelix.model.api.WriteTransaction.addNewChildren","location":"model-api/org.modelix.model.api/-write-transaction/add-new-children.html","searchKeys":["addNewChildren","open override fun addNewChildren(parentId: Long, role: String?, index: Int, concepts: Array<IConceptReference?>): LongArray","org.modelix.model.api.WriteTransaction.addNewChildren"]},{"name":"open override fun addNewChildren(role: String?, index: Int, concepts: List<IConceptReference?>): List<INode>","description":"org.modelix.model.api.PNodeAdapter.addNewChildren","location":"model-api/org.modelix.model.api/-p-node-adapter/add-new-children.html","searchKeys":["addNewChildren","open override fun addNewChildren(role: String?, index: Int, concepts: List<IConceptReference?>): List<INode>","org.modelix.model.api.PNodeAdapter.addNewChildren"]},{"name":"open override fun areaChanged(changes: IAreaChangeList)","description":"org.modelix.model.area.CompositeArea.ListenerWrapper.areaChanged","location":"model-api/org.modelix.model.area/-composite-area/-listener-wrapper/area-changed.html","searchKeys":["areaChanged","open override fun areaChanged(changes: IAreaChangeList)","org.modelix.model.area.CompositeArea.ListenerWrapper.areaChanged"]},{"name":"open override fun canRead(): Boolean","description":"org.modelix.model.api.PBranch.canRead","location":"model-api/org.modelix.model.api/-p-branch/can-read.html","searchKeys":["canRead","open override fun canRead(): Boolean","org.modelix.model.api.PBranch.canRead"]},{"name":"open override fun canRead(): Boolean","description":"org.modelix.model.api.TreePointer.canRead","location":"model-api/org.modelix.model.api/-tree-pointer/can-read.html","searchKeys":["canRead","open override fun canRead(): Boolean","org.modelix.model.api.TreePointer.canRead"]},{"name":"open override fun canRead(): Boolean","description":"org.modelix.model.area.AbstractArea.canRead","location":"model-api/org.modelix.model.area/-abstract-area/can-read.html","searchKeys":["canRead","open override fun canRead(): Boolean","org.modelix.model.area.AbstractArea.canRead"]},{"name":"open override fun canRead(): Boolean","description":"org.modelix.model.area.AreaWithMounts.canRead","location":"model-api/org.modelix.model.area/-area-with-mounts/can-read.html","searchKeys":["canRead","open override fun canRead(): Boolean","org.modelix.model.area.AreaWithMounts.canRead"]},{"name":"open override fun canRead(): Boolean","description":"org.modelix.model.area.CompositeArea.canRead","location":"model-api/org.modelix.model.area/-composite-area/can-read.html","searchKeys":["canRead","open override fun canRead(): Boolean","org.modelix.model.area.CompositeArea.canRead"]},{"name":"open override fun canRead(): Boolean","description":"org.modelix.model.area.PArea.canRead","location":"model-api/org.modelix.model.area/-p-area/can-read.html","searchKeys":["canRead","open override fun canRead(): Boolean","org.modelix.model.area.PArea.canRead"]},{"name":"open override fun canWrite(): Boolean","description":"org.modelix.model.api.PBranch.canWrite","location":"model-api/org.modelix.model.api/-p-branch/can-write.html","searchKeys":["canWrite","open override fun canWrite(): Boolean","org.modelix.model.api.PBranch.canWrite"]},{"name":"open override fun canWrite(): Boolean","description":"org.modelix.model.api.TreePointer.canWrite","location":"model-api/org.modelix.model.api/-tree-pointer/can-write.html","searchKeys":["canWrite","open override fun canWrite(): Boolean","org.modelix.model.api.TreePointer.canWrite"]},{"name":"open override fun canWrite(): Boolean","description":"org.modelix.model.area.AbstractArea.canWrite","location":"model-api/org.modelix.model.area/-abstract-area/can-write.html","searchKeys":["canWrite","open override fun canWrite(): Boolean","org.modelix.model.area.AbstractArea.canWrite"]},{"name":"open override fun canWrite(): Boolean","description":"org.modelix.model.area.AreaWithMounts.canWrite","location":"model-api/org.modelix.model.area/-area-with-mounts/can-write.html","searchKeys":["canWrite","open override fun canWrite(): Boolean","org.modelix.model.area.AreaWithMounts.canWrite"]},{"name":"open override fun canWrite(): Boolean","description":"org.modelix.model.area.CompositeArea.canWrite","location":"model-api/org.modelix.model.area/-composite-area/can-write.html","searchKeys":["canWrite","open override fun canWrite(): Boolean","org.modelix.model.area.CompositeArea.canWrite"]},{"name":"open override fun canWrite(): Boolean","description":"org.modelix.model.area.PArea.canWrite","location":"model-api/org.modelix.model.area/-p-area/can-write.html","searchKeys":["canWrite","open override fun canWrite(): Boolean","org.modelix.model.area.PArea.canWrite"]},{"name":"open override fun collectAreas(): List<IArea>","description":"org.modelix.model.area.AbstractArea.collectAreas","location":"model-api/org.modelix.model.area/-abstract-area/collect-areas.html","searchKeys":["collectAreas","open override fun collectAreas(): List<IArea>","org.modelix.model.area.AbstractArea.collectAreas"]},{"name":"open override fun collectAreas(): List<IArea>","description":"org.modelix.model.area.AreaWithMounts.collectAreas","location":"model-api/org.modelix.model.area/-area-with-mounts/collect-areas.html","searchKeys":["collectAreas","open override fun collectAreas(): List<IArea>","org.modelix.model.area.AreaWithMounts.collectAreas"]},{"name":"open override fun collectAreas(): List<IArea>","description":"org.modelix.model.area.CompositeArea.collectAreas","location":"model-api/org.modelix.model.area/-composite-area/collect-areas.html","searchKeys":["collectAreas","open override fun collectAreas(): List<IArea>","org.modelix.model.area.CompositeArea.collectAreas"]},{"name":"open override fun collectAreas(): List<IArea>","description":"org.modelix.model.area.PArea.collectAreas","location":"model-api/org.modelix.model.area/-p-area/collect-areas.html","searchKeys":["collectAreas","open override fun collectAreas(): List<IArea>","org.modelix.model.area.PArea.collectAreas"]},{"name":"open override fun containsNode(nodeId: Long): Boolean","description":"org.modelix.model.api.Transaction.containsNode","location":"model-api/org.modelix.model.api/-transaction/contains-node.html","searchKeys":["containsNode","open override fun containsNode(nodeId: Long): Boolean","org.modelix.model.api.Transaction.containsNode"]},{"name":"open override fun containsNode(nodeId: Long): Boolean","description":"org.modelix.model.api.TreePointer.containsNode","location":"model-api/org.modelix.model.api/-tree-pointer/contains-node.html","searchKeys":["containsNode","open override fun containsNode(nodeId: Long): Boolean","org.modelix.model.api.TreePointer.containsNode"]},{"name":"open override fun deleteNode(nodeId: Long)","description":"org.modelix.model.api.TreePointer.deleteNode","location":"model-api/org.modelix.model.api/-tree-pointer/delete-node.html","searchKeys":["deleteNode","open override fun deleteNode(nodeId: Long)","org.modelix.model.api.TreePointer.deleteNode"]},{"name":"open override fun deleteNode(nodeId: Long)","description":"org.modelix.model.api.WriteTransaction.deleteNode","location":"model-api/org.modelix.model.api/-write-transaction/delete-node.html","searchKeys":["deleteNode","open override fun deleteNode(nodeId: Long)","org.modelix.model.api.WriteTransaction.deleteNode"]},{"name":"open override fun deserialize(decoder: Decoder): ConceptReference","description":"org.modelix.model.api.ConceptReferenceKSerializer.deserialize","location":"model-api/org.modelix.model.api/-concept-reference-k-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): ConceptReference","org.modelix.model.api.ConceptReferenceKSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): INodeReference","description":"org.modelix.model.api.NodeReferenceKSerializer.deserialize","location":"model-api/org.modelix.model.api/-node-reference-k-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): INodeReference","org.modelix.model.api.NodeReferenceKSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): PropertyType","description":"org.modelix.model.data.PropertyTypeSerializer.deserialize","location":"model-api/org.modelix.model.data/-property-type-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): PropertyType","org.modelix.model.data.PropertyTypeSerializer.deserialize"]},{"name":"open override fun deserialize(serialized: String): INodeReference","description":"org.modelix.model.api.PNodeReferenceSerializer.deserialize","location":"model-api/org.modelix.model.api/-p-node-reference-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(serialized: String): INodeReference","org.modelix.model.api.PNodeReferenceSerializer.deserialize"]},{"name":"open override fun generate(): Long","description":"org.modelix.model.api.IdGeneratorDummy.generate","location":"model-api/org.modelix.model.api/-id-generator-dummy/generate.html","searchKeys":["generate","open override fun generate(): Long","org.modelix.model.api.IdGeneratorDummy.generate"]},{"name":"open override fun getAllChildLinks(): List<IChildLink>","description":"org.modelix.model.api.SimpleConcept.getAllChildLinks","location":"model-api/org.modelix.model.api/-simple-concept/get-all-child-links.html","searchKeys":["getAllChildLinks","open override fun getAllChildLinks(): List<IChildLink>","org.modelix.model.api.SimpleConcept.getAllChildLinks"]},{"name":"open override fun getAllChildren(): Array<INodeJS>","description":"org.modelix.model.api.NodeAdapterJS.getAllChildren","location":"model-api/org.modelix.model.api/-node-adapter-j-s/get-all-children.html","searchKeys":["getAllChildren","open override fun getAllChildren(): Array<INodeJS>","org.modelix.model.api.NodeAdapterJS.getAllChildren"]},{"name":"open override fun getAllChildren(parentId: Long): Iterable<Long>","description":"org.modelix.model.api.Transaction.getAllChildren","location":"model-api/org.modelix.model.api/-transaction/get-all-children.html","searchKeys":["getAllChildren","open override fun getAllChildren(parentId: Long): Iterable<Long>","org.modelix.model.api.Transaction.getAllChildren"]},{"name":"open override fun getAllChildren(parentId: Long): Iterable<Long>","description":"org.modelix.model.api.TreePointer.getAllChildren","location":"model-api/org.modelix.model.api/-tree-pointer/get-all-children.html","searchKeys":["getAllChildren","open override fun getAllChildren(parentId: Long): Iterable<Long>","org.modelix.model.api.TreePointer.getAllChildren"]},{"name":"open override fun getAllChildrenAsFlow(): Flow<INode>","description":"org.modelix.model.api.PNodeAdapter.getAllChildrenAsFlow","location":"model-api/org.modelix.model.api/-p-node-adapter/get-all-children-as-flow.html","searchKeys":["getAllChildrenAsFlow","open override fun getAllChildrenAsFlow(): Flow<INode>","org.modelix.model.api.PNodeAdapter.getAllChildrenAsFlow"]},{"name":"open override fun getAllConcepts(): List<IConcept>","description":"org.modelix.model.api.DefaultLanguageRepository.getAllConcepts","location":"model-api/org.modelix.model.api/-default-language-repository/get-all-concepts.html","searchKeys":["getAllConcepts","open override fun getAllConcepts(): List<IConcept>","org.modelix.model.api.DefaultLanguageRepository.getAllConcepts"]},{"name":"open override fun getAllProperties(): List<IProperty>","description":"org.modelix.model.api.SimpleConcept.getAllProperties","location":"model-api/org.modelix.model.api/-simple-concept/get-all-properties.html","searchKeys":["getAllProperties","open override fun getAllProperties(): List<IProperty>","org.modelix.model.api.SimpleConcept.getAllProperties"]},{"name":"open override fun getAllReferenceLinks(): List<IReferenceLink>","description":"org.modelix.model.api.SimpleConcept.getAllReferenceLinks","location":"model-api/org.modelix.model.api/-simple-concept/get-all-reference-links.html","searchKeys":["getAllReferenceLinks","open override fun getAllReferenceLinks(): List<IReferenceLink>","org.modelix.model.api.SimpleConcept.getAllReferenceLinks"]},{"name":"open override fun getAllReferenceTargetRefsAsFlow(): Flow<Pair<IReferenceLink, INodeReference>>","description":"org.modelix.model.api.PNodeAdapter.getAllReferenceTargetRefsAsFlow","location":"model-api/org.modelix.model.api/-p-node-adapter/get-all-reference-target-refs-as-flow.html","searchKeys":["getAllReferenceTargetRefsAsFlow","open override fun getAllReferenceTargetRefsAsFlow(): Flow<Pair<IReferenceLink, INodeReference>>","org.modelix.model.api.PNodeAdapter.getAllReferenceTargetRefsAsFlow"]},{"name":"open override fun getAllReferenceTargetsAsFlow(): Flow<Pair<IReferenceLink, INode>>","description":"org.modelix.model.api.PNodeAdapter.getAllReferenceTargetsAsFlow","location":"model-api/org.modelix.model.api/-p-node-adapter/get-all-reference-targets-as-flow.html","searchKeys":["getAllReferenceTargetsAsFlow","open override fun getAllReferenceTargetsAsFlow(): Flow<Pair<IReferenceLink, INode>>","org.modelix.model.api.PNodeAdapter.getAllReferenceTargetsAsFlow"]},{"name":"open override fun getArea(): CompositeArea","description":"org.modelix.model.area.CompositeArea.NodeWrapper.getArea","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/get-area.html","searchKeys":["getArea","open override fun getArea(): CompositeArea","org.modelix.model.area.CompositeArea.NodeWrapper.getArea"]},{"name":"open override fun getArea(): CompositeArea","description":"org.modelix.model.area.CompositeArea.Root.getArea","location":"model-api/org.modelix.model.area/-composite-area/-root/get-area.html","searchKeys":["getArea","open override fun getArea(): CompositeArea","org.modelix.model.area.CompositeArea.Root.getArea"]},{"name":"open override fun getArea(): IArea","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.getArea","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/get-area.html","searchKeys":["getArea","open override fun getArea(): IArea","org.modelix.model.area.AreaWithMounts.NodeWrapper.getArea"]},{"name":"open override fun getArea(): PArea","description":"org.modelix.model.api.PNodeAdapter.getArea","location":"model-api/org.modelix.model.api/-p-node-adapter/get-area.html","searchKeys":["getArea","open override fun getArea(): PArea","org.modelix.model.api.PNodeAdapter.getArea"]},{"name":"open override fun getChildLink(name: String): IChildLink","description":"org.modelix.model.api.SimpleConcept.getChildLink","location":"model-api/org.modelix.model.api/-simple-concept/get-child-link.html","searchKeys":["getChildLink","open override fun getChildLink(name: String): IChildLink","org.modelix.model.api.SimpleConcept.getChildLink"]},{"name":"open override fun getChildren(parentId: Long, role: String?): Iterable<Long>","description":"org.modelix.model.api.Transaction.getChildren","location":"model-api/org.modelix.model.api/-transaction/get-children.html","searchKeys":["getChildren","open override fun getChildren(parentId: Long, role: String?): Iterable<Long>","org.modelix.model.api.Transaction.getChildren"]},{"name":"open override fun getChildren(parentId: Long, role: String?): Iterable<Long>","description":"org.modelix.model.api.TreePointer.getChildren","location":"model-api/org.modelix.model.api/-tree-pointer/get-children.html","searchKeys":["getChildren","open override fun getChildren(parentId: Long, role: String?): Iterable<Long>","org.modelix.model.api.TreePointer.getChildren"]},{"name":"open override fun getChildren(role: String?): Array<INodeJS>","description":"org.modelix.model.api.NodeAdapterJS.getChildren","location":"model-api/org.modelix.model.api/-node-adapter-j-s/get-children.html","searchKeys":["getChildren","open override fun getChildren(role: String?): Array<INodeJS>","org.modelix.model.api.NodeAdapterJS.getChildren"]},{"name":"open override fun getChildren(role: String?): Iterable<INode>","description":"org.modelix.model.api.IDeprecatedNodeDefaults.getChildren","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/get-children.html","searchKeys":["getChildren","open override fun getChildren(role: String?): Iterable<INode>","org.modelix.model.api.IDeprecatedNodeDefaults.getChildren"]},{"name":"open override fun getChildren(role: String?): Iterable<INode>","description":"org.modelix.model.api.PNodeAdapter.getChildren","location":"model-api/org.modelix.model.api/-p-node-adapter/get-children.html","searchKeys":["getChildren","open override fun getChildren(role: String?): Iterable<INode>","org.modelix.model.api.PNodeAdapter.getChildren"]},{"name":"open override fun getChildren(role: String?): Iterable<INode>","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.getChildren","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/get-children.html","searchKeys":["getChildren","open override fun getChildren(role: String?): Iterable<INode>","org.modelix.model.area.AreaWithMounts.NodeWrapper.getChildren"]},{"name":"open override fun getChildren(role: String?): Iterable<INode>","description":"org.modelix.model.area.CompositeArea.NodeWrapper.getChildren","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/get-children.html","searchKeys":["getChildren","open override fun getChildren(role: String?): Iterable<INode>","org.modelix.model.area.CompositeArea.NodeWrapper.getChildren"]},{"name":"open override fun getChildren(role: String?): Iterable<INode>","description":"org.modelix.model.area.CompositeArea.Root.getChildren","location":"model-api/org.modelix.model.area/-composite-area/-root/get-children.html","searchKeys":["getChildren","open override fun getChildren(role: String?): Iterable<INode>","org.modelix.model.area.CompositeArea.Root.getChildren"]},{"name":"open override fun getChildrenAsFlow(role: IChildLink): Flow<INode>","description":"org.modelix.model.api.PNodeAdapter.getChildrenAsFlow","location":"model-api/org.modelix.model.api/-p-node-adapter/get-children-as-flow.html","searchKeys":["getChildrenAsFlow","open override fun getChildrenAsFlow(role: IChildLink): Flow<INode>","org.modelix.model.api.PNodeAdapter.getChildrenAsFlow"]},{"name":"open override fun getConcept(): IConcept","description":"org.modelix.model.api.NullChildLink.getConcept","location":"model-api/org.modelix.model.api/-null-child-link/get-concept.html","searchKeys":["getConcept","open override fun getConcept(): IConcept","org.modelix.model.api.NullChildLink.getConcept"]},{"name":"open override fun getConcept(): IConcept","description":"org.modelix.model.api.RoleFromName.getConcept","location":"model-api/org.modelix.model.api/-role-from-name/get-concept.html","searchKeys":["getConcept","open override fun getConcept(): IConcept","org.modelix.model.api.RoleFromName.getConcept"]},{"name":"open override fun getConcept(): IConcept","description":"org.modelix.model.api.SimpleChildLink.getConcept","location":"model-api/org.modelix.model.api/-simple-child-link/get-concept.html","searchKeys":["getConcept","open override fun getConcept(): IConcept","org.modelix.model.api.SimpleChildLink.getConcept"]},{"name":"open override fun getConcept(): IConcept","description":"org.modelix.model.api.SimpleProperty.getConcept","location":"model-api/org.modelix.model.api/-simple-property/get-concept.html","searchKeys":["getConcept","open override fun getConcept(): IConcept","org.modelix.model.api.SimpleProperty.getConcept"]},{"name":"open override fun getConcept(): IConcept","description":"org.modelix.model.api.SimpleReferenceLink.getConcept","location":"model-api/org.modelix.model.api/-simple-reference-link/get-concept.html","searchKeys":["getConcept","open override fun getConcept(): IConcept","org.modelix.model.api.SimpleReferenceLink.getConcept"]},{"name":"open override fun getConcept(): IConceptJS?","description":"org.modelix.model.api.NodeAdapterJS.getConcept","location":"model-api/org.modelix.model.api/-node-adapter-j-s/get-concept.html","searchKeys":["getConcept","open override fun getConcept(): IConceptJS?","org.modelix.model.api.NodeAdapterJS.getConcept"]},{"name":"open override fun getConcept(nodeId: Long): IConcept?","description":"org.modelix.model.api.Transaction.getConcept","location":"model-api/org.modelix.model.api/-transaction/get-concept.html","searchKeys":["getConcept","open override fun getConcept(nodeId: Long): IConcept?","org.modelix.model.api.Transaction.getConcept"]},{"name":"open override fun getConcept(nodeId: Long): IConcept?","description":"org.modelix.model.api.TreePointer.getConcept","location":"model-api/org.modelix.model.api/-tree-pointer/get-concept.html","searchKeys":["getConcept","open override fun getConcept(nodeId: Long): IConcept?","org.modelix.model.api.TreePointer.getConcept"]},{"name":"open override fun getConceptReference(): IConceptReference?","description":"org.modelix.model.api.PNodeAdapter.getConceptReference","location":"model-api/org.modelix.model.api/-p-node-adapter/get-concept-reference.html","searchKeys":["getConceptReference","open override fun getConceptReference(): IConceptReference?","org.modelix.model.api.PNodeAdapter.getConceptReference"]},{"name":"open override fun getConceptReference(): IConceptReference?","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.getConceptReference","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/get-concept-reference.html","searchKeys":["getConceptReference","open override fun getConceptReference(): IConceptReference?","org.modelix.model.area.AreaWithMounts.NodeWrapper.getConceptReference"]},{"name":"open override fun getConceptReference(): IConceptReference?","description":"org.modelix.model.area.CompositeArea.NodeWrapper.getConceptReference","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/get-concept-reference.html","searchKeys":["getConceptReference","open override fun getConceptReference(): IConceptReference?","org.modelix.model.area.CompositeArea.NodeWrapper.getConceptReference"]},{"name":"open override fun getConceptReference(): IConceptReference?","description":"org.modelix.model.area.CompositeArea.Root.getConceptReference","location":"model-api/org.modelix.model.area/-composite-area/-root/get-concept-reference.html","searchKeys":["getConceptReference","open override fun getConceptReference(): IConceptReference?","org.modelix.model.area.CompositeArea.Root.getConceptReference"]},{"name":"open override fun getConceptReference(nodeId: Long): IConceptReference?","description":"org.modelix.model.api.Transaction.getConceptReference","location":"model-api/org.modelix.model.api/-transaction/get-concept-reference.html","searchKeys":["getConceptReference","open override fun getConceptReference(nodeId: Long): IConceptReference?","org.modelix.model.api.Transaction.getConceptReference"]},{"name":"open override fun getConceptReference(nodeId: Long): IConceptReference?","description":"org.modelix.model.api.TreePointer.getConceptReference","location":"model-api/org.modelix.model.api/-tree-pointer/get-concept-reference.html","searchKeys":["getConceptReference","open override fun getConceptReference(nodeId: Long): IConceptReference?","org.modelix.model.api.TreePointer.getConceptReference"]},{"name":"open override fun getConceptUID(): String?","description":"org.modelix.model.api.NodeAdapterJS.getConceptUID","location":"model-api/org.modelix.model.api/-node-adapter-j-s/get-concept-u-i-d.html","searchKeys":["getConceptUID","open override fun getConceptUID(): String?","org.modelix.model.api.NodeAdapterJS.getConceptUID"]},{"name":"open override fun getConcepts(): List<SimpleConcept>","description":"org.modelix.model.api.SimpleLanguage.getConcepts","location":"model-api/org.modelix.model.api/-simple-language/get-concepts.html","searchKeys":["getConcepts","open override fun getConcepts(): List<SimpleConcept>","org.modelix.model.api.SimpleLanguage.getConcepts"]},{"name":"open override fun getDescendantsAsFlow(includeSelf: Boolean): Flow<INode>","description":"org.modelix.model.api.PNodeAdapter.getDescendantsAsFlow","location":"model-api/org.modelix.model.api/-p-node-adapter/get-descendants-as-flow.html","searchKeys":["getDescendantsAsFlow","open override fun getDescendantsAsFlow(includeSelf: Boolean): Flow<INode>","org.modelix.model.api.PNodeAdapter.getDescendantsAsFlow"]},{"name":"open override fun getDirectSuperConcepts(): Array<IConceptJS>","description":"GeneratedConcept.getDirectSuperConcepts","location":"model-api/[root]/-generated-concept/get-direct-super-concepts.html","searchKeys":["getDirectSuperConcepts","open override fun getDirectSuperConcepts(): Array<IConceptJS>","GeneratedConcept.getDirectSuperConcepts"]},{"name":"open override fun getDirectSuperConcepts(): List<IConcept>","description":"org.modelix.model.api.SimpleConcept.getDirectSuperConcepts","location":"model-api/org.modelix.model.api/-simple-concept/get-direct-super-concepts.html","searchKeys":["getDirectSuperConcepts","open override fun getDirectSuperConcepts(): List<IConcept>","org.modelix.model.api.SimpleConcept.getDirectSuperConcepts"]},{"name":"open override fun getId(): String","description":"org.modelix.model.api.PBranch.getId","location":"model-api/org.modelix.model.api/-p-branch/get-id.html","searchKeys":["getId","open override fun getId(): String","org.modelix.model.api.PBranch.getId"]},{"name":"open override fun getId(): String","description":"org.modelix.model.api.TreePointer.getId","location":"model-api/org.modelix.model.api/-tree-pointer/get-id.html","searchKeys":["getId","open override fun getId(): String","org.modelix.model.api.TreePointer.getId"]},{"name":"open override fun getLongName(): String","description":"org.modelix.model.api.SimpleConcept.getLongName","location":"model-api/org.modelix.model.api/-simple-concept/get-long-name.html","searchKeys":["getLongName","open override fun getLongName(): String","org.modelix.model.api.SimpleConcept.getLongName"]},{"name":"open override fun getName(): String","description":"org.modelix.model.api.SimpleLanguage.getName","location":"model-api/org.modelix.model.api/-simple-language/get-name.html","searchKeys":["getName","open override fun getName(): String","org.modelix.model.api.SimpleLanguage.getName"]},{"name":"open override fun getOwnChildLinks(): List<IChildLink>","description":"org.modelix.model.api.SimpleConcept.getOwnChildLinks","location":"model-api/org.modelix.model.api/-simple-concept/get-own-child-links.html","searchKeys":["getOwnChildLinks","open override fun getOwnChildLinks(): List<IChildLink>","org.modelix.model.api.SimpleConcept.getOwnChildLinks"]},{"name":"open override fun getOwnProperties(): List<IProperty>","description":"org.modelix.model.api.SimpleConcept.getOwnProperties","location":"model-api/org.modelix.model.api/-simple-concept/get-own-properties.html","searchKeys":["getOwnProperties","open override fun getOwnProperties(): List<IProperty>","org.modelix.model.api.SimpleConcept.getOwnProperties"]},{"name":"open override fun getOwnReferenceLinks(): List<IReferenceLink>","description":"org.modelix.model.api.SimpleConcept.getOwnReferenceLinks","location":"model-api/org.modelix.model.api/-simple-concept/get-own-reference-links.html","searchKeys":["getOwnReferenceLinks","open override fun getOwnReferenceLinks(): List<IReferenceLink>","org.modelix.model.api.SimpleConcept.getOwnReferenceLinks"]},{"name":"open override fun getParent(): INodeJS?","description":"org.modelix.model.api.NodeAdapterJS.getParent","location":"model-api/org.modelix.model.api/-node-adapter-j-s/get-parent.html","searchKeys":["getParent","open override fun getParent(): INodeJS?","org.modelix.model.api.NodeAdapterJS.getParent"]},{"name":"open override fun getParent(nodeId: Long): Long","description":"org.modelix.model.api.Transaction.getParent","location":"model-api/org.modelix.model.api/-transaction/get-parent.html","searchKeys":["getParent","open override fun getParent(nodeId: Long): Long","org.modelix.model.api.Transaction.getParent"]},{"name":"open override fun getParent(nodeId: Long): Long","description":"org.modelix.model.api.TreePointer.getParent","location":"model-api/org.modelix.model.api/-tree-pointer/get-parent.html","searchKeys":["getParent","open override fun getParent(nodeId: Long): Long","org.modelix.model.api.TreePointer.getParent"]},{"name":"open override fun getParentAsFlow(): Flow<INode>","description":"org.modelix.model.api.PNodeAdapter.getParentAsFlow","location":"model-api/org.modelix.model.api/-p-node-adapter/get-parent-as-flow.html","searchKeys":["getParentAsFlow","open override fun getParentAsFlow(): Flow<INode>","org.modelix.model.api.PNodeAdapter.getParentAsFlow"]},{"name":"open override fun getPriority(): Int","description":"org.modelix.model.api.DefaultLanguageRepository.getPriority","location":"model-api/org.modelix.model.api/-default-language-repository/get-priority.html","searchKeys":["getPriority","open override fun getPriority(): Int","org.modelix.model.api.DefaultLanguageRepository.getPriority"]},{"name":"open override fun getProperty(name: String): IProperty","description":"org.modelix.model.api.SimpleConcept.getProperty","location":"model-api/org.modelix.model.api/-simple-concept/get-property.html","searchKeys":["getProperty","open override fun getProperty(name: String): IProperty","org.modelix.model.api.SimpleConcept.getProperty"]},{"name":"open override fun getProperty(nodeId: Long, role: String): String?","description":"org.modelix.model.api.Transaction.getProperty","location":"model-api/org.modelix.model.api/-transaction/get-property.html","searchKeys":["getProperty","open override fun getProperty(nodeId: Long, role: String): String?","org.modelix.model.api.Transaction.getProperty"]},{"name":"open override fun getProperty(nodeId: Long, role: String): String?","description":"org.modelix.model.api.TreePointer.getProperty","location":"model-api/org.modelix.model.api/-tree-pointer/get-property.html","searchKeys":["getProperty","open override fun getProperty(nodeId: Long, role: String): String?","org.modelix.model.api.TreePointer.getProperty"]},{"name":"open override fun getPropertyRoles(): Array<String>","description":"org.modelix.model.api.NodeAdapterJS.getPropertyRoles","location":"model-api/org.modelix.model.api/-node-adapter-j-s/get-property-roles.html","searchKeys":["getPropertyRoles","open override fun getPropertyRoles(): Array<String>","org.modelix.model.api.NodeAdapterJS.getPropertyRoles"]},{"name":"open override fun getPropertyRoles(): List<String>","description":"org.modelix.model.api.IDeprecatedNodeDefaults.getPropertyRoles","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/get-property-roles.html","searchKeys":["getPropertyRoles","open override fun getPropertyRoles(): List<String>","org.modelix.model.api.IDeprecatedNodeDefaults.getPropertyRoles"]},{"name":"open override fun getPropertyRoles(): List<String>","description":"org.modelix.model.api.PNodeAdapter.getPropertyRoles","location":"model-api/org.modelix.model.api/-p-node-adapter/get-property-roles.html","searchKeys":["getPropertyRoles","open override fun getPropertyRoles(): List<String>","org.modelix.model.api.PNodeAdapter.getPropertyRoles"]},{"name":"open override fun getPropertyRoles(): List<String>","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.getPropertyRoles","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/get-property-roles.html","searchKeys":["getPropertyRoles","open override fun getPropertyRoles(): List<String>","org.modelix.model.area.AreaWithMounts.NodeWrapper.getPropertyRoles"]},{"name":"open override fun getPropertyRoles(): List<String>","description":"org.modelix.model.area.CompositeArea.NodeWrapper.getPropertyRoles","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/get-property-roles.html","searchKeys":["getPropertyRoles","open override fun getPropertyRoles(): List<String>","org.modelix.model.area.CompositeArea.NodeWrapper.getPropertyRoles"]},{"name":"open override fun getPropertyRoles(): List<String>","description":"org.modelix.model.area.CompositeArea.Root.getPropertyRoles","location":"model-api/org.modelix.model.area/-composite-area/-root/get-property-roles.html","searchKeys":["getPropertyRoles","open override fun getPropertyRoles(): List<String>","org.modelix.model.area.CompositeArea.Root.getPropertyRoles"]},{"name":"open override fun getPropertyRoles(sourceId: Long): Iterable<String>","description":"org.modelix.model.api.Transaction.getPropertyRoles","location":"model-api/org.modelix.model.api/-transaction/get-property-roles.html","searchKeys":["getPropertyRoles","open override fun getPropertyRoles(sourceId: Long): Iterable<String>","org.modelix.model.api.Transaction.getPropertyRoles"]},{"name":"open override fun getPropertyRoles(sourceId: Long): Iterable<String>","description":"org.modelix.model.api.TreePointer.getPropertyRoles","location":"model-api/org.modelix.model.api/-tree-pointer/get-property-roles.html","searchKeys":["getPropertyRoles","open override fun getPropertyRoles(sourceId: Long): Iterable<String>","org.modelix.model.api.TreePointer.getPropertyRoles"]},{"name":"open override fun getPropertyValue(role: String): String?","description":"org.modelix.model.api.IDeprecatedNodeDefaults.getPropertyValue","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/get-property-value.html","searchKeys":["getPropertyValue","open override fun getPropertyValue(role: String): String?","org.modelix.model.api.IDeprecatedNodeDefaults.getPropertyValue"]},{"name":"open override fun getPropertyValue(role: String): String?","description":"org.modelix.model.api.NodeAdapterJS.getPropertyValue","location":"model-api/org.modelix.model.api/-node-adapter-j-s/get-property-value.html","searchKeys":["getPropertyValue","open override fun getPropertyValue(role: String): String?","org.modelix.model.api.NodeAdapterJS.getPropertyValue"]},{"name":"open override fun getPropertyValue(role: String): String?","description":"org.modelix.model.api.PNodeAdapter.getPropertyValue","location":"model-api/org.modelix.model.api/-p-node-adapter/get-property-value.html","searchKeys":["getPropertyValue","open override fun getPropertyValue(role: String): String?","org.modelix.model.api.PNodeAdapter.getPropertyValue"]},{"name":"open override fun getPropertyValue(role: String): String?","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.getPropertyValue","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/get-property-value.html","searchKeys":["getPropertyValue","open override fun getPropertyValue(role: String): String?","org.modelix.model.area.AreaWithMounts.NodeWrapper.getPropertyValue"]},{"name":"open override fun getPropertyValue(role: String): String?","description":"org.modelix.model.area.CompositeArea.NodeWrapper.getPropertyValue","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/get-property-value.html","searchKeys":["getPropertyValue","open override fun getPropertyValue(role: String): String?","org.modelix.model.area.CompositeArea.NodeWrapper.getPropertyValue"]},{"name":"open override fun getPropertyValue(role: String): String?","description":"org.modelix.model.area.CompositeArea.Root.getPropertyValue","location":"model-api/org.modelix.model.area/-composite-area/-root/get-property-value.html","searchKeys":["getPropertyValue","open override fun getPropertyValue(role: String): String?","org.modelix.model.area.CompositeArea.Root.getPropertyValue"]},{"name":"open override fun getPropertyValueAsFlow(role: IProperty): Flow<String?>","description":"org.modelix.model.api.PNodeAdapter.getPropertyValueAsFlow","location":"model-api/org.modelix.model.api/-p-node-adapter/get-property-value-as-flow.html","searchKeys":["getPropertyValueAsFlow","open override fun getPropertyValueAsFlow(role: IProperty): Flow<String?>","org.modelix.model.api.PNodeAdapter.getPropertyValueAsFlow"]},{"name":"open override fun getReference(): CompositeArea.AreaReference","description":"org.modelix.model.area.CompositeArea.getReference","location":"model-api/org.modelix.model.area/-composite-area/get-reference.html","searchKeys":["getReference","open override fun getReference(): CompositeArea.AreaReference","org.modelix.model.area.CompositeArea.getReference"]},{"name":"open override fun getReference(): IAreaReference","description":"org.modelix.model.area.AreaWithMounts.getReference","location":"model-api/org.modelix.model.area/-area-with-mounts/get-reference.html","searchKeys":["getReference","open override fun getReference(): IAreaReference","org.modelix.model.area.AreaWithMounts.getReference"]},{"name":"open override fun getReference(): IConceptReference","description":"org.modelix.model.api.SimpleConcept.getReference","location":"model-api/org.modelix.model.api/-simple-concept/get-reference.html","searchKeys":["getReference","open override fun getReference(): IConceptReference","org.modelix.model.api.SimpleConcept.getReference"]},{"name":"open override fun getReference(): INodeReferenceJS","description":"org.modelix.model.api.NodeAdapterJS.getReference","location":"model-api/org.modelix.model.api/-node-adapter-j-s/get-reference.html","searchKeys":["getReference","open override fun getReference(): INodeReferenceJS","org.modelix.model.api.NodeAdapterJS.getReference"]},{"name":"open override fun getReference(): PArea.AreaReference","description":"org.modelix.model.area.PArea.getReference","location":"model-api/org.modelix.model.area/-p-area/get-reference.html","searchKeys":["getReference","open override fun getReference(): PArea.AreaReference","org.modelix.model.area.PArea.getReference"]},{"name":"open override fun getReferenceLink(name: String): IReferenceLink","description":"org.modelix.model.api.SimpleConcept.getReferenceLink","location":"model-api/org.modelix.model.api/-simple-concept/get-reference-link.html","searchKeys":["getReferenceLink","open override fun getReferenceLink(name: String): IReferenceLink","org.modelix.model.api.SimpleConcept.getReferenceLink"]},{"name":"open override fun getReferenceRoles(): Array<String>","description":"org.modelix.model.api.NodeAdapterJS.getReferenceRoles","location":"model-api/org.modelix.model.api/-node-adapter-j-s/get-reference-roles.html","searchKeys":["getReferenceRoles","open override fun getReferenceRoles(): Array<String>","org.modelix.model.api.NodeAdapterJS.getReferenceRoles"]},{"name":"open override fun getReferenceRoles(): List<String>","description":"org.modelix.model.api.IDeprecatedNodeDefaults.getReferenceRoles","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/get-reference-roles.html","searchKeys":["getReferenceRoles","open override fun getReferenceRoles(): List<String>","org.modelix.model.api.IDeprecatedNodeDefaults.getReferenceRoles"]},{"name":"open override fun getReferenceRoles(): List<String>","description":"org.modelix.model.api.PNodeAdapter.getReferenceRoles","location":"model-api/org.modelix.model.api/-p-node-adapter/get-reference-roles.html","searchKeys":["getReferenceRoles","open override fun getReferenceRoles(): List<String>","org.modelix.model.api.PNodeAdapter.getReferenceRoles"]},{"name":"open override fun getReferenceRoles(): List<String>","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.getReferenceRoles","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/get-reference-roles.html","searchKeys":["getReferenceRoles","open override fun getReferenceRoles(): List<String>","org.modelix.model.area.AreaWithMounts.NodeWrapper.getReferenceRoles"]},{"name":"open override fun getReferenceRoles(): List<String>","description":"org.modelix.model.area.CompositeArea.NodeWrapper.getReferenceRoles","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/get-reference-roles.html","searchKeys":["getReferenceRoles","open override fun getReferenceRoles(): List<String>","org.modelix.model.area.CompositeArea.NodeWrapper.getReferenceRoles"]},{"name":"open override fun getReferenceRoles(): List<String>","description":"org.modelix.model.area.CompositeArea.Root.getReferenceRoles","location":"model-api/org.modelix.model.area/-composite-area/-root/get-reference-roles.html","searchKeys":["getReferenceRoles","open override fun getReferenceRoles(): List<String>","org.modelix.model.area.CompositeArea.Root.getReferenceRoles"]},{"name":"open override fun getReferenceRoles(sourceId: Long): Iterable<String>","description":"org.modelix.model.api.Transaction.getReferenceRoles","location":"model-api/org.modelix.model.api/-transaction/get-reference-roles.html","searchKeys":["getReferenceRoles","open override fun getReferenceRoles(sourceId: Long): Iterable<String>","org.modelix.model.api.Transaction.getReferenceRoles"]},{"name":"open override fun getReferenceRoles(sourceId: Long): Iterable<String>","description":"org.modelix.model.api.TreePointer.getReferenceRoles","location":"model-api/org.modelix.model.api/-tree-pointer/get-reference-roles.html","searchKeys":["getReferenceRoles","open override fun getReferenceRoles(sourceId: Long): Iterable<String>","org.modelix.model.api.TreePointer.getReferenceRoles"]},{"name":"open override fun getReferenceTarget(role: String): INode?","description":"org.modelix.model.api.IDeprecatedNodeDefaults.getReferenceTarget","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/get-reference-target.html","searchKeys":["getReferenceTarget","open override fun getReferenceTarget(role: String): INode?","org.modelix.model.api.IDeprecatedNodeDefaults.getReferenceTarget"]},{"name":"open override fun getReferenceTarget(role: String): INode?","description":"org.modelix.model.api.PNodeAdapter.getReferenceTarget","location":"model-api/org.modelix.model.api/-p-node-adapter/get-reference-target.html","searchKeys":["getReferenceTarget","open override fun getReferenceTarget(role: String): INode?","org.modelix.model.api.PNodeAdapter.getReferenceTarget"]},{"name":"open override fun getReferenceTarget(role: String): INode?","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.getReferenceTarget","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/get-reference-target.html","searchKeys":["getReferenceTarget","open override fun getReferenceTarget(role: String): INode?","org.modelix.model.area.AreaWithMounts.NodeWrapper.getReferenceTarget"]},{"name":"open override fun getReferenceTarget(role: String): INode?","description":"org.modelix.model.area.CompositeArea.NodeWrapper.getReferenceTarget","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/get-reference-target.html","searchKeys":["getReferenceTarget","open override fun getReferenceTarget(role: String): INode?","org.modelix.model.area.CompositeArea.NodeWrapper.getReferenceTarget"]},{"name":"open override fun getReferenceTarget(role: String): INode?","description":"org.modelix.model.area.CompositeArea.Root.getReferenceTarget","location":"model-api/org.modelix.model.area/-composite-area/-root/get-reference-target.html","searchKeys":["getReferenceTarget","open override fun getReferenceTarget(role: String): INode?","org.modelix.model.area.CompositeArea.Root.getReferenceTarget"]},{"name":"open override fun getReferenceTarget(sourceId: Long, role: String): INodeReference?","description":"org.modelix.model.api.Transaction.getReferenceTarget","location":"model-api/org.modelix.model.api/-transaction/get-reference-target.html","searchKeys":["getReferenceTarget","open override fun getReferenceTarget(sourceId: Long, role: String): INodeReference?","org.modelix.model.api.Transaction.getReferenceTarget"]},{"name":"open override fun getReferenceTarget(sourceId: Long, role: String): INodeReference?","description":"org.modelix.model.api.TreePointer.getReferenceTarget","location":"model-api/org.modelix.model.api/-tree-pointer/get-reference-target.html","searchKeys":["getReferenceTarget","open override fun getReferenceTarget(sourceId: Long, role: String): INodeReference?","org.modelix.model.api.TreePointer.getReferenceTarget"]},{"name":"open override fun getReferenceTargetAsFlow(role: IReferenceLink): Flow<INode>","description":"org.modelix.model.api.PNodeAdapter.getReferenceTargetAsFlow","location":"model-api/org.modelix.model.api/-p-node-adapter/get-reference-target-as-flow.html","searchKeys":["getReferenceTargetAsFlow","open override fun getReferenceTargetAsFlow(role: IReferenceLink): Flow<INode>","org.modelix.model.api.PNodeAdapter.getReferenceTargetAsFlow"]},{"name":"open override fun getReferenceTargetNode(role: String): INodeJS?","description":"org.modelix.model.api.NodeAdapterJS.getReferenceTargetNode","location":"model-api/org.modelix.model.api/-node-adapter-j-s/get-reference-target-node.html","searchKeys":["getReferenceTargetNode","open override fun getReferenceTargetNode(role: String): INodeJS?","org.modelix.model.api.NodeAdapterJS.getReferenceTargetNode"]},{"name":"open override fun getReferenceTargetRef(role: String): INodeReference?","description":"org.modelix.model.api.IDeprecatedNodeDefaults.getReferenceTargetRef","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/get-reference-target-ref.html","searchKeys":["getReferenceTargetRef","open override fun getReferenceTargetRef(role: String): INodeReference?","org.modelix.model.api.IDeprecatedNodeDefaults.getReferenceTargetRef"]},{"name":"open override fun getReferenceTargetRef(role: String): INodeReference?","description":"org.modelix.model.api.PNodeAdapter.getReferenceTargetRef","location":"model-api/org.modelix.model.api/-p-node-adapter/get-reference-target-ref.html","searchKeys":["getReferenceTargetRef","open override fun getReferenceTargetRef(role: String): INodeReference?","org.modelix.model.api.PNodeAdapter.getReferenceTargetRef"]},{"name":"open override fun getReferenceTargetRef(role: String): INodeReferenceJS?","description":"org.modelix.model.api.NodeAdapterJS.getReferenceTargetRef","location":"model-api/org.modelix.model.api/-node-adapter-j-s/get-reference-target-ref.html","searchKeys":["getReferenceTargetRef","open override fun getReferenceTargetRef(role: String): INodeReferenceJS?","org.modelix.model.api.NodeAdapterJS.getReferenceTargetRef"]},{"name":"open override fun getReferenceTargetRefAsFlow(role: IReferenceLink): Flow<INodeReference>","description":"org.modelix.model.api.PNodeAdapter.getReferenceTargetRefAsFlow","location":"model-api/org.modelix.model.api/-p-node-adapter/get-reference-target-ref-as-flow.html","searchKeys":["getReferenceTargetRefAsFlow","open override fun getReferenceTargetRefAsFlow(role: IReferenceLink): Flow<INodeReference>","org.modelix.model.api.PNodeAdapter.getReferenceTargetRefAsFlow"]},{"name":"open override fun getRole(nodeId: Long): String?","description":"org.modelix.model.api.Transaction.getRole","location":"model-api/org.modelix.model.api/-transaction/get-role.html","searchKeys":["getRole","open override fun getRole(nodeId: Long): String?","org.modelix.model.api.Transaction.getRole"]},{"name":"open override fun getRole(nodeId: Long): String?","description":"org.modelix.model.api.TreePointer.getRole","location":"model-api/org.modelix.model.api/-tree-pointer/get-role.html","searchKeys":["getRole","open override fun getRole(nodeId: Long): String?","org.modelix.model.api.TreePointer.getRole"]},{"name":"open override fun getRoleInParent(): String?","description":"org.modelix.model.api.NodeAdapterJS.getRoleInParent","location":"model-api/org.modelix.model.api/-node-adapter-j-s/get-role-in-parent.html","searchKeys":["getRoleInParent","open override fun getRoleInParent(): String?","org.modelix.model.api.NodeAdapterJS.getRoleInParent"]},{"name":"open override fun getRoot(): INode","description":"org.modelix.model.area.AreaWithMounts.getRoot","location":"model-api/org.modelix.model.area/-area-with-mounts/get-root.html","searchKeys":["getRoot","open override fun getRoot(): INode","org.modelix.model.area.AreaWithMounts.getRoot"]},{"name":"open override fun getRoot(): INode","description":"org.modelix.model.area.CompositeArea.getRoot","location":"model-api/org.modelix.model.area/-composite-area/get-root.html","searchKeys":["getRoot","open override fun getRoot(): INode","org.modelix.model.area.CompositeArea.getRoot"]},{"name":"open override fun getRoot(): INode","description":"org.modelix.model.area.PArea.getRoot","location":"model-api/org.modelix.model.area/-p-area/get-root.html","searchKeys":["getRoot","open override fun getRoot(): INode","org.modelix.model.area.PArea.getRoot"]},{"name":"open override fun getShortName(): String","description":"org.modelix.model.api.SimpleConcept.getShortName","location":"model-api/org.modelix.model.api/-simple-concept/get-short-name.html","searchKeys":["getShortName","open override fun getShortName(): String","org.modelix.model.api.SimpleConcept.getShortName"]},{"name":"open override fun getSimpleName(): String","description":"org.modelix.model.api.NullChildLink.getSimpleName","location":"model-api/org.modelix.model.api/-null-child-link/get-simple-name.html","searchKeys":["getSimpleName","open override fun getSimpleName(): String","org.modelix.model.api.NullChildLink.getSimpleName"]},{"name":"open override fun getSimpleName(): String","description":"org.modelix.model.api.RoleFromName.getSimpleName","location":"model-api/org.modelix.model.api/-role-from-name/get-simple-name.html","searchKeys":["getSimpleName","open override fun getSimpleName(): String","org.modelix.model.api.RoleFromName.getSimpleName"]},{"name":"open override fun getSimpleName(): String","description":"org.modelix.model.api.SimpleChildLink.getSimpleName","location":"model-api/org.modelix.model.api/-simple-child-link/get-simple-name.html","searchKeys":["getSimpleName","open override fun getSimpleName(): String","org.modelix.model.api.SimpleChildLink.getSimpleName"]},{"name":"open override fun getSimpleName(): String","description":"org.modelix.model.api.SimpleProperty.getSimpleName","location":"model-api/org.modelix.model.api/-simple-property/get-simple-name.html","searchKeys":["getSimpleName","open override fun getSimpleName(): String","org.modelix.model.api.SimpleProperty.getSimpleName"]},{"name":"open override fun getSimpleName(): String","description":"org.modelix.model.api.SimpleReferenceLink.getSimpleName","location":"model-api/org.modelix.model.api/-simple-reference-link/get-simple-name.html","searchKeys":["getSimpleName","open override fun getSimpleName(): String","org.modelix.model.api.SimpleReferenceLink.getSimpleName"]},{"name":"open override fun getUID(): String","description":"GeneratedConcept.getUID","location":"model-api/[root]/-generated-concept/get-u-i-d.html","searchKeys":["getUID","open override fun getUID(): String","GeneratedConcept.getUID"]},{"name":"open override fun getUID(): String","description":"org.modelix.model.api.ConceptReference.getUID","location":"model-api/org.modelix.model.api/-concept-reference/get-u-i-d.html","searchKeys":["getUID","open override fun getUID(): String","org.modelix.model.api.ConceptReference.getUID"]},{"name":"open override fun getUID(): String","description":"org.modelix.model.api.NullChildLink.getUID","location":"model-api/org.modelix.model.api/-null-child-link/get-u-i-d.html","searchKeys":["getUID","open override fun getUID(): String","org.modelix.model.api.NullChildLink.getUID"]},{"name":"open override fun getUID(): String","description":"org.modelix.model.api.RoleFromName.getUID","location":"model-api/org.modelix.model.api/-role-from-name/get-u-i-d.html","searchKeys":["getUID","open override fun getUID(): String","org.modelix.model.api.RoleFromName.getUID"]},{"name":"open override fun getUID(): String","description":"org.modelix.model.api.SimpleChildLink.getUID","location":"model-api/org.modelix.model.api/-simple-child-link/get-u-i-d.html","searchKeys":["getUID","open override fun getUID(): String","org.modelix.model.api.SimpleChildLink.getUID"]},{"name":"open override fun getUID(): String","description":"org.modelix.model.api.SimpleConcept.getUID","location":"model-api/org.modelix.model.api/-simple-concept/get-u-i-d.html","searchKeys":["getUID","open override fun getUID(): String","org.modelix.model.api.SimpleConcept.getUID"]},{"name":"open override fun getUID(): String","description":"org.modelix.model.api.SimpleLanguage.getUID","location":"model-api/org.modelix.model.api/-simple-language/get-u-i-d.html","searchKeys":["getUID","open override fun getUID(): String","org.modelix.model.api.SimpleLanguage.getUID"]},{"name":"open override fun getUID(): String","description":"org.modelix.model.api.SimpleProperty.getUID","location":"model-api/org.modelix.model.api/-simple-property/get-u-i-d.html","searchKeys":["getUID","open override fun getUID(): String","org.modelix.model.api.SimpleProperty.getUID"]},{"name":"open override fun getUID(): String","description":"org.modelix.model.api.SimpleReferenceLink.getUID","location":"model-api/org.modelix.model.api/-simple-reference-link/get-u-i-d.html","searchKeys":["getUID","open override fun getUID(): String","org.modelix.model.api.SimpleReferenceLink.getUID"]},{"name":"open override fun getUserObject(key: Any): Any?","description":"org.modelix.model.api.Transaction.getUserObject","location":"model-api/org.modelix.model.api/-transaction/get-user-object.html","searchKeys":["getUserObject","open override fun getUserObject(key: Any): Any?","org.modelix.model.api.Transaction.getUserObject"]},{"name":"open override fun getUserObject(key: Any): Any?","description":"org.modelix.model.api.TreePointer.getUserObject","location":"model-api/org.modelix.model.api/-tree-pointer/get-user-object.html","searchKeys":["getUserObject","open override fun getUserObject(key: Any): Any?","org.modelix.model.api.TreePointer.getUserObject"]},{"name":"open override fun getWrappedNode(): INode","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.getWrappedNode","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/get-wrapped-node.html","searchKeys":["getWrappedNode","open override fun getWrappedNode(): INode","org.modelix.model.area.AreaWithMounts.NodeWrapper.getWrappedNode"]},{"name":"open override fun getWrappedNode(): INode","description":"org.modelix.model.area.CompositeArea.NodeWrapper.getWrappedNode","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/get-wrapped-node.html","searchKeys":["getWrappedNode","open override fun getWrappedNode(): INode","org.modelix.model.area.CompositeArea.NodeWrapper.getWrappedNode"]},{"name":"open override fun hashCode(): Int","description":"org.modelix.model.api.NodeAdapterJS.hashCode","location":"model-api/org.modelix.model.api/-node-adapter-j-s/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.modelix.model.api.NodeAdapterJS.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.modelix.model.api.PNodeAdapter.hashCode","location":"model-api/org.modelix.model.api/-p-node-adapter/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.modelix.model.api.PNodeAdapter.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.hashCode","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.modelix.model.area.AreaWithMounts.NodeWrapper.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.modelix.model.area.AreaWithMounts.hashCode","location":"model-api/org.modelix.model.area/-area-with-mounts/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.modelix.model.area.AreaWithMounts.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.modelix.model.area.CompositeArea.NodeWrapper.hashCode","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.modelix.model.area.CompositeArea.NodeWrapper.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.modelix.model.area.CompositeArea.Root.hashCode","location":"model-api/org.modelix.model.area/-composite-area/-root/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.modelix.model.area.CompositeArea.Root.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.modelix.model.area.CompositeArea.hashCode","location":"model-api/org.modelix.model.area/-composite-area/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.modelix.model.area.CompositeArea.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.modelix.model.area.PArea.hashCode","location":"model-api/org.modelix.model.area/-p-area/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.modelix.model.area.PArea.hashCode"]},{"name":"open override fun isAbstract(): Boolean","description":"org.modelix.model.api.SimpleConcept.isAbstract","location":"model-api/org.modelix.model.api/-simple-concept/is-abstract.html","searchKeys":["isAbstract","open override fun isAbstract(): Boolean","org.modelix.model.api.SimpleConcept.isAbstract"]},{"name":"open override fun isExactly(concept: IConcept?): Boolean","description":"org.modelix.model.api.SimpleConcept.isExactly","location":"model-api/org.modelix.model.api/-simple-concept/is-exactly.html","searchKeys":["isExactly","open override fun isExactly(concept: IConcept?): Boolean","org.modelix.model.api.SimpleConcept.isExactly"]},{"name":"open override fun isSubConceptOf(superConcept: IConcept?): Boolean","description":"org.modelix.model.api.SimpleConcept.isSubConceptOf","location":"model-api/org.modelix.model.api/-simple-concept/is-sub-concept-of.html","searchKeys":["isSubConceptOf","open override fun isSubConceptOf(superConcept: IConcept?): Boolean","org.modelix.model.api.SimpleConcept.isSubConceptOf"]},{"name":"open override fun moveChild(newParentId: Long, newRole: String?, newIndex: Int, childId: Long)","description":"org.modelix.model.api.TreePointer.moveChild","location":"model-api/org.modelix.model.api/-tree-pointer/move-child.html","searchKeys":["moveChild","open override fun moveChild(newParentId: Long, newRole: String?, newIndex: Int, childId: Long)","org.modelix.model.api.TreePointer.moveChild"]},{"name":"open override fun moveChild(newParentId: Long, newRole: String?, newIndex: Int, childId: Long)","description":"org.modelix.model.api.WriteTransaction.moveChild","location":"model-api/org.modelix.model.api/-write-transaction/move-child.html","searchKeys":["moveChild","open override fun moveChild(newParentId: Long, newRole: String?, newIndex: Int, childId: Long)","org.modelix.model.api.WriteTransaction.moveChild"]},{"name":"open override fun moveChild(role: String?, index: Int, child: INode)","description":"org.modelix.model.api.IDeprecatedNodeDefaults.moveChild","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/move-child.html","searchKeys":["moveChild","open override fun moveChild(role: String?, index: Int, child: INode)","org.modelix.model.api.IDeprecatedNodeDefaults.moveChild"]},{"name":"open override fun moveChild(role: String?, index: Int, child: INode)","description":"org.modelix.model.api.PNodeAdapter.moveChild","location":"model-api/org.modelix.model.api/-p-node-adapter/move-child.html","searchKeys":["moveChild","open override fun moveChild(role: String?, index: Int, child: INode)","org.modelix.model.api.PNodeAdapter.moveChild"]},{"name":"open override fun moveChild(role: String?, index: Int, child: INode)","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.moveChild","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/move-child.html","searchKeys":["moveChild","open override fun moveChild(role: String?, index: Int, child: INode)","org.modelix.model.area.AreaWithMounts.NodeWrapper.moveChild"]},{"name":"open override fun moveChild(role: String?, index: Int, child: INode)","description":"org.modelix.model.area.CompositeArea.NodeWrapper.moveChild","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/move-child.html","searchKeys":["moveChild","open override fun moveChild(role: String?, index: Int, child: INode)","org.modelix.model.area.CompositeArea.NodeWrapper.moveChild"]},{"name":"open override fun moveChild(role: String?, index: Int, node: INode)","description":"org.modelix.model.area.CompositeArea.Root.moveChild","location":"model-api/org.modelix.model.area/-composite-area/-root/move-child.html","searchKeys":["moveChild","open override fun moveChild(role: String?, index: Int, node: INode)","org.modelix.model.area.CompositeArea.Root.moveChild"]},{"name":"open override fun moveChild(role: String?, index: Number, child: INodeJS)","description":"org.modelix.model.api.NodeAdapterJS.moveChild","location":"model-api/org.modelix.model.api/-node-adapter-j-s/move-child.html","searchKeys":["moveChild","open override fun moveChild(role: String?, index: Number, child: INodeJS)","org.modelix.model.api.NodeAdapterJS.moveChild"]},{"name":"open override fun putUserObject(key: Any, value: Any?)","description":"org.modelix.model.api.Transaction.putUserObject","location":"model-api/org.modelix.model.api/-transaction/put-user-object.html","searchKeys":["putUserObject","open override fun putUserObject(key: Any, value: Any?)","org.modelix.model.api.Transaction.putUserObject"]},{"name":"open override fun putUserObject(key: Any, value: Any?)","description":"org.modelix.model.api.TreePointer.putUserObject","location":"model-api/org.modelix.model.api/-tree-pointer/put-user-object.html","searchKeys":["putUserObject","open override fun putUserObject(key: Any, value: Any?)","org.modelix.model.api.TreePointer.putUserObject"]},{"name":"open override fun removeChild(child: INode)","description":"org.modelix.model.api.PNodeAdapter.removeChild","location":"model-api/org.modelix.model.api/-p-node-adapter/remove-child.html","searchKeys":["removeChild","open override fun removeChild(child: INode)","org.modelix.model.api.PNodeAdapter.removeChild"]},{"name":"open override fun removeChild(child: INode)","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.removeChild","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/remove-child.html","searchKeys":["removeChild","open override fun removeChild(child: INode)","org.modelix.model.area.AreaWithMounts.NodeWrapper.removeChild"]},{"name":"open override fun removeChild(child: INode)","description":"org.modelix.model.area.CompositeArea.NodeWrapper.removeChild","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/remove-child.html","searchKeys":["removeChild","open override fun removeChild(child: INode)","org.modelix.model.area.CompositeArea.NodeWrapper.removeChild"]},{"name":"open override fun removeChild(child: INode)","description":"org.modelix.model.area.CompositeArea.Root.removeChild","location":"model-api/org.modelix.model.area/-composite-area/-root/remove-child.html","searchKeys":["removeChild","open override fun removeChild(child: INode)","org.modelix.model.area.CompositeArea.Root.removeChild"]},{"name":"open override fun removeChild(child: INodeJS)","description":"org.modelix.model.api.NodeAdapterJS.removeChild","location":"model-api/org.modelix.model.api/-node-adapter-j-s/remove-child.html","searchKeys":["removeChild","open override fun removeChild(child: INodeJS)","org.modelix.model.api.NodeAdapterJS.removeChild"]},{"name":"open override fun removeListener(l: IAreaListener)","description":"org.modelix.model.area.AbstractArea.removeListener","location":"model-api/org.modelix.model.area/-abstract-area/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(l: IAreaListener)","org.modelix.model.area.AbstractArea.removeListener"]},{"name":"open override fun removeListener(l: IAreaListener)","description":"org.modelix.model.area.AreaWithMounts.removeListener","location":"model-api/org.modelix.model.area/-area-with-mounts/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(l: IAreaListener)","org.modelix.model.area.AreaWithMounts.removeListener"]},{"name":"open override fun removeListener(l: IAreaListener)","description":"org.modelix.model.area.CompositeArea.removeListener","location":"model-api/org.modelix.model.area/-composite-area/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(l: IAreaListener)","org.modelix.model.area.CompositeArea.removeListener"]},{"name":"open override fun removeListener(l: IAreaListener)","description":"org.modelix.model.area.PArea.removeListener","location":"model-api/org.modelix.model.area/-p-area/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(l: IAreaListener)","org.modelix.model.area.PArea.removeListener"]},{"name":"open override fun removeListener(l: IBranchListener)","description":"org.modelix.model.api.PBranch.removeListener","location":"model-api/org.modelix.model.api/-p-branch/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(l: IBranchListener)","org.modelix.model.api.PBranch.removeListener"]},{"name":"open override fun removeListener(l: IBranchListener)","description":"org.modelix.model.api.TreePointer.removeListener","location":"model-api/org.modelix.model.api/-tree-pointer/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(l: IBranchListener)","org.modelix.model.api.TreePointer.removeListener"]},{"name":"open override fun resolve(area: IArea?): IConcept?","description":"org.modelix.model.api.ConceptReference.resolve","location":"model-api/org.modelix.model.api/-concept-reference/resolve.html","searchKeys":["resolve","open override fun resolve(area: IArea?): IConcept?","org.modelix.model.api.ConceptReference.resolve"]},{"name":"open override fun resolveArea(ref: IAreaReference): IArea?","description":"org.modelix.model.area.AbstractArea.resolveArea","location":"model-api/org.modelix.model.area/-abstract-area/resolve-area.html","searchKeys":["resolveArea","open override fun resolveArea(ref: IAreaReference): IArea?","org.modelix.model.area.AbstractArea.resolveArea"]},{"name":"open override fun resolveArea(ref: IAreaReference): IArea?","description":"org.modelix.model.area.AreaWithMounts.resolveArea","location":"model-api/org.modelix.model.area/-area-with-mounts/resolve-area.html","searchKeys":["resolveArea","open override fun resolveArea(ref: IAreaReference): IArea?","org.modelix.model.area.AreaWithMounts.resolveArea"]},{"name":"open override fun resolveArea(ref: IAreaReference): IArea?","description":"org.modelix.model.area.CompositeArea.resolveArea","location":"model-api/org.modelix.model.area/-composite-area/resolve-area.html","searchKeys":["resolveArea","open override fun resolveArea(ref: IAreaReference): IArea?","org.modelix.model.area.CompositeArea.resolveArea"]},{"name":"open override fun resolveArea(ref: IAreaReference): IArea?","description":"org.modelix.model.area.PArea.resolveArea","location":"model-api/org.modelix.model.area/-p-area/resolve-area.html","searchKeys":["resolveArea","open override fun resolveArea(ref: IAreaReference): IArea?","org.modelix.model.area.PArea.resolveArea"]},{"name":"open override fun resolveBranch(id: String): IBranch?","description":"org.modelix.model.area.AbstractArea.resolveBranch","location":"model-api/org.modelix.model.area/-abstract-area/resolve-branch.html","searchKeys":["resolveBranch","open override fun resolveBranch(id: String): IBranch?","org.modelix.model.area.AbstractArea.resolveBranch"]},{"name":"open override fun resolveBranch(id: String): IBranch?","description":"org.modelix.model.area.AreaWithMounts.resolveBranch","location":"model-api/org.modelix.model.area/-area-with-mounts/resolve-branch.html","searchKeys":["resolveBranch","open override fun resolveBranch(id: String): IBranch?","org.modelix.model.area.AreaWithMounts.resolveBranch"]},{"name":"open override fun resolveBranch(id: String): IBranch?","description":"org.modelix.model.area.CompositeArea.resolveBranch","location":"model-api/org.modelix.model.area/-composite-area/resolve-branch.html","searchKeys":["resolveBranch","open override fun resolveBranch(id: String): IBranch?","org.modelix.model.area.CompositeArea.resolveBranch"]},{"name":"open override fun resolveBranch(id: String): IBranch?","description":"org.modelix.model.area.PArea.resolveBranch","location":"model-api/org.modelix.model.area/-p-area/resolve-branch.html","searchKeys":["resolveBranch","open override fun resolveBranch(id: String): IBranch?","org.modelix.model.area.PArea.resolveBranch"]},{"name":"open override fun resolveConcept(ref: IConceptReference): IConcept?","description":"org.modelix.model.area.AreaWithMounts.resolveConcept","location":"model-api/org.modelix.model.area/-area-with-mounts/resolve-concept.html","searchKeys":["resolveConcept","open override fun resolveConcept(ref: IConceptReference): IConcept?","org.modelix.model.area.AreaWithMounts.resolveConcept"]},{"name":"open override fun resolveConcept(ref: IConceptReference): IConcept?","description":"org.modelix.model.area.CompositeArea.resolveConcept","location":"model-api/org.modelix.model.area/-composite-area/resolve-concept.html","searchKeys":["resolveConcept","open override fun resolveConcept(ref: IConceptReference): IConcept?","org.modelix.model.area.CompositeArea.resolveConcept"]},{"name":"open override fun resolveConcept(ref: IConceptReference): IConcept?","description":"org.modelix.model.area.PArea.resolveConcept","location":"model-api/org.modelix.model.area/-p-area/resolve-concept.html","searchKeys":["resolveConcept","open override fun resolveConcept(ref: IConceptReference): IConcept?","org.modelix.model.area.PArea.resolveConcept"]},{"name":"open override fun resolveConcept(uid: String): IConcept?","description":"org.modelix.model.api.DefaultLanguageRepository.resolveConcept","location":"model-api/org.modelix.model.api/-default-language-repository/resolve-concept.html","searchKeys":["resolveConcept","open override fun resolveConcept(uid: String): IConcept?","org.modelix.model.api.DefaultLanguageRepository.resolveConcept"]},{"name":"open override fun resolveNode(area: IArea?): INode?","description":"org.modelix.model.api.LocalPNodeReference.resolveNode","location":"model-api/org.modelix.model.api/-local-p-node-reference/resolve-node.html","searchKeys":["resolveNode","open override fun resolveNode(area: IArea?): INode?","org.modelix.model.api.LocalPNodeReference.resolveNode"]},{"name":"open override fun resolveNode(area: IArea?): INode?","description":"org.modelix.model.api.NodeReferenceById.resolveNode","location":"model-api/org.modelix.model.api/-node-reference-by-id/resolve-node.html","searchKeys":["resolveNode","open override fun resolveNode(area: IArea?): INode?","org.modelix.model.api.NodeReferenceById.resolveNode"]},{"name":"open override fun resolveNode(area: IArea?): INode?","description":"org.modelix.model.api.PNodeReference.resolveNode","location":"model-api/org.modelix.model.api/-p-node-reference/resolve-node.html","searchKeys":["resolveNode","open override fun resolveNode(area: IArea?): INode?","org.modelix.model.api.PNodeReference.resolveNode"]},{"name":"open override fun resolveNode(area: IArea?): INode?","description":"org.modelix.model.area.CompositeArea.RootNodeReference.resolveNode","location":"model-api/org.modelix.model.area/-composite-area/-root-node-reference/resolve-node.html","searchKeys":["resolveNode","open override fun resolveNode(area: IArea?): INode?","org.modelix.model.area.CompositeArea.RootNodeReference.resolveNode"]},{"name":"open override fun resolveNode(contextArea: IArea?): INode?","description":"org.modelix.model.area.CompositeArea.NodeWrapperReference.resolveNode","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper-reference/resolve-node.html","searchKeys":["resolveNode","open override fun resolveNode(contextArea: IArea?): INode?","org.modelix.model.area.CompositeArea.NodeWrapperReference.resolveNode"]},{"name":"open override fun resolveNode(ref: INodeReference): INode?","description":"org.modelix.model.api.CompositeNodeResolutionScope.resolveNode","location":"model-api/org.modelix.model.api/-composite-node-resolution-scope/resolve-node.html","searchKeys":["resolveNode","open override fun resolveNode(ref: INodeReference): INode?","org.modelix.model.api.CompositeNodeResolutionScope.resolveNode"]},{"name":"open override fun resolveNode(ref: INodeReference): INode?","description":"org.modelix.model.api.NullNodeResolutionScope.resolveNode","location":"model-api/org.modelix.model.api/-null-node-resolution-scope/resolve-node.html","searchKeys":["resolveNode","open override fun resolveNode(ref: INodeReference): INode?","org.modelix.model.api.NullNodeResolutionScope.resolveNode"]},{"name":"open override fun resolveNode(ref: INodeReference): INode?","description":"org.modelix.model.area.AbstractArea.resolveNode","location":"model-api/org.modelix.model.area/-abstract-area/resolve-node.html","searchKeys":["resolveNode","open override fun resolveNode(ref: INodeReference): INode?","org.modelix.model.area.AbstractArea.resolveNode"]},{"name":"open override fun resolveNode(ref: INodeReference): INode?","description":"org.modelix.model.area.AreaWithMounts.resolveNode","location":"model-api/org.modelix.model.area/-area-with-mounts/resolve-node.html","searchKeys":["resolveNode","open override fun resolveNode(ref: INodeReference): INode?","org.modelix.model.area.AreaWithMounts.resolveNode"]},{"name":"open override fun resolveNode(ref: INodeReference): INode?","description":"org.modelix.model.area.CompositeArea.resolveNode","location":"model-api/org.modelix.model.area/-composite-area/resolve-node.html","searchKeys":["resolveNode","open override fun resolveNode(ref: INodeReference): INode?","org.modelix.model.area.CompositeArea.resolveNode"]},{"name":"open override fun resolveNode(ref: INodeReference): INode?","description":"org.modelix.model.area.PArea.resolveNode","location":"model-api/org.modelix.model.area/-p-area/resolve-node.html","searchKeys":["resolveNode","open override fun resolveNode(ref: INodeReference): INode?","org.modelix.model.area.PArea.resolveNode"]},{"name":"open override fun resolveOriginalNode(ref: INodeReference): INode?","description":"org.modelix.model.area.AreaWithMounts.resolveOriginalNode","location":"model-api/org.modelix.model.area/-area-with-mounts/resolve-original-node.html","searchKeys":["resolveOriginalNode","open override fun resolveOriginalNode(ref: INodeReference): INode?","org.modelix.model.area.AreaWithMounts.resolveOriginalNode"]},{"name":"open override fun resolveOriginalNode(ref: INodeReference): INode?","description":"org.modelix.model.area.CompositeArea.resolveOriginalNode","location":"model-api/org.modelix.model.area/-composite-area/resolve-original-node.html","searchKeys":["resolveOriginalNode","open override fun resolveOriginalNode(ref: INodeReference): INode?","org.modelix.model.area.CompositeArea.resolveOriginalNode"]},{"name":"open override fun resolveOriginalNode(ref: INodeReference): INode?","description":"org.modelix.model.area.PArea.resolveOriginalNode","location":"model-api/org.modelix.model.area/-p-area/resolve-original-node.html","searchKeys":["resolveOriginalNode","open override fun resolveOriginalNode(ref: INodeReference): INode?","org.modelix.model.area.PArea.resolveOriginalNode"]},{"name":"open override fun runRead(runnable: () -> Unit)","description":"org.modelix.model.api.PBranch.runRead","location":"model-api/org.modelix.model.api/-p-branch/run-read.html","searchKeys":["runRead","open override fun runRead(runnable: () -> Unit)","org.modelix.model.api.PBranch.runRead"]},{"name":"open override fun runRead(runnable: () -> Unit)","description":"org.modelix.model.api.TreePointer.runRead","location":"model-api/org.modelix.model.api/-tree-pointer/run-read.html","searchKeys":["runRead","open override fun runRead(runnable: () -> Unit)","org.modelix.model.api.TreePointer.runRead"]},{"name":"open override fun runWrite(runnable: () -> Unit)","description":"org.modelix.model.api.PBranch.runWrite","location":"model-api/org.modelix.model.api/-p-branch/run-write.html","searchKeys":["runWrite","open override fun runWrite(runnable: () -> Unit)","org.modelix.model.api.PBranch.runWrite"]},{"name":"open override fun runWrite(runnable: () -> Unit)","description":"org.modelix.model.api.TreePointer.runWrite","location":"model-api/org.modelix.model.api/-tree-pointer/run-write.html","searchKeys":["runWrite","open override fun runWrite(runnable: () -> Unit)","org.modelix.model.api.TreePointer.runWrite"]},{"name":"open override fun serialize(): String","description":"org.modelix.model.api.ConceptReference.serialize","location":"model-api/org.modelix.model.api/-concept-reference/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.model.api.ConceptReference.serialize"]},{"name":"open override fun serialize(): String","description":"org.modelix.model.api.NodeReference.serialize","location":"model-api/org.modelix.model.api/-node-reference/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.model.api.NodeReference.serialize"]},{"name":"open override fun serialize(): String","description":"org.modelix.model.api.PNodeReference.serialize","location":"model-api/org.modelix.model.api/-p-node-reference/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.model.api.PNodeReference.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: ConceptReference)","description":"org.modelix.model.api.ConceptReferenceKSerializer.serialize","location":"model-api/org.modelix.model.api/-concept-reference-k-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: ConceptReference)","org.modelix.model.api.ConceptReferenceKSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: INodeReference)","description":"org.modelix.model.api.NodeReferenceKSerializer.serialize","location":"model-api/org.modelix.model.api/-node-reference-k-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: INodeReference)","org.modelix.model.api.NodeReferenceKSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: PropertyType)","description":"org.modelix.model.data.PropertyTypeSerializer.serialize","location":"model-api/org.modelix.model.data/-property-type-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: PropertyType)","org.modelix.model.data.PropertyTypeSerializer.serialize"]},{"name":"open override fun serialize(ref: INodeReference): String","description":"org.modelix.model.api.PNodeReferenceSerializer.serialize","location":"model-api/org.modelix.model.api/-p-node-reference-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(ref: INodeReference): String","org.modelix.model.api.PNodeReferenceSerializer.serialize"]},{"name":"open override fun setProperty(nodeId: Long, role: String, value: String?)","description":"org.modelix.model.api.TreePointer.setProperty","location":"model-api/org.modelix.model.api/-tree-pointer/set-property.html","searchKeys":["setProperty","open override fun setProperty(nodeId: Long, role: String, value: String?)","org.modelix.model.api.TreePointer.setProperty"]},{"name":"open override fun setProperty(nodeId: Long, role: String, value: String?)","description":"org.modelix.model.api.WriteTransaction.setProperty","location":"model-api/org.modelix.model.api/-write-transaction/set-property.html","searchKeys":["setProperty","open override fun setProperty(nodeId: Long, role: String, value: String?)","org.modelix.model.api.WriteTransaction.setProperty"]},{"name":"open override fun setPropertyValue(role: String, value: String?)","description":"org.modelix.model.api.IDeprecatedNodeDefaults.setPropertyValue","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/set-property-value.html","searchKeys":["setPropertyValue","open override fun setPropertyValue(role: String, value: String?)","org.modelix.model.api.IDeprecatedNodeDefaults.setPropertyValue"]},{"name":"open override fun setPropertyValue(role: String, value: String?)","description":"org.modelix.model.api.NodeAdapterJS.setPropertyValue","location":"model-api/org.modelix.model.api/-node-adapter-j-s/set-property-value.html","searchKeys":["setPropertyValue","open override fun setPropertyValue(role: String, value: String?)","org.modelix.model.api.NodeAdapterJS.setPropertyValue"]},{"name":"open override fun setPropertyValue(role: String, value: String?)","description":"org.modelix.model.api.PNodeAdapter.setPropertyValue","location":"model-api/org.modelix.model.api/-p-node-adapter/set-property-value.html","searchKeys":["setPropertyValue","open override fun setPropertyValue(role: String, value: String?)","org.modelix.model.api.PNodeAdapter.setPropertyValue"]},{"name":"open override fun setPropertyValue(role: String, value: String?)","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.setPropertyValue","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/set-property-value.html","searchKeys":["setPropertyValue","open override fun setPropertyValue(role: String, value: String?)","org.modelix.model.area.AreaWithMounts.NodeWrapper.setPropertyValue"]},{"name":"open override fun setPropertyValue(role: String, value: String?)","description":"org.modelix.model.area.CompositeArea.NodeWrapper.setPropertyValue","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/set-property-value.html","searchKeys":["setPropertyValue","open override fun setPropertyValue(role: String, value: String?)","org.modelix.model.area.CompositeArea.NodeWrapper.setPropertyValue"]},{"name":"open override fun setPropertyValue(role: String, value: String?)","description":"org.modelix.model.area.CompositeArea.Root.setPropertyValue","location":"model-api/org.modelix.model.area/-composite-area/-root/set-property-value.html","searchKeys":["setPropertyValue","open override fun setPropertyValue(role: String, value: String?)","org.modelix.model.area.CompositeArea.Root.setPropertyValue"]},{"name":"open override fun setReferenceTarget(role: String, target: INode?)","description":"org.modelix.model.api.IDeprecatedNodeDefaults.setReferenceTarget","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(role: String, target: INode?)","org.modelix.model.api.IDeprecatedNodeDefaults.setReferenceTarget"]},{"name":"open override fun setReferenceTarget(role: String, target: INode?)","description":"org.modelix.model.api.PNodeAdapter.setReferenceTarget","location":"model-api/org.modelix.model.api/-p-node-adapter/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(role: String, target: INode?)","org.modelix.model.api.PNodeAdapter.setReferenceTarget"]},{"name":"open override fun setReferenceTarget(role: String, target: INode?)","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.setReferenceTarget","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(role: String, target: INode?)","org.modelix.model.area.AreaWithMounts.NodeWrapper.setReferenceTarget"]},{"name":"open override fun setReferenceTarget(role: String, target: INode?)","description":"org.modelix.model.area.CompositeArea.NodeWrapper.setReferenceTarget","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(role: String, target: INode?)","org.modelix.model.area.CompositeArea.NodeWrapper.setReferenceTarget"]},{"name":"open override fun setReferenceTarget(role: String, target: INode?)","description":"org.modelix.model.area.CompositeArea.Root.setReferenceTarget","location":"model-api/org.modelix.model.area/-composite-area/-root/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(role: String, target: INode?)","org.modelix.model.area.CompositeArea.Root.setReferenceTarget"]},{"name":"open override fun setReferenceTarget(role: String, target: INodeReference?)","description":"org.modelix.model.api.IDeprecatedNodeDefaults.setReferenceTarget","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(role: String, target: INodeReference?)","org.modelix.model.api.IDeprecatedNodeDefaults.setReferenceTarget"]},{"name":"open override fun setReferenceTarget(role: String, target: INodeReference?)","description":"org.modelix.model.api.PNodeAdapter.setReferenceTarget","location":"model-api/org.modelix.model.api/-p-node-adapter/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(role: String, target: INodeReference?)","org.modelix.model.api.PNodeAdapter.setReferenceTarget"]},{"name":"open override fun setReferenceTarget(sourceId: Long, role: String, target: INodeReference?)","description":"org.modelix.model.api.TreePointer.setReferenceTarget","location":"model-api/org.modelix.model.api/-tree-pointer/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(sourceId: Long, role: String, target: INodeReference?)","org.modelix.model.api.TreePointer.setReferenceTarget"]},{"name":"open override fun setReferenceTarget(sourceId: Long, role: String, target: INodeReference?)","description":"org.modelix.model.api.WriteTransaction.setReferenceTarget","location":"model-api/org.modelix.model.api/-write-transaction/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(sourceId: Long, role: String, target: INodeReference?)","org.modelix.model.api.WriteTransaction.setReferenceTarget"]},{"name":"open override fun setReferenceTargetNode(role: String, target: INodeJS?)","description":"org.modelix.model.api.NodeAdapterJS.setReferenceTargetNode","location":"model-api/org.modelix.model.api/-node-adapter-j-s/set-reference-target-node.html","searchKeys":["setReferenceTargetNode","open override fun setReferenceTargetNode(role: String, target: INodeJS?)","org.modelix.model.api.NodeAdapterJS.setReferenceTargetNode"]},{"name":"open override fun setReferenceTargetRef(role: String, target: INodeReferenceJS?)","description":"org.modelix.model.api.NodeAdapterJS.setReferenceTargetRef","location":"model-api/org.modelix.model.api/-node-adapter-j-s/set-reference-target-ref.html","searchKeys":["setReferenceTargetRef","open override fun setReferenceTargetRef(role: String, target: INodeReferenceJS?)","org.modelix.model.api.NodeAdapterJS.setReferenceTargetRef"]},{"name":"open override fun toString(): String","description":"org.modelix.model.api.ConceptReference.toString","location":"model-api/org.modelix.model.api/-concept-reference/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.api.ConceptReference.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.api.LocalPNodeReference.toString","location":"model-api/org.modelix.model.api/-local-p-node-reference/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.api.LocalPNodeReference.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.api.PNodeAdapter.toString","location":"model-api/org.modelix.model.api/-p-node-adapter/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.api.PNodeAdapter.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.api.PNodeReference.toString","location":"model-api/org.modelix.model.api/-p-node-reference/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.api.PNodeReference.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.area.CompositeArea.NodeWrapper.toString","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.area.CompositeArea.NodeWrapper.toString"]},{"name":"open override fun unwrap(): INodeJS","description":"TypedNode.unwrap","location":"model-api/[root]/-typed-node/unwrap.html","searchKeys":["unwrap","open override fun unwrap(): INodeJS","TypedNode.unwrap"]},{"name":"open override fun usesRoleIds(): Boolean","description":"org.modelix.model.api.IDeprecatedNodeDefaults.usesRoleIds","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/uses-role-ids.html","searchKeys":["usesRoleIds","open override fun usesRoleIds(): Boolean","org.modelix.model.api.IDeprecatedNodeDefaults.usesRoleIds"]},{"name":"open override fun usesRoleIds(): Boolean","description":"org.modelix.model.api.PNodeAdapter.usesRoleIds","location":"model-api/org.modelix.model.api/-p-node-adapter/uses-role-ids.html","searchKeys":["usesRoleIds","open override fun usesRoleIds(): Boolean","org.modelix.model.api.PNodeAdapter.usesRoleIds"]},{"name":"open override fun withNode(substitute: INode): ChildrenChangeEvent","description":"org.modelix.model.area.ChildrenChangeEvent.withNode","location":"model-api/org.modelix.model.area/-children-change-event/with-node.html","searchKeys":["withNode","open override fun withNode(substitute: INode): ChildrenChangeEvent","org.modelix.model.area.ChildrenChangeEvent.withNode"]},{"name":"open override fun withNode(substitute: INode): PropertyChangeEvent","description":"org.modelix.model.area.PropertyChangeEvent.withNode","location":"model-api/org.modelix.model.area/-property-change-event/with-node.html","searchKeys":["withNode","open override fun withNode(substitute: INode): PropertyChangeEvent","org.modelix.model.area.PropertyChangeEvent.withNode"]},{"name":"open override fun withNode(substitute: INode): ReferenceChangeEvent","description":"org.modelix.model.area.ReferenceChangeEvent.withNode","location":"model-api/org.modelix.model.area/-reference-change-event/with-node.html","searchKeys":["withNode","open override fun withNode(substitute: INode): ReferenceChangeEvent","org.modelix.model.area.ReferenceChangeEvent.withNode"]},{"name":"open override val allChildren: Iterable<INode>","description":"org.modelix.model.api.PNodeAdapter.allChildren","location":"model-api/org.modelix.model.api/-p-node-adapter/all-children.html","searchKeys":["allChildren","open override val allChildren: Iterable<INode>","org.modelix.model.api.PNodeAdapter.allChildren"]},{"name":"open override val allChildren: Iterable<INode>","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.allChildren","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/all-children.html","searchKeys":["allChildren","open override val allChildren: Iterable<INode>","org.modelix.model.area.AreaWithMounts.NodeWrapper.allChildren"]},{"name":"open override val allChildren: Iterable<INode>","description":"org.modelix.model.area.CompositeArea.NodeWrapper.allChildren","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/all-children.html","searchKeys":["allChildren","open override val allChildren: Iterable<INode>","org.modelix.model.area.CompositeArea.NodeWrapper.allChildren"]},{"name":"open override val allChildren: Iterable<INode>","description":"org.modelix.model.area.CompositeArea.Root.allChildren","location":"model-api/org.modelix.model.area/-composite-area/-root/all-children.html","searchKeys":["allChildren","open override val allChildren: Iterable<INode>","org.modelix.model.area.CompositeArea.Root.allChildren"]},{"name":"open override val branch: IBranch","description":"org.modelix.model.api.Transaction.branch","location":"model-api/org.modelix.model.api/-transaction/branch.html","searchKeys":["branch","open override val branch: IBranch","org.modelix.model.api.Transaction.branch"]},{"name":"open override val branch: IBranch","description":"org.modelix.model.api.TreePointer.branch","location":"model-api/org.modelix.model.api/-tree-pointer/branch.html","searchKeys":["branch","open override val branch: IBranch","org.modelix.model.api.TreePointer.branch"]},{"name":"open override val childConcept: IConcept","description":"org.modelix.model.api.ChildLinkFromName.childConcept","location":"model-api/org.modelix.model.api/-child-link-from-name/child-concept.html","searchKeys":["childConcept","open override val childConcept: IConcept","org.modelix.model.api.ChildLinkFromName.childConcept"]},{"name":"open override val childConcept: IConcept","description":"org.modelix.model.api.NullChildLink.childConcept","location":"model-api/org.modelix.model.api/-null-child-link/child-concept.html","searchKeys":["childConcept","open override val childConcept: IConcept","org.modelix.model.api.NullChildLink.childConcept"]},{"name":"open override val childConcept: IConcept","description":"org.modelix.model.api.SimpleChildLink.childConcept","location":"model-api/org.modelix.model.api/-simple-child-link/child-concept.html","searchKeys":["childConcept","open override val childConcept: IConcept","org.modelix.model.api.SimpleChildLink.childConcept"]},{"name":"open override val concept: IConcept?","description":"org.modelix.model.api.PNodeAdapter.concept","location":"model-api/org.modelix.model.api/-p-node-adapter/concept.html","searchKeys":["concept","open override val concept: IConcept?","org.modelix.model.api.PNodeAdapter.concept"]},{"name":"open override val concept: IConcept?","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.concept","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/concept.html","searchKeys":["concept","open override val concept: IConcept?","org.modelix.model.area.AreaWithMounts.NodeWrapper.concept"]},{"name":"open override val concept: IConcept?","description":"org.modelix.model.area.CompositeArea.NodeWrapper.concept","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/concept.html","searchKeys":["concept","open override val concept: IConcept?","org.modelix.model.area.CompositeArea.NodeWrapper.concept"]},{"name":"open override val concept: IConcept?","description":"org.modelix.model.area.CompositeArea.Root.concept","location":"model-api/org.modelix.model.area/-composite-area/-root/concept.html","searchKeys":["concept","open override val concept: IConcept?","org.modelix.model.area.CompositeArea.Root.concept"]},{"name":"open override val deprecationMessage: String? = null","description":"org.modelix.model.data.ChildLinkData.deprecationMessage","location":"model-api/org.modelix.model.data/-child-link-data/deprecation-message.html","searchKeys":["deprecationMessage","open override val deprecationMessage: String? = null","org.modelix.model.data.ChildLinkData.deprecationMessage"]},{"name":"open override val deprecationMessage: String? = null","description":"org.modelix.model.data.ConceptData.deprecationMessage","location":"model-api/org.modelix.model.data/-concept-data/deprecation-message.html","searchKeys":["deprecationMessage","open override val deprecationMessage: String? = null","org.modelix.model.data.ConceptData.deprecationMessage"]},{"name":"open override val deprecationMessage: String? = null","description":"org.modelix.model.data.EnumData.deprecationMessage","location":"model-api/org.modelix.model.data/-enum-data/deprecation-message.html","searchKeys":["deprecationMessage","open override val deprecationMessage: String? = null","org.modelix.model.data.EnumData.deprecationMessage"]},{"name":"open override val deprecationMessage: String? = null","description":"org.modelix.model.data.PropertyData.deprecationMessage","location":"model-api/org.modelix.model.data/-property-data/deprecation-message.html","searchKeys":["deprecationMessage","open override val deprecationMessage: String? = null","org.modelix.model.data.PropertyData.deprecationMessage"]},{"name":"open override val deprecationMessage: String? = null","description":"org.modelix.model.data.ReferenceLinkData.deprecationMessage","location":"model-api/org.modelix.model.data/-reference-link-data/deprecation-message.html","searchKeys":["deprecationMessage","open override val deprecationMessage: String? = null","org.modelix.model.data.ReferenceLinkData.deprecationMessage"]},{"name":"open override val descriptor: SerialDescriptor","description":"org.modelix.model.api.ConceptReferenceKSerializer.descriptor","location":"model-api/org.modelix.model.api/-concept-reference-k-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","org.modelix.model.api.ConceptReferenceKSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"org.modelix.model.api.NodeReferenceKSerializer.descriptor","location":"model-api/org.modelix.model.api/-node-reference-k-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","org.modelix.model.api.NodeReferenceKSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"org.modelix.model.data.PropertyTypeSerializer.descriptor","location":"model-api/org.modelix.model.data/-property-type-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","org.modelix.model.data.PropertyTypeSerializer.descriptor"]},{"name":"open override val isMultiple: Boolean","description":"org.modelix.model.api.ChildLinkFromName.isMultiple","location":"model-api/org.modelix.model.api/-child-link-from-name/is-multiple.html","searchKeys":["isMultiple","open override val isMultiple: Boolean","org.modelix.model.api.ChildLinkFromName.isMultiple"]},{"name":"open override val isMultiple: Boolean","description":"org.modelix.model.api.NullChildLink.isMultiple","location":"model-api/org.modelix.model.api/-null-child-link/is-multiple.html","searchKeys":["isMultiple","open override val isMultiple: Boolean","org.modelix.model.api.NullChildLink.isMultiple"]},{"name":"open override val isMultiple: Boolean","description":"org.modelix.model.api.SimpleChildLink.isMultiple","location":"model-api/org.modelix.model.api/-simple-child-link/is-multiple.html","searchKeys":["isMultiple","open override val isMultiple: Boolean","org.modelix.model.api.SimpleChildLink.isMultiple"]},{"name":"open override val isOptional: Boolean","description":"org.modelix.model.api.NullChildLink.isOptional","location":"model-api/org.modelix.model.api/-null-child-link/is-optional.html","searchKeys":["isOptional","open override val isOptional: Boolean","org.modelix.model.api.NullChildLink.isOptional"]},{"name":"open override val isOptional: Boolean","description":"org.modelix.model.api.PropertyFromName.isOptional","location":"model-api/org.modelix.model.api/-property-from-name/is-optional.html","searchKeys":["isOptional","open override val isOptional: Boolean","org.modelix.model.api.PropertyFromName.isOptional"]},{"name":"open override val isOptional: Boolean","description":"org.modelix.model.api.RoleFromName.isOptional","location":"model-api/org.modelix.model.api/-role-from-name/is-optional.html","searchKeys":["isOptional","open override val isOptional: Boolean","org.modelix.model.api.RoleFromName.isOptional"]},{"name":"open override val isOptional: Boolean","description":"org.modelix.model.api.SimpleChildLink.isOptional","location":"model-api/org.modelix.model.api/-simple-child-link/is-optional.html","searchKeys":["isOptional","open override val isOptional: Boolean","org.modelix.model.api.SimpleChildLink.isOptional"]},{"name":"open override val isOptional: Boolean","description":"org.modelix.model.api.SimpleReferenceLink.isOptional","location":"model-api/org.modelix.model.api/-simple-reference-link/is-optional.html","searchKeys":["isOptional","open override val isOptional: Boolean","org.modelix.model.api.SimpleReferenceLink.isOptional"]},{"name":"open override val isOptional: Boolean = true","description":"org.modelix.model.api.SimpleProperty.isOptional","location":"model-api/org.modelix.model.api/-simple-property/is-optional.html","searchKeys":["isOptional","open override val isOptional: Boolean = true","org.modelix.model.api.SimpleProperty.isOptional"]},{"name":"open override val isValid: Boolean","description":"org.modelix.model.api.PNodeAdapter.isValid","location":"model-api/org.modelix.model.api/-p-node-adapter/is-valid.html","searchKeys":["isValid","open override val isValid: Boolean","org.modelix.model.api.PNodeAdapter.isValid"]},{"name":"open override val isValid: Boolean","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.isValid","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/is-valid.html","searchKeys":["isValid","open override val isValid: Boolean","org.modelix.model.area.AreaWithMounts.NodeWrapper.isValid"]},{"name":"open override val isValid: Boolean","description":"org.modelix.model.area.CompositeArea.NodeWrapper.isValid","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/is-valid.html","searchKeys":["isValid","open override val isValid: Boolean","org.modelix.model.area.CompositeArea.NodeWrapper.isValid"]},{"name":"open override val isValid: Boolean","description":"org.modelix.model.area.CompositeArea.Root.isValid","location":"model-api/org.modelix.model.area/-composite-area/-root/is-valid.html","searchKeys":["isValid","open override val isValid: Boolean","org.modelix.model.area.CompositeArea.Root.isValid"]},{"name":"open override val name: String","description":"org.modelix.model.api.ChildLinkFromName.name","location":"model-api/org.modelix.model.api/-child-link-from-name/name.html","searchKeys":["name","open override val name: String","org.modelix.model.api.ChildLinkFromName.name"]},{"name":"open override val name: String","description":"org.modelix.model.api.PropertyFromName.name","location":"model-api/org.modelix.model.api/-property-from-name/name.html","searchKeys":["name","open override val name: String","org.modelix.model.api.PropertyFromName.name"]},{"name":"open override val name: String","description":"org.modelix.model.api.ReferenceLinkFromName.name","location":"model-api/org.modelix.model.api/-reference-link-from-name/name.html","searchKeys":["name","open override val name: String","org.modelix.model.api.ReferenceLinkFromName.name"]},{"name":"open override val name: String","description":"org.modelix.model.data.ChildLinkData.name","location":"model-api/org.modelix.model.data/-child-link-data/name.html","searchKeys":["name","open override val name: String","org.modelix.model.data.ChildLinkData.name"]},{"name":"open override val name: String","description":"org.modelix.model.data.PropertyData.name","location":"model-api/org.modelix.model.data/-property-data/name.html","searchKeys":["name","open override val name: String","org.modelix.model.data.PropertyData.name"]},{"name":"open override val name: String","description":"org.modelix.model.data.ReferenceLinkData.name","location":"model-api/org.modelix.model.data/-reference-link-data/name.html","searchKeys":["name","open override val name: String","org.modelix.model.data.ReferenceLinkData.name"]},{"name":"open override val parent: INode","description":"org.modelix.model.area.CompositeArea.NodeWrapper.parent","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/parent.html","searchKeys":["parent","open override val parent: INode","org.modelix.model.area.CompositeArea.NodeWrapper.parent"]},{"name":"open override val parent: INode?","description":"org.modelix.model.api.PNodeAdapter.parent","location":"model-api/org.modelix.model.api/-p-node-adapter/parent.html","searchKeys":["parent","open override val parent: INode?","org.modelix.model.api.PNodeAdapter.parent"]},{"name":"open override val parent: INode?","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.parent","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/parent.html","searchKeys":["parent","open override val parent: INode?","org.modelix.model.area.AreaWithMounts.NodeWrapper.parent"]},{"name":"open override val parent: INode?","description":"org.modelix.model.area.CompositeArea.Root.parent","location":"model-api/org.modelix.model.area/-composite-area/-root/parent.html","searchKeys":["parent","open override val parent: INode?","org.modelix.model.area.CompositeArea.Root.parent"]},{"name":"open override val prefix: String","description":"org.modelix.model.api.PNodeReferenceSerializer.prefix","location":"model-api/org.modelix.model.api/-p-node-reference-serializer/prefix.html","searchKeys":["prefix","open override val prefix: String","org.modelix.model.api.PNodeReferenceSerializer.prefix"]},{"name":"open override val readTransaction: IReadTransaction","description":"org.modelix.model.api.PBranch.readTransaction","location":"model-api/org.modelix.model.api/-p-branch/read-transaction.html","searchKeys":["readTransaction","open override val readTransaction: IReadTransaction","org.modelix.model.api.PBranch.readTransaction"]},{"name":"open override val readTransaction: IReadTransaction","description":"org.modelix.model.api.TreePointer.readTransaction","location":"model-api/org.modelix.model.api/-tree-pointer/read-transaction.html","searchKeys":["readTransaction","open override val readTransaction: IReadTransaction","org.modelix.model.api.TreePointer.readTransaction"]},{"name":"open override val reference: INodeReference","description":"org.modelix.model.api.PNodeAdapter.reference","location":"model-api/org.modelix.model.api/-p-node-adapter/reference.html","searchKeys":["reference","open override val reference: INodeReference","org.modelix.model.api.PNodeAdapter.reference"]},{"name":"open override val reference: INodeReference","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.reference","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/reference.html","searchKeys":["reference","open override val reference: INodeReference","org.modelix.model.area.AreaWithMounts.NodeWrapper.reference"]},{"name":"open override val reference: INodeReference","description":"org.modelix.model.area.CompositeArea.NodeWrapper.reference","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/reference.html","searchKeys":["reference","open override val reference: INodeReference","org.modelix.model.area.CompositeArea.NodeWrapper.reference"]},{"name":"open override val reference: INodeReference","description":"org.modelix.model.area.CompositeArea.Root.reference","location":"model-api/org.modelix.model.area/-composite-area/-root/reference.html","searchKeys":["reference","open override val reference: INodeReference","org.modelix.model.area.CompositeArea.Root.reference"]},{"name":"open override val roleInParent: String?","description":"org.modelix.model.api.IDeprecatedNodeDefaults.roleInParent","location":"model-api/org.modelix.model.api/-i-deprecated-node-defaults/role-in-parent.html","searchKeys":["roleInParent","open override val roleInParent: String?","org.modelix.model.api.IDeprecatedNodeDefaults.roleInParent"]},{"name":"open override val roleInParent: String?","description":"org.modelix.model.api.PNodeAdapter.roleInParent","location":"model-api/org.modelix.model.api/-p-node-adapter/role-in-parent.html","searchKeys":["roleInParent","open override val roleInParent: String?","org.modelix.model.api.PNodeAdapter.roleInParent"]},{"name":"open override val roleInParent: String?","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.roleInParent","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/role-in-parent.html","searchKeys":["roleInParent","open override val roleInParent: String?","org.modelix.model.area.AreaWithMounts.NodeWrapper.roleInParent"]},{"name":"open override val roleInParent: String?","description":"org.modelix.model.area.CompositeArea.NodeWrapper.roleInParent","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/role-in-parent.html","searchKeys":["roleInParent","open override val roleInParent: String?","org.modelix.model.area.CompositeArea.NodeWrapper.roleInParent"]},{"name":"open override val roleInParent: String?","description":"org.modelix.model.area.CompositeArea.Root.roleInParent","location":"model-api/org.modelix.model.area/-composite-area/-root/role-in-parent.html","searchKeys":["roleInParent","open override val roleInParent: String?","org.modelix.model.area.CompositeArea.Root.roleInParent"]},{"name":"open override val supportedReferenceClasses: Set<KClass<PNodeReference>>","description":"org.modelix.model.api.PNodeReferenceSerializer.supportedReferenceClasses","location":"model-api/org.modelix.model.api/-p-node-reference-serializer/supported-reference-classes.html","searchKeys":["supportedReferenceClasses","open override val supportedReferenceClasses: Set<KClass<PNodeReference>>","org.modelix.model.api.PNodeReferenceSerializer.supportedReferenceClasses"]},{"name":"open override val targetConcept: IConcept","description":"org.modelix.model.api.LinkFromName.targetConcept","location":"model-api/org.modelix.model.api/-link-from-name/target-concept.html","searchKeys":["targetConcept","open override val targetConcept: IConcept","org.modelix.model.api.LinkFromName.targetConcept"]},{"name":"open override val targetConcept: IConcept","description":"org.modelix.model.api.NullChildLink.targetConcept","location":"model-api/org.modelix.model.api/-null-child-link/target-concept.html","searchKeys":["targetConcept","open override val targetConcept: IConcept","org.modelix.model.api.NullChildLink.targetConcept"]},{"name":"open override val targetConcept: IConcept","description":"org.modelix.model.api.SimpleChildLink.targetConcept","location":"model-api/org.modelix.model.api/-simple-child-link/target-concept.html","searchKeys":["targetConcept","open override val targetConcept: IConcept","org.modelix.model.api.SimpleChildLink.targetConcept"]},{"name":"open override val transaction: ITransaction","description":"org.modelix.model.api.PBranch.transaction","location":"model-api/org.modelix.model.api/-p-branch/transaction.html","searchKeys":["transaction","open override val transaction: ITransaction","org.modelix.model.api.PBranch.transaction"]},{"name":"open override val transaction: ITransaction","description":"org.modelix.model.api.TreePointer.transaction","location":"model-api/org.modelix.model.api/-tree-pointer/transaction.html","searchKeys":["transaction","open override val transaction: ITransaction","org.modelix.model.api.TreePointer.transaction"]},{"name":"open override val tree: ITree","description":"org.modelix.model.api.ReadTransaction.tree","location":"model-api/org.modelix.model.api/-read-transaction/tree.html","searchKeys":["tree","open override val tree: ITree","org.modelix.model.api.ReadTransaction.tree"]},{"name":"open override val uid: String? = null","description":"org.modelix.model.data.ChildLinkData.uid","location":"model-api/org.modelix.model.data/-child-link-data/uid.html","searchKeys":["uid","open override val uid: String? = null","org.modelix.model.data.ChildLinkData.uid"]},{"name":"open override val uid: String? = null","description":"org.modelix.model.data.PropertyData.uid","location":"model-api/org.modelix.model.data/-property-data/uid.html","searchKeys":["uid","open override val uid: String? = null","org.modelix.model.data.PropertyData.uid"]},{"name":"open override val uid: String? = null","description":"org.modelix.model.data.ReferenceLinkData.uid","location":"model-api/org.modelix.model.data/-reference-link-data/uid.html","searchKeys":["uid","open override val uid: String? = null","org.modelix.model.data.ReferenceLinkData.uid"]},{"name":"open override val writeTransaction: IWriteTransaction","description":"org.modelix.model.api.PBranch.writeTransaction","location":"model-api/org.modelix.model.api/-p-branch/write-transaction.html","searchKeys":["writeTransaction","open override val writeTransaction: IWriteTransaction","org.modelix.model.api.PBranch.writeTransaction"]},{"name":"open override val writeTransaction: IWriteTransaction","description":"org.modelix.model.api.TreePointer.writeTransaction","location":"model-api/org.modelix.model.api/-tree-pointer/write-transaction.html","searchKeys":["writeTransaction","open override val writeTransaction: IWriteTransaction","org.modelix.model.api.TreePointer.writeTransaction"]},{"name":"open override var language: ILanguage?","description":"org.modelix.model.api.SimpleConcept.language","location":"model-api/org.modelix.model.api/-simple-concept/language.html","searchKeys":["language","open override var language: ILanguage?","org.modelix.model.api.SimpleConcept.language"]},{"name":"open override var targetConcept: IConcept","description":"org.modelix.model.api.SimpleReferenceLink.targetConcept","location":"model-api/org.modelix.model.api/-simple-reference-link/target-concept.html","searchKeys":["targetConcept","open override var targetConcept: IConcept","org.modelix.model.api.SimpleReferenceLink.targetConcept"]},{"name":"open override var tree: ITree","description":"org.modelix.model.api.TreePointer.tree","location":"model-api/org.modelix.model.api/-tree-pointer/tree.html","searchKeys":["tree","open override var tree: ITree","org.modelix.model.api.TreePointer.tree"]},{"name":"open override var tree: ITree","description":"org.modelix.model.api.WriteTransaction.tree","location":"model-api/org.modelix.model.api/-write-transaction/tree.html","searchKeys":["tree","open override var tree: ITree","org.modelix.model.api.WriteTransaction.tree"]},{"name":"open suspend fun <T> runWithAdditionalScopeInCoroutine(body: suspend () -> T): T","description":"org.modelix.model.api.INodeResolutionScope.runWithAdditionalScopeInCoroutine","location":"model-api/org.modelix.model.api/-i-node-resolution-scope/run-with-additional-scope-in-coroutine.html","searchKeys":["runWithAdditionalScopeInCoroutine","open suspend fun <T> runWithAdditionalScopeInCoroutine(body: suspend () -> T): T","org.modelix.model.api.INodeResolutionScope.runWithAdditionalScopeInCoroutine"]},{"name":"open suspend fun <T> runWithInCoroutine(body: suspend () -> T): T","description":"org.modelix.model.api.INodeResolutionScope.runWithInCoroutine","location":"model-api/org.modelix.model.api/-i-node-resolution-scope/run-with-in-coroutine.html","searchKeys":["runWithInCoroutine","open suspend fun <T> runWithInCoroutine(body: suspend () -> T): T","org.modelix.model.api.INodeResolutionScope.runWithInCoroutine"]},{"name":"open val name: String","description":"GeneratedLanguage.name","location":"model-api/[root]/-generated-language/name.html","searchKeys":["name","open val name: String","GeneratedLanguage.name"]},{"name":"open val name: String","description":"org.modelix.model.api.IRole.name","location":"model-api/org.modelix.model.api/-i-role/name.html","searchKeys":["name","open val name: String","org.modelix.model.api.IRole.name"]},{"name":"open var _node: INodeJS","description":"TypedNode._node","location":"model-api/[root]/-typed-node/_node.html","searchKeys":["_node","open var _node: INodeJS","TypedNode._node"]},{"name":"open var concepts: Any","description":"LanguageRegistry.concepts","location":"model-api/[root]/-language-registry/concepts.html","searchKeys":["concepts","open var concepts: Any","LanguageRegistry.concepts"]},{"name":"open var done: Boolean?","description":"tsstdlib.IteratorYieldResult.done","location":"model-api/tsstdlib/-iterator-yield-result/done.html","searchKeys":["done","open var done: Boolean?","tsstdlib.IteratorYieldResult.done"]},{"name":"open var idGenerator: Any","description":"ModelService.idGenerator","location":"model-api/[root]/-model-service/id-generator.html","searchKeys":["idGenerator","open var idGenerator: Any","ModelService.idGenerator"]},{"name":"open var languages: Any","description":"LanguageRegistry.languages","location":"model-api/[root]/-language-registry/languages.html","searchKeys":["languages","open var languages: Any","LanguageRegistry.languages"]},{"name":"open var last: Any","description":"IdGenerator.last","location":"model-api/[root]/-id-generator/last.html","searchKeys":["last","open var last: Any","IdGenerator.last"]},{"name":"open var loadNode: Any","description":"ModelService.loadNode","location":"model-api/[root]/-model-service/load-node.html","searchKeys":["loadNode","open var loadNode: Any","ModelService.loadNode"]},{"name":"open var next: Any","description":"IdGenerator.next","location":"model-api/[root]/-id-generator/next.html","searchKeys":["next","open var next: Any","IdGenerator.next"]},{"name":"open var nodeWrappers: Any","description":"LanguageRegistry.nodeWrappers","location":"model-api/[root]/-language-registry/node-wrappers.html","searchKeys":["nodeWrappers","open var nodeWrappers: Any","LanguageRegistry.nodeWrappers"]},{"name":"open var nodeWrappers: Map<String, (node: INodeJS) -> TypedNode>","description":"GeneratedLanguage.nodeWrappers","location":"model-api/[root]/-generated-language/node-wrappers.html","searchKeys":["nodeWrappers","open var nodeWrappers: Map<String, (node: INodeJS) -> TypedNode>","GeneratedLanguage.nodeWrappers"]},{"name":"open var nodes: Any","description":"ModelService.nodes","location":"model-api/[root]/-model-service/nodes.html","searchKeys":["nodes","open var nodes: Any","ModelService.nodes"]},{"name":"open var server: Any","description":"ModelService.server","location":"model-api/[root]/-model-service/server.html","searchKeys":["server","open var server: Any","ModelService.server"]},{"name":"open var uid: Any","description":"GeneratedConcept.uid","location":"model-api/[root]/-generated-concept/uid.html","searchKeys":["uid","open var uid: Any","GeneratedConcept.uid"]},{"name":"open var versionHash: Any","description":"ModelService.versionHash","location":"model-api/[root]/-model-service/version-hash.html","searchKeys":["versionHash","open var versionHash: Any","ModelService.versionHash"]},{"name":"open var versionReceived: Any","description":"ModelService.versionReceived","location":"model-api/[root]/-model-service/version-received.html","searchKeys":["versionReceived","open var versionReceived: Any","ModelService.versionReceived"]},{"name":"open var wrapperCache: (node: ITypedNode) -> ITypedNode?","description":"LanguageRegistry.wrapperCache","location":"model-api/[root]/-language-registry/wrapper-cache.html","searchKeys":["wrapperCache","open var wrapperCache: (node: ITypedNode) -> ITypedNode?","LanguageRegistry.wrapperCache"]},{"name":"suspend fun <T> runWithAdditionalScopeInCoroutine(scope: INodeResolutionScope, body: suspend () -> T): T","description":"org.modelix.model.api.INodeResolutionScope.Companion.runWithAdditionalScopeInCoroutine","location":"model-api/org.modelix.model.api/-i-node-resolution-scope/-companion/run-with-additional-scope-in-coroutine.html","searchKeys":["runWithAdditionalScopeInCoroutine","suspend fun <T> runWithAdditionalScopeInCoroutine(scope: INodeResolutionScope, body: suspend () -> T): T","org.modelix.model.api.INodeResolutionScope.Companion.runWithAdditionalScopeInCoroutine"]},{"name":"typealias ChildrenAccessor<ChildT> = Iterable<ChildT>","description":"ChildrenAccessor","location":"model-api/[root]/-children-accessor/index.html","searchKeys":["ChildrenAccessor","typealias ChildrenAccessor<ChildT> = Iterable<ChildT>","ChildrenAccessor"]},{"name":"typealias INodeReferenceJS = Any","description":"INodeReferenceJS","location":"model-api/[root]/-i-node-reference-j-s/index.html","searchKeys":["INodeReferenceJS","typealias INodeReferenceJS = Any","INodeReferenceJS"]},{"name":"typealias Iterator__1<T> = Iterator<T, Any, Nothing?>","description":"tsstdlib.Iterator__1","location":"model-api/tsstdlib/-iterator__1/index.html","searchKeys":["Iterator__1","typealias Iterator__1<T> = Iterator<T, Any, Nothing?>","tsstdlib.Iterator__1"]},{"name":"typealias NodeId = String","description":"NodeId","location":"model-api/[root]/-node-id/index.html","searchKeys":["NodeId","typealias NodeId = String","NodeId"]},{"name":"typealias SerializedNodeReference = NodeReference","description":"org.modelix.model.api.SerializedNodeReference","location":"model-api/org.modelix.model.api/-serialized-node-reference/index.html","searchKeys":["SerializedNodeReference","typealias SerializedNodeReference = NodeReference","org.modelix.model.api.SerializedNodeReference"]},{"name":"val abstract: Boolean = false","description":"org.modelix.model.data.ConceptData.abstract","location":"model-api/org.modelix.model.data/-concept-data/abstract.html","searchKeys":["abstract","val abstract: Boolean = false","org.modelix.model.data.ConceptData.abstract"]},{"name":"val addNewOp: () -> Unit","description":"org.modelix.model.test.RandomModelChangeGenerator.addNewOp","location":"model-api/org.modelix.model.test/-random-model-change-generator/add-new-op.html","searchKeys":["addNewOp","val addNewOp: () -> Unit","org.modelix.model.test.RandomModelChangeGenerator.addNewOp"]},{"name":"val allValues: Iterable<E>","description":"org.modelix.model.api.ContextValue.allValues","location":"model-api/org.modelix.model.api/-context-value/all-values.html","searchKeys":["allValues","val allValues: Iterable<E>","org.modelix.model.api.ContextValue.allValues"]},{"name":"val area: IArea","description":"org.modelix.model.area.AreaListenerRegistry.Entry.area","location":"model-api/org.modelix.model.area/-area-listener-registry/-entry/area.html","searchKeys":["area","val area: IArea","org.modelix.model.area.AreaListenerRegistry.Entry.area"]},{"name":"val areaRef: CompositeArea.AreaReference","description":"org.modelix.model.area.CompositeArea.NodeWrapperReference.areaRef","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper-reference/area-ref.html","searchKeys":["areaRef","val areaRef: CompositeArea.AreaReference","org.modelix.model.area.CompositeArea.NodeWrapperReference.areaRef"]},{"name":"val areaRef: CompositeArea.AreaReference","description":"org.modelix.model.area.CompositeArea.RootNodeReference.areaRef","location":"model-api/org.modelix.model.area/-composite-area/-root-node-reference/area-ref.html","searchKeys":["areaRef","val areaRef: CompositeArea.AreaReference","org.modelix.model.area.CompositeArea.RootNodeReference.areaRef"]},{"name":"val areaRefs: List<IAreaReference>","description":"org.modelix.model.area.CompositeArea.AreaReference.areaRefs","location":"model-api/org.modelix.model.area/-composite-area/-area-reference/area-refs.html","searchKeys":["areaRefs","val areaRefs: List<IAreaReference>","org.modelix.model.area.CompositeArea.AreaReference.areaRefs"]},{"name":"val branch: IBranch","description":"org.modelix.model.api.PNodeAdapter.branch","location":"model-api/org.modelix.model.api/-p-node-adapter/branch.html","searchKeys":["branch","val branch: IBranch","org.modelix.model.api.PNodeAdapter.branch"]},{"name":"val branch: IBranch","description":"org.modelix.model.area.PArea.branch","location":"model-api/org.modelix.model.area/-p-area/branch.html","searchKeys":["branch","val branch: IBranch","org.modelix.model.area.PArea.branch"]},{"name":"val branchId: String","description":"org.modelix.model.api.PNodeReference.branchId","location":"model-api/org.modelix.model.api/-p-node-reference/branch-id.html","searchKeys":["branchId","val branchId: String","org.modelix.model.api.PNodeReference.branchId"]},{"name":"val branchId: String?","description":"org.modelix.model.area.PArea.AreaReference.branchId","location":"model-api/org.modelix.model.area/-p-area/-area-reference/branch-id.html","searchKeys":["branchId","val branchId: String?","org.modelix.model.area.PArea.AreaReference.branchId"]},{"name":"val branches: SimpleChildLink","description":"org.modelix.model.api.BuiltinLanguages.ModelixRuntimelang.RepositoryInfo.branches","location":"model-api/org.modelix.model.api/-builtin-languages/-modelix-runtimelang/-repository-info/branches.html","searchKeys":["branches","val branches: SimpleChildLink","org.modelix.model.api.BuiltinLanguages.ModelixRuntimelang.RepositoryInfo.branches"]},{"name":"val childLinks: MutableList<IChildLink>","description":"org.modelix.model.api.SimpleConcept.childLinks","location":"model-api/org.modelix.model.api/-simple-concept/child-links.html","searchKeys":["childLinks","val childLinks: MutableList<IChildLink>","org.modelix.model.api.SimpleConcept.childLinks"]},{"name":"val childRoles: List<String>","description":"org.modelix.model.test.RandomModelChangeGenerator.childRoles","location":"model-api/org.modelix.model.test/-random-model-change-generator/child-roles.html","searchKeys":["childRoles","val childRoles: List<String>","org.modelix.model.test.RandomModelChangeGenerator.childRoles"]},{"name":"val children: List<ChildLinkData>","description":"org.modelix.model.data.ConceptData.children","location":"model-api/org.modelix.model.data/-concept-data/children.html","searchKeys":["children","val children: List<ChildLinkData>","org.modelix.model.data.ConceptData.children"]},{"name":"val children: List<NodeData>","description":"org.modelix.model.data.NodeData.children","location":"model-api/org.modelix.model.data/-node-data/children.html","searchKeys":["children","val children: List<NodeData>","org.modelix.model.data.NodeData.children"]},{"name":"val compileInMPS: IProperty","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Module.compileInMPS","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-module/compile-in-m-p-s.html","searchKeys":["compileInMPS","val compileInMPS: IProperty","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Module.compileInMPS"]},{"name":"val concept: String? = null","description":"org.modelix.model.data.NodeData.concept","location":"model-api/org.modelix.model.data/-node-data/concept.html","searchKeys":["concept","val concept: String? = null","org.modelix.model.data.NodeData.concept"]},{"name":"val concepts: List<ConceptData>","description":"org.modelix.model.data.LanguageData.concepts","location":"model-api/org.modelix.model.data/-language-data/concepts.html","searchKeys":["concepts","val concepts: List<ConceptData>","org.modelix.model.data.LanguageData.concepts"]},{"name":"val default: DefaultLanguageRepository","description":"org.modelix.model.api.ILanguageRepository.Companion.default","location":"model-api/org.modelix.model.api/-i-language-repository/-companion/default.html","searchKeys":["default","val default: DefaultLanguageRepository","org.modelix.model.api.ILanguageRepository.Companion.default"]},{"name":"val defaultIndex: Int","description":"org.modelix.model.data.EnumData.defaultIndex","location":"model-api/org.modelix.model.data/-enum-data/default-index.html","searchKeys":["defaultIndex","val defaultIndex: Int","org.modelix.model.data.EnumData.defaultIndex"]},{"name":"val deleteOp: () -> Unit","description":"org.modelix.model.test.RandomModelChangeGenerator.deleteOp","location":"model-api/org.modelix.model.test/-random-model-change-generator/delete-op.html","searchKeys":["deleteOp","val deleteOp: () -> Unit","org.modelix.model.test.RandomModelChangeGenerator.deleteOp"]},{"name":"val dependencies: SimpleChildLink","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Module.dependencies","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-module/dependencies.html","searchKeys":["dependencies","val dependencies: SimpleChildLink","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Module.dependencies"]},{"name":"val entries: EnumEntries<Primitive>","description":"org.modelix.model.data.Primitive.entries","location":"model-api/org.modelix.model.data/-primitive/entries.html","searchKeys":["entries","val entries: EnumEntries<Primitive>","org.modelix.model.data.Primitive.entries"]},{"name":"val enumName: String","description":"org.modelix.model.data.EnumPropertyType.enumName","location":"model-api/org.modelix.model.data/-enum-property-type/enum-name.html","searchKeys":["enumName","val enumName: String","org.modelix.model.data.EnumPropertyType.enumName"]},{"name":"val enums: List<EnumData>","description":"org.modelix.model.data.LanguageData.enums","location":"model-api/org.modelix.model.data/-language-data/enums.html","searchKeys":["enums","val enums: List<EnumData>","org.modelix.model.data.LanguageData.enums"]},{"name":"val explicit: IProperty","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModuleDependency.explicit","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-module-dependency/explicit.html","searchKeys":["explicit","val explicit: IProperty","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModuleDependency.explicit"]},{"name":"val extends: List<String>","description":"org.modelix.model.data.ConceptData.extends","location":"model-api/org.modelix.model.data/-concept-data/extends.html","searchKeys":["extends","val extends: List<String>","org.modelix.model.data.ConceptData.extends"]},{"name":"val facets: SimpleChildLink","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Module.facets","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-module/facets.html","searchKeys":["facets","val facets: SimpleChildLink","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Module.facets"]},{"name":"val generated: IProperty","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.JavaModuleFacet.generated","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-java-module-facet/generated.html","searchKeys":["generated","val generated: IProperty","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.JavaModuleFacet.generated"]},{"name":"val id: IProperty","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Model.id","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-model/id.html","searchKeys":["id","val id: IProperty","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Model.id"]},{"name":"val id: IProperty","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Module.id","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-module/id.html","searchKeys":["id","val id: IProperty","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Module.id"]},{"name":"val id: IProperty","description":"org.modelix.model.api.BuiltinLanguages.ModelixRuntimelang.RepositoryInfo.id","location":"model-api/org.modelix.model.api/-builtin-languages/-modelix-runtimelang/-repository-info/id.html","searchKeys":["id","val id: IProperty","org.modelix.model.api.BuiltinLanguages.ModelixRuntimelang.RepositoryInfo.id"]},{"name":"val id: Long","description":"org.modelix.model.api.LocalPNodeReference.id","location":"model-api/org.modelix.model.api/-local-p-node-reference/id.html","searchKeys":["id","val id: Long","org.modelix.model.api.LocalPNodeReference.id"]},{"name":"val id: Long","description":"org.modelix.model.api.PNodeReference.id","location":"model-api/org.modelix.model.api/-p-node-reference/id.html","searchKeys":["id","val id: Long","org.modelix.model.api.PNodeReference.id"]},{"name":"val id: String? = null","description":"org.modelix.model.data.ModelData.id","location":"model-api/org.modelix.model.data/-model-data/id.html","searchKeys":["id","val id: String? = null","org.modelix.model.data.ModelData.id"]},{"name":"val id: String? = null","description":"org.modelix.model.data.NodeData.id","location":"model-api/org.modelix.model.data/-node-data/id.html","searchKeys":["id","val id: String? = null","org.modelix.model.data.NodeData.id"]},{"name":"val idGenerator: IIdGenerator","description":"org.modelix.model.api.TreePointer.idGenerator","location":"model-api/org.modelix.model.api/-tree-pointer/id-generator.html","searchKeys":["idGenerator","val idGenerator: IIdGenerator","org.modelix.model.api.TreePointer.idGenerator"]},{"name":"val languageDependencies: SimpleChildLink","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Module.languageDependencies","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-module/language-dependencies.html","searchKeys":["languageDependencies","val languageDependencies: SimpleChildLink","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Module.languageDependencies"]},{"name":"val listener: IAreaListener","description":"org.modelix.model.area.AreaListenerRegistry.Entry.listener","location":"model-api/org.modelix.model.area/-area-listener-registry/-entry/listener.html","searchKeys":["listener","val listener: IAreaListener","org.modelix.model.area.AreaListenerRegistry.Entry.listener"]},{"name":"val members: List<EnumMemberData>","description":"org.modelix.model.data.EnumData.members","location":"model-api/org.modelix.model.data/-enum-data/members.html","searchKeys":["members","val members: List<EnumMemberData>","org.modelix.model.data.EnumData.members"]},{"name":"val metaProperties: MutableMap<String, String>","description":"org.modelix.model.data.ConceptData.metaProperties","location":"model-api/org.modelix.model.data/-concept-data/meta-properties.html","searchKeys":["metaProperties","val metaProperties: MutableMap<String, String>","org.modelix.model.data.ConceptData.metaProperties"]},{"name":"val model: SimpleReferenceLink","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModelReference.model","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-model-reference/model.html","searchKeys":["model","val model: SimpleReferenceLink","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModelReference.model"]},{"name":"val modelImports: SimpleChildLink","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Model.modelImports","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-model/model-imports.html","searchKeys":["modelImports","val modelImports: SimpleChildLink","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Model.modelImports"]},{"name":"val models: SimpleChildLink","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Module.models","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-module/models.html","searchKeys":["models","val models: SimpleChildLink","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Module.models"]},{"name":"val module: SimpleReferenceLink","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModuleReference.module","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-module-reference/module.html","searchKeys":["module","val module: SimpleReferenceLink","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModuleReference.module"]},{"name":"val moduleVersion: IProperty","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Module.moduleVersion","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-module/module-version.html","searchKeys":["moduleVersion","val moduleVersion: IProperty","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Module.moduleVersion"]},{"name":"val modules: SimpleChildLink","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Project.modules","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-project/modules.html","searchKeys":["modules","val modules: SimpleChildLink","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Project.modules"]},{"name":"val modules: SimpleChildLink","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Repository.modules","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-repository/modules.html","searchKeys":["modules","val modules: SimpleChildLink","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Repository.modules"]},{"name":"val mountKeys: List<INodeReference>","description":"org.modelix.model.area.AreaWithMounts.AreaReference.mountKeys","location":"model-api/org.modelix.model.area/-area-with-mounts/-area-reference/mount-keys.html","searchKeys":["mountKeys","val mountKeys: List<INodeReference>","org.modelix.model.area.AreaWithMounts.AreaReference.mountKeys"]},{"name":"val mountValues: List<IAreaReference>","description":"org.modelix.model.area.AreaWithMounts.AreaReference.mountValues","location":"model-api/org.modelix.model.area/-area-with-mounts/-area-reference/mount-values.html","searchKeys":["mountValues","val mountValues: List<IAreaReference>","org.modelix.model.area.AreaWithMounts.AreaReference.mountValues"]},{"name":"val moveOp: () -> Unit","description":"org.modelix.model.test.RandomModelChangeGenerator.moveOp","location":"model-api/org.modelix.model.test/-random-model-change-generator/move-op.html","searchKeys":["moveOp","val moveOp: () -> Unit","org.modelix.model.test.RandomModelChangeGenerator.moveOp"]},{"name":"val multiple: Boolean = false","description":"org.modelix.model.data.ChildLinkData.multiple","location":"model-api/org.modelix.model.data/-child-link-data/multiple.html","searchKeys":["multiple","val multiple: Boolean = false","org.modelix.model.data.ChildLinkData.multiple"]},{"name":"val name: IProperty","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.LanguageDependency.name","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-language-dependency/name.html","searchKeys":["name","val name: IProperty","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.LanguageDependency.name"]},{"name":"val name: IProperty","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModuleDependency.name","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-module-dependency/name.html","searchKeys":["name","val name: IProperty","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModuleDependency.name"]},{"name":"val name: IProperty","description":"org.modelix.model.api.BuiltinLanguages.jetbrains_mps_lang_core.INamedConcept.name","location":"model-api/org.modelix.model.api/-builtin-languages/jetbrains_mps_lang_core/-i-named-concept/name.html","searchKeys":["name","val name: IProperty","org.modelix.model.api.BuiltinLanguages.jetbrains_mps_lang_core.INamedConcept.name"]},{"name":"val name: String","description":"org.modelix.model.data.ConceptData.name","location":"model-api/org.modelix.model.data/-concept-data/name.html","searchKeys":["name","val name: String","org.modelix.model.data.ConceptData.name"]},{"name":"val name: String","description":"org.modelix.model.data.EnumData.name","location":"model-api/org.modelix.model.data/-enum-data/name.html","searchKeys":["name","val name: String","org.modelix.model.data.EnumData.name"]},{"name":"val name: String","description":"org.modelix.model.data.EnumMemberData.name","location":"model-api/org.modelix.model.data/-enum-member-data/name.html","searchKeys":["name","val name: String","org.modelix.model.data.EnumMemberData.name"]},{"name":"val name: String","description":"org.modelix.model.data.LanguageData.name","location":"model-api/org.modelix.model.data/-language-data/name.html","searchKeys":["name","val name: String","org.modelix.model.data.LanguageData.name"]},{"name":"val node: INode","description":"org.modelix.model.api.NodeAdapterJS.node","location":"model-api/org.modelix.model.api/-node-adapter-j-s/node.html","searchKeys":["node","val node: INode","org.modelix.model.api.NodeAdapterJS.node"]},{"name":"val node: INode","description":"org.modelix.model.area.AreaWithMounts.NodeWrapper.node","location":"model-api/org.modelix.model.area/-area-with-mounts/-node-wrapper/node.html","searchKeys":["node","val node: INode","org.modelix.model.area.AreaWithMounts.NodeWrapper.node"]},{"name":"val node: INode","description":"org.modelix.model.area.CompositeArea.NodeWrapper.node","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper/node.html","searchKeys":["node","val node: INode","org.modelix.model.area.CompositeArea.NodeWrapper.node"]},{"name":"val node: INode","description":"org.modelix.model.area.NodeChangeEvent.node","location":"model-api/org.modelix.model.area/-node-change-event/node.html","searchKeys":["node","val node: INode","org.modelix.model.area.NodeChangeEvent.node"]},{"name":"val nodeId: Long","description":"org.modelix.model.api.PNodeAdapter.nodeId","location":"model-api/org.modelix.model.api/-p-node-adapter/node-id.html","searchKeys":["nodeId","val nodeId: Long","org.modelix.model.api.PNodeAdapter.nodeId"]},{"name":"val nodeId: String","description":"org.modelix.model.api.NodeReferenceById.nodeId","location":"model-api/org.modelix.model.api/-node-reference-by-id/node-id.html","searchKeys":["nodeId","val nodeId: String","org.modelix.model.api.NodeReferenceById.nodeId"]},{"name":"val nodeRef: INodeReference","description":"org.modelix.model.area.CompositeArea.NodeWrapperReference.nodeRef","location":"model-api/org.modelix.model.area/-composite-area/-node-wrapper-reference/node-ref.html","searchKeys":["nodeRef","val nodeRef: INodeReference","org.modelix.model.area.CompositeArea.NodeWrapperReference.nodeRef"]},{"name":"val optional: Boolean = true","description":"org.modelix.model.data.ChildLinkData.optional","location":"model-api/org.modelix.model.data/-child-link-data/optional.html","searchKeys":["optional","val optional: Boolean = true","org.modelix.model.data.ChildLinkData.optional"]},{"name":"val optional: Boolean = true","description":"org.modelix.model.data.PropertyData.optional","location":"model-api/org.modelix.model.data/-property-data/optional.html","searchKeys":["optional","val optional: Boolean = true","org.modelix.model.data.PropertyData.optional"]},{"name":"val optional: Boolean = true","description":"org.modelix.model.data.ReferenceLinkData.optional","location":"model-api/org.modelix.model.data/-reference-link-data/optional.html","searchKeys":["optional","val optional: Boolean = true","org.modelix.model.data.ReferenceLinkData.optional"]},{"name":"val path: IProperty","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.JavaModuleFacet.path","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-java-module-facet/path.html","searchKeys":["path","val path: IProperty","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.JavaModuleFacet.path"]},{"name":"val pckg: String","description":"org.modelix.model.data.EnumPropertyType.pckg","location":"model-api/org.modelix.model.data/-enum-property-type/pckg.html","searchKeys":["pckg","val pckg: String","org.modelix.model.data.EnumPropertyType.pckg"]},{"name":"val presentation: String? = null","description":"org.modelix.model.data.EnumMemberData.presentation","location":"model-api/org.modelix.model.data/-enum-member-data/presentation.html","searchKeys":["presentation","val presentation: String? = null","org.modelix.model.data.EnumMemberData.presentation"]},{"name":"val primitive: Primitive","description":"org.modelix.model.data.PrimitivePropertyType.primitive","location":"model-api/org.modelix.model.data/-primitive-property-type/primitive.html","searchKeys":["primitive","val primitive: Primitive","org.modelix.model.data.PrimitivePropertyType.primitive"]},{"name":"val projectModules: SimpleChildLink","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Project.projectModules","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-project/project-modules.html","searchKeys":["projectModules","val projectModules: SimpleChildLink","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Project.projectModules"]},{"name":"val projects: SimpleChildLink","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Repository.projects","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-repository/projects.html","searchKeys":["projects","val projects: SimpleChildLink","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Repository.projects"]},{"name":"val properties: List<PropertyData>","description":"org.modelix.model.data.ConceptData.properties","location":"model-api/org.modelix.model.data/-concept-data/properties.html","searchKeys":["properties","val properties: List<PropertyData>","org.modelix.model.data.ConceptData.properties"]},{"name":"val properties: Map<String, String>","description":"org.modelix.model.data.NodeData.properties","location":"model-api/org.modelix.model.data/-node-data/properties.html","searchKeys":["properties","val properties: Map<String, String>","org.modelix.model.data.NodeData.properties"]},{"name":"val properties: MutableList<SimpleProperty>","description":"org.modelix.model.api.SimpleConcept.properties","location":"model-api/org.modelix.model.api/-simple-concept/properties.html","searchKeys":["properties","val properties: MutableList<SimpleProperty>","org.modelix.model.api.SimpleConcept.properties"]},{"name":"val propertyRoles: List<String>","description":"org.modelix.model.test.RandomModelChangeGenerator.propertyRoles","location":"model-api/org.modelix.model.test/-random-model-change-generator/property-roles.html","searchKeys":["propertyRoles","val propertyRoles: List<String>","org.modelix.model.test.RandomModelChangeGenerator.propertyRoles"]},{"name":"val reexport: IProperty","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModuleDependency.reexport","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-module-dependency/reexport.html","searchKeys":["reexport","val reexport: IProperty","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModuleDependency.reexport"]},{"name":"val referenceLinks: MutableList<IReferenceLink>","description":"org.modelix.model.api.SimpleConcept.referenceLinks","location":"model-api/org.modelix.model.api/-simple-concept/reference-links.html","searchKeys":["referenceLinks","val referenceLinks: MutableList<IReferenceLink>","org.modelix.model.api.SimpleConcept.referenceLinks"]},{"name":"val referenceRoles: List<String>","description":"org.modelix.model.test.RandomModelChangeGenerator.referenceRoles","location":"model-api/org.modelix.model.test/-random-model-change-generator/reference-roles.html","searchKeys":["referenceRoles","val referenceRoles: List<String>","org.modelix.model.test.RandomModelChangeGenerator.referenceRoles"]},{"name":"val references: List<ReferenceLinkData>","description":"org.modelix.model.data.ConceptData.references","location":"model-api/org.modelix.model.data/-concept-data/references.html","searchKeys":["references","val references: List<ReferenceLinkData>","org.modelix.model.data.ConceptData.references"]},{"name":"val references: Map<String, String>","description":"org.modelix.model.data.NodeData.references","location":"model-api/org.modelix.model.data/-node-data/references.html","searchKeys":["references","val references: Map<String, String>","org.modelix.model.data.NodeData.references"]},{"name":"val repositories: SimpleChildLink","description":"org.modelix.model.api.BuiltinLanguages.ModelixRuntimelang.ModelServerInfo.repositories","location":"model-api/org.modelix.model.api/-builtin-languages/-modelix-runtimelang/-model-server-info/repositories.html","searchKeys":["repositories","val repositories: SimpleChildLink","org.modelix.model.api.BuiltinLanguages.ModelixRuntimelang.ModelServerInfo.repositories"]},{"name":"val role: String","description":"org.modelix.model.area.RoleChangeEvent.role","location":"model-api/org.modelix.model.area/-role-change-event/role.html","searchKeys":["role","val role: String","org.modelix.model.area.RoleChangeEvent.role"]},{"name":"val role: String? = null","description":"org.modelix.model.data.NodeData.role","location":"model-api/org.modelix.model.data/-node-data/role.html","searchKeys":["role","val role: String? = null","org.modelix.model.data.NodeData.role"]},{"name":"val root: NodeData","description":"org.modelix.model.data.ModelData.root","location":"model-api/org.modelix.model.data/-model-data/root.html","searchKeys":["root","val root: NodeData","org.modelix.model.data.ModelData.root"]},{"name":"val rootArea: IArea","description":"org.modelix.model.area.AreaWithMounts.rootArea","location":"model-api/org.modelix.model.area/-area-with-mounts/root-area.html","searchKeys":["rootArea","val rootArea: IArea","org.modelix.model.area.AreaWithMounts.rootArea"]},{"name":"val rootArea: IAreaReference","description":"org.modelix.model.area.AreaWithMounts.AreaReference.rootArea","location":"model-api/org.modelix.model.area/-area-with-mounts/-area-reference/root-area.html","searchKeys":["rootArea","val rootArea: IAreaReference","org.modelix.model.area.AreaWithMounts.AreaReference.rootArea"]},{"name":"val rootNode: INode","description":"org.modelix.model.test.RandomModelChangeGenerator.rootNode","location":"model-api/org.modelix.model.test/-random-model-change-generator/root-node.html","searchKeys":["rootNode","val rootNode: INode","org.modelix.model.test.RandomModelChangeGenerator.rootNode"]},{"name":"val rootNodes: SimpleChildLink","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Model.rootNodes","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-model/root-nodes.html","searchKeys":["rootNodes","val rootNodes: SimpleChildLink","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Model.rootNodes"]},{"name":"val scope: IProperty","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModuleDependency.scope","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-module-dependency/scope.html","searchKeys":["scope","val scope: IProperty","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModuleDependency.scope"]},{"name":"val scopes: List<INodeResolutionScope>","description":"org.modelix.model.api.CompositeNodeResolutionScope.scopes","location":"model-api/org.modelix.model.api/-composite-node-resolution-scope/scopes.html","searchKeys":["scopes","val scopes: List<INodeResolutionScope>","org.modelix.model.api.CompositeNodeResolutionScope.scopes"]},{"name":"val serialized: String","description":"org.modelix.model.api.NodeReference.serialized","location":"model-api/org.modelix.model.api/-node-reference/serialized.html","searchKeys":["serialized","val serialized: String","org.modelix.model.api.NodeReference.serialized"]},{"name":"val setPropertyOp: () -> Unit","description":"org.modelix.model.test.RandomModelChangeGenerator.setPropertyOp","location":"model-api/org.modelix.model.test/-random-model-change-generator/set-property-op.html","searchKeys":["setPropertyOp","val setPropertyOp: () -> Unit","org.modelix.model.test.RandomModelChangeGenerator.setPropertyOp"]},{"name":"val setReferenceOp: () -> Unit","description":"org.modelix.model.test.RandomModelChangeGenerator.setReferenceOp","location":"model-api/org.modelix.model.test/-random-model-change-generator/set-reference-op.html","searchKeys":["setReferenceOp","val setReferenceOp: () -> Unit","org.modelix.model.test.RandomModelChangeGenerator.setReferenceOp"]},{"name":"val smodelAttribute: IChildLink","description":"org.modelix.model.api.BuiltinLanguages.jetbrains_mps_lang_core.BaseConcept.smodelAttribute","location":"model-api/org.modelix.model.api/-builtin-languages/jetbrains_mps_lang_core/-base-concept/smodel-attribute.html","searchKeys":["smodelAttribute","val smodelAttribute: IChildLink","org.modelix.model.api.BuiltinLanguages.jetbrains_mps_lang_core.BaseConcept.smodelAttribute"]},{"name":"val stereotype: IProperty","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Model.stereotype","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-model/stereotype.html","searchKeys":["stereotype","val stereotype: IProperty","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Model.stereotype"]},{"name":"val tempModules: SimpleChildLink","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Repository.tempModules","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-repository/temp-modules.html","searchKeys":["tempModules","val tempModules: SimpleChildLink","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Repository.tempModules"]},{"name":"val type: PropertyType","description":"org.modelix.model.data.PropertyData.type","location":"model-api/org.modelix.model.data/-property-data/type.html","searchKeys":["type","val type: PropertyType","org.modelix.model.data.PropertyData.type"]},{"name":"val type: String","description":"org.modelix.model.data.ChildLinkData.type","location":"model-api/org.modelix.model.data/-child-link-data/type.html","searchKeys":["type","val type: String","org.modelix.model.data.ChildLinkData.type"]},{"name":"val type: String","description":"org.modelix.model.data.ReferenceLinkData.type","location":"model-api/org.modelix.model.data/-reference-link-data/type.html","searchKeys":["type","val type: String","org.modelix.model.data.ReferenceLinkData.type"]},{"name":"val uid: String","description":"org.modelix.model.api.ConceptReference.uid","location":"model-api/org.modelix.model.api/-concept-reference/uid.html","searchKeys":["uid","val uid: String","org.modelix.model.api.ConceptReference.uid"]},{"name":"val uid: String","description":"org.modelix.model.data.EnumMemberData.uid","location":"model-api/org.modelix.model.data/-enum-member-data/uid.html","searchKeys":["uid","val uid: String","org.modelix.model.data.EnumMemberData.uid"]},{"name":"val uid: String? = null","description":"org.modelix.model.data.ConceptData.uid","location":"model-api/org.modelix.model.data/-concept-data/uid.html","searchKeys":["uid","val uid: String? = null","org.modelix.model.data.ConceptData.uid"]},{"name":"val uid: String? = null","description":"org.modelix.model.data.EnumData.uid","location":"model-api/org.modelix.model.data/-enum-data/uid.html","searchKeys":["uid","val uid: String? = null","org.modelix.model.data.EnumData.uid"]},{"name":"val uid: String? = null","description":"org.modelix.model.data.LanguageData.uid","location":"model-api/org.modelix.model.data/-language-data/uid.html","searchKeys":["uid","val uid: String? = null","org.modelix.model.data.LanguageData.uid"]},{"name":"val usedLanguages: SimpleChildLink","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Model.usedLanguages","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-model/used-languages.html","searchKeys":["usedLanguages","val usedLanguages: SimpleChildLink","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.Model.usedLanguages"]},{"name":"val uuid: IProperty","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.LanguageDependency.uuid","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-language-dependency/uuid.html","searchKeys":["uuid","val uuid: IProperty","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.LanguageDependency.uuid"]},{"name":"val uuid: IProperty","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModuleDependency.uuid","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-module-dependency/uuid.html","searchKeys":["uuid","val uuid: IProperty","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModuleDependency.uuid"]},{"name":"val version: IProperty","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModuleDependency.version","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-module-dependency/version.html","searchKeys":["version","val version: IProperty","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ModuleDependency.version"]},{"name":"val version: IProperty","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.SingleLanguageDependency.version","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-single-language-dependency/version.html","searchKeys":["version","val version: IProperty","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.SingleLanguageDependency.version"]},{"name":"val virtualFolder: IProperty","description":"org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ProjectModule.virtualFolder","location":"model-api/org.modelix.model.api/-builtin-languages/-m-p-s-repository-concepts/-project-module/virtual-folder.html","searchKeys":["virtualFolder","val virtualFolder: IProperty","org.modelix.model.api.BuiltinLanguages.MPSRepositoryConcepts.ProjectModule.virtualFolder"]},{"name":"val virtualPackage: IProperty","description":"org.modelix.model.api.BuiltinLanguages.jetbrains_mps_lang_core.BaseConcept.virtualPackage","location":"model-api/org.modelix.model.api/-builtin-languages/jetbrains_mps_lang_core/-base-concept/virtual-package.html","searchKeys":["virtualPackage","val virtualPackage: IProperty","org.modelix.model.api.BuiltinLanguages.jetbrains_mps_lang_core.BaseConcept.virtualPackage"]},{"name":"val wrappedListener: IAreaListener","description":"org.modelix.model.area.AreaListenerWrapper.wrappedListener","location":"model-api/org.modelix.model.area/-area-listener-wrapper/wrapped-listener.html","searchKeys":["wrappedListener","val wrappedListener: IAreaListener","org.modelix.model.area.AreaListenerWrapper.wrappedListener"]},{"name":"var INSTANCE: LanguageRegistry","description":"LanguageRegistry.Companion.INSTANCE","location":"model-api/[root]/-language-registry/-companion/-i-n-s-t-a-n-c-e.html","searchKeys":["INSTANCE","var INSTANCE: LanguageRegistry","LanguageRegistry.Companion.INSTANCE"]},{"name":"var operations: List<() -> Unit>","description":"org.modelix.model.test.RandomModelChangeGenerator.operations","location":"model-api/org.modelix.model.test/-random-model-change-generator/operations.html","searchKeys":["operations","var operations: List<() -> Unit>","org.modelix.model.test.RandomModelChangeGenerator.operations"]},{"name":"var owner: SimpleConcept?","description":"org.modelix.model.api.SimpleChildLink.owner","location":"model-api/org.modelix.model.api/-simple-child-link/owner.html","searchKeys":["owner","var owner: SimpleConcept?","org.modelix.model.api.SimpleChildLink.owner"]},{"name":"var owner: SimpleConcept?","description":"org.modelix.model.api.SimpleProperty.owner","location":"model-api/org.modelix.model.api/-simple-property/owner.html","searchKeys":["owner","var owner: SimpleConcept?","org.modelix.model.api.SimpleProperty.owner"]},{"name":"var owner: SimpleConcept?","description":"org.modelix.model.api.SimpleReferenceLink.owner","location":"model-api/org.modelix.model.api/-simple-reference-link/owner.html","searchKeys":["owner","var owner: SimpleConcept?","org.modelix.model.api.SimpleReferenceLink.owner"]},{"name":"abstract class ChildAccessor<ChildT : ITypedNode>(parent: INode, role: IChildLink, childConcept: IConcept, val childType: KClass<ChildT>) : Iterable<ChildT> ","description":"org.modelix.metamodel.ChildAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-child-accessor/index.html","searchKeys":["ChildAccessor","abstract class ChildAccessor<ChildT : ITypedNode>(parent: INode, role: IChildLink, childConcept: IConcept, val childType: KClass<ChildT>) : Iterable<ChildT> ","org.modelix.metamodel.ChildAccessor"]},{"name":"abstract class EmptyConcept : IConcept","description":"org.modelix.metamodel.EmptyConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-empty-concept/index.html","searchKeys":["EmptyConcept","abstract class EmptyConcept : IConcept","org.modelix.metamodel.EmptyConcept"]},{"name":"abstract class EnumSerializer","description":"org.modelix.metamodel.EnumSerializer","location":"model-api-gen-runtime/org.modelix.metamodel/-enum-serializer/index.html","searchKeys":["EnumSerializer","abstract class EnumSerializer","org.modelix.metamodel.EnumSerializer"]},{"name":"abstract class GeneratedChildLink<ChildNodeT : ITypedNode, ChildConceptT : IConceptOfTypedNode<ChildNodeT>>(owner: IConcept, simpleName: String, uid: String?, val isMultiple: Boolean, val isOptional: Boolean, val targetConcept: IConcept, childNodeInterface: KClass<ChildNodeT>) : IChildLink, ITypedChildLink<ChildNodeT> ","description":"org.modelix.metamodel.GeneratedChildLink","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-child-link/index.html","searchKeys":["GeneratedChildLink","abstract class GeneratedChildLink<ChildNodeT : ITypedNode, ChildConceptT : IConceptOfTypedNode<ChildNodeT>>(owner: IConcept, simpleName: String, uid: String?, val isMultiple: Boolean, val isOptional: Boolean, val targetConcept: IConcept, childNodeInterface: KClass<ChildNodeT>) : IChildLink, ITypedChildLink<ChildNodeT> ","org.modelix.metamodel.GeneratedChildLink"]},{"name":"abstract class GeneratedConcept<NodeT : ITypedNode, ConceptT : ITypedConcept>(name: String, is_abstract: Boolean) : IConcept","description":"org.modelix.metamodel.GeneratedConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/index.html","searchKeys":["GeneratedConcept","abstract class GeneratedConcept<NodeT : ITypedNode, ConceptT : ITypedConcept>(name: String, is_abstract: Boolean) : IConcept","org.modelix.metamodel.GeneratedConcept"]},{"name":"abstract class GeneratedLanguage(name: String) : ILanguage","description":"org.modelix.metamodel.GeneratedLanguage","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-language/index.html","searchKeys":["GeneratedLanguage","abstract class GeneratedLanguage(name: String) : ILanguage","org.modelix.metamodel.GeneratedLanguage"]},{"name":"abstract class PropertyAccessor<ValueT>(val node: INode, val role: IProperty)","description":"org.modelix.metamodel.PropertyAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-property-accessor/index.html","searchKeys":["PropertyAccessor","abstract class PropertyAccessor<ValueT>(val node: INode, val role: IProperty)","org.modelix.metamodel.PropertyAccessor"]},{"name":"abstract class TypedNodeImpl(val wrappedNode: INode) : ITypedNode","description":"org.modelix.metamodel.TypedNodeImpl","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-node-impl/index.html","searchKeys":["TypedNodeImpl","abstract class TypedNodeImpl(val wrappedNode: INode) : ITypedNode","org.modelix.metamodel.TypedNodeImpl"]},{"name":"abstract fun castChild(childNode: INode): ChildT","description":"org.modelix.metamodel.ITypedChildLink.castChild","location":"model-api-gen-runtime/org.modelix.metamodel/-i-typed-child-link/cast-child.html","searchKeys":["castChild","abstract fun castChild(childNode: INode): ChildT","org.modelix.metamodel.ITypedChildLink.castChild"]},{"name":"abstract fun castTarget(target: INode): TargetT","description":"org.modelix.metamodel.ITypedReferenceLink.castTarget","location":"model-api-gen-runtime/org.modelix.metamodel/-i-typed-reference-link/cast-target.html","searchKeys":["castTarget","abstract fun castTarget(target: INode): TargetT","org.modelix.metamodel.ITypedReferenceLink.castTarget"]},{"name":"abstract fun convertRead(value: String?): ValueT","description":"org.modelix.metamodel.PropertyAccessor.convertRead","location":"model-api-gen-runtime/org.modelix.metamodel/-property-accessor/convert-read.html","searchKeys":["convertRead","abstract fun convertRead(value: String?): ValueT","org.modelix.metamodel.PropertyAccessor.convertRead"]},{"name":"abstract fun convertWrite(value: ValueT): String?","description":"org.modelix.metamodel.PropertyAccessor.convertWrite","location":"model-api-gen-runtime/org.modelix.metamodel/-property-accessor/convert-write.html","searchKeys":["convertWrite","abstract fun convertWrite(value: ValueT): String?","org.modelix.metamodel.PropertyAccessor.convertWrite"]},{"name":"abstract fun deserialize(serialized: String?): ValueT","description":"org.modelix.metamodel.IPropertyValueSerializer.deserialize","location":"model-api-gen-runtime/org.modelix.metamodel/-i-property-value-serializer/deserialize.html","searchKeys":["deserialize","abstract fun deserialize(serialized: String?): ValueT","org.modelix.metamodel.IPropertyValueSerializer.deserialize"]},{"name":"abstract fun deserializeValue(serialized: String?): ValueT","description":"org.modelix.metamodel.ITypedProperty.deserializeValue","location":"model-api-gen-runtime/org.modelix.metamodel/-i-typed-property/deserialize-value.html","searchKeys":["deserializeValue","abstract fun deserializeValue(serialized: String?): ValueT","org.modelix.metamodel.ITypedProperty.deserializeValue"]},{"name":"abstract fun getInstanceClass(): KClass<out NodeT>","description":"org.modelix.metamodel.GeneratedConcept.getInstanceClass","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/get-instance-class.html","searchKeys":["getInstanceClass","abstract fun getInstanceClass(): KClass<out NodeT>","org.modelix.metamodel.GeneratedConcept.getInstanceClass"]},{"name":"abstract fun getInstanceInterface(): KClass<out NodeT>","description":"org.modelix.metamodel.IConceptOfTypedNode.getInstanceInterface","location":"model-api-gen-runtime/org.modelix.metamodel/-i-concept-of-typed-node/get-instance-interface.html","searchKeys":["getInstanceInterface","abstract fun getInstanceInterface(): KClass<out NodeT>","org.modelix.metamodel.IConceptOfTypedNode.getInstanceInterface"]},{"name":"abstract fun getTypedChildConcept(): IConceptOfTypedNode<ChildT>","description":"org.modelix.metamodel.ITypedChildLink.getTypedChildConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-i-typed-child-link/get-typed-child-concept.html","searchKeys":["getTypedChildConcept","abstract fun getTypedChildConcept(): IConceptOfTypedNode<ChildT>","org.modelix.metamodel.ITypedChildLink.getTypedChildConcept"]},{"name":"abstract fun getTypedTargetConcept(): IConceptOfTypedNode<TargetT>","description":"org.modelix.metamodel.ITypedReferenceLink.getTypedTargetConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-i-typed-reference-link/get-typed-target-concept.html","searchKeys":["getTypedTargetConcept","abstract fun getTypedTargetConcept(): IConceptOfTypedNode<TargetT>","org.modelix.metamodel.ITypedReferenceLink.getTypedTargetConcept"]},{"name":"abstract fun serialize(value: ValueT): String?","description":"org.modelix.metamodel.IPropertyValueSerializer.serialize","location":"model-api-gen-runtime/org.modelix.metamodel/-i-property-value-serializer/serialize.html","searchKeys":["serialize","abstract fun serialize(value: ValueT): String?","org.modelix.metamodel.IPropertyValueSerializer.serialize"]},{"name":"abstract fun serializeValue(value: ValueT): String?","description":"org.modelix.metamodel.ITypedProperty.serializeValue","location":"model-api-gen-runtime/org.modelix.metamodel/-i-typed-property/serialize-value.html","searchKeys":["serializeValue","abstract fun serializeValue(value: ValueT): String?","org.modelix.metamodel.ITypedProperty.serializeValue"]},{"name":"abstract fun typed(): ConceptT","description":"org.modelix.metamodel.GeneratedConcept.typed","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/typed.html","searchKeys":["typed","abstract fun typed(): ConceptT","org.modelix.metamodel.GeneratedConcept.typed"]},{"name":"abstract fun untyped(): IChildLink","description":"org.modelix.metamodel.ITypedChildLink.untyped","location":"model-api-gen-runtime/org.modelix.metamodel/-i-typed-child-link/untyped.html","searchKeys":["untyped","abstract fun untyped(): IChildLink","org.modelix.metamodel.ITypedChildLink.untyped"]},{"name":"abstract fun untyped(): IConcept","description":"org.modelix.metamodel.ITypedConcept.untyped","location":"model-api-gen-runtime/org.modelix.metamodel/-i-typed-concept/untyped.html","searchKeys":["untyped","abstract fun untyped(): IConcept","org.modelix.metamodel.ITypedConcept.untyped"]},{"name":"abstract fun untyped(): IProperty","description":"org.modelix.metamodel.ITypedProperty.untyped","location":"model-api-gen-runtime/org.modelix.metamodel/-i-typed-property/untyped.html","searchKeys":["untyped","abstract fun untyped(): IProperty","org.modelix.metamodel.ITypedProperty.untyped"]},{"name":"abstract fun untyped(): IReferenceLink","description":"org.modelix.metamodel.ITypedReferenceLink.untyped","location":"model-api-gen-runtime/org.modelix.metamodel/-i-typed-reference-link/untyped.html","searchKeys":["untyped","abstract fun untyped(): IReferenceLink","org.modelix.metamodel.ITypedReferenceLink.untyped"]},{"name":"abstract fun unwrap(): INode","description":"org.modelix.metamodel.ITypedNode.unwrap","location":"model-api-gen-runtime/org.modelix.metamodel/-i-typed-node/unwrap.html","searchKeys":["unwrap","abstract fun unwrap(): INode","org.modelix.metamodel.ITypedNode.unwrap"]},{"name":"abstract fun wrap(node: INode): NodeT","description":"org.modelix.metamodel.GeneratedConcept.wrap","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/wrap.html","searchKeys":["wrap","abstract fun wrap(node: INode): NodeT","org.modelix.metamodel.GeneratedConcept.wrap"]},{"name":"abstract val _concept: ITypedConcept","description":"org.modelix.metamodel.ITypedNode._concept","location":"model-api-gen-runtime/org.modelix.metamodel/-i-typed-node/_concept.html","searchKeys":["_concept","abstract val _concept: ITypedConcept","org.modelix.metamodel.ITypedNode._concept"]},{"name":"abstract val name: String","description":"org.modelix.metamodel.IPropertyValueEnum.name","location":"model-api-gen-runtime/org.modelix.metamodel/-i-property-value-enum/name.html","searchKeys":["name","abstract val name: String","org.modelix.metamodel.IPropertyValueEnum.name"]},{"name":"abstract val presentation: String?","description":"org.modelix.metamodel.IPropertyValueEnum.presentation","location":"model-api-gen-runtime/org.modelix.metamodel/-i-property-value-enum/presentation.html","searchKeys":["presentation","abstract val presentation: String?","org.modelix.metamodel.IPropertyValueEnum.presentation"]},{"name":"class BooleanPropertyAccessor(node: INode, role: IProperty) : PropertyAccessor<Boolean> ","description":"org.modelix.metamodel.BooleanPropertyAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-boolean-property-accessor/index.html","searchKeys":["BooleanPropertyAccessor","class BooleanPropertyAccessor(node: INode, role: IProperty) : PropertyAccessor<Boolean> ","org.modelix.metamodel.BooleanPropertyAccessor"]},{"name":"class ChildListAccessor<ChildT : ITypedNode>(parent: INode, role: IChildLink, childConcept: IConcept, childType: KClass<ChildT>) : ChildAccessor<ChildT> ","description":"org.modelix.metamodel.ChildListAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-child-list-accessor/index.html","searchKeys":["ChildListAccessor","class ChildListAccessor<ChildT : ITypedNode>(parent: INode, role: IChildLink, childConcept: IConcept, childType: KClass<ChildT>) : ChildAccessor<ChildT> ","org.modelix.metamodel.ChildListAccessor"]},{"name":"class ChildNotSetException(val node: INode, val link: ITypedMandatorySingleChildLink<*>) : Exception","description":"org.modelix.metamodel.ChildNotSetException","location":"model-api-gen-runtime/org.modelix.metamodel/-child-not-set-exception/index.html","searchKeys":["ChildNotSetException","class ChildNotSetException(val node: INode, val link: ITypedMandatorySingleChildLink<*>) : Exception","org.modelix.metamodel.ChildNotSetException"]},{"name":"class FallbackTypedConcept(untypedConcept: IConcept) : ITypedConcept","description":"org.modelix.metamodel.FallbackTypedConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-fallback-typed-concept/index.html","searchKeys":["FallbackTypedConcept","class FallbackTypedConcept(untypedConcept: IConcept) : ITypedConcept","org.modelix.metamodel.FallbackTypedConcept"]},{"name":"class GeneratedChildListLink<ChildNodeT : ITypedNode, ChildConceptT : IConceptOfTypedNode<ChildNodeT>>(owner: IConcept, name: String, uid: String?, isOptional: Boolean, targetConcept: IConcept, childNodeInterface: KClass<ChildNodeT>) : GeneratedChildLink<ChildNodeT, ChildConceptT> , ITypedChildListLink<ChildNodeT> ","description":"org.modelix.metamodel.GeneratedChildListLink","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-child-list-link/index.html","searchKeys":["GeneratedChildListLink","class GeneratedChildListLink<ChildNodeT : ITypedNode, ChildConceptT : IConceptOfTypedNode<ChildNodeT>>(owner: IConcept, name: String, uid: String?, isOptional: Boolean, targetConcept: IConcept, childNodeInterface: KClass<ChildNodeT>) : GeneratedChildLink<ChildNodeT, ChildConceptT> , ITypedChildListLink<ChildNodeT> ","org.modelix.metamodel.GeneratedChildListLink"]},{"name":"class GeneratedMandatorySingleChildLink<ChildNodeT : ITypedNode, ChildConceptT : IConceptOfTypedNode<ChildNodeT>>(owner: IConcept, name: String, uid: String?, targetConcept: IConcept, childNodeInterface: KClass<ChildNodeT>) : GeneratedSingleChildLink<ChildNodeT, ChildConceptT> , ITypedMandatorySingleChildLink<ChildNodeT> ","description":"org.modelix.metamodel.GeneratedMandatorySingleChildLink","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-mandatory-single-child-link/index.html","searchKeys":["GeneratedMandatorySingleChildLink","class GeneratedMandatorySingleChildLink<ChildNodeT : ITypedNode, ChildConceptT : IConceptOfTypedNode<ChildNodeT>>(owner: IConcept, name: String, uid: String?, targetConcept: IConcept, childNodeInterface: KClass<ChildNodeT>) : GeneratedSingleChildLink<ChildNodeT, ChildConceptT> , ITypedMandatorySingleChildLink<ChildNodeT> ","org.modelix.metamodel.GeneratedMandatorySingleChildLink"]},{"name":"class GeneratedProperty<ValueT>(owner: IConcept, simpleName: String, uid: String?, val isOptional: Boolean, serializer: IPropertyValueSerializer<ValueT>) : ITypedProperty<ValueT> , IProperty","description":"org.modelix.metamodel.GeneratedProperty","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-property/index.html","searchKeys":["GeneratedProperty","class GeneratedProperty<ValueT>(owner: IConcept, simpleName: String, uid: String?, val isOptional: Boolean, serializer: IPropertyValueSerializer<ValueT>) : ITypedProperty<ValueT> , IProperty","org.modelix.metamodel.GeneratedProperty"]},{"name":"class GeneratedReferenceLink<TargetNodeT : ITypedNode, TargetConceptT : IConceptOfTypedNode<TargetNodeT>>(owner: IConcept, simpleName: String, uid: String?, val isOptional: Boolean, val targetConcept: IConcept, targetNodeInterface: KClass<TargetNodeT>) : IReferenceLink, ITypedReferenceLink<TargetNodeT> ","description":"org.modelix.metamodel.GeneratedReferenceLink","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-reference-link/index.html","searchKeys":["GeneratedReferenceLink","class GeneratedReferenceLink<TargetNodeT : ITypedNode, TargetConceptT : IConceptOfTypedNode<TargetNodeT>>(owner: IConcept, simpleName: String, uid: String?, val isOptional: Boolean, val targetConcept: IConcept, targetNodeInterface: KClass<TargetNodeT>) : IReferenceLink, ITypedReferenceLink<TargetNodeT> ","org.modelix.metamodel.GeneratedReferenceLink"]},{"name":"class IntPropertyAccessor(node: INode, role: IProperty) : PropertyAccessor<Int> ","description":"org.modelix.metamodel.IntPropertyAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-int-property-accessor/index.html","searchKeys":["IntPropertyAccessor","class IntPropertyAccessor(node: INode, role: IProperty) : PropertyAccessor<Int> ","org.modelix.metamodel.IntPropertyAccessor"]},{"name":"class MandatoryEnumSerializer<E : Enum<*>>(memberIdOf: (E) -> String, fromMemberId: (String?) -> E) : EnumSerializer, IPropertyValueSerializer<E> ","description":"org.modelix.metamodel.MandatoryEnumSerializer","location":"model-api-gen-runtime/org.modelix.metamodel/-mandatory-enum-serializer/index.html","searchKeys":["MandatoryEnumSerializer","class MandatoryEnumSerializer<E : Enum<*>>(memberIdOf: (E) -> String, fromMemberId: (String?) -> E) : EnumSerializer, IPropertyValueSerializer<E> ","org.modelix.metamodel.MandatoryEnumSerializer"]},{"name":"class MandatoryReferenceAccessor<SourceT, TargetT : ITypedNode>(val node: INode, val role: IReferenceLink, val targetType: KClass<TargetT>)","description":"org.modelix.metamodel.MandatoryReferenceAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-mandatory-reference-accessor/index.html","searchKeys":["MandatoryReferenceAccessor","class MandatoryReferenceAccessor<SourceT, TargetT : ITypedNode>(val node: INode, val role: IReferenceLink, val targetType: KClass<TargetT>)","org.modelix.metamodel.MandatoryReferenceAccessor"]},{"name":"class OptionalEnumSerializer<E : Enum<*>>(memberIdOf: (E) -> String, fromMemberId: (String) -> E) : EnumSerializer, IPropertyValueSerializer<E?> ","description":"org.modelix.metamodel.OptionalEnumSerializer","location":"model-api-gen-runtime/org.modelix.metamodel/-optional-enum-serializer/index.html","searchKeys":["OptionalEnumSerializer","class OptionalEnumSerializer<E : Enum<*>>(memberIdOf: (E) -> String, fromMemberId: (String) -> E) : EnumSerializer, IPropertyValueSerializer<E?> ","org.modelix.metamodel.OptionalEnumSerializer"]},{"name":"class OptionalReferenceAccessor<SourceT, TargetT : ITypedNode>(val node: INode, val role: IReferenceLink, val targetType: KClass<TargetT>)","description":"org.modelix.metamodel.OptionalReferenceAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-optional-reference-accessor/index.html","searchKeys":["OptionalReferenceAccessor","class OptionalReferenceAccessor<SourceT, TargetT : ITypedNode>(val node: INode, val role: IReferenceLink, val targetType: KClass<TargetT>)","org.modelix.metamodel.OptionalReferenceAccessor"]},{"name":"class RawPropertyAccessor(node: INode, role: IProperty) : PropertyAccessor<String?> ","description":"org.modelix.metamodel.RawPropertyAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-raw-property-accessor/index.html","searchKeys":["RawPropertyAccessor","class RawPropertyAccessor(node: INode, role: IProperty) : PropertyAccessor<String?> ","org.modelix.metamodel.RawPropertyAccessor"]},{"name":"class RawReferenceAccessor<SourceT>(val node: INode, val role: IReferenceLink)","description":"org.modelix.metamodel.RawReferenceAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-raw-reference-accessor/index.html","searchKeys":["RawReferenceAccessor","class RawReferenceAccessor<SourceT>(val node: INode, val role: IReferenceLink)","org.modelix.metamodel.RawReferenceAccessor"]},{"name":"class ReferenceNotSetException(val node: INode, val link: ITypedReferenceLink<*>) : Exception","description":"org.modelix.metamodel.ReferenceNotSetException","location":"model-api-gen-runtime/org.modelix.metamodel/-reference-not-set-exception/index.html","searchKeys":["ReferenceNotSetException","class ReferenceNotSetException(val node: INode, val link: ITypedReferenceLink<*>) : Exception","org.modelix.metamodel.ReferenceNotSetException"]},{"name":"class SingleChildAccessor<ChildT : ITypedNode>(parent: INode, role: IChildLink, childConcept: IConcept, childType: KClass<ChildT>) : ChildAccessor<ChildT> ","description":"org.modelix.metamodel.SingleChildAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-single-child-accessor/index.html","searchKeys":["SingleChildAccessor","class SingleChildAccessor<ChildT : ITypedNode>(parent: INode, role: IChildLink, childConcept: IConcept, childType: KClass<ChildT>) : ChildAccessor<ChildT> ","org.modelix.metamodel.SingleChildAccessor"]},{"name":"class StringPropertyAccessor(node: INode, role: IProperty) : PropertyAccessor<String> ","description":"org.modelix.metamodel.StringPropertyAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-string-property-accessor/index.html","searchKeys":["StringPropertyAccessor","class StringPropertyAccessor(node: INode, role: IProperty) : PropertyAccessor<String> ","org.modelix.metamodel.StringPropertyAccessor"]},{"name":"class TypedPropertyAccessor<ValueT>(val node: INode, val role: ITypedProperty<ValueT>)","description":"org.modelix.metamodel.TypedPropertyAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-property-accessor/index.html","searchKeys":["TypedPropertyAccessor","class TypedPropertyAccessor<ValueT>(val node: INode, val role: ITypedProperty<ValueT>)","org.modelix.metamodel.TypedPropertyAccessor"]},{"name":"const val UID_PREFIX: String","description":"org.modelix.metamodel.GeneratedConcept.Companion.UID_PREFIX","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/-companion/-u-i-d_-p-r-e-f-i-x.html","searchKeys":["UID_PREFIX","const val UID_PREFIX: String","org.modelix.metamodel.GeneratedConcept.Companion.UID_PREFIX"]},{"name":"constructor()","description":"org.modelix.metamodel.EmptyConcept.EmptyConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-empty-concept/-empty-concept.html","searchKeys":["EmptyConcept","constructor()","org.modelix.metamodel.EmptyConcept.EmptyConcept"]},{"name":"constructor()","description":"org.modelix.metamodel.EnumSerializer.EnumSerializer","location":"model-api-gen-runtime/org.modelix.metamodel/-enum-serializer/-enum-serializer.html","searchKeys":["EnumSerializer","constructor()","org.modelix.metamodel.EnumSerializer.EnumSerializer"]},{"name":"constructor(id: String? = null, concept: String? = null, role: String? = null, children: List<NodeData> = emptyList(), properties: Map<String, String> = emptyMap(), references: Map<String, String> = emptyMap())","description":"org.modelix.metamodel.NodeData.NodeData","location":"model-api-gen-runtime/org.modelix.metamodel/-node-data/-node-data.html","searchKeys":["NodeData","constructor(id: String? = null, concept: String? = null, role: String? = null, children: List<NodeData> = emptyList(), properties: Map<String, String> = emptyMap(), references: Map<String, String> = emptyMap())","org.modelix.metamodel.NodeData.NodeData"]},{"name":"constructor(id: String? = null, root: NodeData)","description":"org.modelix.metamodel.ModelData.ModelData","location":"model-api-gen-runtime/org.modelix.metamodel/-model-data/-model-data.html","searchKeys":["ModelData","constructor(id: String? = null, root: NodeData)","org.modelix.metamodel.ModelData.ModelData"]},{"name":"constructor(memberIdOf: (E) -> String, fromMemberId: (String) -> E)","description":"org.modelix.metamodel.OptionalEnumSerializer.OptionalEnumSerializer","location":"model-api-gen-runtime/org.modelix.metamodel/-optional-enum-serializer/-optional-enum-serializer.html","searchKeys":["OptionalEnumSerializer","constructor(memberIdOf: (E) -> String, fromMemberId: (String) -> E)","org.modelix.metamodel.OptionalEnumSerializer.OptionalEnumSerializer"]},{"name":"constructor(memberIdOf: (E) -> String, fromMemberId: (String?) -> E)","description":"org.modelix.metamodel.MandatoryEnumSerializer.MandatoryEnumSerializer","location":"model-api-gen-runtime/org.modelix.metamodel/-mandatory-enum-serializer/-mandatory-enum-serializer.html","searchKeys":["MandatoryEnumSerializer","constructor(memberIdOf: (E) -> String, fromMemberId: (String?) -> E)","org.modelix.metamodel.MandatoryEnumSerializer.MandatoryEnumSerializer"]},{"name":"constructor(name: String)","description":"org.modelix.metamodel.GeneratedLanguage.GeneratedLanguage","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-language/-generated-language.html","searchKeys":["GeneratedLanguage","constructor(name: String)","org.modelix.metamodel.GeneratedLanguage.GeneratedLanguage"]},{"name":"constructor(name: String, is_abstract: Boolean)","description":"org.modelix.metamodel.GeneratedConcept.GeneratedConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/-generated-concept.html","searchKeys":["GeneratedConcept","constructor(name: String, is_abstract: Boolean)","org.modelix.metamodel.GeneratedConcept.GeneratedConcept"]},{"name":"constructor(node: INode)","description":"org.modelix.metamodel.UnknownConceptInstance.UnknownConceptInstance","location":"model-api-gen-runtime/org.modelix.metamodel/-unknown-concept-instance/-unknown-concept-instance.html","searchKeys":["UnknownConceptInstance","constructor(node: INode)","org.modelix.metamodel.UnknownConceptInstance.UnknownConceptInstance"]},{"name":"constructor(node: INode, link: ITypedMandatorySingleChildLink<*>)","description":"org.modelix.metamodel.ChildNotSetException.ChildNotSetException","location":"model-api-gen-runtime/org.modelix.metamodel/-child-not-set-exception/-child-not-set-exception.html","searchKeys":["ChildNotSetException","constructor(node: INode, link: ITypedMandatorySingleChildLink<*>)","org.modelix.metamodel.ChildNotSetException.ChildNotSetException"]},{"name":"constructor(node: INode, link: ITypedReferenceLink<*>)","description":"org.modelix.metamodel.ReferenceNotSetException.ReferenceNotSetException","location":"model-api-gen-runtime/org.modelix.metamodel/-reference-not-set-exception/-reference-not-set-exception.html","searchKeys":["ReferenceNotSetException","constructor(node: INode, link: ITypedReferenceLink<*>)","org.modelix.metamodel.ReferenceNotSetException.ReferenceNotSetException"]},{"name":"constructor(node: INode, role: IProperty)","description":"org.modelix.metamodel.BooleanPropertyAccessor.BooleanPropertyAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-boolean-property-accessor/-boolean-property-accessor.html","searchKeys":["BooleanPropertyAccessor","constructor(node: INode, role: IProperty)","org.modelix.metamodel.BooleanPropertyAccessor.BooleanPropertyAccessor"]},{"name":"constructor(node: INode, role: IProperty)","description":"org.modelix.metamodel.IntPropertyAccessor.IntPropertyAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-int-property-accessor/-int-property-accessor.html","searchKeys":["IntPropertyAccessor","constructor(node: INode, role: IProperty)","org.modelix.metamodel.IntPropertyAccessor.IntPropertyAccessor"]},{"name":"constructor(node: INode, role: IProperty)","description":"org.modelix.metamodel.PropertyAccessor.PropertyAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-property-accessor/-property-accessor.html","searchKeys":["PropertyAccessor","constructor(node: INode, role: IProperty)","org.modelix.metamodel.PropertyAccessor.PropertyAccessor"]},{"name":"constructor(node: INode, role: IProperty)","description":"org.modelix.metamodel.RawPropertyAccessor.RawPropertyAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-raw-property-accessor/-raw-property-accessor.html","searchKeys":["RawPropertyAccessor","constructor(node: INode, role: IProperty)","org.modelix.metamodel.RawPropertyAccessor.RawPropertyAccessor"]},{"name":"constructor(node: INode, role: IProperty)","description":"org.modelix.metamodel.StringPropertyAccessor.StringPropertyAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-string-property-accessor/-string-property-accessor.html","searchKeys":["StringPropertyAccessor","constructor(node: INode, role: IProperty)","org.modelix.metamodel.StringPropertyAccessor.StringPropertyAccessor"]},{"name":"constructor(node: INode, role: IReferenceLink)","description":"org.modelix.metamodel.RawReferenceAccessor.RawReferenceAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-raw-reference-accessor/-raw-reference-accessor.html","searchKeys":["RawReferenceAccessor","constructor(node: INode, role: IReferenceLink)","org.modelix.metamodel.RawReferenceAccessor.RawReferenceAccessor"]},{"name":"constructor(node: INode, role: IReferenceLink, targetType: KClass<TargetT>)","description":"org.modelix.metamodel.MandatoryReferenceAccessor.MandatoryReferenceAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-mandatory-reference-accessor/-mandatory-reference-accessor.html","searchKeys":["MandatoryReferenceAccessor","constructor(node: INode, role: IReferenceLink, targetType: KClass<TargetT>)","org.modelix.metamodel.MandatoryReferenceAccessor.MandatoryReferenceAccessor"]},{"name":"constructor(node: INode, role: IReferenceLink, targetType: KClass<TargetT>)","description":"org.modelix.metamodel.OptionalReferenceAccessor.OptionalReferenceAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-optional-reference-accessor/-optional-reference-accessor.html","searchKeys":["OptionalReferenceAccessor","constructor(node: INode, role: IReferenceLink, targetType: KClass<TargetT>)","org.modelix.metamodel.OptionalReferenceAccessor.OptionalReferenceAccessor"]},{"name":"constructor(node: INode, role: ITypedProperty<ValueT>)","description":"org.modelix.metamodel.TypedPropertyAccessor.TypedPropertyAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-property-accessor/-typed-property-accessor.html","searchKeys":["TypedPropertyAccessor","constructor(node: INode, role: ITypedProperty<ValueT>)","org.modelix.metamodel.TypedPropertyAccessor.TypedPropertyAccessor"]},{"name":"constructor(owner: IConcept, name: String, uid: String?, isOptional: Boolean, targetConcept: IConcept, childNodeInterface: KClass<ChildNodeT>)","description":"org.modelix.metamodel.GeneratedChildListLink.GeneratedChildListLink","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-child-list-link/-generated-child-list-link.html","searchKeys":["GeneratedChildListLink","constructor(owner: IConcept, name: String, uid: String?, isOptional: Boolean, targetConcept: IConcept, childNodeInterface: KClass<ChildNodeT>)","org.modelix.metamodel.GeneratedChildListLink.GeneratedChildListLink"]},{"name":"constructor(owner: IConcept, name: String, uid: String?, isOptional: Boolean, targetConcept: IConcept, childNodeInterface: KClass<ChildNodeT>)","description":"org.modelix.metamodel.GeneratedSingleChildLink.GeneratedSingleChildLink","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-single-child-link/-generated-single-child-link.html","searchKeys":["GeneratedSingleChildLink","constructor(owner: IConcept, name: String, uid: String?, isOptional: Boolean, targetConcept: IConcept, childNodeInterface: KClass<ChildNodeT>)","org.modelix.metamodel.GeneratedSingleChildLink.GeneratedSingleChildLink"]},{"name":"constructor(owner: IConcept, name: String, uid: String?, targetConcept: IConcept, childNodeInterface: KClass<ChildNodeT>)","description":"org.modelix.metamodel.GeneratedMandatorySingleChildLink.GeneratedMandatorySingleChildLink","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-mandatory-single-child-link/-generated-mandatory-single-child-link.html","searchKeys":["GeneratedMandatorySingleChildLink","constructor(owner: IConcept, name: String, uid: String?, targetConcept: IConcept, childNodeInterface: KClass<ChildNodeT>)","org.modelix.metamodel.GeneratedMandatorySingleChildLink.GeneratedMandatorySingleChildLink"]},{"name":"constructor(owner: IConcept, simpleName: String, uid: String?, isMultiple: Boolean, isOptional: Boolean, targetConcept: IConcept, childNodeInterface: KClass<ChildNodeT>)","description":"org.modelix.metamodel.GeneratedChildLink.GeneratedChildLink","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-child-link/-generated-child-link.html","searchKeys":["GeneratedChildLink","constructor(owner: IConcept, simpleName: String, uid: String?, isMultiple: Boolean, isOptional: Boolean, targetConcept: IConcept, childNodeInterface: KClass<ChildNodeT>)","org.modelix.metamodel.GeneratedChildLink.GeneratedChildLink"]},{"name":"constructor(owner: IConcept, simpleName: String, uid: String?, isOptional: Boolean, serializer: IPropertyValueSerializer<ValueT>)","description":"org.modelix.metamodel.GeneratedProperty.GeneratedProperty","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-property/-generated-property.html","searchKeys":["GeneratedProperty","constructor(owner: IConcept, simpleName: String, uid: String?, isOptional: Boolean, serializer: IPropertyValueSerializer<ValueT>)","org.modelix.metamodel.GeneratedProperty.GeneratedProperty"]},{"name":"constructor(owner: IConcept, simpleName: String, uid: String?, isOptional: Boolean, targetConcept: IConcept, targetNodeInterface: KClass<TargetNodeT>)","description":"org.modelix.metamodel.GeneratedReferenceLink.GeneratedReferenceLink","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-reference-link/-generated-reference-link.html","searchKeys":["GeneratedReferenceLink","constructor(owner: IConcept, simpleName: String, uid: String?, isOptional: Boolean, targetConcept: IConcept, targetNodeInterface: KClass<TargetNodeT>)","org.modelix.metamodel.GeneratedReferenceLink.GeneratedReferenceLink"]},{"name":"constructor(parent: INode, role: IChildLink, childConcept: IConcept, childType: KClass<ChildT>)","description":"org.modelix.metamodel.ChildAccessor.ChildAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-child-accessor/-child-accessor.html","searchKeys":["ChildAccessor","constructor(parent: INode, role: IChildLink, childConcept: IConcept, childType: KClass<ChildT>)","org.modelix.metamodel.ChildAccessor.ChildAccessor"]},{"name":"constructor(parent: INode, role: IChildLink, childConcept: IConcept, childType: KClass<ChildT>)","description":"org.modelix.metamodel.ChildListAccessor.ChildListAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-child-list-accessor/-child-list-accessor.html","searchKeys":["ChildListAccessor","constructor(parent: INode, role: IChildLink, childConcept: IConcept, childType: KClass<ChildT>)","org.modelix.metamodel.ChildListAccessor.ChildListAccessor"]},{"name":"constructor(parent: INode, role: IChildLink, childConcept: IConcept, childType: KClass<ChildT>)","description":"org.modelix.metamodel.SingleChildAccessor.SingleChildAccessor","location":"model-api-gen-runtime/org.modelix.metamodel/-single-child-accessor/-single-child-accessor.html","searchKeys":["SingleChildAccessor","constructor(parent: INode, role: IChildLink, childConcept: IConcept, childType: KClass<ChildT>)","org.modelix.metamodel.SingleChildAccessor.SingleChildAccessor"]},{"name":"constructor(ref: IConceptReference)","description":"org.modelix.metamodel.UnknownConcept.UnknownConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-unknown-concept/-unknown-concept.html","searchKeys":["UnknownConcept","constructor(ref: IConceptReference)","org.modelix.metamodel.UnknownConcept.UnknownConcept"]},{"name":"constructor(ref: IConceptReference?)","description":"org.modelix.metamodel.UnknownTypedConcept.UnknownTypedConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-unknown-typed-concept/-unknown-typed-concept.html","searchKeys":["UnknownTypedConcept","constructor(ref: IConceptReference?)","org.modelix.metamodel.UnknownTypedConcept.UnknownTypedConcept"]},{"name":"constructor(ref: INodeReference, nodeClass: KClass<NodeT>)","description":"org.modelix.metamodel.TypedNodeReference.TypedNodeReference","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-node-reference/-typed-node-reference.html","searchKeys":["TypedNodeReference","constructor(ref: INodeReference, nodeClass: KClass<NodeT>)","org.modelix.metamodel.TypedNodeReference.TypedNodeReference"]},{"name":"constructor(untypedConcept: IConcept)","description":"org.modelix.metamodel.FallbackTypedConcept.FallbackTypedConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-fallback-typed-concept/-fallback-typed-concept.html","searchKeys":["FallbackTypedConcept","constructor(untypedConcept: IConcept)","org.modelix.metamodel.FallbackTypedConcept.FallbackTypedConcept"]},{"name":"constructor(wrappedNode: INode)","description":"org.modelix.metamodel.TypedNodeImpl.TypedNodeImpl","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-node-impl/-typed-node-impl.html","searchKeys":["TypedNodeImpl","constructor(wrappedNode: INode)","org.modelix.metamodel.TypedNodeImpl.TypedNodeImpl"]},{"name":"data class ModelData(val id: String? = null, val root: NodeData)","description":"org.modelix.metamodel.ModelData","location":"model-api-gen-runtime/org.modelix.metamodel/-model-data/index.html","searchKeys":["ModelData","data class ModelData(val id: String? = null, val root: NodeData)","org.modelix.metamodel.ModelData"]},{"name":"data class NodeData(val id: String? = null, val concept: String? = null, val role: String? = null, val children: List<NodeData> = emptyList(), val properties: Map<String, String> = emptyMap(), val references: Map<String, String> = emptyMap())","description":"org.modelix.metamodel.NodeData","location":"model-api-gen-runtime/org.modelix.metamodel/-node-data/index.html","searchKeys":["NodeData","data class NodeData(val id: String? = null, val concept: String? = null, val role: String? = null, val children: List<NodeData> = emptyList(), val properties: Map<String, String> = emptyMap(), val references: Map<String, String> = emptyMap())","org.modelix.metamodel.NodeData"]},{"name":"data class TypedNodeReference<NodeT : ITypedNode>(val ref: INodeReference, val nodeClass: KClass<NodeT>)","description":"org.modelix.metamodel.TypedNodeReference","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-node-reference/index.html","searchKeys":["TypedNodeReference","data class TypedNodeReference<NodeT : ITypedNode>(val ref: INodeReference, val nodeClass: KClass<NodeT>)","org.modelix.metamodel.TypedNodeReference"]},{"name":"data class UnknownConcept(ref: IConceptReference) : EmptyConcept","description":"org.modelix.metamodel.UnknownConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-unknown-concept/index.html","searchKeys":["UnknownConcept","data class UnknownConcept(ref: IConceptReference) : EmptyConcept","org.modelix.metamodel.UnknownConcept"]},{"name":"data class UnknownConceptInstance(val node: INode) : ITypedNode","description":"org.modelix.metamodel.UnknownConceptInstance","location":"model-api-gen-runtime/org.modelix.metamodel/-unknown-concept-instance/index.html","searchKeys":["UnknownConceptInstance","data class UnknownConceptInstance(val node: INode) : ITypedNode","org.modelix.metamodel.UnknownConceptInstance"]},{"name":"data class UnknownTypedConcept(ref: IConceptReference?) : ITypedConcept","description":"org.modelix.metamodel.UnknownTypedConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-unknown-typed-concept/index.html","searchKeys":["UnknownTypedConcept","data class UnknownTypedConcept(ref: IConceptReference?) : ITypedConcept","org.modelix.metamodel.UnknownTypedConcept"]},{"name":"fun <ChildNodeT : ITypedNode, ChildConceptT : IConceptOfTypedNode<ChildNodeT>> newChildListLink(name: String, uid: String?, isOptional: Boolean, targetConcept: IConcept, childNodeInterface: KClass<ChildNodeT>): GeneratedChildListLink<ChildNodeT, ChildConceptT>","description":"org.modelix.metamodel.GeneratedConcept.newChildListLink","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/new-child-list-link.html","searchKeys":["newChildListLink","fun <ChildNodeT : ITypedNode, ChildConceptT : IConceptOfTypedNode<ChildNodeT>> newChildListLink(name: String, uid: String?, isOptional: Boolean, targetConcept: IConcept, childNodeInterface: KClass<ChildNodeT>): GeneratedChildListLink<ChildNodeT, ChildConceptT>","org.modelix.metamodel.GeneratedConcept.newChildListLink"]},{"name":"fun <ChildNodeT : ITypedNode, ChildConceptT : IConceptOfTypedNode<ChildNodeT>> newMandatorySingleChildLink(name: String, uid: String?, targetConcept: IConcept, childNodeInterface: KClass<ChildNodeT>): GeneratedMandatorySingleChildLink<ChildNodeT, ChildConceptT>","description":"org.modelix.metamodel.GeneratedConcept.newMandatorySingleChildLink","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/new-mandatory-single-child-link.html","searchKeys":["newMandatorySingleChildLink","fun <ChildNodeT : ITypedNode, ChildConceptT : IConceptOfTypedNode<ChildNodeT>> newMandatorySingleChildLink(name: String, uid: String?, targetConcept: IConcept, childNodeInterface: KClass<ChildNodeT>): GeneratedMandatorySingleChildLink<ChildNodeT, ChildConceptT>","org.modelix.metamodel.GeneratedConcept.newMandatorySingleChildLink"]},{"name":"fun <ChildNodeT : ITypedNode, ChildConceptT : IConceptOfTypedNode<ChildNodeT>> newOptionalSingleChildLink(name: String, uid: String?, targetConcept: IConcept, childNodeInterface: KClass<ChildNodeT>): GeneratedSingleChildLink<ChildNodeT, ChildConceptT>","description":"org.modelix.metamodel.GeneratedConcept.newOptionalSingleChildLink","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/new-optional-single-child-link.html","searchKeys":["newOptionalSingleChildLink","fun <ChildNodeT : ITypedNode, ChildConceptT : IConceptOfTypedNode<ChildNodeT>> newOptionalSingleChildLink(name: String, uid: String?, targetConcept: IConcept, childNodeInterface: KClass<ChildNodeT>): GeneratedSingleChildLink<ChildNodeT, ChildConceptT>","org.modelix.metamodel.GeneratedConcept.newOptionalSingleChildLink"]},{"name":"fun <ChildT : ITypedNode, ChildConceptT : INonAbstractConcept<ChildT>> INode.addNewChild(link: ITypedChildLink<ChildT>, index: Int = -1, subConcept: ChildConceptT? = null): ChildT","description":"org.modelix.metamodel.addNewChild","location":"model-api-gen-runtime/org.modelix.metamodel/add-new-child.html","searchKeys":["addNewChild","fun <ChildT : ITypedNode, ChildConceptT : INonAbstractConcept<ChildT>> INode.addNewChild(link: ITypedChildLink<ChildT>, index: Int = -1, subConcept: ChildConceptT? = null): ChildT","org.modelix.metamodel.addNewChild"]},{"name":"fun <ChildT : ITypedNode, ChildConceptT : INonAbstractConcept<ChildT>> INode.setNewChild(link: ITypedSingleChildLink<ChildT>, subConcept: ChildConceptT? = null): ChildT","description":"org.modelix.metamodel.setNewChild","location":"model-api-gen-runtime/org.modelix.metamodel/set-new-child.html","searchKeys":["setNewChild","fun <ChildT : ITypedNode, ChildConceptT : INonAbstractConcept<ChildT>> INode.setNewChild(link: ITypedSingleChildLink<ChildT>, subConcept: ChildConceptT? = null): ChildT","org.modelix.metamodel.setNewChild"]},{"name":"fun <ChildT : ITypedNode> ChildAccessor<ChildT>.filterLoaded(): List<ChildT>","description":"org.modelix.metamodel.filterLoaded","location":"model-api-gen-runtime/org.modelix.metamodel/filter-loaded.html","searchKeys":["filterLoaded","fun <ChildT : ITypedNode> ChildAccessor<ChildT>.filterLoaded(): List<ChildT>","org.modelix.metamodel.filterLoaded"]},{"name":"fun <ChildT : ITypedNode> INode.getChild(link: ITypedMandatorySingleChildLink<ChildT>): ChildT","description":"org.modelix.metamodel.getChild","location":"model-api-gen-runtime/org.modelix.metamodel/get-child.html","searchKeys":["getChild","fun <ChildT : ITypedNode> INode.getChild(link: ITypedMandatorySingleChildLink<ChildT>): ChildT","org.modelix.metamodel.getChild"]},{"name":"fun <ChildT : ITypedNode> INode.getChild(link: ITypedSingleChildLink<ChildT>): ChildT?","description":"org.modelix.metamodel.getChild","location":"model-api-gen-runtime/org.modelix.metamodel/get-child.html","searchKeys":["getChild","fun <ChildT : ITypedNode> INode.getChild(link: ITypedSingleChildLink<ChildT>): ChildT?","org.modelix.metamodel.getChild"]},{"name":"fun <ChildT : ITypedNode> INode.getChildren(link: ITypedChildLink<ChildT>): List<ChildT>","description":"org.modelix.metamodel.getChildren","location":"model-api-gen-runtime/org.modelix.metamodel/get-children.html","searchKeys":["getChildren","fun <ChildT : ITypedNode> INode.getChildren(link: ITypedChildLink<ChildT>): List<ChildT>","org.modelix.metamodel.getChildren"]},{"name":"fun <ChildT : ITypedNode> SingleChildAccessor<ChildT>.setNew(initializer: ChildT.() -> Unit): ChildT","description":"org.modelix.metamodel.setNew","location":"model-api-gen-runtime/org.modelix.metamodel/set-new.html","searchKeys":["setNew","fun <ChildT : ITypedNode> SingleChildAccessor<ChildT>.setNew(initializer: ChildT.() -> Unit): ChildT","org.modelix.metamodel.setNew"]},{"name":"fun <NewChildT : ChildT, ChildT : ITypedNode> SingleChildAccessor<ChildT>.setNew(concept: INonAbstractConcept<NewChildT>, initializer: NewChildT.() -> Unit): NewChildT","description":"org.modelix.metamodel.setNew","location":"model-api-gen-runtime/org.modelix.metamodel/set-new.html","searchKeys":["setNew","fun <NewChildT : ChildT, ChildT : ITypedNode> SingleChildAccessor<ChildT>.setNew(concept: INonAbstractConcept<NewChildT>, initializer: NewChildT.() -> Unit): NewChildT","org.modelix.metamodel.setNew"]},{"name":"fun <NewChildT : ChildT> setNew(concept: INonAbstractConcept<NewChildT>): NewChildT","description":"org.modelix.metamodel.SingleChildAccessor.setNew","location":"model-api-gen-runtime/org.modelix.metamodel/-single-child-accessor/set-new.html","searchKeys":["setNew","fun <NewChildT : ChildT> setNew(concept: INonAbstractConcept<NewChildT>): NewChildT","org.modelix.metamodel.SingleChildAccessor.setNew"]},{"name":"fun <NewNodeT : ChildT> addNew(concept: INonAbstractConcept<NewNodeT>): NewNodeT","description":"org.modelix.metamodel.ChildAccessor.addNew","location":"model-api-gen-runtime/org.modelix.metamodel/-child-accessor/add-new.html","searchKeys":["addNew","fun <NewNodeT : ChildT> addNew(concept: INonAbstractConcept<NewNodeT>): NewNodeT","org.modelix.metamodel.ChildAccessor.addNew"]},{"name":"fun <NewNodeT : ChildT> addNew(index: Int = -1, concept: INonAbstractConcept<NewNodeT>): NewNodeT","description":"org.modelix.metamodel.ChildAccessor.addNew","location":"model-api-gen-runtime/org.modelix.metamodel/-child-accessor/add-new.html","searchKeys":["addNew","fun <NewNodeT : ChildT> addNew(index: Int = -1, concept: INonAbstractConcept<NewNodeT>): NewNodeT","org.modelix.metamodel.ChildAccessor.addNew"]},{"name":"fun <NodeT : ITypedNode> IConceptOfTypedNode<NodeT>.getInstanceClass(): KClass<out NodeT>","description":"org.modelix.metamodel.getInstanceClass","location":"model-api-gen-runtime/org.modelix.metamodel/get-instance-class.html","searchKeys":["getInstanceClass","fun <NodeT : ITypedNode> IConceptOfTypedNode<NodeT>.getInstanceClass(): KClass<out NodeT>","org.modelix.metamodel.getInstanceClass"]},{"name":"fun <NodeT : ITypedNode> INode.typed(nodeClass: KClass<NodeT>): NodeT","description":"org.modelix.metamodel.typed","location":"model-api-gen-runtime/org.modelix.metamodel/typed.html","searchKeys":["typed","fun <NodeT : ITypedNode> INode.typed(nodeClass: KClass<NodeT>): NodeT","org.modelix.metamodel.typed"]},{"name":"fun <NodeT : ITypedNode> INode.typedUnsafe(): NodeT","description":"org.modelix.metamodel.typedUnsafe","location":"model-api-gen-runtime/org.modelix.metamodel/typed-unsafe.html","searchKeys":["typedUnsafe","fun <NodeT : ITypedNode> INode.typedUnsafe(): NodeT","org.modelix.metamodel.typedUnsafe"]},{"name":"fun <T> read(receiver: (ChildT?) -> T): T","description":"org.modelix.metamodel.SingleChildAccessor.read","location":"model-api-gen-runtime/org.modelix.metamodel/-single-child-accessor/read.html","searchKeys":["read","fun <T> read(receiver: (ChildT?) -> T): T","org.modelix.metamodel.SingleChildAccessor.read"]},{"name":"fun <TargetNodeT : ITypedNode, TargetConceptT : IConceptOfTypedNode<TargetNodeT>> newReferenceLink(name: String, uid: String?, isOptional: Boolean, targetConcept: IConcept, targetNodeInterface: KClass<TargetNodeT>): GeneratedReferenceLink<TargetNodeT, TargetConceptT>","description":"org.modelix.metamodel.GeneratedConcept.newReferenceLink","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/new-reference-link.html","searchKeys":["newReferenceLink","fun <TargetNodeT : ITypedNode, TargetConceptT : IConceptOfTypedNode<TargetNodeT>> newReferenceLink(name: String, uid: String?, isOptional: Boolean, targetConcept: IConcept, targetNodeInterface: KClass<TargetNodeT>): GeneratedReferenceLink<TargetNodeT, TargetConceptT>","org.modelix.metamodel.GeneratedConcept.newReferenceLink"]},{"name":"fun <TargetT : ITypedNode> INode.getReferenceTarget(link: ITypedReferenceLink<TargetT>): TargetT","description":"org.modelix.metamodel.getReferenceTarget","location":"model-api-gen-runtime/org.modelix.metamodel/get-reference-target.html","searchKeys":["getReferenceTarget","fun <TargetT : ITypedNode> INode.getReferenceTarget(link: ITypedReferenceLink<TargetT>): TargetT","org.modelix.metamodel.getReferenceTarget"]},{"name":"fun <TargetT : ITypedNode> INode.getReferenceTargetOrNull(link: ITypedReferenceLink<TargetT>): TargetT?","description":"org.modelix.metamodel.getReferenceTargetOrNull","location":"model-api-gen-runtime/org.modelix.metamodel/get-reference-target-or-null.html","searchKeys":["getReferenceTargetOrNull","fun <TargetT : ITypedNode> INode.getReferenceTargetOrNull(link: ITypedReferenceLink<TargetT>): TargetT?","org.modelix.metamodel.getReferenceTargetOrNull"]},{"name":"fun <TargetT : ITypedNode> INode.setReferenceTarget(link: ITypedReferenceLink<TargetT>, target: TargetT?)","description":"org.modelix.metamodel.setReferenceTarget","location":"model-api-gen-runtime/org.modelix.metamodel/set-reference-target.html","searchKeys":["setReferenceTarget","fun <TargetT : ITypedNode> INode.setReferenceTarget(link: ITypedReferenceLink<TargetT>, target: TargetT?)","org.modelix.metamodel.setReferenceTarget"]},{"name":"fun <ValueT> INode.getTypedPropertyValue(property: ITypedProperty<ValueT>): ValueT","description":"org.modelix.metamodel.getTypedPropertyValue","location":"model-api-gen-runtime/org.modelix.metamodel/get-typed-property-value.html","searchKeys":["getTypedPropertyValue","fun <ValueT> INode.getTypedPropertyValue(property: ITypedProperty<ValueT>): ValueT","org.modelix.metamodel.getTypedPropertyValue"]},{"name":"fun <ValueT> INode.setTypedPropertyValue(property: ITypedProperty<ValueT>, value: ValueT)","description":"org.modelix.metamodel.setTypedPropertyValue","location":"model-api-gen-runtime/org.modelix.metamodel/set-typed-property-value.html","searchKeys":["setTypedPropertyValue","fun <ValueT> INode.setTypedPropertyValue(property: ITypedProperty<ValueT>, value: ValueT)","org.modelix.metamodel.setTypedPropertyValue"]},{"name":"fun <ValueT> newProperty(name: String, uid: String?, serializer: IPropertyValueSerializer<ValueT>, optional: Boolean): GeneratedProperty<ValueT>","description":"org.modelix.metamodel.GeneratedConcept.newProperty","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/new-property.html","searchKeys":["newProperty","fun <ValueT> newProperty(name: String, uid: String?, serializer: IPropertyValueSerializer<ValueT>, optional: Boolean): GeneratedProperty<ValueT>","org.modelix.metamodel.GeneratedConcept.newProperty"]},{"name":"fun IChildLink.typed(): ITypedChildLink<ITypedNode>?","description":"org.modelix.metamodel.typed","location":"model-api-gen-runtime/org.modelix.metamodel/typed.html","searchKeys":["typed","fun IChildLink.typed(): ITypedChildLink<ITypedNode>?","org.modelix.metamodel.typed"]},{"name":"fun IConcept.typed(): ITypedConcept","description":"org.modelix.metamodel.typed","location":"model-api-gen-runtime/org.modelix.metamodel/typed.html","searchKeys":["typed","fun IConcept.typed(): ITypedConcept","org.modelix.metamodel.typed"]},{"name":"fun IProperty.typed(): ITypedProperty<*>?","description":"org.modelix.metamodel.typed","location":"model-api-gen-runtime/org.modelix.metamodel/typed.html","searchKeys":["typed","fun IProperty.typed(): ITypedProperty<*>?","org.modelix.metamodel.typed"]},{"name":"fun IReferenceLink.typed(): ITypedReferenceLink<ITypedNode>?","description":"org.modelix.metamodel.typed","location":"model-api-gen-runtime/org.modelix.metamodel/typed.html","searchKeys":["typed","fun IReferenceLink.typed(): ITypedReferenceLink<ITypedNode>?","org.modelix.metamodel.typed"]},{"name":"fun ITypedNode.getPropertyValue(property: IProperty): String?","description":"org.modelix.metamodel.getPropertyValue","location":"model-api-gen-runtime/org.modelix.metamodel/get-property-value.html","searchKeys":["getPropertyValue","fun ITypedNode.getPropertyValue(property: IProperty): String?","org.modelix.metamodel.getPropertyValue"]},{"name":"fun ITypedNode.instanceOf(concept: IConcept): Boolean","description":"org.modelix.metamodel.instanceOf","location":"model-api-gen-runtime/org.modelix.metamodel/instance-of.html","searchKeys":["instanceOf","fun ITypedNode.instanceOf(concept: IConcept): Boolean","org.modelix.metamodel.instanceOf"]},{"name":"fun ITypedNode.instanceOf(concept: ITypedConcept): Boolean","description":"org.modelix.metamodel.instanceOf","location":"model-api-gen-runtime/org.modelix.metamodel/instance-of.html","searchKeys":["instanceOf","fun ITypedNode.instanceOf(concept: ITypedConcept): Boolean","org.modelix.metamodel.instanceOf"]},{"name":"fun ITypedNode.typedConcept(): ITypedConcept","description":"org.modelix.metamodel.typedConcept","location":"model-api-gen-runtime/org.modelix.metamodel/typed-concept.html","searchKeys":["typedConcept","fun ITypedNode.typedConcept(): ITypedConcept","org.modelix.metamodel.typedConcept"]},{"name":"fun ITypedNode.untyped(): INode","description":"org.modelix.metamodel.untyped","location":"model-api-gen-runtime/org.modelix.metamodel/untyped.html","searchKeys":["untyped","fun ITypedNode.untyped(): INode","org.modelix.metamodel.untyped"]},{"name":"fun ITypedNode.untypedConcept(): IConcept","description":"org.modelix.metamodel.untypedConcept","location":"model-api-gen-runtime/org.modelix.metamodel/untyped-concept.html","searchKeys":["untypedConcept","fun ITypedNode.untypedConcept(): IConcept","org.modelix.metamodel.untypedConcept"]},{"name":"fun ITypedNode.untypedReference(): INodeReference","description":"org.modelix.metamodel.untypedReference","location":"model-api-gen-runtime/org.modelix.metamodel/untyped-reference.html","searchKeys":["untypedReference","fun ITypedNode.untypedReference(): INodeReference","org.modelix.metamodel.untypedReference"]},{"name":"fun ModelData.nodeUID(node: NodeData): String","description":"org.modelix.metamodel.nodeUID","location":"model-api-gen-runtime/org.modelix.metamodel/node-u-i-d.html","searchKeys":["nodeUID","fun ModelData.nodeUID(node: NodeData): String","org.modelix.metamodel.nodeUID"]},{"name":"fun ModelData.toYaml(): String","description":"org.modelix.metamodel.toYaml","location":"model-api-gen-runtime/org.modelix.metamodel/to-yaml.html","searchKeys":["toYaml","fun ModelData.toYaml(): String","org.modelix.metamodel.toYaml"]},{"name":"fun NodeData.uid(model: ModelData): String","description":"org.modelix.metamodel.uid","location":"model-api-gen-runtime/org.modelix.metamodel/uid.html","searchKeys":["uid","fun NodeData.uid(model: ModelData): String","org.modelix.metamodel.uid"]},{"name":"fun addNew(index: Int = -1): ChildT","description":"org.modelix.metamodel.ChildAccessor.addNew","location":"model-api-gen-runtime/org.modelix.metamodel/-child-accessor/add-new.html","searchKeys":["addNew","fun addNew(index: Int = -1): ChildT","org.modelix.metamodel.ChildAccessor.addNew"]},{"name":"fun assertRegistered()","description":"org.modelix.metamodel.GeneratedLanguage.assertRegistered","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-language/assert-registered.html","searchKeys":["assertRegistered","fun assertRegistered()","org.modelix.metamodel.GeneratedLanguage.assertRegistered"]},{"name":"fun dispose()","description":"org.modelix.metamodel.TypedLanguagesRegistry.dispose","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-languages-registry/dispose.html","searchKeys":["dispose","fun dispose()","org.modelix.metamodel.TypedLanguagesRegistry.dispose"]},{"name":"fun fromJson(serialized: String): ModelData","description":"org.modelix.metamodel.ModelData.Companion.fromJson","location":"model-api-gen-runtime/org.modelix.metamodel/-model-data/-companion/from-json.html","searchKeys":["fromJson","fun fromJson(serialized: String): ModelData","org.modelix.metamodel.ModelData.Companion.fromJson"]},{"name":"fun get(): ChildT?","description":"org.modelix.metamodel.SingleChildAccessor.get","location":"model-api-gen-runtime/org.modelix.metamodel/-single-child-accessor/get.html","searchKeys":["get","fun get(): ChildT?","org.modelix.metamodel.SingleChildAccessor.get"]},{"name":"fun getSize(): Int","description":"org.modelix.metamodel.ChildAccessor.getSize","location":"model-api-gen-runtime/org.modelix.metamodel/-child-accessor/get-size.html","searchKeys":["getSize","fun getSize(): Int","org.modelix.metamodel.ChildAccessor.getSize"]},{"name":"fun isEmpty(): Boolean","description":"org.modelix.metamodel.ChildAccessor.isEmpty","location":"model-api-gen-runtime/org.modelix.metamodel/-child-accessor/is-empty.html","searchKeys":["isEmpty","fun isEmpty(): Boolean","org.modelix.metamodel.ChildAccessor.isEmpty"]},{"name":"fun isRegistered(): Boolean","description":"org.modelix.metamodel.GeneratedLanguage.isRegistered","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-language/is-registered.html","searchKeys":["isRegistered","fun isRegistered(): Boolean","org.modelix.metamodel.GeneratedLanguage.isRegistered"]},{"name":"fun isRegistered(language: GeneratedLanguage): Boolean","description":"org.modelix.metamodel.TypedLanguagesRegistry.isRegistered","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-languages-registry/is-registered.html","searchKeys":["isRegistered","fun isRegistered(language: GeneratedLanguage): Boolean","org.modelix.metamodel.TypedLanguagesRegistry.isRegistered"]},{"name":"fun isSet(): Boolean","description":"org.modelix.metamodel.SingleChildAccessor.isSet","location":"model-api-gen-runtime/org.modelix.metamodel/-single-child-accessor/is-set.html","searchKeys":["isSet","fun isSet(): Boolean","org.modelix.metamodel.SingleChildAccessor.isSet"]},{"name":"fun load(branch: IBranch)","description":"org.modelix.metamodel.ModelData.load","location":"model-api-gen-runtime/org.modelix.metamodel/-model-data/load.html","searchKeys":["load","fun load(branch: IBranch)","org.modelix.metamodel.ModelData.load"]},{"name":"fun modelDataFromFile(file: File): ModelData","description":"org.modelix.metamodel.modelDataFromFile","location":"model-api-gen-runtime/org.modelix.metamodel/model-data-from-file.html","searchKeys":["modelDataFromFile","fun modelDataFromFile(file: File): ModelData","org.modelix.metamodel.modelDataFromFile"]},{"name":"fun modelDataFromJson(serialized: String): ModelData","description":"org.modelix.metamodel.modelDataFromJson","location":"model-api-gen-runtime/org.modelix.metamodel/model-data-from-json.html","searchKeys":["modelDataFromJson","fun modelDataFromJson(serialized: String): ModelData","org.modelix.metamodel.modelDataFromJson"]},{"name":"fun modelDataFromYaml(serialized: String): ModelData","description":"org.modelix.metamodel.modelDataFromYaml","location":"model-api-gen-runtime/org.modelix.metamodel/model-data-from-yaml.html","searchKeys":["modelDataFromYaml","fun modelDataFromYaml(serialized: String): ModelData","org.modelix.metamodel.modelDataFromYaml"]},{"name":"fun register()","description":"org.modelix.metamodel.GeneratedLanguage.register","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-language/register.html","searchKeys":["register","fun register()","org.modelix.metamodel.GeneratedLanguage.register"]},{"name":"fun register(language: GeneratedLanguage)","description":"org.modelix.metamodel.TypedLanguagesRegistry.register","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-languages-registry/register.html","searchKeys":["register","fun register(language: GeneratedLanguage)","org.modelix.metamodel.TypedLanguagesRegistry.register"]},{"name":"fun remove(child: TypedNodeImpl)","description":"org.modelix.metamodel.ChildAccessor.remove","location":"model-api-gen-runtime/org.modelix.metamodel/-child-accessor/remove.html","searchKeys":["remove","fun remove(child: TypedNodeImpl)","org.modelix.metamodel.ChildAccessor.remove"]},{"name":"fun removeUnwrapped(child: INode)","description":"org.modelix.metamodel.ChildAccessor.removeUnwrapped","location":"model-api-gen-runtime/org.modelix.metamodel/-child-accessor/remove-unwrapped.html","searchKeys":["removeUnwrapped","fun removeUnwrapped(child: INode)","org.modelix.metamodel.ChildAccessor.removeUnwrapped"]},{"name":"fun resolve(area: IArea?): NodeT?","description":"org.modelix.metamodel.TypedNodeReference.resolve","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-node-reference/resolve.html","searchKeys":["resolve","fun resolve(area: IArea?): NodeT?","org.modelix.metamodel.TypedNodeReference.resolve"]},{"name":"fun setNew(): ChildT","description":"org.modelix.metamodel.SingleChildAccessor.setNew","location":"model-api-gen-runtime/org.modelix.metamodel/-single-child-accessor/set-new.html","searchKeys":["setNew","fun setNew(): ChildT","org.modelix.metamodel.SingleChildAccessor.setNew"]},{"name":"fun toCompactJson(): String","description":"org.modelix.metamodel.ModelData.toCompactJson","location":"model-api-gen-runtime/org.modelix.metamodel/-model-data/to-compact-json.html","searchKeys":["toCompactJson","fun toCompactJson(): String","org.modelix.metamodel.ModelData.toCompactJson"]},{"name":"fun toJson(): String","description":"org.modelix.metamodel.ModelData.toJson","location":"model-api-gen-runtime/org.modelix.metamodel/-model-data/to-json.html","searchKeys":["toJson","fun toJson(): String","org.modelix.metamodel.ModelData.toJson"]},{"name":"fun unregister()","description":"org.modelix.metamodel.GeneratedLanguage.unregister","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-language/unregister.html","searchKeys":["unregister","fun unregister()","org.modelix.metamodel.GeneratedLanguage.unregister"]},{"name":"fun unregister(language: GeneratedLanguage)","description":"org.modelix.metamodel.TypedLanguagesRegistry.unregister","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-languages-registry/unregister.html","searchKeys":["unregister","fun unregister(language: GeneratedLanguage)","org.modelix.metamodel.TypedLanguagesRegistry.unregister"]},{"name":"fun untyped(): INodeReference","description":"org.modelix.metamodel.TypedNodeReference.untyped","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-node-reference/untyped.html","searchKeys":["untyped","fun untyped(): INodeReference","org.modelix.metamodel.TypedNodeReference.untyped"]},{"name":"fun untypedNodes(): Iterable<INode>","description":"org.modelix.metamodel.ChildAccessor.untypedNodes","location":"model-api-gen-runtime/org.modelix.metamodel/-child-accessor/untyped-nodes.html","searchKeys":["untypedNodes","fun untypedNodes(): Iterable<INode>","org.modelix.metamodel.ChildAccessor.untypedNodes"]},{"name":"fun wrapNode(node: INode): ITypedNode","description":"org.modelix.metamodel.TypedLanguagesRegistry.wrapNode","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-languages-registry/wrap-node.html","searchKeys":["wrapNode","fun wrapNode(node: INode): ITypedNode","org.modelix.metamodel.TypedLanguagesRegistry.wrapNode"]},{"name":"inline fun <NodeT : ITypedNode> INode.addNewChild(concept: INonAbstractConcept<NodeT>): NodeT","description":"org.modelix.metamodel.addNewChild","location":"model-api-gen-runtime/org.modelix.metamodel/add-new-child.html","searchKeys":["addNewChild","inline fun <NodeT : ITypedNode> INode.addNewChild(concept: INonAbstractConcept<NodeT>): NodeT","org.modelix.metamodel.addNewChild"]},{"name":"inline fun <NodeT : ITypedNode> INode.addNewChild(role: String, concept: INonAbstractConcept<NodeT>): NodeT","description":"org.modelix.metamodel.addNewChild","location":"model-api-gen-runtime/org.modelix.metamodel/add-new-child.html","searchKeys":["addNewChild","inline fun <NodeT : ITypedNode> INode.addNewChild(role: String, concept: INonAbstractConcept<NodeT>): NodeT","org.modelix.metamodel.addNewChild"]},{"name":"inline fun <NodeT : ITypedNode> INode.typed(): NodeT","description":"org.modelix.metamodel.typed","location":"model-api-gen-runtime/org.modelix.metamodel/[common]typed.html","searchKeys":["typed","inline fun <NodeT : ITypedNode> INode.typed(): NodeT","org.modelix.metamodel.typed"]},{"name":"inline fun <NodeT : ITypedNode> ITypedNode.descendants(includeSelf: Boolean = false): Sequence<NodeT>","description":"org.modelix.metamodel.descendants","location":"model-api-gen-runtime/org.modelix.metamodel/[common]descendants.html","searchKeys":["descendants","inline fun <NodeT : ITypedNode> ITypedNode.descendants(includeSelf: Boolean = false): Sequence<NodeT>","org.modelix.metamodel.descendants"]},{"name":"inline fun <NodeT : ITypedNode> Iterable<INode>.ofType(): List<NodeT>","description":"org.modelix.metamodel.ofType","location":"model-api-gen-runtime/org.modelix.metamodel/of-type.html","searchKeys":["ofType","inline fun <NodeT : ITypedNode> Iterable<INode>.ofType(): List<NodeT>","org.modelix.metamodel.ofType"]},{"name":"inline fun <NodeT : ITypedNode> Iterable<ITypedNode>.ofType(): List<NodeT>","description":"org.modelix.metamodel.ofType","location":"model-api-gen-runtime/org.modelix.metamodel/of-type.html","searchKeys":["ofType","inline fun <NodeT : ITypedNode> Iterable<ITypedNode>.ofType(): List<NodeT>","org.modelix.metamodel.ofType"]},{"name":"inline fun <NodeT : ITypedNode> NodeT.typedReference(): TypedNodeReference<NodeT>","description":"org.modelix.metamodel.typedReference","location":"model-api-gen-runtime/org.modelix.metamodel/typed-reference.html","searchKeys":["typedReference","inline fun <NodeT : ITypedNode> NodeT.typedReference(): TypedNodeReference<NodeT>","org.modelix.metamodel.typedReference"]},{"name":"inline fun <NodeT : ITypedNode> Sequence<INode>.ofType(): Sequence<NodeT>","description":"org.modelix.metamodel.ofType","location":"model-api-gen-runtime/org.modelix.metamodel/of-type.html","searchKeys":["ofType","inline fun <NodeT : ITypedNode> Sequence<INode>.ofType(): Sequence<NodeT>","org.modelix.metamodel.ofType"]},{"name":"inline fun <NodeT : ITypedNode> Sequence<ITypedNode>.ofType(): Sequence<NodeT>","description":"org.modelix.metamodel.ofType","location":"model-api-gen-runtime/org.modelix.metamodel/of-type.html","searchKeys":["ofType","inline fun <NodeT : ITypedNode> Sequence<ITypedNode>.ofType(): Sequence<NodeT>","org.modelix.metamodel.ofType"]},{"name":"interface IConceptOfTypedNode<out NodeT : ITypedNode> : ITypedConcept","description":"org.modelix.metamodel.IConceptOfTypedNode","location":"model-api-gen-runtime/org.modelix.metamodel/-i-concept-of-typed-node/index.html","searchKeys":["IConceptOfTypedNode","interface IConceptOfTypedNode<out NodeT : ITypedNode> : ITypedConcept","org.modelix.metamodel.IConceptOfTypedNode"]},{"name":"interface INonAbstractConcept<out NodeT : ITypedNode> : IConceptOfTypedNode<NodeT> ","description":"org.modelix.metamodel.INonAbstractConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-i-non-abstract-concept/index.html","searchKeys":["INonAbstractConcept","interface INonAbstractConcept<out NodeT : ITypedNode> : IConceptOfTypedNode<NodeT> ","org.modelix.metamodel.INonAbstractConcept"]},{"name":"interface IPropertyValueEnum","description":"org.modelix.metamodel.IPropertyValueEnum","location":"model-api-gen-runtime/org.modelix.metamodel/-i-property-value-enum/index.html","searchKeys":["IPropertyValueEnum","interface IPropertyValueEnum","org.modelix.metamodel.IPropertyValueEnum"]},{"name":"interface IPropertyValueSerializer<ValueT>","description":"org.modelix.metamodel.IPropertyValueSerializer","location":"model-api-gen-runtime/org.modelix.metamodel/-i-property-value-serializer/index.html","searchKeys":["IPropertyValueSerializer","interface IPropertyValueSerializer<ValueT>","org.modelix.metamodel.IPropertyValueSerializer"]},{"name":"interface ITypedChildLink<ChildT : ITypedNode> : ITypedConceptFeature","description":"org.modelix.metamodel.ITypedChildLink","location":"model-api-gen-runtime/org.modelix.metamodel/-i-typed-child-link/index.html","searchKeys":["ITypedChildLink","interface ITypedChildLink<ChildT : ITypedNode> : ITypedConceptFeature","org.modelix.metamodel.ITypedChildLink"]},{"name":"interface ITypedChildListLink<ChildT : ITypedNode> : ITypedChildLink<ChildT> ","description":"org.modelix.metamodel.ITypedChildListLink","location":"model-api-gen-runtime/org.modelix.metamodel/-i-typed-child-list-link/index.html","searchKeys":["ITypedChildListLink","interface ITypedChildListLink<ChildT : ITypedNode> : ITypedChildLink<ChildT> ","org.modelix.metamodel.ITypedChildListLink"]},{"name":"interface ITypedConcept","description":"org.modelix.metamodel.ITypedConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-i-typed-concept/index.html","searchKeys":["ITypedConcept","interface ITypedConcept","org.modelix.metamodel.ITypedConcept"]},{"name":"interface ITypedConceptFeature","description":"org.modelix.metamodel.ITypedConceptFeature","location":"model-api-gen-runtime/org.modelix.metamodel/-i-typed-concept-feature/index.html","searchKeys":["ITypedConceptFeature","interface ITypedConceptFeature","org.modelix.metamodel.ITypedConceptFeature"]},{"name":"interface ITypedMandatorySingleChildLink<ChildT : ITypedNode> : ITypedSingleChildLink<ChildT> ","description":"org.modelix.metamodel.ITypedMandatorySingleChildLink","location":"model-api-gen-runtime/org.modelix.metamodel/-i-typed-mandatory-single-child-link/index.html","searchKeys":["ITypedMandatorySingleChildLink","interface ITypedMandatorySingleChildLink<ChildT : ITypedNode> : ITypedSingleChildLink<ChildT> ","org.modelix.metamodel.ITypedMandatorySingleChildLink"]},{"name":"interface ITypedNode","description":"org.modelix.metamodel.ITypedNode","location":"model-api-gen-runtime/org.modelix.metamodel/-i-typed-node/index.html","searchKeys":["ITypedNode","interface ITypedNode","org.modelix.metamodel.ITypedNode"]},{"name":"interface ITypedProperty<ValueT> : ITypedConceptFeature","description":"org.modelix.metamodel.ITypedProperty","location":"model-api-gen-runtime/org.modelix.metamodel/-i-typed-property/index.html","searchKeys":["ITypedProperty","interface ITypedProperty<ValueT> : ITypedConceptFeature","org.modelix.metamodel.ITypedProperty"]},{"name":"interface ITypedReferenceLink<TargetT : ITypedNode> : ITypedConceptFeature","description":"org.modelix.metamodel.ITypedReferenceLink","location":"model-api-gen-runtime/org.modelix.metamodel/-i-typed-reference-link/index.html","searchKeys":["ITypedReferenceLink","interface ITypedReferenceLink<TargetT : ITypedNode> : ITypedConceptFeature","org.modelix.metamodel.ITypedReferenceLink"]},{"name":"interface ITypedSingleChildLink<ChildT : ITypedNode> : ITypedChildLink<ChildT> ","description":"org.modelix.metamodel.ITypedSingleChildLink","location":"model-api-gen-runtime/org.modelix.metamodel/-i-typed-single-child-link/index.html","searchKeys":["ITypedSingleChildLink","interface ITypedSingleChildLink<ChildT : ITypedNode> : ITypedChildLink<ChildT> ","org.modelix.metamodel.ITypedSingleChildLink"]},{"name":"object Companion","description":"org.modelix.metamodel.GeneratedConcept.Companion","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.metamodel.GeneratedConcept.Companion"]},{"name":"object Companion","description":"org.modelix.metamodel.ModelData.Companion","location":"model-api-gen-runtime/org.modelix.metamodel/-model-data/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.metamodel.ModelData.Companion"]},{"name":"object MandatoryBooleanPropertySerializer : IPropertyValueSerializer<Boolean> ","description":"org.modelix.metamodel.MandatoryBooleanPropertySerializer","location":"model-api-gen-runtime/org.modelix.metamodel/-mandatory-boolean-property-serializer/index.html","searchKeys":["MandatoryBooleanPropertySerializer","object MandatoryBooleanPropertySerializer : IPropertyValueSerializer<Boolean> ","org.modelix.metamodel.MandatoryBooleanPropertySerializer"]},{"name":"object MandatoryIntPropertySerializer : IPropertyValueSerializer<Int> ","description":"org.modelix.metamodel.MandatoryIntPropertySerializer","location":"model-api-gen-runtime/org.modelix.metamodel/-mandatory-int-property-serializer/index.html","searchKeys":["MandatoryIntPropertySerializer","object MandatoryIntPropertySerializer : IPropertyValueSerializer<Int> ","org.modelix.metamodel.MandatoryIntPropertySerializer"]},{"name":"object MandatoryStringPropertySerializer : IPropertyValueSerializer<String> ","description":"org.modelix.metamodel.MandatoryStringPropertySerializer","location":"model-api-gen-runtime/org.modelix.metamodel/-mandatory-string-property-serializer/index.html","searchKeys":["MandatoryStringPropertySerializer","object MandatoryStringPropertySerializer : IPropertyValueSerializer<String> ","org.modelix.metamodel.MandatoryStringPropertySerializer"]},{"name":"object NullConcept : EmptyConcept, IConceptReference","description":"org.modelix.metamodel.NullConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-null-concept/index.html","searchKeys":["NullConcept","object NullConcept : EmptyConcept, IConceptReference","org.modelix.metamodel.NullConcept"]},{"name":"object OptionalBooleanPropertySerializer : IPropertyValueSerializer<Boolean?> ","description":"org.modelix.metamodel.OptionalBooleanPropertySerializer","location":"model-api-gen-runtime/org.modelix.metamodel/-optional-boolean-property-serializer/index.html","searchKeys":["OptionalBooleanPropertySerializer","object OptionalBooleanPropertySerializer : IPropertyValueSerializer<Boolean?> ","org.modelix.metamodel.OptionalBooleanPropertySerializer"]},{"name":"object OptionalIntPropertySerializer : IPropertyValueSerializer<Int?> ","description":"org.modelix.metamodel.OptionalIntPropertySerializer","location":"model-api-gen-runtime/org.modelix.metamodel/-optional-int-property-serializer/index.html","searchKeys":["OptionalIntPropertySerializer","object OptionalIntPropertySerializer : IPropertyValueSerializer<Int?> ","org.modelix.metamodel.OptionalIntPropertySerializer"]},{"name":"object OptionalStringPropertySerializer : IPropertyValueSerializer<String?> ","description":"org.modelix.metamodel.OptionalStringPropertySerializer","location":"model-api-gen-runtime/org.modelix.metamodel/-optional-string-property-serializer/index.html","searchKeys":["OptionalStringPropertySerializer","object OptionalStringPropertySerializer : IPropertyValueSerializer<String?> ","org.modelix.metamodel.OptionalStringPropertySerializer"]},{"name":"object TypedLanguagesRegistry : ILanguageRepository","description":"org.modelix.metamodel.TypedLanguagesRegistry","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-languages-registry/index.html","searchKeys":["TypedLanguagesRegistry","object TypedLanguagesRegistry : ILanguageRepository","org.modelix.metamodel.TypedLanguagesRegistry"]},{"name":"open class GeneratedSingleChildLink<ChildNodeT : ITypedNode, ChildConceptT : IConceptOfTypedNode<ChildNodeT>>(owner: IConcept, name: String, uid: String?, isOptional: Boolean, targetConcept: IConcept, childNodeInterface: KClass<ChildNodeT>) : GeneratedChildLink<ChildNodeT, ChildConceptT> , ITypedSingleChildLink<ChildNodeT> ","description":"org.modelix.metamodel.GeneratedSingleChildLink","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-single-child-link/index.html","searchKeys":["GeneratedSingleChildLink","open class GeneratedSingleChildLink<ChildNodeT : ITypedNode, ChildConceptT : IConceptOfTypedNode<ChildNodeT>>(owner: IConcept, name: String, uid: String?, isOptional: Boolean, targetConcept: IConcept, childNodeInterface: KClass<ChildNodeT>) : GeneratedChildLink<ChildNodeT, ChildConceptT> , ITypedSingleChildLink<ChildNodeT> ","org.modelix.metamodel.GeneratedSingleChildLink"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.modelix.metamodel.TypedNodeImpl.equals","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-node-impl/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.modelix.metamodel.TypedNodeImpl.equals"]},{"name":"open operator override fun iterator(): Iterator<ChildT>","description":"org.modelix.metamodel.ChildAccessor.iterator","location":"model-api-gen-runtime/org.modelix.metamodel/-child-accessor/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<ChildT>","org.modelix.metamodel.ChildAccessor.iterator"]},{"name":"open override fun castChild(childNode: INode): ChildNodeT","description":"org.modelix.metamodel.GeneratedChildLink.castChild","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-child-link/cast-child.html","searchKeys":["castChild","open override fun castChild(childNode: INode): ChildNodeT","org.modelix.metamodel.GeneratedChildLink.castChild"]},{"name":"open override fun castTarget(target: INode): TargetNodeT","description":"org.modelix.metamodel.GeneratedReferenceLink.castTarget","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-reference-link/cast-target.html","searchKeys":["castTarget","open override fun castTarget(target: INode): TargetNodeT","org.modelix.metamodel.GeneratedReferenceLink.castTarget"]},{"name":"open override fun convertRead(value: String?): Boolean","description":"org.modelix.metamodel.BooleanPropertyAccessor.convertRead","location":"model-api-gen-runtime/org.modelix.metamodel/-boolean-property-accessor/convert-read.html","searchKeys":["convertRead","open override fun convertRead(value: String?): Boolean","org.modelix.metamodel.BooleanPropertyAccessor.convertRead"]},{"name":"open override fun convertRead(value: String?): Int","description":"org.modelix.metamodel.IntPropertyAccessor.convertRead","location":"model-api-gen-runtime/org.modelix.metamodel/-int-property-accessor/convert-read.html","searchKeys":["convertRead","open override fun convertRead(value: String?): Int","org.modelix.metamodel.IntPropertyAccessor.convertRead"]},{"name":"open override fun convertRead(value: String?): String","description":"org.modelix.metamodel.StringPropertyAccessor.convertRead","location":"model-api-gen-runtime/org.modelix.metamodel/-string-property-accessor/convert-read.html","searchKeys":["convertRead","open override fun convertRead(value: String?): String","org.modelix.metamodel.StringPropertyAccessor.convertRead"]},{"name":"open override fun convertRead(value: String?): String?","description":"org.modelix.metamodel.RawPropertyAccessor.convertRead","location":"model-api-gen-runtime/org.modelix.metamodel/-raw-property-accessor/convert-read.html","searchKeys":["convertRead","open override fun convertRead(value: String?): String?","org.modelix.metamodel.RawPropertyAccessor.convertRead"]},{"name":"open override fun convertWrite(value: Boolean): String?","description":"org.modelix.metamodel.BooleanPropertyAccessor.convertWrite","location":"model-api-gen-runtime/org.modelix.metamodel/-boolean-property-accessor/convert-write.html","searchKeys":["convertWrite","open override fun convertWrite(value: Boolean): String?","org.modelix.metamodel.BooleanPropertyAccessor.convertWrite"]},{"name":"open override fun convertWrite(value: Int): String?","description":"org.modelix.metamodel.IntPropertyAccessor.convertWrite","location":"model-api-gen-runtime/org.modelix.metamodel/-int-property-accessor/convert-write.html","searchKeys":["convertWrite","open override fun convertWrite(value: Int): String?","org.modelix.metamodel.IntPropertyAccessor.convertWrite"]},{"name":"open override fun convertWrite(value: String): String?","description":"org.modelix.metamodel.StringPropertyAccessor.convertWrite","location":"model-api-gen-runtime/org.modelix.metamodel/-string-property-accessor/convert-write.html","searchKeys":["convertWrite","open override fun convertWrite(value: String): String?","org.modelix.metamodel.StringPropertyAccessor.convertWrite"]},{"name":"open override fun convertWrite(value: String?): String?","description":"org.modelix.metamodel.RawPropertyAccessor.convertWrite","location":"model-api-gen-runtime/org.modelix.metamodel/-raw-property-accessor/convert-write.html","searchKeys":["convertWrite","open override fun convertWrite(value: String?): String?","org.modelix.metamodel.RawPropertyAccessor.convertWrite"]},{"name":"open override fun deserialize(serialized: String?): Boolean","description":"org.modelix.metamodel.MandatoryBooleanPropertySerializer.deserialize","location":"model-api-gen-runtime/org.modelix.metamodel/-mandatory-boolean-property-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(serialized: String?): Boolean","org.modelix.metamodel.MandatoryBooleanPropertySerializer.deserialize"]},{"name":"open override fun deserialize(serialized: String?): Boolean?","description":"org.modelix.metamodel.OptionalBooleanPropertySerializer.deserialize","location":"model-api-gen-runtime/org.modelix.metamodel/-optional-boolean-property-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(serialized: String?): Boolean?","org.modelix.metamodel.OptionalBooleanPropertySerializer.deserialize"]},{"name":"open override fun deserialize(serialized: String?): E","description":"org.modelix.metamodel.MandatoryEnumSerializer.deserialize","location":"model-api-gen-runtime/org.modelix.metamodel/-mandatory-enum-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(serialized: String?): E","org.modelix.metamodel.MandatoryEnumSerializer.deserialize"]},{"name":"open override fun deserialize(serialized: String?): E?","description":"org.modelix.metamodel.OptionalEnumSerializer.deserialize","location":"model-api-gen-runtime/org.modelix.metamodel/-optional-enum-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(serialized: String?): E?","org.modelix.metamodel.OptionalEnumSerializer.deserialize"]},{"name":"open override fun deserialize(serialized: String?): Int","description":"org.modelix.metamodel.MandatoryIntPropertySerializer.deserialize","location":"model-api-gen-runtime/org.modelix.metamodel/-mandatory-int-property-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(serialized: String?): Int","org.modelix.metamodel.MandatoryIntPropertySerializer.deserialize"]},{"name":"open override fun deserialize(serialized: String?): Int?","description":"org.modelix.metamodel.OptionalIntPropertySerializer.deserialize","location":"model-api-gen-runtime/org.modelix.metamodel/-optional-int-property-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(serialized: String?): Int?","org.modelix.metamodel.OptionalIntPropertySerializer.deserialize"]},{"name":"open override fun deserialize(serialized: String?): String","description":"org.modelix.metamodel.MandatoryStringPropertySerializer.deserialize","location":"model-api-gen-runtime/org.modelix.metamodel/-mandatory-string-property-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(serialized: String?): String","org.modelix.metamodel.MandatoryStringPropertySerializer.deserialize"]},{"name":"open override fun deserialize(serialized: String?): String?","description":"org.modelix.metamodel.OptionalStringPropertySerializer.deserialize","location":"model-api-gen-runtime/org.modelix.metamodel/-optional-string-property-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(serialized: String?): String?","org.modelix.metamodel.OptionalStringPropertySerializer.deserialize"]},{"name":"open override fun deserializeValue(serialized: String?): ValueT","description":"org.modelix.metamodel.GeneratedProperty.deserializeValue","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-property/deserialize-value.html","searchKeys":["deserializeValue","open override fun deserializeValue(serialized: String?): ValueT","org.modelix.metamodel.GeneratedProperty.deserializeValue"]},{"name":"open override fun getAllChildLinks(): List<IChildLink>","description":"org.modelix.metamodel.EmptyConcept.getAllChildLinks","location":"model-api-gen-runtime/org.modelix.metamodel/-empty-concept/get-all-child-links.html","searchKeys":["getAllChildLinks","open override fun getAllChildLinks(): List<IChildLink>","org.modelix.metamodel.EmptyConcept.getAllChildLinks"]},{"name":"open override fun getAllChildLinks(): List<IChildLink>","description":"org.modelix.metamodel.GeneratedConcept.getAllChildLinks","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/get-all-child-links.html","searchKeys":["getAllChildLinks","open override fun getAllChildLinks(): List<IChildLink>","org.modelix.metamodel.GeneratedConcept.getAllChildLinks"]},{"name":"open override fun getAllConcepts(): List<IConcept>","description":"org.modelix.metamodel.TypedLanguagesRegistry.getAllConcepts","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-languages-registry/get-all-concepts.html","searchKeys":["getAllConcepts","open override fun getAllConcepts(): List<IConcept>","org.modelix.metamodel.TypedLanguagesRegistry.getAllConcepts"]},{"name":"open override fun getAllProperties(): List<IProperty>","description":"org.modelix.metamodel.EmptyConcept.getAllProperties","location":"model-api-gen-runtime/org.modelix.metamodel/-empty-concept/get-all-properties.html","searchKeys":["getAllProperties","open override fun getAllProperties(): List<IProperty>","org.modelix.metamodel.EmptyConcept.getAllProperties"]},{"name":"open override fun getAllProperties(): List<IProperty>","description":"org.modelix.metamodel.GeneratedConcept.getAllProperties","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/get-all-properties.html","searchKeys":["getAllProperties","open override fun getAllProperties(): List<IProperty>","org.modelix.metamodel.GeneratedConcept.getAllProperties"]},{"name":"open override fun getAllReferenceLinks(): List<IReferenceLink>","description":"org.modelix.metamodel.EmptyConcept.getAllReferenceLinks","location":"model-api-gen-runtime/org.modelix.metamodel/-empty-concept/get-all-reference-links.html","searchKeys":["getAllReferenceLinks","open override fun getAllReferenceLinks(): List<IReferenceLink>","org.modelix.metamodel.EmptyConcept.getAllReferenceLinks"]},{"name":"open override fun getAllReferenceLinks(): List<IReferenceLink>","description":"org.modelix.metamodel.GeneratedConcept.getAllReferenceLinks","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/get-all-reference-links.html","searchKeys":["getAllReferenceLinks","open override fun getAllReferenceLinks(): List<IReferenceLink>","org.modelix.metamodel.GeneratedConcept.getAllReferenceLinks"]},{"name":"open override fun getChildLink(name: String): IChildLink","description":"org.modelix.metamodel.EmptyConcept.getChildLink","location":"model-api-gen-runtime/org.modelix.metamodel/-empty-concept/get-child-link.html","searchKeys":["getChildLink","open override fun getChildLink(name: String): IChildLink","org.modelix.metamodel.EmptyConcept.getChildLink"]},{"name":"open override fun getChildLink(roleKey: String): IChildLink","description":"org.modelix.metamodel.GeneratedConcept.getChildLink","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/get-child-link.html","searchKeys":["getChildLink","open override fun getChildLink(roleKey: String): IChildLink","org.modelix.metamodel.GeneratedConcept.getChildLink"]},{"name":"open override fun getConcept(): IConcept","description":"org.modelix.metamodel.GeneratedChildLink.getConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-child-link/get-concept.html","searchKeys":["getConcept","open override fun getConcept(): IConcept","org.modelix.metamodel.GeneratedChildLink.getConcept"]},{"name":"open override fun getConcept(): IConcept","description":"org.modelix.metamodel.GeneratedProperty.getConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-property/get-concept.html","searchKeys":["getConcept","open override fun getConcept(): IConcept","org.modelix.metamodel.GeneratedProperty.getConcept"]},{"name":"open override fun getConcept(): IConcept","description":"org.modelix.metamodel.GeneratedReferenceLink.getConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-reference-link/get-concept.html","searchKeys":["getConcept","open override fun getConcept(): IConcept","org.modelix.metamodel.GeneratedReferenceLink.getConcept"]},{"name":"open override fun getDirectSuperConcepts(): List<IConcept>","description":"org.modelix.metamodel.EmptyConcept.getDirectSuperConcepts","location":"model-api-gen-runtime/org.modelix.metamodel/-empty-concept/get-direct-super-concepts.html","searchKeys":["getDirectSuperConcepts","open override fun getDirectSuperConcepts(): List<IConcept>","org.modelix.metamodel.EmptyConcept.getDirectSuperConcepts"]},{"name":"open override fun getLongName(): String","description":"org.modelix.metamodel.GeneratedConcept.getLongName","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/get-long-name.html","searchKeys":["getLongName","open override fun getLongName(): String","org.modelix.metamodel.GeneratedConcept.getLongName"]},{"name":"open override fun getLongName(): String","description":"org.modelix.metamodel.NullConcept.getLongName","location":"model-api-gen-runtime/org.modelix.metamodel/-null-concept/get-long-name.html","searchKeys":["getLongName","open override fun getLongName(): String","org.modelix.metamodel.NullConcept.getLongName"]},{"name":"open override fun getLongName(): String","description":"org.modelix.metamodel.UnknownConcept.getLongName","location":"model-api-gen-runtime/org.modelix.metamodel/-unknown-concept/get-long-name.html","searchKeys":["getLongName","open override fun getLongName(): String","org.modelix.metamodel.UnknownConcept.getLongName"]},{"name":"open override fun getName(): String","description":"org.modelix.metamodel.GeneratedLanguage.getName","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-language/get-name.html","searchKeys":["getName","open override fun getName(): String","org.modelix.metamodel.GeneratedLanguage.getName"]},{"name":"open override fun getOwnChildLinks(): List<IChildLink>","description":"org.modelix.metamodel.EmptyConcept.getOwnChildLinks","location":"model-api-gen-runtime/org.modelix.metamodel/-empty-concept/get-own-child-links.html","searchKeys":["getOwnChildLinks","open override fun getOwnChildLinks(): List<IChildLink>","org.modelix.metamodel.EmptyConcept.getOwnChildLinks"]},{"name":"open override fun getOwnChildLinks(): List<IChildLink>","description":"org.modelix.metamodel.GeneratedConcept.getOwnChildLinks","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/get-own-child-links.html","searchKeys":["getOwnChildLinks","open override fun getOwnChildLinks(): List<IChildLink>","org.modelix.metamodel.GeneratedConcept.getOwnChildLinks"]},{"name":"open override fun getOwnProperties(): List<IProperty>","description":"org.modelix.metamodel.EmptyConcept.getOwnProperties","location":"model-api-gen-runtime/org.modelix.metamodel/-empty-concept/get-own-properties.html","searchKeys":["getOwnProperties","open override fun getOwnProperties(): List<IProperty>","org.modelix.metamodel.EmptyConcept.getOwnProperties"]},{"name":"open override fun getOwnProperties(): List<IProperty>","description":"org.modelix.metamodel.GeneratedConcept.getOwnProperties","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/get-own-properties.html","searchKeys":["getOwnProperties","open override fun getOwnProperties(): List<IProperty>","org.modelix.metamodel.GeneratedConcept.getOwnProperties"]},{"name":"open override fun getOwnReferenceLinks(): List<IReferenceLink>","description":"org.modelix.metamodel.EmptyConcept.getOwnReferenceLinks","location":"model-api-gen-runtime/org.modelix.metamodel/-empty-concept/get-own-reference-links.html","searchKeys":["getOwnReferenceLinks","open override fun getOwnReferenceLinks(): List<IReferenceLink>","org.modelix.metamodel.EmptyConcept.getOwnReferenceLinks"]},{"name":"open override fun getOwnReferenceLinks(): List<IReferenceLink>","description":"org.modelix.metamodel.GeneratedConcept.getOwnReferenceLinks","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/get-own-reference-links.html","searchKeys":["getOwnReferenceLinks","open override fun getOwnReferenceLinks(): List<IReferenceLink>","org.modelix.metamodel.GeneratedConcept.getOwnReferenceLinks"]},{"name":"open override fun getPriority(): Int","description":"org.modelix.metamodel.TypedLanguagesRegistry.getPriority","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-languages-registry/get-priority.html","searchKeys":["getPriority","open override fun getPriority(): Int","org.modelix.metamodel.TypedLanguagesRegistry.getPriority"]},{"name":"open override fun getProperty(name: String): IProperty","description":"org.modelix.metamodel.EmptyConcept.getProperty","location":"model-api-gen-runtime/org.modelix.metamodel/-empty-concept/get-property.html","searchKeys":["getProperty","open override fun getProperty(name: String): IProperty","org.modelix.metamodel.EmptyConcept.getProperty"]},{"name":"open override fun getProperty(roleKey: String): IProperty","description":"org.modelix.metamodel.GeneratedConcept.getProperty","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/get-property.html","searchKeys":["getProperty","open override fun getProperty(roleKey: String): IProperty","org.modelix.metamodel.GeneratedConcept.getProperty"]},{"name":"open override fun getReference(): IConceptReference","description":"org.modelix.metamodel.GeneratedConcept.getReference","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/get-reference.html","searchKeys":["getReference","open override fun getReference(): IConceptReference","org.modelix.metamodel.GeneratedConcept.getReference"]},{"name":"open override fun getReference(): IConceptReference","description":"org.modelix.metamodel.NullConcept.getReference","location":"model-api-gen-runtime/org.modelix.metamodel/-null-concept/get-reference.html","searchKeys":["getReference","open override fun getReference(): IConceptReference","org.modelix.metamodel.NullConcept.getReference"]},{"name":"open override fun getReference(): IConceptReference","description":"org.modelix.metamodel.UnknownConcept.getReference","location":"model-api-gen-runtime/org.modelix.metamodel/-unknown-concept/get-reference.html","searchKeys":["getReference","open override fun getReference(): IConceptReference","org.modelix.metamodel.UnknownConcept.getReference"]},{"name":"open override fun getReferenceLink(name: String): IReferenceLink","description":"org.modelix.metamodel.EmptyConcept.getReferenceLink","location":"model-api-gen-runtime/org.modelix.metamodel/-empty-concept/get-reference-link.html","searchKeys":["getReferenceLink","open override fun getReferenceLink(name: String): IReferenceLink","org.modelix.metamodel.EmptyConcept.getReferenceLink"]},{"name":"open override fun getReferenceLink(roleKey: String): IReferenceLink","description":"org.modelix.metamodel.GeneratedConcept.getReferenceLink","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/get-reference-link.html","searchKeys":["getReferenceLink","open override fun getReferenceLink(roleKey: String): IReferenceLink","org.modelix.metamodel.GeneratedConcept.getReferenceLink"]},{"name":"open override fun getShortName(): String","description":"org.modelix.metamodel.GeneratedConcept.getShortName","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/get-short-name.html","searchKeys":["getShortName","open override fun getShortName(): String","org.modelix.metamodel.GeneratedConcept.getShortName"]},{"name":"open override fun getShortName(): String","description":"org.modelix.metamodel.NullConcept.getShortName","location":"model-api-gen-runtime/org.modelix.metamodel/-null-concept/get-short-name.html","searchKeys":["getShortName","open override fun getShortName(): String","org.modelix.metamodel.NullConcept.getShortName"]},{"name":"open override fun getShortName(): String","description":"org.modelix.metamodel.UnknownConcept.getShortName","location":"model-api-gen-runtime/org.modelix.metamodel/-unknown-concept/get-short-name.html","searchKeys":["getShortName","open override fun getShortName(): String","org.modelix.metamodel.UnknownConcept.getShortName"]},{"name":"open override fun getSimpleName(): String","description":"org.modelix.metamodel.GeneratedChildLink.getSimpleName","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-child-link/get-simple-name.html","searchKeys":["getSimpleName","open override fun getSimpleName(): String","org.modelix.metamodel.GeneratedChildLink.getSimpleName"]},{"name":"open override fun getSimpleName(): String","description":"org.modelix.metamodel.GeneratedProperty.getSimpleName","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-property/get-simple-name.html","searchKeys":["getSimpleName","open override fun getSimpleName(): String","org.modelix.metamodel.GeneratedProperty.getSimpleName"]},{"name":"open override fun getSimpleName(): String","description":"org.modelix.metamodel.GeneratedReferenceLink.getSimpleName","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-reference-link/get-simple-name.html","searchKeys":["getSimpleName","open override fun getSimpleName(): String","org.modelix.metamodel.GeneratedReferenceLink.getSimpleName"]},{"name":"open override fun getTypedChildConcept(): IConceptOfTypedNode<ChildNodeT>","description":"org.modelix.metamodel.GeneratedChildLink.getTypedChildConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-child-link/get-typed-child-concept.html","searchKeys":["getTypedChildConcept","open override fun getTypedChildConcept(): IConceptOfTypedNode<ChildNodeT>","org.modelix.metamodel.GeneratedChildLink.getTypedChildConcept"]},{"name":"open override fun getTypedTargetConcept(): IConceptOfTypedNode<TargetNodeT>","description":"org.modelix.metamodel.GeneratedReferenceLink.getTypedTargetConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-reference-link/get-typed-target-concept.html","searchKeys":["getTypedTargetConcept","open override fun getTypedTargetConcept(): IConceptOfTypedNode<TargetNodeT>","org.modelix.metamodel.GeneratedReferenceLink.getTypedTargetConcept"]},{"name":"open override fun getUID(): String","description":"org.modelix.metamodel.GeneratedChildLink.getUID","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-child-link/get-u-i-d.html","searchKeys":["getUID","open override fun getUID(): String","org.modelix.metamodel.GeneratedChildLink.getUID"]},{"name":"open override fun getUID(): String","description":"org.modelix.metamodel.GeneratedConcept.getUID","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/get-u-i-d.html","searchKeys":["getUID","open override fun getUID(): String","org.modelix.metamodel.GeneratedConcept.getUID"]},{"name":"open override fun getUID(): String","description":"org.modelix.metamodel.GeneratedLanguage.getUID","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-language/get-u-i-d.html","searchKeys":["getUID","open override fun getUID(): String","org.modelix.metamodel.GeneratedLanguage.getUID"]},{"name":"open override fun getUID(): String","description":"org.modelix.metamodel.GeneratedProperty.getUID","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-property/get-u-i-d.html","searchKeys":["getUID","open override fun getUID(): String","org.modelix.metamodel.GeneratedProperty.getUID"]},{"name":"open override fun getUID(): String","description":"org.modelix.metamodel.GeneratedReferenceLink.getUID","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-reference-link/get-u-i-d.html","searchKeys":["getUID","open override fun getUID(): String","org.modelix.metamodel.GeneratedReferenceLink.getUID"]},{"name":"open override fun getUID(): String","description":"org.modelix.metamodel.NullConcept.getUID","location":"model-api-gen-runtime/org.modelix.metamodel/-null-concept/get-u-i-d.html","searchKeys":["getUID","open override fun getUID(): String","org.modelix.metamodel.NullConcept.getUID"]},{"name":"open override fun getUID(): String","description":"org.modelix.metamodel.UnknownConcept.getUID","location":"model-api-gen-runtime/org.modelix.metamodel/-unknown-concept/get-u-i-d.html","searchKeys":["getUID","open override fun getUID(): String","org.modelix.metamodel.UnknownConcept.getUID"]},{"name":"open override fun hashCode(): Int","description":"org.modelix.metamodel.TypedNodeImpl.hashCode","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-node-impl/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.modelix.metamodel.TypedNodeImpl.hashCode"]},{"name":"open override fun isAbstract(): Boolean","description":"org.modelix.metamodel.EmptyConcept.isAbstract","location":"model-api-gen-runtime/org.modelix.metamodel/-empty-concept/is-abstract.html","searchKeys":["isAbstract","open override fun isAbstract(): Boolean","org.modelix.metamodel.EmptyConcept.isAbstract"]},{"name":"open override fun isAbstract(): Boolean","description":"org.modelix.metamodel.GeneratedConcept.isAbstract","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/is-abstract.html","searchKeys":["isAbstract","open override fun isAbstract(): Boolean","org.modelix.metamodel.GeneratedConcept.isAbstract"]},{"name":"open override fun isExactly(concept: IConcept?): Boolean","description":"org.modelix.metamodel.EmptyConcept.isExactly","location":"model-api-gen-runtime/org.modelix.metamodel/-empty-concept/is-exactly.html","searchKeys":["isExactly","open override fun isExactly(concept: IConcept?): Boolean","org.modelix.metamodel.EmptyConcept.isExactly"]},{"name":"open override fun isExactly(concept: IConcept?): Boolean","description":"org.modelix.metamodel.GeneratedConcept.isExactly","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/is-exactly.html","searchKeys":["isExactly","open override fun isExactly(concept: IConcept?): Boolean","org.modelix.metamodel.GeneratedConcept.isExactly"]},{"name":"open override fun isSubConceptOf(superConcept: IConcept?): Boolean","description":"org.modelix.metamodel.EmptyConcept.isSubConceptOf","location":"model-api-gen-runtime/org.modelix.metamodel/-empty-concept/is-sub-concept-of.html","searchKeys":["isSubConceptOf","open override fun isSubConceptOf(superConcept: IConcept?): Boolean","org.modelix.metamodel.EmptyConcept.isSubConceptOf"]},{"name":"open override fun isSubConceptOf(superConcept: IConcept?): Boolean","description":"org.modelix.metamodel.GeneratedConcept.isSubConceptOf","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/is-sub-concept-of.html","searchKeys":["isSubConceptOf","open override fun isSubConceptOf(superConcept: IConcept?): Boolean","org.modelix.metamodel.GeneratedConcept.isSubConceptOf"]},{"name":"open override fun resolve(area: IArea?): IConcept?","description":"org.modelix.metamodel.NullConcept.resolve","location":"model-api-gen-runtime/org.modelix.metamodel/-null-concept/resolve.html","searchKeys":["resolve","open override fun resolve(area: IArea?): IConcept?","org.modelix.metamodel.NullConcept.resolve"]},{"name":"open override fun resolveConcept(uid: String): GeneratedConcept<*, *>?","description":"org.modelix.metamodel.TypedLanguagesRegistry.resolveConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-languages-registry/resolve-concept.html","searchKeys":["resolveConcept","open override fun resolveConcept(uid: String): GeneratedConcept<*, *>?","org.modelix.metamodel.TypedLanguagesRegistry.resolveConcept"]},{"name":"open override fun serialize(): String","description":"org.modelix.metamodel.NullConcept.serialize","location":"model-api-gen-runtime/org.modelix.metamodel/-null-concept/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.metamodel.NullConcept.serialize"]},{"name":"open override fun serialize(value: Boolean): String?","description":"org.modelix.metamodel.MandatoryBooleanPropertySerializer.serialize","location":"model-api-gen-runtime/org.modelix.metamodel/-mandatory-boolean-property-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(value: Boolean): String?","org.modelix.metamodel.MandatoryBooleanPropertySerializer.serialize"]},{"name":"open override fun serialize(value: Boolean?): String?","description":"org.modelix.metamodel.OptionalBooleanPropertySerializer.serialize","location":"model-api-gen-runtime/org.modelix.metamodel/-optional-boolean-property-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(value: Boolean?): String?","org.modelix.metamodel.OptionalBooleanPropertySerializer.serialize"]},{"name":"open override fun serialize(value: E): String","description":"org.modelix.metamodel.MandatoryEnumSerializer.serialize","location":"model-api-gen-runtime/org.modelix.metamodel/-mandatory-enum-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(value: E): String","org.modelix.metamodel.MandatoryEnumSerializer.serialize"]},{"name":"open override fun serialize(value: E?): String?","description":"org.modelix.metamodel.OptionalEnumSerializer.serialize","location":"model-api-gen-runtime/org.modelix.metamodel/-optional-enum-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(value: E?): String?","org.modelix.metamodel.OptionalEnumSerializer.serialize"]},{"name":"open override fun serialize(value: Int): String?","description":"org.modelix.metamodel.MandatoryIntPropertySerializer.serialize","location":"model-api-gen-runtime/org.modelix.metamodel/-mandatory-int-property-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(value: Int): String?","org.modelix.metamodel.MandatoryIntPropertySerializer.serialize"]},{"name":"open override fun serialize(value: Int?): String?","description":"org.modelix.metamodel.OptionalIntPropertySerializer.serialize","location":"model-api-gen-runtime/org.modelix.metamodel/-optional-int-property-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(value: Int?): String?","org.modelix.metamodel.OptionalIntPropertySerializer.serialize"]},{"name":"open override fun serialize(value: String): String?","description":"org.modelix.metamodel.MandatoryStringPropertySerializer.serialize","location":"model-api-gen-runtime/org.modelix.metamodel/-mandatory-string-property-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(value: String): String?","org.modelix.metamodel.MandatoryStringPropertySerializer.serialize"]},{"name":"open override fun serialize(value: String?): String?","description":"org.modelix.metamodel.OptionalStringPropertySerializer.serialize","location":"model-api-gen-runtime/org.modelix.metamodel/-optional-string-property-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(value: String?): String?","org.modelix.metamodel.OptionalStringPropertySerializer.serialize"]},{"name":"open override fun serializeValue(value: ValueT): String?","description":"org.modelix.metamodel.GeneratedProperty.serializeValue","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-property/serialize-value.html","searchKeys":["serializeValue","open override fun serializeValue(value: ValueT): String?","org.modelix.metamodel.GeneratedProperty.serializeValue"]},{"name":"open override fun untyped(): IChildLink","description":"org.modelix.metamodel.GeneratedChildLink.untyped","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-child-link/untyped.html","searchKeys":["untyped","open override fun untyped(): IChildLink","org.modelix.metamodel.GeneratedChildLink.untyped"]},{"name":"open override fun untyped(): IConcept","description":"org.modelix.metamodel.FallbackTypedConcept.untyped","location":"model-api-gen-runtime/org.modelix.metamodel/-fallback-typed-concept/untyped.html","searchKeys":["untyped","open override fun untyped(): IConcept","org.modelix.metamodel.FallbackTypedConcept.untyped"]},{"name":"open override fun untyped(): IConcept","description":"org.modelix.metamodel.UnknownTypedConcept.untyped","location":"model-api-gen-runtime/org.modelix.metamodel/-unknown-typed-concept/untyped.html","searchKeys":["untyped","open override fun untyped(): IConcept","org.modelix.metamodel.UnknownTypedConcept.untyped"]},{"name":"open override fun untyped(): IProperty","description":"org.modelix.metamodel.GeneratedProperty.untyped","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-property/untyped.html","searchKeys":["untyped","open override fun untyped(): IProperty","org.modelix.metamodel.GeneratedProperty.untyped"]},{"name":"open override fun untyped(): IReferenceLink","description":"org.modelix.metamodel.GeneratedReferenceLink.untyped","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-reference-link/untyped.html","searchKeys":["untyped","open override fun untyped(): IReferenceLink","org.modelix.metamodel.GeneratedReferenceLink.untyped"]},{"name":"open override fun unwrap(): INode","description":"org.modelix.metamodel.TypedNodeImpl.unwrap","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-node-impl/unwrap.html","searchKeys":["unwrap","open override fun unwrap(): INode","org.modelix.metamodel.TypedNodeImpl.unwrap"]},{"name":"open override fun unwrap(): INode","description":"org.modelix.metamodel.UnknownConceptInstance.unwrap","location":"model-api-gen-runtime/org.modelix.metamodel/-unknown-concept-instance/unwrap.html","searchKeys":["unwrap","open override fun unwrap(): INode","org.modelix.metamodel.UnknownConceptInstance.unwrap"]},{"name":"open override val _concept: ITypedConcept","description":"org.modelix.metamodel.UnknownConceptInstance._concept","location":"model-api-gen-runtime/org.modelix.metamodel/-unknown-concept-instance/_concept.html","searchKeys":["_concept","open override val _concept: ITypedConcept","org.modelix.metamodel.UnknownConceptInstance._concept"]},{"name":"open override val childConcept: IConcept","description":"org.modelix.metamodel.GeneratedChildLink.childConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-child-link/child-concept.html","searchKeys":["childConcept","open override val childConcept: IConcept","org.modelix.metamodel.GeneratedChildLink.childConcept"]},{"name":"open override val isMultiple: Boolean","description":"org.modelix.metamodel.GeneratedChildLink.isMultiple","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-child-link/is-multiple.html","searchKeys":["isMultiple","open override val isMultiple: Boolean","org.modelix.metamodel.GeneratedChildLink.isMultiple"]},{"name":"open override val isOptional: Boolean","description":"org.modelix.metamodel.GeneratedChildLink.isOptional","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-child-link/is-optional.html","searchKeys":["isOptional","open override val isOptional: Boolean","org.modelix.metamodel.GeneratedChildLink.isOptional"]},{"name":"open override val isOptional: Boolean","description":"org.modelix.metamodel.GeneratedProperty.isOptional","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-property/is-optional.html","searchKeys":["isOptional","open override val isOptional: Boolean","org.modelix.metamodel.GeneratedProperty.isOptional"]},{"name":"open override val isOptional: Boolean","description":"org.modelix.metamodel.GeneratedReferenceLink.isOptional","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-reference-link/is-optional.html","searchKeys":["isOptional","open override val isOptional: Boolean","org.modelix.metamodel.GeneratedReferenceLink.isOptional"]},{"name":"open override val language: ILanguage?","description":"org.modelix.metamodel.NullConcept.language","location":"model-api-gen-runtime/org.modelix.metamodel/-null-concept/language.html","searchKeys":["language","open override val language: ILanguage?","org.modelix.metamodel.NullConcept.language"]},{"name":"open override val language: ILanguage?","description":"org.modelix.metamodel.UnknownConcept.language","location":"model-api-gen-runtime/org.modelix.metamodel/-unknown-concept/language.html","searchKeys":["language","open override val language: ILanguage?","org.modelix.metamodel.UnknownConcept.language"]},{"name":"open override val targetConcept: IConcept","description":"org.modelix.metamodel.GeneratedChildLink.targetConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-child-link/target-concept.html","searchKeys":["targetConcept","open override val targetConcept: IConcept","org.modelix.metamodel.GeneratedChildLink.targetConcept"]},{"name":"open override val targetConcept: IConcept","description":"org.modelix.metamodel.GeneratedReferenceLink.targetConcept","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-reference-link/target-concept.html","searchKeys":["targetConcept","open override val targetConcept: IConcept","org.modelix.metamodel.GeneratedReferenceLink.targetConcept"]},{"name":"operator fun getValue(thisRef: Any, property: KProperty<*>): ValueT","description":"org.modelix.metamodel.PropertyAccessor.getValue","location":"model-api-gen-runtime/org.modelix.metamodel/-property-accessor/get-value.html","searchKeys":["getValue","operator fun getValue(thisRef: Any, property: KProperty<*>): ValueT","org.modelix.metamodel.PropertyAccessor.getValue"]},{"name":"operator fun getValue(thisRef: Any, property: KProperty<*>): ValueT","description":"org.modelix.metamodel.TypedPropertyAccessor.getValue","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-property-accessor/get-value.html","searchKeys":["getValue","operator fun getValue(thisRef: Any, property: KProperty<*>): ValueT","org.modelix.metamodel.TypedPropertyAccessor.getValue"]},{"name":"operator fun getValue(thisRef: SourceT, property: KProperty<*>): INode?","description":"org.modelix.metamodel.RawReferenceAccessor.getValue","location":"model-api-gen-runtime/org.modelix.metamodel/-raw-reference-accessor/get-value.html","searchKeys":["getValue","operator fun getValue(thisRef: SourceT, property: KProperty<*>): INode?","org.modelix.metamodel.RawReferenceAccessor.getValue"]},{"name":"operator fun getValue(thisRef: SourceT, property: KProperty<*>): TargetT","description":"org.modelix.metamodel.MandatoryReferenceAccessor.getValue","location":"model-api-gen-runtime/org.modelix.metamodel/-mandatory-reference-accessor/get-value.html","searchKeys":["getValue","operator fun getValue(thisRef: SourceT, property: KProperty<*>): TargetT","org.modelix.metamodel.MandatoryReferenceAccessor.getValue"]},{"name":"operator fun getValue(thisRef: SourceT, property: KProperty<*>): TargetT?","description":"org.modelix.metamodel.OptionalReferenceAccessor.getValue","location":"model-api-gen-runtime/org.modelix.metamodel/-optional-reference-accessor/get-value.html","searchKeys":["getValue","operator fun getValue(thisRef: SourceT, property: KProperty<*>): TargetT?","org.modelix.metamodel.OptionalReferenceAccessor.getValue"]},{"name":"operator fun setValue(thisRef: Any, property: KProperty<*>, value: ValueT)","description":"org.modelix.metamodel.PropertyAccessor.setValue","location":"model-api-gen-runtime/org.modelix.metamodel/-property-accessor/set-value.html","searchKeys":["setValue","operator fun setValue(thisRef: Any, property: KProperty<*>, value: ValueT)","org.modelix.metamodel.PropertyAccessor.setValue"]},{"name":"operator fun setValue(thisRef: Any, property: KProperty<*>, value: ValueT)","description":"org.modelix.metamodel.TypedPropertyAccessor.setValue","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-property-accessor/set-value.html","searchKeys":["setValue","operator fun setValue(thisRef: Any, property: KProperty<*>, value: ValueT)","org.modelix.metamodel.TypedPropertyAccessor.setValue"]},{"name":"operator fun setValue(thisRef: SourceT, property: KProperty<*>, target: INode?)","description":"org.modelix.metamodel.RawReferenceAccessor.setValue","location":"model-api-gen-runtime/org.modelix.metamodel/-raw-reference-accessor/set-value.html","searchKeys":["setValue","operator fun setValue(thisRef: SourceT, property: KProperty<*>, target: INode?)","org.modelix.metamodel.RawReferenceAccessor.setValue"]},{"name":"operator fun setValue(thisRef: SourceT, property: KProperty<*>, target: TargetT)","description":"org.modelix.metamodel.MandatoryReferenceAccessor.setValue","location":"model-api-gen-runtime/org.modelix.metamodel/-mandatory-reference-accessor/set-value.html","searchKeys":["setValue","operator fun setValue(thisRef: SourceT, property: KProperty<*>, target: TargetT)","org.modelix.metamodel.MandatoryReferenceAccessor.setValue"]},{"name":"operator fun setValue(thisRef: SourceT, property: KProperty<*>, target: TargetT?)","description":"org.modelix.metamodel.OptionalReferenceAccessor.setValue","location":"model-api-gen-runtime/org.modelix.metamodel/-optional-reference-accessor/set-value.html","searchKeys":["setValue","operator fun setValue(thisRef: SourceT, property: KProperty<*>, target: TargetT?)","org.modelix.metamodel.OptionalReferenceAccessor.setValue"]},{"name":"val ITypedConcept._concept: IConcept","description":"org.modelix.metamodel._concept","location":"model-api-gen-runtime/org.modelix.metamodel/_concept.html","searchKeys":["_concept","val ITypedConcept._concept: IConcept","org.modelix.metamodel._concept"]},{"name":"val _typed: ConceptT","description":"org.modelix.metamodel.GeneratedConcept._typed","location":"model-api-gen-runtime/org.modelix.metamodel/-generated-concept/_typed.html","searchKeys":["_typed","val _typed: ConceptT","org.modelix.metamodel.GeneratedConcept._typed"]},{"name":"val childType: KClass<ChildT>","description":"org.modelix.metamodel.ChildAccessor.childType","location":"model-api-gen-runtime/org.modelix.metamodel/-child-accessor/child-type.html","searchKeys":["childType","val childType: KClass<ChildT>","org.modelix.metamodel.ChildAccessor.childType"]},{"name":"val children: List<NodeData>","description":"org.modelix.metamodel.NodeData.children","location":"model-api-gen-runtime/org.modelix.metamodel/-node-data/children.html","searchKeys":["children","val children: List<NodeData>","org.modelix.metamodel.NodeData.children"]},{"name":"val concept: String? = null","description":"org.modelix.metamodel.NodeData.concept","location":"model-api-gen-runtime/org.modelix.metamodel/-node-data/concept.html","searchKeys":["concept","val concept: String? = null","org.modelix.metamodel.NodeData.concept"]},{"name":"val id: String? = null","description":"org.modelix.metamodel.ModelData.id","location":"model-api-gen-runtime/org.modelix.metamodel/-model-data/id.html","searchKeys":["id","val id: String? = null","org.modelix.metamodel.ModelData.id"]},{"name":"val id: String? = null","description":"org.modelix.metamodel.NodeData.id","location":"model-api-gen-runtime/org.modelix.metamodel/-node-data/id.html","searchKeys":["id","val id: String? = null","org.modelix.metamodel.NodeData.id"]},{"name":"val link: ITypedMandatorySingleChildLink<*>","description":"org.modelix.metamodel.ChildNotSetException.link","location":"model-api-gen-runtime/org.modelix.metamodel/-child-not-set-exception/link.html","searchKeys":["link","val link: ITypedMandatorySingleChildLink<*>","org.modelix.metamodel.ChildNotSetException.link"]},{"name":"val link: ITypedReferenceLink<*>","description":"org.modelix.metamodel.ReferenceNotSetException.link","location":"model-api-gen-runtime/org.modelix.metamodel/-reference-not-set-exception/link.html","searchKeys":["link","val link: ITypedReferenceLink<*>","org.modelix.metamodel.ReferenceNotSetException.link"]},{"name":"val node: INode","description":"org.modelix.metamodel.ChildNotSetException.node","location":"model-api-gen-runtime/org.modelix.metamodel/-child-not-set-exception/node.html","searchKeys":["node","val node: INode","org.modelix.metamodel.ChildNotSetException.node"]},{"name":"val node: INode","description":"org.modelix.metamodel.MandatoryReferenceAccessor.node","location":"model-api-gen-runtime/org.modelix.metamodel/-mandatory-reference-accessor/node.html","searchKeys":["node","val node: INode","org.modelix.metamodel.MandatoryReferenceAccessor.node"]},{"name":"val node: INode","description":"org.modelix.metamodel.OptionalReferenceAccessor.node","location":"model-api-gen-runtime/org.modelix.metamodel/-optional-reference-accessor/node.html","searchKeys":["node","val node: INode","org.modelix.metamodel.OptionalReferenceAccessor.node"]},{"name":"val node: INode","description":"org.modelix.metamodel.PropertyAccessor.node","location":"model-api-gen-runtime/org.modelix.metamodel/-property-accessor/node.html","searchKeys":["node","val node: INode","org.modelix.metamodel.PropertyAccessor.node"]},{"name":"val node: INode","description":"org.modelix.metamodel.RawReferenceAccessor.node","location":"model-api-gen-runtime/org.modelix.metamodel/-raw-reference-accessor/node.html","searchKeys":["node","val node: INode","org.modelix.metamodel.RawReferenceAccessor.node"]},{"name":"val node: INode","description":"org.modelix.metamodel.ReferenceNotSetException.node","location":"model-api-gen-runtime/org.modelix.metamodel/-reference-not-set-exception/node.html","searchKeys":["node","val node: INode","org.modelix.metamodel.ReferenceNotSetException.node"]},{"name":"val node: INode","description":"org.modelix.metamodel.TypedPropertyAccessor.node","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-property-accessor/node.html","searchKeys":["node","val node: INode","org.modelix.metamodel.TypedPropertyAccessor.node"]},{"name":"val node: INode","description":"org.modelix.metamodel.UnknownConceptInstance.node","location":"model-api-gen-runtime/org.modelix.metamodel/-unknown-concept-instance/node.html","searchKeys":["node","val node: INode","org.modelix.metamodel.UnknownConceptInstance.node"]},{"name":"val nodeClass: KClass<NodeT>","description":"org.modelix.metamodel.TypedNodeReference.nodeClass","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-node-reference/node-class.html","searchKeys":["nodeClass","val nodeClass: KClass<NodeT>","org.modelix.metamodel.TypedNodeReference.nodeClass"]},{"name":"val properties: Map<String, String>","description":"org.modelix.metamodel.NodeData.properties","location":"model-api-gen-runtime/org.modelix.metamodel/-node-data/properties.html","searchKeys":["properties","val properties: Map<String, String>","org.modelix.metamodel.NodeData.properties"]},{"name":"val ref: INodeReference","description":"org.modelix.metamodel.TypedNodeReference.ref","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-node-reference/ref.html","searchKeys":["ref","val ref: INodeReference","org.modelix.metamodel.TypedNodeReference.ref"]},{"name":"val references: Map<String, String>","description":"org.modelix.metamodel.NodeData.references","location":"model-api-gen-runtime/org.modelix.metamodel/-node-data/references.html","searchKeys":["references","val references: Map<String, String>","org.modelix.metamodel.NodeData.references"]},{"name":"val role: IProperty","description":"org.modelix.metamodel.PropertyAccessor.role","location":"model-api-gen-runtime/org.modelix.metamodel/-property-accessor/role.html","searchKeys":["role","val role: IProperty","org.modelix.metamodel.PropertyAccessor.role"]},{"name":"val role: IReferenceLink","description":"org.modelix.metamodel.MandatoryReferenceAccessor.role","location":"model-api-gen-runtime/org.modelix.metamodel/-mandatory-reference-accessor/role.html","searchKeys":["role","val role: IReferenceLink","org.modelix.metamodel.MandatoryReferenceAccessor.role"]},{"name":"val role: IReferenceLink","description":"org.modelix.metamodel.OptionalReferenceAccessor.role","location":"model-api-gen-runtime/org.modelix.metamodel/-optional-reference-accessor/role.html","searchKeys":["role","val role: IReferenceLink","org.modelix.metamodel.OptionalReferenceAccessor.role"]},{"name":"val role: IReferenceLink","description":"org.modelix.metamodel.RawReferenceAccessor.role","location":"model-api-gen-runtime/org.modelix.metamodel/-raw-reference-accessor/role.html","searchKeys":["role","val role: IReferenceLink","org.modelix.metamodel.RawReferenceAccessor.role"]},{"name":"val role: ITypedProperty<ValueT>","description":"org.modelix.metamodel.TypedPropertyAccessor.role","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-property-accessor/role.html","searchKeys":["role","val role: ITypedProperty<ValueT>","org.modelix.metamodel.TypedPropertyAccessor.role"]},{"name":"val role: String? = null","description":"org.modelix.metamodel.NodeData.role","location":"model-api-gen-runtime/org.modelix.metamodel/-node-data/role.html","searchKeys":["role","val role: String? = null","org.modelix.metamodel.NodeData.role"]},{"name":"val root: NodeData","description":"org.modelix.metamodel.ModelData.root","location":"model-api-gen-runtime/org.modelix.metamodel/-model-data/root.html","searchKeys":["root","val root: NodeData","org.modelix.metamodel.ModelData.root"]},{"name":"val targetType: KClass<TargetT>","description":"org.modelix.metamodel.MandatoryReferenceAccessor.targetType","location":"model-api-gen-runtime/org.modelix.metamodel/-mandatory-reference-accessor/target-type.html","searchKeys":["targetType","val targetType: KClass<TargetT>","org.modelix.metamodel.MandatoryReferenceAccessor.targetType"]},{"name":"val targetType: KClass<TargetT>","description":"org.modelix.metamodel.OptionalReferenceAccessor.targetType","location":"model-api-gen-runtime/org.modelix.metamodel/-optional-reference-accessor/target-type.html","searchKeys":["targetType","val targetType: KClass<TargetT>","org.modelix.metamodel.OptionalReferenceAccessor.targetType"]},{"name":"val wrappedNode: INode","description":"org.modelix.metamodel.TypedNodeImpl.wrappedNode","location":"model-api-gen-runtime/org.modelix.metamodel/-typed-node-impl/wrapped-node.html","searchKeys":["wrappedNode","val wrappedNode: INode","org.modelix.metamodel.TypedNodeImpl.wrappedNode"]},{"name":"class ModelImporter(root: INode, continueOnError: Boolean)","description":"org.modelix.model.sync.bulk.ModelImporter","location":"bulk-model-sync-lib/org.modelix.model.sync.bulk/-model-importer/index.html","searchKeys":["ModelImporter","class ModelImporter(root: INode, continueOnError: Boolean)","org.modelix.model.sync.bulk.ModelImporter"]},{"name":"class ProgressReporter(total: ULong, logger: KLogger, print: (line: String) -> Unit = ::println, isTty: () -> Boolean = ::isTty)","description":"org.modelix.model.sync.bulk.ProgressReporter","location":"bulk-model-sync-lib/org.modelix.model.sync.bulk/-progress-reporter/index.html","searchKeys":["ProgressReporter","class ProgressReporter(total: ULong, logger: KLogger, print: (line: String) -> Unit = ::println, isTty: () -> Boolean = ::isTty)","org.modelix.model.sync.bulk.ProgressReporter"]},{"name":"constructor(root: INode)","description":"org.modelix.model.sync.bulk.ModelImporter.ModelImporter","location":"bulk-model-sync-lib/org.modelix.model.sync.bulk/-model-importer/-model-importer.html","searchKeys":["ModelImporter","constructor(root: INode)","org.modelix.model.sync.bulk.ModelImporter.ModelImporter"]},{"name":"constructor(root: INode, continueOnError: Boolean)","description":"org.modelix.model.sync.bulk.ModelImporter.ModelImporter","location":"bulk-model-sync-lib/org.modelix.model.sync.bulk/-model-importer/-model-importer.html","searchKeys":["ModelImporter","constructor(root: INode, continueOnError: Boolean)","org.modelix.model.sync.bulk.ModelImporter.ModelImporter"]},{"name":"constructor(total: ULong, logger: KLogger, print: (line: String) -> Unit = ::println, isTty: () -> Boolean = ::isTty)","description":"org.modelix.model.sync.bulk.ProgressReporter.ProgressReporter","location":"bulk-model-sync-lib/org.modelix.model.sync.bulk/-progress-reporter/-progress-reporter.html","searchKeys":["ProgressReporter","constructor(total: ULong, logger: KLogger, print: (line: String) -> Unit = ::println, isTty: () -> Boolean = ::isTty)","org.modelix.model.sync.bulk.ProgressReporter.ProgressReporter"]},{"name":"expect class ModelExporter(root: INode)","description":"org.modelix.model.sync.bulk.ModelExporter","location":"bulk-model-sync-lib/org.modelix.model.sync.bulk/-model-exporter/index.html","searchKeys":["ModelExporter","expect class ModelExporter(root: INode)","org.modelix.model.sync.bulk.ModelExporter"]},{"name":"expect constructor(root: INode)","description":"org.modelix.model.sync.bulk.ModelExporter.ModelExporter","location":"bulk-model-sync-lib/org.modelix.model.sync.bulk/-model-exporter/-model-exporter.html","searchKeys":["ModelExporter","expect constructor(root: INode)","org.modelix.model.sync.bulk.ModelExporter.ModelExporter"]},{"name":"expect fun isTty(): Boolean","description":"org.modelix.model.sync.bulk.isTty","location":"bulk-model-sync-lib/org.modelix.model.sync.bulk/is-tty.html","searchKeys":["isTty","expect fun isTty(): Boolean","org.modelix.model.sync.bulk.isTty"]},{"name":"fun INode.asExported(): NodeData","description":"org.modelix.model.sync.bulk.asExported","location":"bulk-model-sync-lib/org.modelix.model.sync.bulk/as-exported.html","searchKeys":["asExported","fun INode.asExported(): NodeData","org.modelix.model.sync.bulk.asExported"]},{"name":"fun ModelImporter.import(jsonFile: File)","description":"org.modelix.model.sync.bulk.import","location":"bulk-model-sync-lib/org.modelix.model.sync.bulk/import.html","searchKeys":["import","fun ModelImporter.import(jsonFile: File)","org.modelix.model.sync.bulk.import"]},{"name":"fun ModelImporter.importFilesAsRootChildren(files: Collection<File>)","description":"org.modelix.model.sync.bulk.importFilesAsRootChildren","location":"bulk-model-sync-lib/org.modelix.model.sync.bulk/import-files-as-root-children.html","searchKeys":["importFilesAsRootChildren","fun ModelImporter.importFilesAsRootChildren(files: Collection<File>)","org.modelix.model.sync.bulk.importFilesAsRootChildren"]},{"name":"fun ModelImporter.importFilesAsRootChildren(vararg files: File)","description":"org.modelix.model.sync.bulk.importFilesAsRootChildren","location":"bulk-model-sync-lib/org.modelix.model.sync.bulk/import-files-as-root-children.html","searchKeys":["importFilesAsRootChildren","fun ModelImporter.importFilesAsRootChildren(vararg files: File)","org.modelix.model.sync.bulk.importFilesAsRootChildren"]},{"name":"fun export(): NodeData","description":"org.modelix.model.sync.bulk.ModelExporter.export","location":"bulk-model-sync-lib/org.modelix.model.sync.bulk/-model-exporter/export.html","searchKeys":["export","fun export(): NodeData","org.modelix.model.sync.bulk.ModelExporter.export"]},{"name":"fun export(outputFile: File)","description":"org.modelix.model.sync.bulk.ModelExporter.export","location":"bulk-model-sync-lib/org.modelix.model.sync.bulk/-model-exporter/export.html","searchKeys":["export","fun export(outputFile: File)","org.modelix.model.sync.bulk.ModelExporter.export"]},{"name":"fun import(data: ModelData)","description":"org.modelix.model.sync.bulk.ModelImporter.import","location":"bulk-model-sync-lib/org.modelix.model.sync.bulk/-model-importer/import.html","searchKeys":["import","fun import(data: ModelData)","org.modelix.model.sync.bulk.ModelImporter.import"]},{"name":"fun isModuleIncluded(moduleName: String, includedModules: Collection<String>, includedPrefixes: Collection<String>): Boolean","description":"org.modelix.model.sync.bulk.isModuleIncluded","location":"bulk-model-sync-lib/org.modelix.model.sync.bulk/is-module-included.html","searchKeys":["isModuleIncluded","fun isModuleIncluded(moduleName: String, includedModules: Collection<String>, includedPrefixes: Collection<String>): Boolean","org.modelix.model.sync.bulk.isModuleIncluded"]},{"name":"fun mergeModelData(models: Collection<ModelData>): ModelData","description":"org.modelix.model.sync.bulk.mergeModelData","location":"bulk-model-sync-lib/org.modelix.model.sync.bulk/merge-model-data.html","searchKeys":["mergeModelData","fun mergeModelData(models: Collection<ModelData>): ModelData","org.modelix.model.sync.bulk.mergeModelData"]},{"name":"fun mergeModelData(vararg models: ModelData): ModelData","description":"org.modelix.model.sync.bulk.mergeModelData","location":"bulk-model-sync-lib/org.modelix.model.sync.bulk/merge-model-data.html","searchKeys":["mergeModelData","fun mergeModelData(vararg models: ModelData): ModelData","org.modelix.model.sync.bulk.mergeModelData"]},{"name":"fun step(current: ULong)","description":"org.modelix.model.sync.bulk.ProgressReporter.step","location":"bulk-model-sync-lib/org.modelix.model.sync.bulk/-progress-reporter/step.html","searchKeys":["step","fun step(current: ULong)","org.modelix.model.sync.bulk.ProgressReporter.step"]},{"name":"abstract class QueryOwnerBuilder : FilterListBuilder","description":"org.modelix.model.server.api.QueryOwnerBuilder","location":"model-server-api/org.modelix.model.server.api/-query-owner-builder/index.html","searchKeys":["QueryOwnerBuilder","abstract class QueryOwnerBuilder : FilterListBuilder","org.modelix.model.server.api.QueryOwnerBuilder"]},{"name":"abstract fun build(): RootQuery","description":"org.modelix.model.server.api.RootQueryBuilder.build","location":"model-server-api/org.modelix.model.server.api/-root-query-builder/build.html","searchKeys":["build","abstract fun build(): RootQuery","org.modelix.model.server.api.RootQueryBuilder.build"]},{"name":"abstract fun build(): Subquery","description":"org.modelix.model.server.api.SubqueryBuilder.build","location":"model-server-api/org.modelix.model.server.api/-subquery-builder/build.html","searchKeys":["build","abstract fun build(): Subquery","org.modelix.model.server.api.SubqueryBuilder.build"]},{"name":"abstract fun replaceIds(replacer: (String) -> String?): OperationData","description":"org.modelix.model.server.api.OperationData.replaceIds","location":"model-server-api/org.modelix.model.server.api/-operation-data/replace-ids.html","searchKeys":["replaceIds","abstract fun replaceIds(replacer: (String) -> String?): OperationData","org.modelix.model.server.api.OperationData.replaceIds"]},{"name":"abstract override val queries: List<Subquery>","description":"org.modelix.model.server.api.RootOrSubquery.queries","location":"model-server-api/org.modelix.model.server.api/-root-or-subquery/queries.html","searchKeys":["queries","abstract override val queries: List<Subquery>","org.modelix.model.server.api.RootOrSubquery.queries"]},{"name":"abstract override val queries: List<Subquery>","description":"org.modelix.model.server.api.RootQuery.queries","location":"model-server-api/org.modelix.model.server.api/-root-query/queries.html","searchKeys":["queries","abstract override val queries: List<Subquery>","org.modelix.model.server.api.RootQuery.queries"]},{"name":"abstract override val queries: List<Subquery>","description":"org.modelix.model.server.api.Subquery.queries","location":"model-server-api/org.modelix.model.server.api/-subquery/queries.html","searchKeys":["queries","abstract override val queries: List<Subquery>","org.modelix.model.server.api.Subquery.queries"]},{"name":"abstract val filters: List<Filter>","description":"org.modelix.model.server.api.LogicalOperatorFilter.filters","location":"model-server-api/org.modelix.model.server.api/-logical-operator-filter/filters.html","searchKeys":["filters","abstract val filters: List<Filter>","org.modelix.model.server.api.LogicalOperatorFilter.filters"]},{"name":"abstract val filters: List<Filter>","description":"org.modelix.model.server.api.Subquery.filters","location":"model-server-api/org.modelix.model.server.api/-subquery/filters.html","searchKeys":["filters","abstract val filters: List<Filter>","org.modelix.model.server.api.Subquery.filters"]},{"name":"abstract val queries: List<RootOrSubquery>","description":"org.modelix.model.server.api.QueryOwner.queries","location":"model-server-api/org.modelix.model.server.api/-query-owner/queries.html","searchKeys":["queries","abstract val queries: List<RootOrSubquery>","org.modelix.model.server.api.QueryOwner.queries"]},{"name":"class AllChildrenBuilder : SubqueryBuilder","description":"org.modelix.model.server.api.AllChildrenBuilder","location":"model-server-api/org.modelix.model.server.api/-all-children-builder/index.html","searchKeys":["AllChildrenBuilder","class AllChildrenBuilder : SubqueryBuilder","org.modelix.model.server.api.AllChildrenBuilder"]},{"name":"class AncestorsBuilder : SubqueryBuilder","description":"org.modelix.model.server.api.AncestorsBuilder","location":"model-server-api/org.modelix.model.server.api/-ancestors-builder/index.html","searchKeys":["AncestorsBuilder","class AncestorsBuilder : SubqueryBuilder","org.modelix.model.server.api.AncestorsBuilder"]},{"name":"class ByIdBuilder(val id: String) : RootQueryBuilder","description":"org.modelix.model.server.api.ByIdBuilder","location":"model-server-api/org.modelix.model.server.api/-by-id-builder/index.html","searchKeys":["ByIdBuilder","class ByIdBuilder(val id: String) : RootQueryBuilder","org.modelix.model.server.api.ByIdBuilder"]},{"name":"class ChildrenBuilder(val role: String?) : SubqueryBuilder","description":"org.modelix.model.server.api.ChildrenBuilder","location":"model-server-api/org.modelix.model.server.api/-children-builder/index.html","searchKeys":["ChildrenBuilder","class ChildrenBuilder(val role: String?) : SubqueryBuilder","org.modelix.model.server.api.ChildrenBuilder"]},{"name":"class DescendantsBuilder : SubqueryBuilder","description":"org.modelix.model.server.api.DescendantsBuilder","location":"model-server-api/org.modelix.model.server.api/-descendants-builder/index.html","searchKeys":["DescendantsBuilder","class DescendantsBuilder : SubqueryBuilder","org.modelix.model.server.api.DescendantsBuilder"]},{"name":"class FilterByProperty(val role: String, val operator: StringOperator) : Filter","description":"org.modelix.model.server.api.FilterByProperty","location":"model-server-api/org.modelix.model.server.api/-filter-by-property/index.html","searchKeys":["FilterByProperty","class FilterByProperty(val role: String, val operator: StringOperator) : Filter","org.modelix.model.server.api.FilterByProperty"]},{"name":"class ModelQueryBuilder","description":"org.modelix.model.server.api.ModelQueryBuilder","location":"model-server-api/org.modelix.model.server.api/-model-query-builder/index.html","searchKeys":["ModelQueryBuilder","class ModelQueryBuilder","org.modelix.model.server.api.ModelQueryBuilder"]},{"name":"class ParentBuilder : SubqueryBuilder","description":"org.modelix.model.server.api.ParentBuilder","location":"model-server-api/org.modelix.model.server.api/-parent-builder/index.html","searchKeys":["ParentBuilder","class ParentBuilder : SubqueryBuilder","org.modelix.model.server.api.ParentBuilder"]},{"name":"class ReferenceBuilder(val role: String) : SubqueryBuilder","description":"org.modelix.model.server.api.ReferenceBuilder","location":"model-server-api/org.modelix.model.server.api/-reference-builder/index.html","searchKeys":["ReferenceBuilder","class ReferenceBuilder(val role: String) : SubqueryBuilder","org.modelix.model.server.api.ReferenceBuilder"]},{"name":"class ReferencesAndChildrenBuilder(recursive: Boolean) : SubqueryBuilder","description":"org.modelix.model.server.api.ReferencesAndChildrenBuilder","location":"model-server-api/org.modelix.model.server.api/-references-and-children-builder/index.html","searchKeys":["ReferencesAndChildrenBuilder","class ReferencesAndChildrenBuilder(recursive: Boolean) : SubqueryBuilder","org.modelix.model.server.api.ReferencesAndChildrenBuilder"]},{"name":"class ReferencesBuilder : SubqueryBuilder","description":"org.modelix.model.server.api.ReferencesBuilder","location":"model-server-api/org.modelix.model.server.api/-references-builder/index.html","searchKeys":["ReferencesBuilder","class ReferencesBuilder : SubqueryBuilder","org.modelix.model.server.api.ReferencesBuilder"]},{"name":"class RootNodeBuilder : RootQueryBuilder","description":"org.modelix.model.server.api.RootNodeBuilder","location":"model-server-api/org.modelix.model.server.api/-root-node-builder/index.html","searchKeys":["RootNodeBuilder","class RootNodeBuilder : RootQueryBuilder","org.modelix.model.server.api.RootNodeBuilder"]},{"name":"class VersionDelta(val versionHash: String, val baseVersionHash: String? = null, val objects: Set<String> = emptySet(), val objectsMap: Map<String, String> = emptyMap())","description":"org.modelix.model.server.api.v2.VersionDelta","location":"model-server-api/org.modelix.model.server.api.v2/-version-delta/index.html","searchKeys":["VersionDelta","class VersionDelta(val versionHash: String, val baseVersionHash: String? = null, val objects: Set<String> = emptySet(), val objectsMap: Map<String, String> = emptyMap())","org.modelix.model.server.api.v2.VersionDelta"]},{"name":"constructor()","description":"org.modelix.model.server.api.AllChildrenBuilder.AllChildrenBuilder","location":"model-server-api/org.modelix.model.server.api/-all-children-builder/-all-children-builder.html","searchKeys":["AllChildrenBuilder","constructor()","org.modelix.model.server.api.AllChildrenBuilder.AllChildrenBuilder"]},{"name":"constructor()","description":"org.modelix.model.server.api.AncestorsBuilder.AncestorsBuilder","location":"model-server-api/org.modelix.model.server.api/-ancestors-builder/-ancestors-builder.html","searchKeys":["AncestorsBuilder","constructor()","org.modelix.model.server.api.AncestorsBuilder.AncestorsBuilder"]},{"name":"constructor()","description":"org.modelix.model.server.api.DescendantsBuilder.DescendantsBuilder","location":"model-server-api/org.modelix.model.server.api/-descendants-builder/-descendants-builder.html","searchKeys":["DescendantsBuilder","constructor()","org.modelix.model.server.api.DescendantsBuilder.DescendantsBuilder"]},{"name":"constructor()","description":"org.modelix.model.server.api.FilterListBuilder.FilterListBuilder","location":"model-server-api/org.modelix.model.server.api/-filter-list-builder/-filter-list-builder.html","searchKeys":["FilterListBuilder","constructor()","org.modelix.model.server.api.FilterListBuilder.FilterListBuilder"]},{"name":"constructor()","description":"org.modelix.model.server.api.ModelQueryBuilder.ModelQueryBuilder","location":"model-server-api/org.modelix.model.server.api/-model-query-builder/-model-query-builder.html","searchKeys":["ModelQueryBuilder","constructor()","org.modelix.model.server.api.ModelQueryBuilder.ModelQueryBuilder"]},{"name":"constructor()","description":"org.modelix.model.server.api.ParentBuilder.ParentBuilder","location":"model-server-api/org.modelix.model.server.api/-parent-builder/-parent-builder.html","searchKeys":["ParentBuilder","constructor()","org.modelix.model.server.api.ParentBuilder.ParentBuilder"]},{"name":"constructor()","description":"org.modelix.model.server.api.QueryOwnerBuilder.QueryOwnerBuilder","location":"model-server-api/org.modelix.model.server.api/-query-owner-builder/-query-owner-builder.html","searchKeys":["QueryOwnerBuilder","constructor()","org.modelix.model.server.api.QueryOwnerBuilder.QueryOwnerBuilder"]},{"name":"constructor()","description":"org.modelix.model.server.api.ReferencesBuilder.ReferencesBuilder","location":"model-server-api/org.modelix.model.server.api/-references-builder/-references-builder.html","searchKeys":["ReferencesBuilder","constructor()","org.modelix.model.server.api.ReferencesBuilder.ReferencesBuilder"]},{"name":"constructor()","description":"org.modelix.model.server.api.RootNodeBuilder.RootNodeBuilder","location":"model-server-api/org.modelix.model.server.api/-root-node-builder/-root-node-builder.html","searchKeys":["RootNodeBuilder","constructor()","org.modelix.model.server.api.RootNodeBuilder.RootNodeBuilder"]},{"name":"constructor(changeSetId: ChangeSetId? = null, operations: List<OperationData>? = null, query: ModelQuery? = null, baseVersionHash: String? = null, baseChangeSet: ChangeSetId? = null)","description":"org.modelix.model.server.api.MessageFromClient.MessageFromClient","location":"model-server-api/org.modelix.model.server.api/-message-from-client/-message-from-client.html","searchKeys":["MessageFromClient","constructor(changeSetId: ChangeSetId? = null, operations: List<OperationData>? = null, query: ModelQuery? = null, baseVersionHash: String? = null, baseChangeSet: ChangeSetId? = null)","org.modelix.model.server.api.MessageFromClient.MessageFromClient"]},{"name":"constructor(conceptUID: String?)","description":"org.modelix.model.server.api.FilterByConceptId.FilterByConceptId","location":"model-server-api/org.modelix.model.server.api/-filter-by-concept-id/-filter-by-concept-id.html","searchKeys":["FilterByConceptId","constructor(conceptUID: String?)","org.modelix.model.server.api.FilterByConceptId.FilterByConceptId"]},{"name":"constructor(exception: Throwable)","description":"org.modelix.model.server.api.ExceptionData.ExceptionData","location":"model-server-api/org.modelix.model.server.api/-exception-data/-exception-data.html","searchKeys":["ExceptionData","constructor(exception: Throwable)","org.modelix.model.server.api.ExceptionData.ExceptionData"]},{"name":"constructor(filter: Filter)","description":"org.modelix.model.server.api.NotFilter.NotFilter","location":"model-server-api/org.modelix.model.server.api/-not-filter/-not-filter.html","searchKeys":["NotFilter","constructor(filter: Filter)","org.modelix.model.server.api.NotFilter.NotFilter"]},{"name":"constructor(filterBuilder: (StringOperator) -> Filter)","description":"org.modelix.model.server.api.FilterListBuilder.StringFilterBuilder.StringFilterBuilder","location":"model-server-api/org.modelix.model.server.api/-filter-list-builder/-string-filter-builder/-string-filter-builder.html","searchKeys":["StringFilterBuilder","constructor(filterBuilder: (StringOperator) -> Filter)","org.modelix.model.server.api.FilterListBuilder.StringFilterBuilder.StringFilterBuilder"]},{"name":"constructor(filters: List<Filter>)","description":"org.modelix.model.server.api.AndFilter.AndFilter","location":"model-server-api/org.modelix.model.server.api/-and-filter/-and-filter.html","searchKeys":["AndFilter","constructor(filters: List<Filter>)","org.modelix.model.server.api.AndFilter.AndFilter"]},{"name":"constructor(filters: List<Filter>)","description":"org.modelix.model.server.api.OrFilter.OrFilter","location":"model-server-api/org.modelix.model.server.api/-or-filter/-or-filter.html","searchKeys":["OrFilter","constructor(filters: List<Filter>)","org.modelix.model.server.api.OrFilter.OrFilter"]},{"name":"constructor(id: String)","description":"org.modelix.model.server.api.ByIdBuilder.ByIdBuilder","location":"model-server-api/org.modelix.model.server.api/-by-id-builder/-by-id-builder.html","searchKeys":["ByIdBuilder","constructor(id: String)","org.modelix.model.server.api.ByIdBuilder.ByIdBuilder"]},{"name":"constructor(message: String, stacktrace: List<String>, cause: ExceptionData? = null)","description":"org.modelix.model.server.api.ExceptionData.ExceptionData","location":"model-server-api/org.modelix.model.server.api/-exception-data/-exception-data.html","searchKeys":["ExceptionData","constructor(message: String, stacktrace: List<String>, cause: ExceptionData? = null)","org.modelix.model.server.api.ExceptionData.ExceptionData"]},{"name":"constructor(newParentNode: NodeId, newRole: String?, newIndex: Int = -1, childId: NodeId)","description":"org.modelix.model.server.api.MoveNodeOpData.MoveNodeOpData","location":"model-server-api/org.modelix.model.server.api/-move-node-op-data/-move-node-op-data.html","searchKeys":["MoveNodeOpData","constructor(newParentNode: NodeId, newRole: String?, newIndex: Int = -1, childId: NodeId)","org.modelix.model.server.api.MoveNodeOpData.MoveNodeOpData"]},{"name":"constructor(node: NodeId, role: String, target: NodeId?)","description":"org.modelix.model.server.api.SetReferenceOpData.SetReferenceOpData","location":"model-server-api/org.modelix.model.server.api/-set-reference-op-data/-set-reference-op-data.html","searchKeys":["SetReferenceOpData","constructor(node: NodeId, role: String, target: NodeId?)","org.modelix.model.server.api.SetReferenceOpData.SetReferenceOpData"]},{"name":"constructor(node: NodeId, role: String, value: String?)","description":"org.modelix.model.server.api.SetPropertyOpData.SetPropertyOpData","location":"model-server-api/org.modelix.model.server.api/-set-property-op-data/-set-property-op-data.html","searchKeys":["SetPropertyOpData","constructor(node: NodeId, role: String, value: String?)","org.modelix.model.server.api.SetPropertyOpData.SetPropertyOpData"]},{"name":"constructor(nodeId: NodeId)","description":"org.modelix.model.server.api.DeleteNodeOpData.DeleteNodeOpData","location":"model-server-api/org.modelix.model.server.api/-delete-node-op-data/-delete-node-op-data.html","searchKeys":["DeleteNodeOpData","constructor(nodeId: NodeId)","org.modelix.model.server.api.DeleteNodeOpData.DeleteNodeOpData"]},{"name":"constructor(nodeId: NodeId, concept: String? = null, parent: NodeId? = null, role: String? = null, properties: Map<String, String> = emptyMap(), references: Map<String, String> = emptyMap(), children: Map<String?, List<NodeId>> = emptyMap())","description":"org.modelix.model.server.api.NodeData.NodeData","location":"model-server-api/org.modelix.model.server.api/-node-data/-node-data.html","searchKeys":["NodeData","constructor(nodeId: NodeId, concept: String? = null, parent: NodeId? = null, role: String? = null, properties: Map<String, String> = emptyMap(), references: Map<String, String> = emptyMap(), children: Map<String?, List<NodeId>> = emptyMap())","org.modelix.model.server.api.NodeData.NodeData"]},{"name":"constructor(nodeId: NodeId, queries: List<Subquery> = emptyList())","description":"org.modelix.model.server.api.QueryById.QueryById","location":"model-server-api/org.modelix.model.server.api/-query-by-id/-query-by-id.html","searchKeys":["QueryById","constructor(nodeId: NodeId, queries: List<Subquery> = emptyList())","org.modelix.model.server.api.QueryById.QueryById"]},{"name":"constructor(nodeId: NodeId? = null, temporaryNodeId: NodeId? = null, concept: String? = null, references: Map<String, String?>? = null, properties: Map<String, String?>? = null, children: Map<String?, List<NodeId>>? = null)","description":"org.modelix.model.server.api.NodeUpdateData.NodeUpdateData","location":"model-server-api/org.modelix.model.server.api/-node-update-data/-node-update-data.html","searchKeys":["NodeUpdateData","constructor(nodeId: NodeId? = null, temporaryNodeId: NodeId? = null, concept: String? = null, references: Map<String, String?>? = null, properties: Map<String, String?>? = null, children: Map<String?, List<NodeId>>? = null)","org.modelix.model.server.api.NodeUpdateData.NodeUpdateData"]},{"name":"constructor(operator: StringOperator)","description":"org.modelix.model.server.api.FilterByConceptLongName.FilterByConceptLongName","location":"model-server-api/org.modelix.model.server.api/-filter-by-concept-long-name/-filter-by-concept-long-name.html","searchKeys":["FilterByConceptLongName","constructor(operator: StringOperator)","org.modelix.model.server.api.FilterByConceptLongName.FilterByConceptLongName"]},{"name":"constructor(parentNode: NodeId, role: String?, index: Int = -1, concept: String?, childId: NodeId)","description":"org.modelix.model.server.api.AddNewChildNodeOpData.AddNewChildNodeOpData","location":"model-server-api/org.modelix.model.server.api/-add-new-child-node-op-data/-add-new-child-node-op-data.html","searchKeys":["AddNewChildNodeOpData","constructor(parentNode: NodeId, role: String?, index: Int = -1, concept: String?, childId: NodeId)","org.modelix.model.server.api.AddNewChildNodeOpData.AddNewChildNodeOpData"]},{"name":"constructor(pattern: String)","description":"org.modelix.model.server.api.MatchesRegexOperator.MatchesRegexOperator","location":"model-server-api/org.modelix.model.server.api/-matches-regex-operator/-matches-regex-operator.html","searchKeys":["MatchesRegexOperator","constructor(pattern: String)","org.modelix.model.server.api.MatchesRegexOperator.MatchesRegexOperator"]},{"name":"constructor(prefix: String)","description":"org.modelix.model.server.api.StartsWithOperator.StartsWithOperator","location":"model-server-api/org.modelix.model.server.api/-starts-with-operator/-starts-with-operator.html","searchKeys":["StartsWithOperator","constructor(prefix: String)","org.modelix.model.server.api.StartsWithOperator.StartsWithOperator"]},{"name":"constructor(queries: List<RootQuery>)","description":"org.modelix.model.server.api.ModelQuery.ModelQuery","location":"model-server-api/org.modelix.model.server.api/-model-query/-model-query.html","searchKeys":["ModelQuery","constructor(queries: List<RootQuery>)","org.modelix.model.server.api.ModelQuery.ModelQuery"]},{"name":"constructor(queries: List<Subquery> = emptyList())","description":"org.modelix.model.server.api.QueryRootNode.QueryRootNode","location":"model-server-api/org.modelix.model.server.api/-query-root-node/-query-root-node.html","searchKeys":["QueryRootNode","constructor(queries: List<Subquery> = emptyList())","org.modelix.model.server.api.QueryRootNode.QueryRootNode"]},{"name":"constructor(queries: List<Subquery> = emptyList(), filters: List<Filter> = emptyList())","description":"org.modelix.model.server.api.QueryAllChildren.QueryAllChildren","location":"model-server-api/org.modelix.model.server.api/-query-all-children/-query-all-children.html","searchKeys":["QueryAllChildren","constructor(queries: List<Subquery> = emptyList(), filters: List<Filter> = emptyList())","org.modelix.model.server.api.QueryAllChildren.QueryAllChildren"]},{"name":"constructor(queries: List<Subquery> = emptyList(), filters: List<Filter> = emptyList())","description":"org.modelix.model.server.api.QueryAncestors.QueryAncestors","location":"model-server-api/org.modelix.model.server.api/-query-ancestors/-query-ancestors.html","searchKeys":["QueryAncestors","constructor(queries: List<Subquery> = emptyList(), filters: List<Filter> = emptyList())","org.modelix.model.server.api.QueryAncestors.QueryAncestors"]},{"name":"constructor(queries: List<Subquery> = emptyList(), filters: List<Filter> = emptyList())","description":"org.modelix.model.server.api.QueryDescendants.QueryDescendants","location":"model-server-api/org.modelix.model.server.api/-query-descendants/-query-descendants.html","searchKeys":["QueryDescendants","constructor(queries: List<Subquery> = emptyList(), filters: List<Filter> = emptyList())","org.modelix.model.server.api.QueryDescendants.QueryDescendants"]},{"name":"constructor(queries: List<Subquery> = emptyList(), filters: List<Filter> = emptyList())","description":"org.modelix.model.server.api.QueryParent.QueryParent","location":"model-server-api/org.modelix.model.server.api/-query-parent/-query-parent.html","searchKeys":["QueryParent","constructor(queries: List<Subquery> = emptyList(), filters: List<Filter> = emptyList())","org.modelix.model.server.api.QueryParent.QueryParent"]},{"name":"constructor(queries: List<Subquery> = emptyList(), filters: List<Filter> = emptyList())","description":"org.modelix.model.server.api.QueryReferences.QueryReferences","location":"model-server-api/org.modelix.model.server.api/-query-references/-query-references.html","searchKeys":["QueryReferences","constructor(queries: List<Subquery> = emptyList(), filters: List<Filter> = emptyList())","org.modelix.model.server.api.QueryReferences.QueryReferences"]},{"name":"constructor(recursive: Boolean = false, queries: List<Subquery> = emptyList(), filters: List<Filter> = emptyList())","description":"org.modelix.model.server.api.QueryReferencesAndChildren.QueryReferencesAndChildren","location":"model-server-api/org.modelix.model.server.api/-query-references-and-children/-query-references-and-children.html","searchKeys":["QueryReferencesAndChildren","constructor(recursive: Boolean = false, queries: List<Subquery> = emptyList(), filters: List<Filter> = emptyList())","org.modelix.model.server.api.QueryReferencesAndChildren.QueryReferencesAndChildren"]},{"name":"constructor(recursive: Boolean)","description":"org.modelix.model.server.api.ReferencesAndChildrenBuilder.ReferencesAndChildrenBuilder","location":"model-server-api/org.modelix.model.server.api/-references-and-children-builder/-references-and-children-builder.html","searchKeys":["ReferencesAndChildrenBuilder","constructor(recursive: Boolean)","org.modelix.model.server.api.ReferencesAndChildrenBuilder.ReferencesAndChildrenBuilder"]},{"name":"constructor(repositoryId: String? = null, versionHash: String? = null, rootNodeId: String? = null, usesRoleIds: Boolean = false, nodes: List<NodeData>)","description":"org.modelix.model.server.api.VersionData.VersionData","location":"model-server-api/org.modelix.model.server.api/-version-data/-version-data.html","searchKeys":["VersionData","constructor(repositoryId: String? = null, versionHash: String? = null, rootNodeId: String? = null, usesRoleIds: Boolean = false, nodes: List<NodeData>)","org.modelix.model.server.api.VersionData.VersionData"]},{"name":"constructor(role: String)","description":"org.modelix.model.server.api.ReferenceBuilder.ReferenceBuilder","location":"model-server-api/org.modelix.model.server.api/-reference-builder/-reference-builder.html","searchKeys":["ReferenceBuilder","constructor(role: String)","org.modelix.model.server.api.ReferenceBuilder.ReferenceBuilder"]},{"name":"constructor(role: String, operator: StringOperator)","description":"org.modelix.model.server.api.FilterByProperty.FilterByProperty","location":"model-server-api/org.modelix.model.server.api/-filter-by-property/-filter-by-property.html","searchKeys":["FilterByProperty","constructor(role: String, operator: StringOperator)","org.modelix.model.server.api.FilterByProperty.FilterByProperty"]},{"name":"constructor(role: String, queries: List<Subquery> = emptyList(), filters: List<Filter> = emptyList())","description":"org.modelix.model.server.api.QueryReference.QueryReference","location":"model-server-api/org.modelix.model.server.api/-query-reference/-query-reference.html","searchKeys":["QueryReference","constructor(role: String, queries: List<Subquery> = emptyList(), filters: List<Filter> = emptyList())","org.modelix.model.server.api.QueryReference.QueryReference"]},{"name":"constructor(role: String?)","description":"org.modelix.model.server.api.ChildrenBuilder.ChildrenBuilder","location":"model-server-api/org.modelix.model.server.api/-children-builder/-children-builder.html","searchKeys":["ChildrenBuilder","constructor(role: String?)","org.modelix.model.server.api.ChildrenBuilder.ChildrenBuilder"]},{"name":"constructor(role: String?, queries: List<Subquery> = emptyList(), filters: List<Filter> = emptyList())","description":"org.modelix.model.server.api.QueryChildren.QueryChildren","location":"model-server-api/org.modelix.model.server.api/-query-children/-query-children.html","searchKeys":["QueryChildren","constructor(role: String?, queries: List<Subquery> = emptyList(), filters: List<Filter> = emptyList())","org.modelix.model.server.api.QueryChildren.QueryChildren"]},{"name":"constructor(substring: String)","description":"org.modelix.model.server.api.ContainsOperator.ContainsOperator","location":"model-server-api/org.modelix.model.server.api/-contains-operator/-contains-operator.html","searchKeys":["ContainsOperator","constructor(substring: String)","org.modelix.model.server.api.ContainsOperator.ContainsOperator"]},{"name":"constructor(suffix: String)","description":"org.modelix.model.server.api.EndsWithOperator.EndsWithOperator","location":"model-server-api/org.modelix.model.server.api/-ends-with-operator/-ends-with-operator.html","searchKeys":["EndsWithOperator","constructor(suffix: String)","org.modelix.model.server.api.EndsWithOperator.EndsWithOperator"]},{"name":"constructor(value: String)","description":"org.modelix.model.server.api.EqualsOperator.EqualsOperator","location":"model-server-api/org.modelix.model.server.api/-equals-operator/-equals-operator.html","searchKeys":["EqualsOperator","constructor(value: String)","org.modelix.model.server.api.EqualsOperator.EqualsOperator"]},{"name":"constructor(version: VersionData? = null, replacedIds: Map<String, String>? = null, appliedChangeSet: ChangeSetId? = null, exception: ExceptionData? = null)","description":"org.modelix.model.server.api.MessageFromServer.MessageFromServer","location":"model-server-api/org.modelix.model.server.api/-message-from-server/-message-from-server.html","searchKeys":["MessageFromServer","constructor(version: VersionData? = null, replacedIds: Map<String, String>? = null, appliedChangeSet: ChangeSetId? = null, exception: ExceptionData? = null)","org.modelix.model.server.api.MessageFromServer.MessageFromServer"]},{"name":"constructor(versionHash: String, baseVersionHash: String? = null, objects: Set<String> = emptySet(), objectsMap: Map<String, String> = emptyMap())","description":"org.modelix.model.server.api.v2.VersionDelta.VersionDelta","location":"model-server-api/org.modelix.model.server.api.v2/-version-delta/-version-delta.html","searchKeys":["VersionDelta","constructor(versionHash: String, baseVersionHash: String? = null, objects: Set<String> = emptySet(), objectsMap: Map<String, String> = emptyMap())","org.modelix.model.server.api.v2.VersionDelta.VersionDelta"]},{"name":"data class AddNewChildNodeOpData(val parentNode: NodeId, val role: String?, val index: Int = -1, val concept: String?, val childId: NodeId) : OperationData","description":"org.modelix.model.server.api.AddNewChildNodeOpData","location":"model-server-api/org.modelix.model.server.api/-add-new-child-node-op-data/index.html","searchKeys":["AddNewChildNodeOpData","data class AddNewChildNodeOpData(val parentNode: NodeId, val role: String?, val index: Int = -1, val concept: String?, val childId: NodeId) : OperationData","org.modelix.model.server.api.AddNewChildNodeOpData"]},{"name":"data class AndFilter(val filters: List<Filter>) : LogicalOperatorFilter","description":"org.modelix.model.server.api.AndFilter","location":"model-server-api/org.modelix.model.server.api/-and-filter/index.html","searchKeys":["AndFilter","data class AndFilter(val filters: List<Filter>) : LogicalOperatorFilter","org.modelix.model.server.api.AndFilter"]},{"name":"data class ContainsOperator(val substring: String) : StringOperator","description":"org.modelix.model.server.api.ContainsOperator","location":"model-server-api/org.modelix.model.server.api/-contains-operator/index.html","searchKeys":["ContainsOperator","data class ContainsOperator(val substring: String) : StringOperator","org.modelix.model.server.api.ContainsOperator"]},{"name":"data class DeleteNodeOpData(val nodeId: NodeId) : OperationData","description":"org.modelix.model.server.api.DeleteNodeOpData","location":"model-server-api/org.modelix.model.server.api/-delete-node-op-data/index.html","searchKeys":["DeleteNodeOpData","data class DeleteNodeOpData(val nodeId: NodeId) : OperationData","org.modelix.model.server.api.DeleteNodeOpData"]},{"name":"data class EndsWithOperator(val suffix: String) : StringOperator","description":"org.modelix.model.server.api.EndsWithOperator","location":"model-server-api/org.modelix.model.server.api/-ends-with-operator/index.html","searchKeys":["EndsWithOperator","data class EndsWithOperator(val suffix: String) : StringOperator","org.modelix.model.server.api.EndsWithOperator"]},{"name":"data class EqualsOperator(val value: String) : StringOperator","description":"org.modelix.model.server.api.EqualsOperator","location":"model-server-api/org.modelix.model.server.api/-equals-operator/index.html","searchKeys":["EqualsOperator","data class EqualsOperator(val value: String) : StringOperator","org.modelix.model.server.api.EqualsOperator"]},{"name":"data class ExceptionData(val message: String, val stacktrace: List<String>, val cause: ExceptionData? = null)","description":"org.modelix.model.server.api.ExceptionData","location":"model-server-api/org.modelix.model.server.api/-exception-data/index.html","searchKeys":["ExceptionData","data class ExceptionData(val message: String, val stacktrace: List<String>, val cause: ExceptionData? = null)","org.modelix.model.server.api.ExceptionData"]},{"name":"data class FilterByConceptId(val conceptUID: String?) : Filter","description":"org.modelix.model.server.api.FilterByConceptId","location":"model-server-api/org.modelix.model.server.api/-filter-by-concept-id/index.html","searchKeys":["FilterByConceptId","data class FilterByConceptId(val conceptUID: String?) : Filter","org.modelix.model.server.api.FilterByConceptId"]},{"name":"data class FilterByConceptLongName(val operator: StringOperator) : Filter","description":"org.modelix.model.server.api.FilterByConceptLongName","location":"model-server-api/org.modelix.model.server.api/-filter-by-concept-long-name/index.html","searchKeys":["FilterByConceptLongName","data class FilterByConceptLongName(val operator: StringOperator) : Filter","org.modelix.model.server.api.FilterByConceptLongName"]},{"name":"data class MatchesRegexOperator(val pattern: String) : StringOperator","description":"org.modelix.model.server.api.MatchesRegexOperator","location":"model-server-api/org.modelix.model.server.api/-matches-regex-operator/index.html","searchKeys":["MatchesRegexOperator","data class MatchesRegexOperator(val pattern: String) : StringOperator","org.modelix.model.server.api.MatchesRegexOperator"]},{"name":"data class MessageFromClient(val changeSetId: ChangeSetId? = null, val operations: List<OperationData>? = null, val query: ModelQuery? = null, val baseVersionHash: String? = null, val baseChangeSet: ChangeSetId? = null)","description":"org.modelix.model.server.api.MessageFromClient","location":"model-server-api/org.modelix.model.server.api/-message-from-client/index.html","searchKeys":["MessageFromClient","data class MessageFromClient(val changeSetId: ChangeSetId? = null, val operations: List<OperationData>? = null, val query: ModelQuery? = null, val baseVersionHash: String? = null, val baseChangeSet: ChangeSetId? = null)","org.modelix.model.server.api.MessageFromClient"]},{"name":"data class MessageFromServer(val version: VersionData? = null, val replacedIds: Map<String, String>? = null, val appliedChangeSet: ChangeSetId? = null, val exception: ExceptionData? = null)","description":"org.modelix.model.server.api.MessageFromServer","location":"model-server-api/org.modelix.model.server.api/-message-from-server/index.html","searchKeys":["MessageFromServer","data class MessageFromServer(val version: VersionData? = null, val replacedIds: Map<String, String>? = null, val appliedChangeSet: ChangeSetId? = null, val exception: ExceptionData? = null)","org.modelix.model.server.api.MessageFromServer"]},{"name":"data class ModelQuery(val queries: List<RootQuery>) : QueryOwner","description":"org.modelix.model.server.api.ModelQuery","location":"model-server-api/org.modelix.model.server.api/-model-query/index.html","searchKeys":["ModelQuery","data class ModelQuery(val queries: List<RootQuery>) : QueryOwner","org.modelix.model.server.api.ModelQuery"]},{"name":"data class MoveNodeOpData(val newParentNode: NodeId, val newRole: String?, val newIndex: Int = -1, val childId: NodeId) : OperationData","description":"org.modelix.model.server.api.MoveNodeOpData","location":"model-server-api/org.modelix.model.server.api/-move-node-op-data/index.html","searchKeys":["MoveNodeOpData","data class MoveNodeOpData(val newParentNode: NodeId, val newRole: String?, val newIndex: Int = -1, val childId: NodeId) : OperationData","org.modelix.model.server.api.MoveNodeOpData"]},{"name":"data class NodeData(val nodeId: NodeId, val concept: String? = null, val parent: NodeId? = null, val role: String? = null, val properties: Map<String, String> = emptyMap(), val references: Map<String, String> = emptyMap(), val children: Map<String?, List<NodeId>> = emptyMap())","description":"org.modelix.model.server.api.NodeData","location":"model-server-api/org.modelix.model.server.api/-node-data/index.html","searchKeys":["NodeData","data class NodeData(val nodeId: NodeId, val concept: String? = null, val parent: NodeId? = null, val role: String? = null, val properties: Map<String, String> = emptyMap(), val references: Map<String, String> = emptyMap(), val children: Map<String?, List<NodeId>> = emptyMap())","org.modelix.model.server.api.NodeData"]},{"name":"data class NodeUpdateData(val nodeId: NodeId? = null, val temporaryNodeId: NodeId? = null, val concept: String? = null, val references: Map<String, String?>? = null, val properties: Map<String, String?>? = null, val children: Map<String?, List<NodeId>>? = null)","description":"org.modelix.model.server.api.NodeUpdateData","location":"model-server-api/org.modelix.model.server.api/-node-update-data/index.html","searchKeys":["NodeUpdateData","data class NodeUpdateData(val nodeId: NodeId? = null, val temporaryNodeId: NodeId? = null, val concept: String? = null, val references: Map<String, String?>? = null, val properties: Map<String, String?>? = null, val children: Map<String?, List<NodeId>>? = null)","org.modelix.model.server.api.NodeUpdateData"]},{"name":"data class NotFilter(val filter: Filter) : Filter","description":"org.modelix.model.server.api.NotFilter","location":"model-server-api/org.modelix.model.server.api/-not-filter/index.html","searchKeys":["NotFilter","data class NotFilter(val filter: Filter) : Filter","org.modelix.model.server.api.NotFilter"]},{"name":"data class OrFilter(val filters: List<Filter>) : LogicalOperatorFilter","description":"org.modelix.model.server.api.OrFilter","location":"model-server-api/org.modelix.model.server.api/-or-filter/index.html","searchKeys":["OrFilter","data class OrFilter(val filters: List<Filter>) : LogicalOperatorFilter","org.modelix.model.server.api.OrFilter"]},{"name":"data class QueryAllChildren(val queries: List<Subquery> = emptyList(), val filters: List<Filter> = emptyList()) : Subquery","description":"org.modelix.model.server.api.QueryAllChildren","location":"model-server-api/org.modelix.model.server.api/-query-all-children/index.html","searchKeys":["QueryAllChildren","data class QueryAllChildren(val queries: List<Subquery> = emptyList(), val filters: List<Filter> = emptyList()) : Subquery","org.modelix.model.server.api.QueryAllChildren"]},{"name":"data class QueryAncestors(val queries: List<Subquery> = emptyList(), val filters: List<Filter> = emptyList()) : Subquery","description":"org.modelix.model.server.api.QueryAncestors","location":"model-server-api/org.modelix.model.server.api/-query-ancestors/index.html","searchKeys":["QueryAncestors","data class QueryAncestors(val queries: List<Subquery> = emptyList(), val filters: List<Filter> = emptyList()) : Subquery","org.modelix.model.server.api.QueryAncestors"]},{"name":"data class QueryById(val nodeId: NodeId, val queries: List<Subquery> = emptyList()) : RootQuery","description":"org.modelix.model.server.api.QueryById","location":"model-server-api/org.modelix.model.server.api/-query-by-id/index.html","searchKeys":["QueryById","data class QueryById(val nodeId: NodeId, val queries: List<Subquery> = emptyList()) : RootQuery","org.modelix.model.server.api.QueryById"]},{"name":"data class QueryChildren(val role: String?, val queries: List<Subquery> = emptyList(), val filters: List<Filter> = emptyList()) : Subquery","description":"org.modelix.model.server.api.QueryChildren","location":"model-server-api/org.modelix.model.server.api/-query-children/index.html","searchKeys":["QueryChildren","data class QueryChildren(val role: String?, val queries: List<Subquery> = emptyList(), val filters: List<Filter> = emptyList()) : Subquery","org.modelix.model.server.api.QueryChildren"]},{"name":"data class QueryDescendants(val queries: List<Subquery> = emptyList(), val filters: List<Filter> = emptyList()) : Subquery","description":"org.modelix.model.server.api.QueryDescendants","location":"model-server-api/org.modelix.model.server.api/-query-descendants/index.html","searchKeys":["QueryDescendants","data class QueryDescendants(val queries: List<Subquery> = emptyList(), val filters: List<Filter> = emptyList()) : Subquery","org.modelix.model.server.api.QueryDescendants"]},{"name":"data class QueryParent(val queries: List<Subquery> = emptyList(), val filters: List<Filter> = emptyList()) : Subquery","description":"org.modelix.model.server.api.QueryParent","location":"model-server-api/org.modelix.model.server.api/-query-parent/index.html","searchKeys":["QueryParent","data class QueryParent(val queries: List<Subquery> = emptyList(), val filters: List<Filter> = emptyList()) : Subquery","org.modelix.model.server.api.QueryParent"]},{"name":"data class QueryReference(val role: String, val queries: List<Subquery> = emptyList(), val filters: List<Filter> = emptyList()) : Subquery","description":"org.modelix.model.server.api.QueryReference","location":"model-server-api/org.modelix.model.server.api/-query-reference/index.html","searchKeys":["QueryReference","data class QueryReference(val role: String, val queries: List<Subquery> = emptyList(), val filters: List<Filter> = emptyList()) : Subquery","org.modelix.model.server.api.QueryReference"]},{"name":"data class QueryReferences(val queries: List<Subquery> = emptyList(), val filters: List<Filter> = emptyList()) : Subquery","description":"org.modelix.model.server.api.QueryReferences","location":"model-server-api/org.modelix.model.server.api/-query-references/index.html","searchKeys":["QueryReferences","data class QueryReferences(val queries: List<Subquery> = emptyList(), val filters: List<Filter> = emptyList()) : Subquery","org.modelix.model.server.api.QueryReferences"]},{"name":"data class QueryReferencesAndChildren(val recursive: Boolean = false, val queries: List<Subquery> = emptyList(), val filters: List<Filter> = emptyList()) : Subquery","description":"org.modelix.model.server.api.QueryReferencesAndChildren","location":"model-server-api/org.modelix.model.server.api/-query-references-and-children/index.html","searchKeys":["QueryReferencesAndChildren","data class QueryReferencesAndChildren(val recursive: Boolean = false, val queries: List<Subquery> = emptyList(), val filters: List<Filter> = emptyList()) : Subquery","org.modelix.model.server.api.QueryReferencesAndChildren"]},{"name":"data class QueryRootNode(val queries: List<Subquery> = emptyList()) : RootQuery","description":"org.modelix.model.server.api.QueryRootNode","location":"model-server-api/org.modelix.model.server.api/-query-root-node/index.html","searchKeys":["QueryRootNode","data class QueryRootNode(val queries: List<Subquery> = emptyList()) : RootQuery","org.modelix.model.server.api.QueryRootNode"]},{"name":"data class SetPropertyOpData(val node: NodeId, val role: String, val value: String?) : OperationData","description":"org.modelix.model.server.api.SetPropertyOpData","location":"model-server-api/org.modelix.model.server.api/-set-property-op-data/index.html","searchKeys":["SetPropertyOpData","data class SetPropertyOpData(val node: NodeId, val role: String, val value: String?) : OperationData","org.modelix.model.server.api.SetPropertyOpData"]},{"name":"data class SetReferenceOpData(val node: NodeId, val role: String, val target: NodeId?) : OperationData","description":"org.modelix.model.server.api.SetReferenceOpData","location":"model-server-api/org.modelix.model.server.api/-set-reference-op-data/index.html","searchKeys":["SetReferenceOpData","data class SetReferenceOpData(val node: NodeId, val role: String, val target: NodeId?) : OperationData","org.modelix.model.server.api.SetReferenceOpData"]},{"name":"data class StartsWithOperator(val prefix: String) : StringOperator","description":"org.modelix.model.server.api.StartsWithOperator","location":"model-server-api/org.modelix.model.server.api/-starts-with-operator/index.html","searchKeys":["StartsWithOperator","data class StartsWithOperator(val prefix: String) : StringOperator","org.modelix.model.server.api.StartsWithOperator"]},{"name":"data class VersionData(val repositoryId: String? = null, val versionHash: String? = null, val rootNodeId: String? = null, val usesRoleIds: Boolean = false, val nodes: List<NodeData>)","description":"org.modelix.model.server.api.VersionData","location":"model-server-api/org.modelix.model.server.api/-version-data/index.html","searchKeys":["VersionData","data class VersionData(val repositoryId: String? = null, val versionHash: String? = null, val rootNodeId: String? = null, val usesRoleIds: Boolean = false, val nodes: List<NodeData>)","org.modelix.model.server.api.VersionData"]},{"name":"fun NodeData.allReferencedIds(): List<NodeId>","description":"org.modelix.model.server.api.allReferencedIds","location":"model-server-api/org.modelix.model.server.api/all-referenced-ids.html","searchKeys":["allReferencedIds","fun NodeData.allReferencedIds(): List<NodeId>","org.modelix.model.server.api.allReferencedIds"]},{"name":"fun NodeData.replaceChildren(f: (Map<String?, List<String>>) -> Map<String?, List<String>>): NodeData","description":"org.modelix.model.server.api.replaceChildren","location":"model-server-api/org.modelix.model.server.api/replace-children.html","searchKeys":["replaceChildren","fun NodeData.replaceChildren(f: (Map<String?, List<String>>) -> Map<String?, List<String>>): NodeData","org.modelix.model.server.api.replaceChildren"]},{"name":"fun NodeData.replaceChildren(role: String?, f: (List<String>) -> List<String>): NodeData","description":"org.modelix.model.server.api.replaceChildren","location":"model-server-api/org.modelix.model.server.api/replace-children.html","searchKeys":["replaceChildren","fun NodeData.replaceChildren(role: String?, f: (List<String>) -> List<String>): NodeData","org.modelix.model.server.api.replaceChildren"]},{"name":"fun NodeData.replaceContainment(newParent: NodeId?, newRole: String?): NodeData","description":"org.modelix.model.server.api.replaceContainment","location":"model-server-api/org.modelix.model.server.api/replace-containment.html","searchKeys":["replaceContainment","fun NodeData.replaceContainment(newParent: NodeId?, newRole: String?): NodeData","org.modelix.model.server.api.replaceContainment"]},{"name":"fun NodeData.replaceId(newId: String): NodeData","description":"org.modelix.model.server.api.replaceId","location":"model-server-api/org.modelix.model.server.api/replace-id.html","searchKeys":["replaceId","fun NodeData.replaceId(newId: String): NodeData","org.modelix.model.server.api.replaceId"]},{"name":"fun NodeData.replaceReferences(f: (Map<String, String>) -> Map<String, String>): NodeData","description":"org.modelix.model.server.api.replaceReferences","location":"model-server-api/org.modelix.model.server.api/replace-references.html","searchKeys":["replaceReferences","fun NodeData.replaceReferences(f: (Map<String, String>) -> Map<String, String>): NodeData","org.modelix.model.server.api.replaceReferences"]},{"name":"fun VersionData.merge(older: VersionData): VersionData","description":"org.modelix.model.server.api.merge","location":"model-server-api/org.modelix.model.server.api/merge.html","searchKeys":["merge","fun VersionData.merge(older: VersionData): VersionData","org.modelix.model.server.api.merge"]},{"name":"fun allChildren(body: AllChildrenBuilder.() -> Unit)","description":"org.modelix.model.server.api.QueryOwnerBuilder.allChildren","location":"model-server-api/org.modelix.model.server.api/-query-owner-builder/all-children.html","searchKeys":["allChildren","fun allChildren(body: AllChildrenBuilder.() -> Unit)","org.modelix.model.server.api.QueryOwnerBuilder.allChildren"]},{"name":"fun allMessages(): Sequence<String>","description":"org.modelix.model.server.api.ExceptionData.allMessages","location":"model-server-api/org.modelix.model.server.api/-exception-data/all-messages.html","searchKeys":["allMessages","fun allMessages(): Sequence<String>","org.modelix.model.server.api.ExceptionData.allMessages"]},{"name":"fun ancestors(body: AncestorsBuilder.() -> Unit)","description":"org.modelix.model.server.api.QueryOwnerBuilder.ancestors","location":"model-server-api/org.modelix.model.server.api/-query-owner-builder/ancestors.html","searchKeys":["ancestors","fun ancestors(body: AncestorsBuilder.() -> Unit)","org.modelix.model.server.api.QueryOwnerBuilder.ancestors"]},{"name":"fun and(body: FilterListBuilder.() -> Unit)","description":"org.modelix.model.server.api.FilterListBuilder.and","location":"model-server-api/org.modelix.model.server.api/-filter-list-builder/and.html","searchKeys":["and","fun and(body: FilterListBuilder.() -> Unit)","org.modelix.model.server.api.FilterListBuilder.and"]},{"name":"fun build(): ModelQuery","description":"org.modelix.model.server.api.ModelQueryBuilder.build","location":"model-server-api/org.modelix.model.server.api/-model-query-builder/build.html","searchKeys":["build","fun build(): ModelQuery","org.modelix.model.server.api.ModelQueryBuilder.build"]},{"name":"fun buildModelQuery(body: ModelQueryBuilder.() -> Unit): ModelQuery","description":"org.modelix.model.server.api.buildModelQuery","location":"model-server-api/org.modelix.model.server.api/build-model-query.html","searchKeys":["buildModelQuery","fun buildModelQuery(body: ModelQueryBuilder.() -> Unit): ModelQuery","org.modelix.model.server.api.buildModelQuery"]},{"name":"fun children(role: String?, body: ChildrenBuilder.() -> Unit)","description":"org.modelix.model.server.api.QueryOwnerBuilder.children","location":"model-server-api/org.modelix.model.server.api/-query-owner-builder/children.html","searchKeys":["children","fun children(role: String?, body: ChildrenBuilder.() -> Unit)","org.modelix.model.server.api.QueryOwnerBuilder.children"]},{"name":"fun contains(substring: String)","description":"org.modelix.model.server.api.FilterListBuilder.StringFilterBuilder.contains","location":"model-server-api/org.modelix.model.server.api/-filter-list-builder/-string-filter-builder/contains.html","searchKeys":["contains","fun contains(substring: String)","org.modelix.model.server.api.FilterListBuilder.StringFilterBuilder.contains"]},{"name":"fun descendants(body: DescendantsBuilder.() -> Unit)","description":"org.modelix.model.server.api.QueryOwnerBuilder.descendants","location":"model-server-api/org.modelix.model.server.api/-query-owner-builder/descendants.html","searchKeys":["descendants","fun descendants(body: DescendantsBuilder.() -> Unit)","org.modelix.model.server.api.QueryOwnerBuilder.descendants"]},{"name":"fun endsWith(suffix: String)","description":"org.modelix.model.server.api.FilterListBuilder.StringFilterBuilder.endsWith","location":"model-server-api/org.modelix.model.server.api/-filter-list-builder/-string-filter-builder/ends-with.html","searchKeys":["endsWith","fun endsWith(suffix: String)","org.modelix.model.server.api.FilterListBuilder.StringFilterBuilder.endsWith"]},{"name":"fun equalTo(value: String)","description":"org.modelix.model.server.api.FilterListBuilder.StringFilterBuilder.equalTo","location":"model-server-api/org.modelix.model.server.api/-filter-list-builder/-string-filter-builder/equal-to.html","searchKeys":["equalTo","fun equalTo(value: String)","org.modelix.model.server.api.FilterListBuilder.StringFilterBuilder.equalTo"]},{"name":"fun fromJson(json: String): MessageFromClient","description":"org.modelix.model.server.api.MessageFromClient.Companion.fromJson","location":"model-server-api/org.modelix.model.server.api/-message-from-client/-companion/from-json.html","searchKeys":["fromJson","fun fromJson(json: String): MessageFromClient","org.modelix.model.server.api.MessageFromClient.Companion.fromJson"]},{"name":"fun fromJson(json: String): MessageFromServer","description":"org.modelix.model.server.api.MessageFromServer.Companion.fromJson","location":"model-server-api/org.modelix.model.server.api/-message-from-server/-companion/from-json.html","searchKeys":["fromJson","fun fromJson(json: String): MessageFromServer","org.modelix.model.server.api.MessageFromServer.Companion.fromJson"]},{"name":"fun fromJson(json: String): ModelQuery","description":"org.modelix.model.server.api.ModelQuery.Companion.fromJson","location":"model-server-api/org.modelix.model.server.api/-model-query/-companion/from-json.html","searchKeys":["fromJson","fun fromJson(json: String): ModelQuery","org.modelix.model.server.api.ModelQuery.Companion.fromJson"]},{"name":"fun isNotNull()","description":"org.modelix.model.server.api.FilterListBuilder.StringFilterBuilder.isNotNull","location":"model-server-api/org.modelix.model.server.api/-filter-list-builder/-string-filter-builder/is-not-null.html","searchKeys":["isNotNull","fun isNotNull()","org.modelix.model.server.api.FilterListBuilder.StringFilterBuilder.isNotNull"]},{"name":"fun isNull()","description":"org.modelix.model.server.api.FilterListBuilder.StringFilterBuilder.isNull","location":"model-server-api/org.modelix.model.server.api/-filter-list-builder/-string-filter-builder/is-null.html","searchKeys":["isNull","fun isNull()","org.modelix.model.server.api.FilterListBuilder.StringFilterBuilder.isNull"]},{"name":"fun matches(pattern: Regex)","description":"org.modelix.model.server.api.FilterListBuilder.StringFilterBuilder.matches","location":"model-server-api/org.modelix.model.server.api/-filter-list-builder/-string-filter-builder/matches.html","searchKeys":["matches","fun matches(pattern: Regex)","org.modelix.model.server.api.FilterListBuilder.StringFilterBuilder.matches"]},{"name":"fun newNode(tempId: NodeId, concept: String?): NodeUpdateData","description":"org.modelix.model.server.api.NodeUpdateData.Companion.newNode","location":"model-server-api/org.modelix.model.server.api/-node-update-data/-companion/new-node.html","searchKeys":["newNode","fun newNode(tempId: NodeId, concept: String?): NodeUpdateData","org.modelix.model.server.api.NodeUpdateData.Companion.newNode"]},{"name":"fun not(body: FilterListBuilder.() -> Unit)","description":"org.modelix.model.server.api.FilterListBuilder.not","location":"model-server-api/org.modelix.model.server.api/-filter-list-builder/not.html","searchKeys":["not","fun not(body: FilterListBuilder.() -> Unit)","org.modelix.model.server.api.FilterListBuilder.not"]},{"name":"fun nothing(nodeId: NodeId): NodeUpdateData","description":"org.modelix.model.server.api.NodeUpdateData.Companion.nothing","location":"model-server-api/org.modelix.model.server.api/-node-update-data/-companion/nothing.html","searchKeys":["nothing","fun nothing(nodeId: NodeId): NodeUpdateData","org.modelix.model.server.api.NodeUpdateData.Companion.nothing"]},{"name":"fun or(body: FilterListBuilder.() -> Unit)","description":"org.modelix.model.server.api.FilterListBuilder.or","location":"model-server-api/org.modelix.model.server.api/-filter-list-builder/or.html","searchKeys":["or","fun or(body: FilterListBuilder.() -> Unit)","org.modelix.model.server.api.FilterListBuilder.or"]},{"name":"fun parent(body: ParentBuilder.() -> Unit)","description":"org.modelix.model.server.api.QueryOwnerBuilder.parent","location":"model-server-api/org.modelix.model.server.api/-query-owner-builder/parent.html","searchKeys":["parent","fun parent(body: ParentBuilder.() -> Unit)","org.modelix.model.server.api.QueryOwnerBuilder.parent"]},{"name":"fun reference(role: String, body: ReferenceBuilder.() -> Unit)","description":"org.modelix.model.server.api.QueryOwnerBuilder.reference","location":"model-server-api/org.modelix.model.server.api/-query-owner-builder/reference.html","searchKeys":["reference","fun reference(role: String, body: ReferenceBuilder.() -> Unit)","org.modelix.model.server.api.QueryOwnerBuilder.reference"]},{"name":"fun references(body: ReferencesBuilder.() -> Unit)","description":"org.modelix.model.server.api.QueryOwnerBuilder.references","location":"model-server-api/org.modelix.model.server.api/-query-owner-builder/references.html","searchKeys":["references","fun references(body: ReferencesBuilder.() -> Unit)","org.modelix.model.server.api.QueryOwnerBuilder.references"]},{"name":"fun referencesAndChildren(body: ReferencesAndChildrenBuilder.() -> Unit)","description":"org.modelix.model.server.api.QueryOwnerBuilder.referencesAndChildren","location":"model-server-api/org.modelix.model.server.api/-query-owner-builder/references-and-children.html","searchKeys":["referencesAndChildren","fun referencesAndChildren(body: ReferencesAndChildrenBuilder.() -> Unit)","org.modelix.model.server.api.QueryOwnerBuilder.referencesAndChildren"]},{"name":"fun referencesAndChildrenRecursive(body: ReferencesAndChildrenBuilder.() -> Unit)","description":"org.modelix.model.server.api.QueryOwnerBuilder.referencesAndChildrenRecursive","location":"model-server-api/org.modelix.model.server.api/-query-owner-builder/references-and-children-recursive.html","searchKeys":["referencesAndChildrenRecursive","fun referencesAndChildrenRecursive(body: ReferencesAndChildrenBuilder.() -> Unit)","org.modelix.model.server.api.QueryOwnerBuilder.referencesAndChildrenRecursive"]},{"name":"fun replaceIds(replacer: (String) -> String?): NodeUpdateData","description":"org.modelix.model.server.api.NodeUpdateData.replaceIds","location":"model-server-api/org.modelix.model.server.api/-node-update-data/replace-ids.html","searchKeys":["replaceIds","fun replaceIds(replacer: (String) -> String?): NodeUpdateData","org.modelix.model.server.api.NodeUpdateData.replaceIds"]},{"name":"fun resolve(nodeId: NodeId, body: ByIdBuilder.() -> Unit = {})","description":"org.modelix.model.server.api.ModelQueryBuilder.resolve","location":"model-server-api/org.modelix.model.server.api/-model-query-builder/resolve.html","searchKeys":["resolve","fun resolve(nodeId: NodeId, body: ByIdBuilder.() -> Unit = {})","org.modelix.model.server.api.ModelQueryBuilder.resolve"]},{"name":"fun root(body: RootNodeBuilder.() -> Unit)","description":"org.modelix.model.server.api.ModelQueryBuilder.root","location":"model-server-api/org.modelix.model.server.api/-model-query-builder/root.html","searchKeys":["root","fun root(body: RootNodeBuilder.() -> Unit)","org.modelix.model.server.api.ModelQueryBuilder.root"]},{"name":"fun startsWith(prefix: String)","description":"org.modelix.model.server.api.FilterListBuilder.StringFilterBuilder.startsWith","location":"model-server-api/org.modelix.model.server.api/-filter-list-builder/-string-filter-builder/starts-with.html","searchKeys":["startsWith","fun startsWith(prefix: String)","org.modelix.model.server.api.FilterListBuilder.StringFilterBuilder.startsWith"]},{"name":"fun toJson(): String","description":"org.modelix.model.server.api.MessageFromClient.toJson","location":"model-server-api/org.modelix.model.server.api/-message-from-client/to-json.html","searchKeys":["toJson","fun toJson(): String","org.modelix.model.server.api.MessageFromClient.toJson"]},{"name":"fun toJson(): String","description":"org.modelix.model.server.api.MessageFromServer.toJson","location":"model-server-api/org.modelix.model.server.api/-message-from-server/to-json.html","searchKeys":["toJson","fun toJson(): String","org.modelix.model.server.api.MessageFromServer.toJson"]},{"name":"fun toJson(): String","description":"org.modelix.model.server.api.ModelQuery.toJson","location":"model-server-api/org.modelix.model.server.api/-model-query/to-json.html","searchKeys":["toJson","fun toJson(): String","org.modelix.model.server.api.ModelQuery.toJson"]},{"name":"fun whereConcept(conceptUID: String?)","description":"org.modelix.model.server.api.FilterListBuilder.whereConcept","location":"model-server-api/org.modelix.model.server.api/-filter-list-builder/where-concept.html","searchKeys":["whereConcept","fun whereConcept(conceptUID: String?)","org.modelix.model.server.api.FilterListBuilder.whereConcept"]},{"name":"fun whereConceptName(): FilterListBuilder.StringFilterBuilder","description":"org.modelix.model.server.api.FilterListBuilder.whereConceptName","location":"model-server-api/org.modelix.model.server.api/-filter-list-builder/where-concept-name.html","searchKeys":["whereConceptName","fun whereConceptName(): FilterListBuilder.StringFilterBuilder","org.modelix.model.server.api.FilterListBuilder.whereConceptName"]},{"name":"fun whereProperty(role: String): FilterListBuilder.StringFilterBuilder","description":"org.modelix.model.server.api.FilterListBuilder.whereProperty","location":"model-server-api/org.modelix.model.server.api/-filter-list-builder/where-property.html","searchKeys":["whereProperty","fun whereProperty(role: String): FilterListBuilder.StringFilterBuilder","org.modelix.model.server.api.FilterListBuilder.whereProperty"]},{"name":"fun withChildren(childrenRole: String?, newChildren: List<NodeId>?): NodeUpdateData","description":"org.modelix.model.server.api.NodeUpdateData.withChildren","location":"model-server-api/org.modelix.model.server.api/-node-update-data/with-children.html","searchKeys":["withChildren","fun withChildren(childrenRole: String?, newChildren: List<NodeId>?): NodeUpdateData","org.modelix.model.server.api.NodeUpdateData.withChildren"]},{"name":"fun withConcept(newConceptUID: String?): NodeUpdateData","description":"org.modelix.model.server.api.NodeUpdateData.withConcept","location":"model-server-api/org.modelix.model.server.api/-node-update-data/with-concept.html","searchKeys":["withConcept","fun withConcept(newConceptUID: String?): NodeUpdateData","org.modelix.model.server.api.NodeUpdateData.withConcept"]},{"name":"fun withProperty(propertyRole: String, value: String?): NodeUpdateData","description":"org.modelix.model.server.api.NodeUpdateData.withProperty","location":"model-server-api/org.modelix.model.server.api/-node-update-data/with-property.html","searchKeys":["withProperty","fun withProperty(propertyRole: String, value: String?): NodeUpdateData","org.modelix.model.server.api.NodeUpdateData.withProperty"]},{"name":"fun withReference(referenceRole: String, target: NodeId?): NodeUpdateData","description":"org.modelix.model.server.api.NodeUpdateData.withReference","location":"model-server-api/org.modelix.model.server.api/-node-update-data/with-reference.html","searchKeys":["withReference","fun withReference(referenceRole: String, target: NodeId?): NodeUpdateData","org.modelix.model.server.api.NodeUpdateData.withReference"]},{"name":"inner class StringFilterBuilder(val filterBuilder: (StringOperator) -> Filter)","description":"org.modelix.model.server.api.FilterListBuilder.StringFilterBuilder","location":"model-server-api/org.modelix.model.server.api/-filter-list-builder/-string-filter-builder/index.html","searchKeys":["StringFilterBuilder","inner class StringFilterBuilder(val filterBuilder: (StringOperator) -> Filter)","org.modelix.model.server.api.FilterListBuilder.StringFilterBuilder"]},{"name":"object Companion","description":"org.modelix.model.server.api.MessageFromClient.Companion","location":"model-server-api/org.modelix.model.server.api/-message-from-client/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.server.api.MessageFromClient.Companion"]},{"name":"object Companion","description":"org.modelix.model.server.api.MessageFromServer.Companion","location":"model-server-api/org.modelix.model.server.api/-message-from-server/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.server.api.MessageFromServer.Companion"]},{"name":"object Companion","description":"org.modelix.model.server.api.ModelQuery.Companion","location":"model-server-api/org.modelix.model.server.api/-model-query/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.server.api.ModelQuery.Companion"]},{"name":"object Companion","description":"org.modelix.model.server.api.NodeUpdateData.Companion","location":"model-server-api/org.modelix.model.server.api/-node-update-data/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.server.api.NodeUpdateData.Companion"]},{"name":"object IsNotNullOperator : StringOperator","description":"org.modelix.model.server.api.IsNotNullOperator","location":"model-server-api/org.modelix.model.server.api/-is-not-null-operator/index.html","searchKeys":["IsNotNullOperator","object IsNotNullOperator : StringOperator","org.modelix.model.server.api.IsNotNullOperator"]},{"name":"object IsNullOperator : StringOperator","description":"org.modelix.model.server.api.IsNullOperator","location":"model-server-api/org.modelix.model.server.api/-is-null-operator/index.html","searchKeys":["IsNullOperator","object IsNullOperator : StringOperator","org.modelix.model.server.api.IsNullOperator"]},{"name":"open class FilterListBuilder","description":"org.modelix.model.server.api.FilterListBuilder","location":"model-server-api/org.modelix.model.server.api/-filter-list-builder/index.html","searchKeys":["FilterListBuilder","open class FilterListBuilder","org.modelix.model.server.api.FilterListBuilder"]},{"name":"open override fun build(): QueryAllChildren","description":"org.modelix.model.server.api.AllChildrenBuilder.build","location":"model-server-api/org.modelix.model.server.api/-all-children-builder/build.html","searchKeys":["build","open override fun build(): QueryAllChildren","org.modelix.model.server.api.AllChildrenBuilder.build"]},{"name":"open override fun build(): QueryAncestors","description":"org.modelix.model.server.api.AncestorsBuilder.build","location":"model-server-api/org.modelix.model.server.api/-ancestors-builder/build.html","searchKeys":["build","open override fun build(): QueryAncestors","org.modelix.model.server.api.AncestorsBuilder.build"]},{"name":"open override fun build(): QueryById","description":"org.modelix.model.server.api.ByIdBuilder.build","location":"model-server-api/org.modelix.model.server.api/-by-id-builder/build.html","searchKeys":["build","open override fun build(): QueryById","org.modelix.model.server.api.ByIdBuilder.build"]},{"name":"open override fun build(): QueryChildren","description":"org.modelix.model.server.api.ChildrenBuilder.build","location":"model-server-api/org.modelix.model.server.api/-children-builder/build.html","searchKeys":["build","open override fun build(): QueryChildren","org.modelix.model.server.api.ChildrenBuilder.build"]},{"name":"open override fun build(): QueryDescendants","description":"org.modelix.model.server.api.DescendantsBuilder.build","location":"model-server-api/org.modelix.model.server.api/-descendants-builder/build.html","searchKeys":["build","open override fun build(): QueryDescendants","org.modelix.model.server.api.DescendantsBuilder.build"]},{"name":"open override fun build(): QueryParent","description":"org.modelix.model.server.api.ParentBuilder.build","location":"model-server-api/org.modelix.model.server.api/-parent-builder/build.html","searchKeys":["build","open override fun build(): QueryParent","org.modelix.model.server.api.ParentBuilder.build"]},{"name":"open override fun build(): QueryReference","description":"org.modelix.model.server.api.ReferenceBuilder.build","location":"model-server-api/org.modelix.model.server.api/-reference-builder/build.html","searchKeys":["build","open override fun build(): QueryReference","org.modelix.model.server.api.ReferenceBuilder.build"]},{"name":"open override fun build(): QueryReferences","description":"org.modelix.model.server.api.ReferencesBuilder.build","location":"model-server-api/org.modelix.model.server.api/-references-builder/build.html","searchKeys":["build","open override fun build(): QueryReferences","org.modelix.model.server.api.ReferencesBuilder.build"]},{"name":"open override fun build(): QueryReferencesAndChildren","description":"org.modelix.model.server.api.ReferencesAndChildrenBuilder.build","location":"model-server-api/org.modelix.model.server.api/-references-and-children-builder/build.html","searchKeys":["build","open override fun build(): QueryReferencesAndChildren","org.modelix.model.server.api.ReferencesAndChildrenBuilder.build"]},{"name":"open override fun build(): QueryRootNode","description":"org.modelix.model.server.api.RootNodeBuilder.build","location":"model-server-api/org.modelix.model.server.api/-root-node-builder/build.html","searchKeys":["build","open override fun build(): QueryRootNode","org.modelix.model.server.api.RootNodeBuilder.build"]},{"name":"open override fun replaceIds(replacer: (String) -> String?): OperationData","description":"org.modelix.model.server.api.AddNewChildNodeOpData.replaceIds","location":"model-server-api/org.modelix.model.server.api/-add-new-child-node-op-data/replace-ids.html","searchKeys":["replaceIds","open override fun replaceIds(replacer: (String) -> String?): OperationData","org.modelix.model.server.api.AddNewChildNodeOpData.replaceIds"]},{"name":"open override fun replaceIds(replacer: (String) -> String?): OperationData","description":"org.modelix.model.server.api.DeleteNodeOpData.replaceIds","location":"model-server-api/org.modelix.model.server.api/-delete-node-op-data/replace-ids.html","searchKeys":["replaceIds","open override fun replaceIds(replacer: (String) -> String?): OperationData","org.modelix.model.server.api.DeleteNodeOpData.replaceIds"]},{"name":"open override fun replaceIds(replacer: (String) -> String?): OperationData","description":"org.modelix.model.server.api.MoveNodeOpData.replaceIds","location":"model-server-api/org.modelix.model.server.api/-move-node-op-data/replace-ids.html","searchKeys":["replaceIds","open override fun replaceIds(replacer: (String) -> String?): OperationData","org.modelix.model.server.api.MoveNodeOpData.replaceIds"]},{"name":"open override fun replaceIds(replacer: (String) -> String?): OperationData","description":"org.modelix.model.server.api.SetPropertyOpData.replaceIds","location":"model-server-api/org.modelix.model.server.api/-set-property-op-data/replace-ids.html","searchKeys":["replaceIds","open override fun replaceIds(replacer: (String) -> String?): OperationData","org.modelix.model.server.api.SetPropertyOpData.replaceIds"]},{"name":"open override fun replaceIds(replacer: (String) -> String?): OperationData","description":"org.modelix.model.server.api.SetReferenceOpData.replaceIds","location":"model-server-api/org.modelix.model.server.api/-set-reference-op-data/replace-ids.html","searchKeys":["replaceIds","open override fun replaceIds(replacer: (String) -> String?): OperationData","org.modelix.model.server.api.SetReferenceOpData.replaceIds"]},{"name":"open override fun toString(): String","description":"org.modelix.model.server.api.ExceptionData.toString","location":"model-server-api/org.modelix.model.server.api/-exception-data/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.server.api.ExceptionData.toString"]},{"name":"open override val filters: List<Filter>","description":"org.modelix.model.server.api.AndFilter.filters","location":"model-server-api/org.modelix.model.server.api/-and-filter/filters.html","searchKeys":["filters","open override val filters: List<Filter>","org.modelix.model.server.api.AndFilter.filters"]},{"name":"open override val filters: List<Filter>","description":"org.modelix.model.server.api.OrFilter.filters","location":"model-server-api/org.modelix.model.server.api/-or-filter/filters.html","searchKeys":["filters","open override val filters: List<Filter>","org.modelix.model.server.api.OrFilter.filters"]},{"name":"open override val filters: List<Filter>","description":"org.modelix.model.server.api.QueryAllChildren.filters","location":"model-server-api/org.modelix.model.server.api/-query-all-children/filters.html","searchKeys":["filters","open override val filters: List<Filter>","org.modelix.model.server.api.QueryAllChildren.filters"]},{"name":"open override val filters: List<Filter>","description":"org.modelix.model.server.api.QueryAncestors.filters","location":"model-server-api/org.modelix.model.server.api/-query-ancestors/filters.html","searchKeys":["filters","open override val filters: List<Filter>","org.modelix.model.server.api.QueryAncestors.filters"]},{"name":"open override val filters: List<Filter>","description":"org.modelix.model.server.api.QueryChildren.filters","location":"model-server-api/org.modelix.model.server.api/-query-children/filters.html","searchKeys":["filters","open override val filters: List<Filter>","org.modelix.model.server.api.QueryChildren.filters"]},{"name":"open override val filters: List<Filter>","description":"org.modelix.model.server.api.QueryDescendants.filters","location":"model-server-api/org.modelix.model.server.api/-query-descendants/filters.html","searchKeys":["filters","open override val filters: List<Filter>","org.modelix.model.server.api.QueryDescendants.filters"]},{"name":"open override val filters: List<Filter>","description":"org.modelix.model.server.api.QueryParent.filters","location":"model-server-api/org.modelix.model.server.api/-query-parent/filters.html","searchKeys":["filters","open override val filters: List<Filter>","org.modelix.model.server.api.QueryParent.filters"]},{"name":"open override val filters: List<Filter>","description":"org.modelix.model.server.api.QueryReference.filters","location":"model-server-api/org.modelix.model.server.api/-query-reference/filters.html","searchKeys":["filters","open override val filters: List<Filter>","org.modelix.model.server.api.QueryReference.filters"]},{"name":"open override val filters: List<Filter>","description":"org.modelix.model.server.api.QueryReferences.filters","location":"model-server-api/org.modelix.model.server.api/-query-references/filters.html","searchKeys":["filters","open override val filters: List<Filter>","org.modelix.model.server.api.QueryReferences.filters"]},{"name":"open override val filters: List<Filter>","description":"org.modelix.model.server.api.QueryReferencesAndChildren.filters","location":"model-server-api/org.modelix.model.server.api/-query-references-and-children/filters.html","searchKeys":["filters","open override val filters: List<Filter>","org.modelix.model.server.api.QueryReferencesAndChildren.filters"]},{"name":"open override val queries: List<RootQuery>","description":"org.modelix.model.server.api.ModelQuery.queries","location":"model-server-api/org.modelix.model.server.api/-model-query/queries.html","searchKeys":["queries","open override val queries: List<RootQuery>","org.modelix.model.server.api.ModelQuery.queries"]},{"name":"open override val queries: List<Subquery>","description":"org.modelix.model.server.api.QueryAllChildren.queries","location":"model-server-api/org.modelix.model.server.api/-query-all-children/queries.html","searchKeys":["queries","open override val queries: List<Subquery>","org.modelix.model.server.api.QueryAllChildren.queries"]},{"name":"open override val queries: List<Subquery>","description":"org.modelix.model.server.api.QueryAncestors.queries","location":"model-server-api/org.modelix.model.server.api/-query-ancestors/queries.html","searchKeys":["queries","open override val queries: List<Subquery>","org.modelix.model.server.api.QueryAncestors.queries"]},{"name":"open override val queries: List<Subquery>","description":"org.modelix.model.server.api.QueryById.queries","location":"model-server-api/org.modelix.model.server.api/-query-by-id/queries.html","searchKeys":["queries","open override val queries: List<Subquery>","org.modelix.model.server.api.QueryById.queries"]},{"name":"open override val queries: List<Subquery>","description":"org.modelix.model.server.api.QueryChildren.queries","location":"model-server-api/org.modelix.model.server.api/-query-children/queries.html","searchKeys":["queries","open override val queries: List<Subquery>","org.modelix.model.server.api.QueryChildren.queries"]},{"name":"open override val queries: List<Subquery>","description":"org.modelix.model.server.api.QueryDescendants.queries","location":"model-server-api/org.modelix.model.server.api/-query-descendants/queries.html","searchKeys":["queries","open override val queries: List<Subquery>","org.modelix.model.server.api.QueryDescendants.queries"]},{"name":"open override val queries: List<Subquery>","description":"org.modelix.model.server.api.QueryParent.queries","location":"model-server-api/org.modelix.model.server.api/-query-parent/queries.html","searchKeys":["queries","open override val queries: List<Subquery>","org.modelix.model.server.api.QueryParent.queries"]},{"name":"open override val queries: List<Subquery>","description":"org.modelix.model.server.api.QueryReference.queries","location":"model-server-api/org.modelix.model.server.api/-query-reference/queries.html","searchKeys":["queries","open override val queries: List<Subquery>","org.modelix.model.server.api.QueryReference.queries"]},{"name":"open override val queries: List<Subquery>","description":"org.modelix.model.server.api.QueryReferences.queries","location":"model-server-api/org.modelix.model.server.api/-query-references/queries.html","searchKeys":["queries","open override val queries: List<Subquery>","org.modelix.model.server.api.QueryReferences.queries"]},{"name":"open override val queries: List<Subquery>","description":"org.modelix.model.server.api.QueryReferencesAndChildren.queries","location":"model-server-api/org.modelix.model.server.api/-query-references-and-children/queries.html","searchKeys":["queries","open override val queries: List<Subquery>","org.modelix.model.server.api.QueryReferencesAndChildren.queries"]},{"name":"open override val queries: List<Subquery>","description":"org.modelix.model.server.api.QueryRootNode.queries","location":"model-server-api/org.modelix.model.server.api/-query-root-node/queries.html","searchKeys":["queries","open override val queries: List<Subquery>","org.modelix.model.server.api.QueryRootNode.queries"]},{"name":"sealed class Filter","description":"org.modelix.model.server.api.Filter","location":"model-server-api/org.modelix.model.server.api/-filter/index.html","searchKeys":["Filter","sealed class Filter","org.modelix.model.server.api.Filter"]},{"name":"sealed class LogicalOperatorFilter : Filter","description":"org.modelix.model.server.api.LogicalOperatorFilter","location":"model-server-api/org.modelix.model.server.api/-logical-operator-filter/index.html","searchKeys":["LogicalOperatorFilter","sealed class LogicalOperatorFilter : Filter","org.modelix.model.server.api.LogicalOperatorFilter"]},{"name":"sealed class OperationData","description":"org.modelix.model.server.api.OperationData","location":"model-server-api/org.modelix.model.server.api/-operation-data/index.html","searchKeys":["OperationData","sealed class OperationData","org.modelix.model.server.api.OperationData"]},{"name":"sealed class QueryOwner","description":"org.modelix.model.server.api.QueryOwner","location":"model-server-api/org.modelix.model.server.api/-query-owner/index.html","searchKeys":["QueryOwner","sealed class QueryOwner","org.modelix.model.server.api.QueryOwner"]},{"name":"sealed class RootOrSubquery : QueryOwner","description":"org.modelix.model.server.api.RootOrSubquery","location":"model-server-api/org.modelix.model.server.api/-root-or-subquery/index.html","searchKeys":["RootOrSubquery","sealed class RootOrSubquery : QueryOwner","org.modelix.model.server.api.RootOrSubquery"]},{"name":"sealed class RootQuery : RootOrSubquery","description":"org.modelix.model.server.api.RootQuery","location":"model-server-api/org.modelix.model.server.api/-root-query/index.html","searchKeys":["RootQuery","sealed class RootQuery : RootOrSubquery","org.modelix.model.server.api.RootQuery"]},{"name":"sealed class RootQueryBuilder : QueryOwnerBuilder","description":"org.modelix.model.server.api.RootQueryBuilder","location":"model-server-api/org.modelix.model.server.api/-root-query-builder/index.html","searchKeys":["RootQueryBuilder","sealed class RootQueryBuilder : QueryOwnerBuilder","org.modelix.model.server.api.RootQueryBuilder"]},{"name":"sealed class StringOperator","description":"org.modelix.model.server.api.StringOperator","location":"model-server-api/org.modelix.model.server.api/-string-operator/index.html","searchKeys":["StringOperator","sealed class StringOperator","org.modelix.model.server.api.StringOperator"]},{"name":"sealed class Subquery : RootOrSubquery","description":"org.modelix.model.server.api.Subquery","location":"model-server-api/org.modelix.model.server.api/-subquery/index.html","searchKeys":["Subquery","sealed class Subquery : RootOrSubquery","org.modelix.model.server.api.Subquery"]},{"name":"sealed class SubqueryBuilder : QueryOwnerBuilder","description":"org.modelix.model.server.api.SubqueryBuilder","location":"model-server-api/org.modelix.model.server.api/-subquery-builder/index.html","searchKeys":["SubqueryBuilder","sealed class SubqueryBuilder : QueryOwnerBuilder","org.modelix.model.server.api.SubqueryBuilder"]},{"name":"typealias ChangeSetId = Int","description":"org.modelix.model.server.api.ChangeSetId","location":"model-server-api/org.modelix.model.server.api/-change-set-id/index.html","searchKeys":["ChangeSetId","typealias ChangeSetId = Int","org.modelix.model.server.api.ChangeSetId"]},{"name":"typealias NodeId = String","description":"org.modelix.model.server.api.NodeId","location":"model-server-api/org.modelix.model.server.api/-node-id/index.html","searchKeys":["NodeId","typealias NodeId = String","org.modelix.model.server.api.NodeId"]},{"name":"val appliedChangeSet: ChangeSetId? = null","description":"org.modelix.model.server.api.MessageFromServer.appliedChangeSet","location":"model-server-api/org.modelix.model.server.api/-message-from-server/applied-change-set.html","searchKeys":["appliedChangeSet","val appliedChangeSet: ChangeSetId? = null","org.modelix.model.server.api.MessageFromServer.appliedChangeSet"]},{"name":"val baseChangeSet: ChangeSetId? = null","description":"org.modelix.model.server.api.MessageFromClient.baseChangeSet","location":"model-server-api/org.modelix.model.server.api/-message-from-client/base-change-set.html","searchKeys":["baseChangeSet","val baseChangeSet: ChangeSetId? = null","org.modelix.model.server.api.MessageFromClient.baseChangeSet"]},{"name":"val baseVersionHash: String? = null","description":"org.modelix.model.server.api.MessageFromClient.baseVersionHash","location":"model-server-api/org.modelix.model.server.api/-message-from-client/base-version-hash.html","searchKeys":["baseVersionHash","val baseVersionHash: String? = null","org.modelix.model.server.api.MessageFromClient.baseVersionHash"]},{"name":"val baseVersionHash: String? = null","description":"org.modelix.model.server.api.v2.VersionDelta.baseVersionHash","location":"model-server-api/org.modelix.model.server.api.v2/-version-delta/base-version-hash.html","searchKeys":["baseVersionHash","val baseVersionHash: String? = null","org.modelix.model.server.api.v2.VersionDelta.baseVersionHash"]},{"name":"val cause: ExceptionData? = null","description":"org.modelix.model.server.api.ExceptionData.cause","location":"model-server-api/org.modelix.model.server.api/-exception-data/cause.html","searchKeys":["cause","val cause: ExceptionData? = null","org.modelix.model.server.api.ExceptionData.cause"]},{"name":"val changeSetId: ChangeSetId? = null","description":"org.modelix.model.server.api.MessageFromClient.changeSetId","location":"model-server-api/org.modelix.model.server.api/-message-from-client/change-set-id.html","searchKeys":["changeSetId","val changeSetId: ChangeSetId? = null","org.modelix.model.server.api.MessageFromClient.changeSetId"]},{"name":"val childId: NodeId","description":"org.modelix.model.server.api.AddNewChildNodeOpData.childId","location":"model-server-api/org.modelix.model.server.api/-add-new-child-node-op-data/child-id.html","searchKeys":["childId","val childId: NodeId","org.modelix.model.server.api.AddNewChildNodeOpData.childId"]},{"name":"val childId: NodeId","description":"org.modelix.model.server.api.MoveNodeOpData.childId","location":"model-server-api/org.modelix.model.server.api/-move-node-op-data/child-id.html","searchKeys":["childId","val childId: NodeId","org.modelix.model.server.api.MoveNodeOpData.childId"]},{"name":"val children: Map<String?, List<NodeId>>","description":"org.modelix.model.server.api.NodeData.children","location":"model-server-api/org.modelix.model.server.api/-node-data/children.html","searchKeys":["children","val children: Map<String?, List<NodeId>>","org.modelix.model.server.api.NodeData.children"]},{"name":"val children: Map<String?, List<NodeId>>? = null","description":"org.modelix.model.server.api.NodeUpdateData.children","location":"model-server-api/org.modelix.model.server.api/-node-update-data/children.html","searchKeys":["children","val children: Map<String?, List<NodeId>>? = null","org.modelix.model.server.api.NodeUpdateData.children"]},{"name":"val concept: String?","description":"org.modelix.model.server.api.AddNewChildNodeOpData.concept","location":"model-server-api/org.modelix.model.server.api/-add-new-child-node-op-data/concept.html","searchKeys":["concept","val concept: String?","org.modelix.model.server.api.AddNewChildNodeOpData.concept"]},{"name":"val concept: String? = null","description":"org.modelix.model.server.api.NodeData.concept","location":"model-server-api/org.modelix.model.server.api/-node-data/concept.html","searchKeys":["concept","val concept: String? = null","org.modelix.model.server.api.NodeData.concept"]},{"name":"val concept: String? = null","description":"org.modelix.model.server.api.NodeUpdateData.concept","location":"model-server-api/org.modelix.model.server.api/-node-update-data/concept.html","searchKeys":["concept","val concept: String? = null","org.modelix.model.server.api.NodeUpdateData.concept"]},{"name":"val conceptUID: String?","description":"org.modelix.model.server.api.FilterByConceptId.conceptUID","location":"model-server-api/org.modelix.model.server.api/-filter-by-concept-id/concept-u-i-d.html","searchKeys":["conceptUID","val conceptUID: String?","org.modelix.model.server.api.FilterByConceptId.conceptUID"]},{"name":"val exception: ExceptionData? = null","description":"org.modelix.model.server.api.MessageFromServer.exception","location":"model-server-api/org.modelix.model.server.api/-message-from-server/exception.html","searchKeys":["exception","val exception: ExceptionData? = null","org.modelix.model.server.api.MessageFromServer.exception"]},{"name":"val filter: Filter","description":"org.modelix.model.server.api.NotFilter.filter","location":"model-server-api/org.modelix.model.server.api/-not-filter/filter.html","searchKeys":["filter","val filter: Filter","org.modelix.model.server.api.NotFilter.filter"]},{"name":"val filterBuilder: (StringOperator) -> Filter","description":"org.modelix.model.server.api.FilterListBuilder.StringFilterBuilder.filterBuilder","location":"model-server-api/org.modelix.model.server.api/-filter-list-builder/-string-filter-builder/filter-builder.html","searchKeys":["filterBuilder","val filterBuilder: (StringOperator) -> Filter","org.modelix.model.server.api.FilterListBuilder.StringFilterBuilder.filterBuilder"]},{"name":"val id: String","description":"org.modelix.model.server.api.ByIdBuilder.id","location":"model-server-api/org.modelix.model.server.api/-by-id-builder/id.html","searchKeys":["id","val id: String","org.modelix.model.server.api.ByIdBuilder.id"]},{"name":"val index: Int","description":"org.modelix.model.server.api.AddNewChildNodeOpData.index","location":"model-server-api/org.modelix.model.server.api/-add-new-child-node-op-data/--index--.html","searchKeys":["index","val index: Int","org.modelix.model.server.api.AddNewChildNodeOpData.index"]},{"name":"val message: String","description":"org.modelix.model.server.api.ExceptionData.message","location":"model-server-api/org.modelix.model.server.api/-exception-data/message.html","searchKeys":["message","val message: String","org.modelix.model.server.api.ExceptionData.message"]},{"name":"val newIndex: Int","description":"org.modelix.model.server.api.MoveNodeOpData.newIndex","location":"model-server-api/org.modelix.model.server.api/-move-node-op-data/new-index.html","searchKeys":["newIndex","val newIndex: Int","org.modelix.model.server.api.MoveNodeOpData.newIndex"]},{"name":"val newParentNode: NodeId","description":"org.modelix.model.server.api.MoveNodeOpData.newParentNode","location":"model-server-api/org.modelix.model.server.api/-move-node-op-data/new-parent-node.html","searchKeys":["newParentNode","val newParentNode: NodeId","org.modelix.model.server.api.MoveNodeOpData.newParentNode"]},{"name":"val newRole: String?","description":"org.modelix.model.server.api.MoveNodeOpData.newRole","location":"model-server-api/org.modelix.model.server.api/-move-node-op-data/new-role.html","searchKeys":["newRole","val newRole: String?","org.modelix.model.server.api.MoveNodeOpData.newRole"]},{"name":"val node: NodeId","description":"org.modelix.model.server.api.SetPropertyOpData.node","location":"model-server-api/org.modelix.model.server.api/-set-property-op-data/node.html","searchKeys":["node","val node: NodeId","org.modelix.model.server.api.SetPropertyOpData.node"]},{"name":"val node: NodeId","description":"org.modelix.model.server.api.SetReferenceOpData.node","location":"model-server-api/org.modelix.model.server.api/-set-reference-op-data/node.html","searchKeys":["node","val node: NodeId","org.modelix.model.server.api.SetReferenceOpData.node"]},{"name":"val nodeId: NodeId","description":"org.modelix.model.server.api.DeleteNodeOpData.nodeId","location":"model-server-api/org.modelix.model.server.api/-delete-node-op-data/node-id.html","searchKeys":["nodeId","val nodeId: NodeId","org.modelix.model.server.api.DeleteNodeOpData.nodeId"]},{"name":"val nodeId: NodeId","description":"org.modelix.model.server.api.NodeData.nodeId","location":"model-server-api/org.modelix.model.server.api/-node-data/node-id.html","searchKeys":["nodeId","val nodeId: NodeId","org.modelix.model.server.api.NodeData.nodeId"]},{"name":"val nodeId: NodeId","description":"org.modelix.model.server.api.QueryById.nodeId","location":"model-server-api/org.modelix.model.server.api/-query-by-id/node-id.html","searchKeys":["nodeId","val nodeId: NodeId","org.modelix.model.server.api.QueryById.nodeId"]},{"name":"val nodeId: NodeId? = null","description":"org.modelix.model.server.api.NodeUpdateData.nodeId","location":"model-server-api/org.modelix.model.server.api/-node-update-data/node-id.html","searchKeys":["nodeId","val nodeId: NodeId? = null","org.modelix.model.server.api.NodeUpdateData.nodeId"]},{"name":"val nodes: List<NodeData>","description":"org.modelix.model.server.api.VersionData.nodes","location":"model-server-api/org.modelix.model.server.api/-version-data/nodes.html","searchKeys":["nodes","val nodes: List<NodeData>","org.modelix.model.server.api.VersionData.nodes"]},{"name":"val objects: Set<String>","description":"org.modelix.model.server.api.v2.VersionDelta.objects","location":"model-server-api/org.modelix.model.server.api.v2/-version-delta/objects.html","searchKeys":["objects","val objects: Set<String>","org.modelix.model.server.api.v2.VersionDelta.objects"]},{"name":"val objectsMap: Map<String, String>","description":"org.modelix.model.server.api.v2.VersionDelta.objectsMap","location":"model-server-api/org.modelix.model.server.api.v2/-version-delta/objects-map.html","searchKeys":["objectsMap","val objectsMap: Map<String, String>","org.modelix.model.server.api.v2.VersionDelta.objectsMap"]},{"name":"val operations: List<OperationData>? = null","description":"org.modelix.model.server.api.MessageFromClient.operations","location":"model-server-api/org.modelix.model.server.api/-message-from-client/operations.html","searchKeys":["operations","val operations: List<OperationData>? = null","org.modelix.model.server.api.MessageFromClient.operations"]},{"name":"val operator: StringOperator","description":"org.modelix.model.server.api.FilterByConceptLongName.operator","location":"model-server-api/org.modelix.model.server.api/-filter-by-concept-long-name/operator.html","searchKeys":["operator","val operator: StringOperator","org.modelix.model.server.api.FilterByConceptLongName.operator"]},{"name":"val operator: StringOperator","description":"org.modelix.model.server.api.FilterByProperty.operator","location":"model-server-api/org.modelix.model.server.api/-filter-by-property/operator.html","searchKeys":["operator","val operator: StringOperator","org.modelix.model.server.api.FilterByProperty.operator"]},{"name":"val parent: NodeId? = null","description":"org.modelix.model.server.api.NodeData.parent","location":"model-server-api/org.modelix.model.server.api/-node-data/parent.html","searchKeys":["parent","val parent: NodeId? = null","org.modelix.model.server.api.NodeData.parent"]},{"name":"val parentNode: NodeId","description":"org.modelix.model.server.api.AddNewChildNodeOpData.parentNode","location":"model-server-api/org.modelix.model.server.api/-add-new-child-node-op-data/parent-node.html","searchKeys":["parentNode","val parentNode: NodeId","org.modelix.model.server.api.AddNewChildNodeOpData.parentNode"]},{"name":"val pattern: String","description":"org.modelix.model.server.api.MatchesRegexOperator.pattern","location":"model-server-api/org.modelix.model.server.api/-matches-regex-operator/pattern.html","searchKeys":["pattern","val pattern: String","org.modelix.model.server.api.MatchesRegexOperator.pattern"]},{"name":"val prefix: String","description":"org.modelix.model.server.api.StartsWithOperator.prefix","location":"model-server-api/org.modelix.model.server.api/-starts-with-operator/prefix.html","searchKeys":["prefix","val prefix: String","org.modelix.model.server.api.StartsWithOperator.prefix"]},{"name":"val properties: Map<String, String>","description":"org.modelix.model.server.api.NodeData.properties","location":"model-server-api/org.modelix.model.server.api/-node-data/properties.html","searchKeys":["properties","val properties: Map<String, String>","org.modelix.model.server.api.NodeData.properties"]},{"name":"val properties: Map<String, String?>? = null","description":"org.modelix.model.server.api.NodeUpdateData.properties","location":"model-server-api/org.modelix.model.server.api/-node-update-data/properties.html","searchKeys":["properties","val properties: Map<String, String?>? = null","org.modelix.model.server.api.NodeUpdateData.properties"]},{"name":"val query: ModelQuery? = null","description":"org.modelix.model.server.api.MessageFromClient.query","location":"model-server-api/org.modelix.model.server.api/-message-from-client/query.html","searchKeys":["query","val query: ModelQuery? = null","org.modelix.model.server.api.MessageFromClient.query"]},{"name":"val recursive: Boolean = false","description":"org.modelix.model.server.api.QueryReferencesAndChildren.recursive","location":"model-server-api/org.modelix.model.server.api/-query-references-and-children/recursive.html","searchKeys":["recursive","val recursive: Boolean = false","org.modelix.model.server.api.QueryReferencesAndChildren.recursive"]},{"name":"val references: Map<String, String>","description":"org.modelix.model.server.api.NodeData.references","location":"model-server-api/org.modelix.model.server.api/-node-data/references.html","searchKeys":["references","val references: Map<String, String>","org.modelix.model.server.api.NodeData.references"]},{"name":"val references: Map<String, String?>? = null","description":"org.modelix.model.server.api.NodeUpdateData.references","location":"model-server-api/org.modelix.model.server.api/-node-update-data/references.html","searchKeys":["references","val references: Map<String, String?>? = null","org.modelix.model.server.api.NodeUpdateData.references"]},{"name":"val replacedIds: Map<String, String>? = null","description":"org.modelix.model.server.api.MessageFromServer.replacedIds","location":"model-server-api/org.modelix.model.server.api/-message-from-server/replaced-ids.html","searchKeys":["replacedIds","val replacedIds: Map<String, String>? = null","org.modelix.model.server.api.MessageFromServer.replacedIds"]},{"name":"val repositoryId: String? = null","description":"org.modelix.model.server.api.VersionData.repositoryId","location":"model-server-api/org.modelix.model.server.api/-version-data/repository-id.html","searchKeys":["repositoryId","val repositoryId: String? = null","org.modelix.model.server.api.VersionData.repositoryId"]},{"name":"val role: String","description":"org.modelix.model.server.api.FilterByProperty.role","location":"model-server-api/org.modelix.model.server.api/-filter-by-property/role.html","searchKeys":["role","val role: String","org.modelix.model.server.api.FilterByProperty.role"]},{"name":"val role: String","description":"org.modelix.model.server.api.QueryReference.role","location":"model-server-api/org.modelix.model.server.api/-query-reference/role.html","searchKeys":["role","val role: String","org.modelix.model.server.api.QueryReference.role"]},{"name":"val role: String","description":"org.modelix.model.server.api.ReferenceBuilder.role","location":"model-server-api/org.modelix.model.server.api/-reference-builder/role.html","searchKeys":["role","val role: String","org.modelix.model.server.api.ReferenceBuilder.role"]},{"name":"val role: String","description":"org.modelix.model.server.api.SetPropertyOpData.role","location":"model-server-api/org.modelix.model.server.api/-set-property-op-data/role.html","searchKeys":["role","val role: String","org.modelix.model.server.api.SetPropertyOpData.role"]},{"name":"val role: String","description":"org.modelix.model.server.api.SetReferenceOpData.role","location":"model-server-api/org.modelix.model.server.api/-set-reference-op-data/role.html","searchKeys":["role","val role: String","org.modelix.model.server.api.SetReferenceOpData.role"]},{"name":"val role: String?","description":"org.modelix.model.server.api.AddNewChildNodeOpData.role","location":"model-server-api/org.modelix.model.server.api/-add-new-child-node-op-data/role.html","searchKeys":["role","val role: String?","org.modelix.model.server.api.AddNewChildNodeOpData.role"]},{"name":"val role: String?","description":"org.modelix.model.server.api.ChildrenBuilder.role","location":"model-server-api/org.modelix.model.server.api/-children-builder/role.html","searchKeys":["role","val role: String?","org.modelix.model.server.api.ChildrenBuilder.role"]},{"name":"val role: String?","description":"org.modelix.model.server.api.QueryChildren.role","location":"model-server-api/org.modelix.model.server.api/-query-children/role.html","searchKeys":["role","val role: String?","org.modelix.model.server.api.QueryChildren.role"]},{"name":"val role: String? = null","description":"org.modelix.model.server.api.NodeData.role","location":"model-server-api/org.modelix.model.server.api/-node-data/role.html","searchKeys":["role","val role: String? = null","org.modelix.model.server.api.NodeData.role"]},{"name":"val rootNodeId: String? = null","description":"org.modelix.model.server.api.VersionData.rootNodeId","location":"model-server-api/org.modelix.model.server.api/-version-data/root-node-id.html","searchKeys":["rootNodeId","val rootNodeId: String? = null","org.modelix.model.server.api.VersionData.rootNodeId"]},{"name":"val stacktrace: List<String>","description":"org.modelix.model.server.api.ExceptionData.stacktrace","location":"model-server-api/org.modelix.model.server.api/-exception-data/stacktrace.html","searchKeys":["stacktrace","val stacktrace: List<String>","org.modelix.model.server.api.ExceptionData.stacktrace"]},{"name":"val substring: String","description":"org.modelix.model.server.api.ContainsOperator.substring","location":"model-server-api/org.modelix.model.server.api/-contains-operator/substring.html","searchKeys":["substring","val substring: String","org.modelix.model.server.api.ContainsOperator.substring"]},{"name":"val suffix: String","description":"org.modelix.model.server.api.EndsWithOperator.suffix","location":"model-server-api/org.modelix.model.server.api/-ends-with-operator/suffix.html","searchKeys":["suffix","val suffix: String","org.modelix.model.server.api.EndsWithOperator.suffix"]},{"name":"val target: NodeId?","description":"org.modelix.model.server.api.SetReferenceOpData.target","location":"model-server-api/org.modelix.model.server.api/-set-reference-op-data/target.html","searchKeys":["target","val target: NodeId?","org.modelix.model.server.api.SetReferenceOpData.target"]},{"name":"val temporaryNodeId: NodeId? = null","description":"org.modelix.model.server.api.NodeUpdateData.temporaryNodeId","location":"model-server-api/org.modelix.model.server.api/-node-update-data/temporary-node-id.html","searchKeys":["temporaryNodeId","val temporaryNodeId: NodeId? = null","org.modelix.model.server.api.NodeUpdateData.temporaryNodeId"]},{"name":"val usesRoleIds: Boolean = false","description":"org.modelix.model.server.api.VersionData.usesRoleIds","location":"model-server-api/org.modelix.model.server.api/-version-data/uses-role-ids.html","searchKeys":["usesRoleIds","val usesRoleIds: Boolean = false","org.modelix.model.server.api.VersionData.usesRoleIds"]},{"name":"val value: String","description":"org.modelix.model.server.api.EqualsOperator.value","location":"model-server-api/org.modelix.model.server.api/-equals-operator/value.html","searchKeys":["value","val value: String","org.modelix.model.server.api.EqualsOperator.value"]},{"name":"val value: String?","description":"org.modelix.model.server.api.SetPropertyOpData.value","location":"model-server-api/org.modelix.model.server.api/-set-property-op-data/value.html","searchKeys":["value","val value: String?","org.modelix.model.server.api.SetPropertyOpData.value"]},{"name":"val version: VersionData? = null","description":"org.modelix.model.server.api.MessageFromServer.version","location":"model-server-api/org.modelix.model.server.api/-message-from-server/version.html","searchKeys":["version","val version: VersionData? = null","org.modelix.model.server.api.MessageFromServer.version"]},{"name":"val versionHash: String","description":"org.modelix.model.server.api.v2.VersionDelta.versionHash","location":"model-server-api/org.modelix.model.server.api.v2/-version-delta/version-hash.html","searchKeys":["versionHash","val versionHash: String","org.modelix.model.server.api.v2.VersionDelta.versionHash"]},{"name":"val versionHash: String? = null","description":"org.modelix.model.server.api.VersionData.versionHash","location":"model-server-api/org.modelix.model.server.api/-version-data/version-hash.html","searchKeys":["versionHash","val versionHash: String? = null","org.modelix.model.server.api.VersionData.versionHash"]},{"name":"class Builder","description":"org.modelix.modelql.server.ModelQLServer.Builder","location":"modelql-server/org.modelix.modelql.server/-model-q-l-server/-builder/index.html","searchKeys":["Builder","class Builder","org.modelix.modelql.server.ModelQLServer.Builder"]},{"name":"class ModelQLServer","description":"org.modelix.modelql.server.ModelQLServer","location":"modelql-server/org.modelix.modelql.server/-model-q-l-server/index.html","searchKeys":["ModelQLServer","class ModelQLServer","org.modelix.modelql.server.ModelQLServer"]},{"name":"constructor()","description":"org.modelix.modelql.server.ModelQLServer.Builder.Builder","location":"modelql-server/org.modelix.modelql.server/-model-q-l-server/-builder/-builder.html","searchKeys":["Builder","constructor()","org.modelix.modelql.server.ModelQLServer.Builder.Builder"]},{"name":"fun area(area: IArea): ModelQLServer.Builder","description":"org.modelix.modelql.server.ModelQLServer.Builder.area","location":"modelql-server/org.modelix.modelql.server/-model-q-l-server/-builder/area.html","searchKeys":["area","fun area(area: IArea): ModelQLServer.Builder","org.modelix.modelql.server.ModelQLServer.Builder.area"]},{"name":"fun build(): ModelQLServer","description":"org.modelix.modelql.server.ModelQLServer.Builder.build","location":"modelql-server/org.modelix.modelql.server/-model-q-l-server/-builder/build.html","searchKeys":["build","fun build(): ModelQLServer","org.modelix.modelql.server.ModelQLServer.Builder.build"]},{"name":"fun builder(rootNode: INode): ModelQLServer.Builder","description":"org.modelix.modelql.server.ModelQLServer.Companion.builder","location":"modelql-server/org.modelix.modelql.server/-model-q-l-server/-companion/builder.html","searchKeys":["builder","fun builder(rootNode: INode): ModelQLServer.Builder","org.modelix.modelql.server.ModelQLServer.Companion.builder"]},{"name":"fun builder(rootNodeProvider: () -> INode?): ModelQLServer.Builder","description":"org.modelix.modelql.server.ModelQLServer.Companion.builder","location":"modelql-server/org.modelix.modelql.server/-model-q-l-server/-companion/builder.html","searchKeys":["builder","fun builder(rootNodeProvider: () -> INode?): ModelQLServer.Builder","org.modelix.modelql.server.ModelQLServer.Companion.builder"]},{"name":"fun installHandler(route: Route)","description":"org.modelix.modelql.server.ModelQLServer.installHandler","location":"modelql-server/org.modelix.modelql.server/-model-q-l-server/install-handler.html","searchKeys":["installHandler","fun installHandler(route: Route)","org.modelix.modelql.server.ModelQLServer.installHandler"]},{"name":"fun rootNode(rootNode: INode): ModelQLServer.Builder","description":"org.modelix.modelql.server.ModelQLServer.Builder.rootNode","location":"modelql-server/org.modelix.modelql.server/-model-q-l-server/-builder/root-node.html","searchKeys":["rootNode","fun rootNode(rootNode: INode): ModelQLServer.Builder","org.modelix.modelql.server.ModelQLServer.Builder.rootNode"]},{"name":"fun rootNode(rootNodeProvider: () -> INode?): ModelQLServer.Builder","description":"org.modelix.modelql.server.ModelQLServer.Builder.rootNode","location":"modelql-server/org.modelix.modelql.server/-model-q-l-server/-builder/root-node.html","searchKeys":["rootNode","fun rootNode(rootNodeProvider: () -> INode?): ModelQLServer.Builder","org.modelix.modelql.server.ModelQLServer.Builder.rootNode"]},{"name":"object Companion","description":"org.modelix.modelql.server.ModelQLServer.Companion","location":"modelql-server/org.modelix.modelql.server/-model-q-l-server/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.modelql.server.ModelQLServer.Companion"]},{"name":"suspend fun handleCall(call: ApplicationCall, rootNode: INode, area: IArea)","description":"org.modelix.modelql.server.ModelQLServer.Companion.handleCall","location":"modelql-server/org.modelix.modelql.server/-model-q-l-server/-companion/handle-call.html","searchKeys":["handleCall","suspend fun handleCall(call: ApplicationCall, rootNode: INode, area: IArea)","org.modelix.modelql.server.ModelQLServer.Companion.handleCall"]},{"name":"val area: IArea? = null","description":"org.modelix.modelql.server.ModelQLServer.area","location":"modelql-server/org.modelix.modelql.server/-model-q-l-server/area.html","searchKeys":["area","val area: IArea? = null","org.modelix.modelql.server.ModelQLServer.area"]},{"name":"val rootNodeProvider: () -> INode?","description":"org.modelix.modelql.server.ModelQLServer.rootNodeProvider","location":"modelql-server/org.modelix.modelql.server/-model-q-l-server/root-node-provider.html","searchKeys":["rootNodeProvider","val rootNodeProvider: () -> INode?","org.modelix.modelql.server.ModelQLServer.rootNodeProvider"]},{"name":"abstract fun IFragmentBuilder<In, Context>.buildFragment()","description":"org.modelix.modelql.html.IModelQLTemplate.buildFragment","location":"modelql-html/org.modelix.modelql.html/-i-model-q-l-template/build-fragment.html","searchKeys":["buildFragment","abstract fun IFragmentBuilder<In, Context>.buildFragment()","org.modelix.modelql.html.IModelQLTemplate.buildFragment"]},{"name":"class ModelQLTemplateInstance<in Context, out Template : IModelQLTemplate<*, Context>>(val template: Template, val fragment: IRequestedFragment<Context>)","description":"org.modelix.modelql.html.ModelQLTemplateInstance","location":"modelql-html/org.modelix.modelql.html/-model-q-l-template-instance/index.html","searchKeys":["ModelQLTemplateInstance","class ModelQLTemplateInstance<in Context, out Template : IModelQLTemplate<*, Context>>(val template: Template, val fragment: IRequestedFragment<Context>)","org.modelix.modelql.html.ModelQLTemplateInstance"]},{"name":"constructor(template: Template, fragment: IRequestedFragment<Context>)","description":"org.modelix.modelql.html.ModelQLTemplateInstance.ModelQLTemplateInstance","location":"modelql-html/org.modelix.modelql.html/-model-q-l-template-instance/-model-q-l-template-instance.html","searchKeys":["ModelQLTemplateInstance","constructor(template: Template, fragment: IRequestedFragment<Context>)","org.modelix.modelql.html.ModelQLTemplateInstance.ModelQLTemplateInstance"]},{"name":"fun <In, Context, Template : IModelQLTemplate<In, Context>> IMonoStep<In>.requestTemplate(template: Template): ModelQLTemplateInstance<Context, Template>","description":"org.modelix.modelql.html.requestTemplate","location":"modelql-html/org.modelix.modelql.html/request-template.html","searchKeys":["requestTemplate","fun <In, Context, Template : IModelQLTemplate<In, Context>> IMonoStep<In>.requestTemplate(template: Template): ModelQLTemplateInstance<Context, Template>","org.modelix.modelql.html.requestTemplate"]},{"name":"fun <In> buildHtmlQuery(body: IRecursiveFragmentBuilder<In, HTML>.() -> Unit): IMonoUnboundQuery<In, String>","description":"org.modelix.modelql.html.buildHtmlQuery","location":"modelql-html/org.modelix.modelql.html/build-html-query.html","searchKeys":["buildHtmlQuery","fun <In> buildHtmlQuery(body: IRecursiveFragmentBuilder<In, HTML>.() -> Unit): IMonoUnboundQuery<In, String>","org.modelix.modelql.html.buildHtmlQuery"]},{"name":"fun <TOuter, TTemplate : IModelQLTemplate<*, TOuter>> TOuter.insert(templateInstance: ModelQLTemplateInstance<TOuter, TTemplate>, build: TTemplate.() -> Unit)","description":"org.modelix.modelql.html.insert","location":"modelql-html/org.modelix.modelql.html/insert.html","searchKeys":["insert","fun <TOuter, TTemplate : IModelQLTemplate<*, TOuter>> TOuter.insert(templateInstance: ModelQLTemplateInstance<TOuter, TTemplate>, build: TTemplate.() -> Unit)","org.modelix.modelql.html.insert"]},{"name":"fun <TOuter> IBoundFragment<TOuter>.toKotlinTemplate(): Template<TOuter>","description":"org.modelix.modelql.html.toKotlinTemplate","location":"modelql-html/org.modelix.modelql.html/to-kotlin-template.html","searchKeys":["toKotlinTemplate","fun <TOuter> IBoundFragment<TOuter>.toKotlinTemplate(): Template<TOuter>","org.modelix.modelql.html.toKotlinTemplate"]},{"name":"fun <TOuter> IRequestedFragment<TOuter>.toKotlinTemplate(): Template<TOuter>","description":"org.modelix.modelql.html.toKotlinTemplate","location":"modelql-html/org.modelix.modelql.html/to-kotlin-template.html","searchKeys":["toKotlinTemplate","fun <TOuter> IRequestedFragment<TOuter>.toKotlinTemplate(): Template<TOuter>","org.modelix.modelql.html.toKotlinTemplate"]},{"name":"fun <TOuter> ModelQLTemplateInstance<TOuter, *>.toKotlinTemplate(): Template<TOuter>","description":"org.modelix.modelql.html.toKotlinTemplate","location":"modelql-html/org.modelix.modelql.html/to-kotlin-template.html","searchKeys":["toKotlinTemplate","fun <TOuter> ModelQLTemplateInstance<TOuter, *>.toKotlinTemplate(): Template<TOuter>","org.modelix.modelql.html.toKotlinTemplate"]},{"name":"fun <TTemplate : IModelQLTemplate<*, TOuter>, TOuter> TOuter.insert(templateInstance: ModelQLTemplateInstance<TOuter, TTemplate>, placeholder: TemplatePlaceholder<TTemplate>)","description":"org.modelix.modelql.html.insert","location":"modelql-html/org.modelix.modelql.html/insert.html","searchKeys":["insert","fun <TTemplate : IModelQLTemplate<*, TOuter>, TOuter> TOuter.insert(templateInstance: ModelQLTemplateInstance<TOuter, TTemplate>, placeholder: TemplatePlaceholder<TTemplate>)","org.modelix.modelql.html.insert"]},{"name":"interface IModelQLTemplate<in In, in Context>","description":"org.modelix.modelql.html.IModelQLTemplate","location":"modelql-html/org.modelix.modelql.html/-i-model-q-l-template/index.html","searchKeys":["IModelQLTemplate","interface IModelQLTemplate<in In, in Context>","org.modelix.modelql.html.IModelQLTemplate"]},{"name":"val fragment: IRequestedFragment<Context>","description":"org.modelix.modelql.html.ModelQLTemplateInstance.fragment","location":"modelql-html/org.modelix.modelql.html/-model-q-l-template-instance/fragment.html","searchKeys":["fragment","val fragment: IRequestedFragment<Context>","org.modelix.modelql.html.ModelQLTemplateInstance.fragment"]},{"name":"val template: Template","description":"org.modelix.modelql.html.ModelQLTemplateInstance.template","location":"modelql-html/org.modelix.modelql.html/-model-q-l-template-instance/template.html","searchKeys":["template","val template: Template","org.modelix.modelql.html.ModelQLTemplateInstance.template"]},{"name":"CONNECTED","description":"org.modelix.model.client.RestWebModelClient.ConnectionStatus.CONNECTED","location":"model-client/org.modelix.model.client/-rest-web-model-client/-connection-status/-c-o-n-n-e-c-t-e-d/index.html","searchKeys":["CONNECTED","CONNECTED","org.modelix.model.client.RestWebModelClient.ConnectionStatus.CONNECTED"]},{"name":"DISCONNECTED","description":"org.modelix.model.client.RestWebModelClient.ConnectionStatus.DISCONNECTED","location":"model-client/org.modelix.model.client/-rest-web-model-client/-connection-status/-d-i-s-c-o-n-n-e-c-t-e-d/index.html","searchKeys":["DISCONNECTED","DISCONNECTED","org.modelix.model.client.RestWebModelClient.ConnectionStatus.DISCONNECTED"]},{"name":"NEW","description":"org.modelix.model.client.RestWebModelClient.ConnectionStatus.NEW","location":"model-client/org.modelix.model.client/-rest-web-model-client/-connection-status/-n-e-w/index.html","searchKeys":["NEW","NEW","org.modelix.model.client.RestWebModelClient.ConnectionStatus.NEW"]},{"name":"WAITING_FOR_TOKEN","description":"org.modelix.model.client.RestWebModelClient.ConnectionStatus.WAITING_FOR_TOKEN","location":"model-client/org.modelix.model.client/-rest-web-model-client/-connection-status/-w-a-i-t-i-n-g_-f-o-r_-t-o-k-e-n/index.html","searchKeys":["WAITING_FOR_TOKEN","WAITING_FOR_TOKEN","org.modelix.model.client.RestWebModelClient.ConnectionStatus.WAITING_FOR_TOKEN"]},{"name":"abstract class DependencyBase : IStateVariableReference<Unit> ","description":"org.modelix.model.DependencyBase","location":"model-client/org.modelix.model/-dependency-base/index.html","searchKeys":["DependencyBase","abstract class DependencyBase : IStateVariableReference<Unit> ","org.modelix.model.DependencyBase"]},{"name":"abstract class ModelClientV2Builder","description":"org.modelix.model.client2.ModelClientV2Builder","location":"model-client/org.modelix.model.client2/-model-client-v2-builder/index.html","searchKeys":["ModelClientV2Builder","abstract class ModelClientV2Builder","org.modelix.model.client2.ModelClientV2Builder"]},{"name":"abstract class SmallPMap<K, V> : CustomPMap<K, V> ","description":"org.modelix.model.util.pmap.SmallPMap","location":"model-client/org.modelix.model.util.pmap/-small-p-map/index.html","searchKeys":["SmallPMap","abstract class SmallPMap<K, V> : CustomPMap<K, V> ","org.modelix.model.util.pmap.SmallPMap"]},{"name":"abstract class VersionChangeDetector(store: IKeyValueStore, key: String, coroutineScope: CoroutineScope)","description":"org.modelix.model.client.VersionChangeDetector","location":"model-client/org.modelix.model.client/-version-change-detector/index.html","searchKeys":["VersionChangeDetector","abstract class VersionChangeDetector(store: IKeyValueStore, key: String, coroutineScope: CoroutineScope)","org.modelix.model.client.VersionChangeDetector"]},{"name":"abstract fun addListener(l: IBranchListener)","description":"org.modelix.model.client.IIndirectBranch.addListener","location":"model-client/org.modelix.model.client/-i-indirect-branch/add-listener.html","searchKeys":["addListener","abstract fun addListener(l: IBranchListener)","org.modelix.model.client.IIndirectBranch.addListener"]},{"name":"abstract fun connectBranch(repositoryId: String, branchId: String, changeCallback: (ChangeJS) -> Unit): Promise<BranchJS>","description":"org.modelix.model.client2.ClientJS.connectBranch","location":"model-client/org.modelix.model.client2/-client-j-s/connect-branch.html","searchKeys":["connectBranch","abstract fun connectBranch(repositoryId: String, branchId: String, changeCallback: (ChangeJS) -> Unit): Promise<BranchJS>","org.modelix.model.client2.ClientJS.connectBranch"]},{"name":"abstract fun containsKey(key: K): Boolean","description":"org.modelix.model.util.pmap.CustomPMap.containsKey","location":"model-client/org.modelix.model.util.pmap/-custom-p-map/contains-key.html","searchKeys":["containsKey","abstract fun containsKey(key: K): Boolean","org.modelix.model.util.pmap.CustomPMap.containsKey"]},{"name":"abstract fun dispose()","description":"org.modelix.model.client2.BranchJS.dispose","location":"model-client/org.modelix.model.client2/-branch-j-s/dispose.html","searchKeys":["dispose","abstract fun dispose()","org.modelix.model.client2.BranchJS.dispose"]},{"name":"abstract fun dispose()","description":"org.modelix.model.client2.ClientJS.dispose","location":"model-client/org.modelix.model.client2/-client-j-s/dispose.html","searchKeys":["dispose","abstract fun dispose()","org.modelix.model.client2.ClientJS.dispose"]},{"name":"abstract fun entryAdded(key: Long, value: V)","description":"org.modelix.model.util.pmap.LongKeyPMap.IChangeVisitor.entryAdded","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-i-change-visitor/entry-added.html","searchKeys":["entryAdded","abstract fun entryAdded(key: Long, value: V)","org.modelix.model.util.pmap.LongKeyPMap.IChangeVisitor.entryAdded"]},{"name":"abstract fun entryChanged(key: Long, oldValue: V, newValue: V)","description":"org.modelix.model.util.pmap.LongKeyPMap.IChangeVisitor.entryChanged","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-i-change-visitor/entry-changed.html","searchKeys":["entryChanged","abstract fun entryChanged(key: Long, oldValue: V, newValue: V)","org.modelix.model.util.pmap.LongKeyPMap.IChangeVisitor.entryChanged"]},{"name":"abstract fun entryRemoved(key: Long, value: V)","description":"org.modelix.model.util.pmap.LongKeyPMap.IChangeVisitor.entryRemoved","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-i-change-visitor/entry-removed.html","searchKeys":["entryRemoved","abstract fun entryRemoved(key: Long, value: V)","org.modelix.model.util.pmap.LongKeyPMap.IChangeVisitor.entryRemoved"]},{"name":"abstract fun fetchBranches(repositoryId: String): Promise<Array<String>>","description":"org.modelix.model.client2.ClientJS.fetchBranches","location":"model-client/org.modelix.model.client2/-client-j-s/fetch-branches.html","searchKeys":["fetchBranches","abstract fun fetchBranches(repositoryId: String): Promise<Array<String>>","org.modelix.model.client2.ClientJS.fetchBranches"]},{"name":"abstract fun fetchRepositories(): Promise<Array<String>>","description":"org.modelix.model.client2.ClientJS.fetchRepositories","location":"model-client/org.modelix.model.client2/-client-j-s/fetch-repositories.html","searchKeys":["fetchRepositories","abstract fun fetchRepositories(): Promise<Array<String>>","org.modelix.model.client2.ClientJS.fetchRepositories"]},{"name":"abstract fun getClientId(): Int","description":"org.modelix.model.client2.IModelClientV2.getClientId","location":"model-client/org.modelix.model.client2/-i-model-client-v2/get-client-id.html","searchKeys":["getClientId","abstract fun getClientId(): Int","org.modelix.model.client2.IModelClientV2.getClientId"]},{"name":"abstract fun getIdGenerator(): IIdGenerator","description":"org.modelix.model.client2.IModelClientV2.getIdGenerator","location":"model-client/org.modelix.model.client2/-i-model-client-v2/get-id-generator.html","searchKeys":["getIdGenerator","abstract fun getIdGenerator(): IIdGenerator","org.modelix.model.client2.IModelClientV2.getIdGenerator"]},{"name":"abstract fun getUserId(): String?","description":"org.modelix.model.client2.IModelClientV2.getUserId","location":"model-client/org.modelix.model.client2/-i-model-client-v2/get-user-id.html","searchKeys":["getUserId","abstract fun getUserId(): String?","org.modelix.model.client2.IModelClientV2.getUserId"]},{"name":"abstract fun getWrapped(): IKeyValueStore","description":"org.modelix.model.IKeyValueStoreWrapper.getWrapped","location":"model-client/org.modelix.model/-i-key-value-store-wrapper/get-wrapped.html","searchKeys":["getWrapped","abstract fun getWrapped(): IKeyValueStore","org.modelix.model.IKeyValueStoreWrapper.getWrapped"]},{"name":"abstract fun keys(): Iterable<K>?","description":"org.modelix.model.util.pmap.CustomPMap.keys","location":"model-client/org.modelix.model.util.pmap/-custom-p-map/keys.html","searchKeys":["keys","abstract fun keys(): Iterable<K>?","org.modelix.model.util.pmap.CustomPMap.keys"]},{"name":"abstract fun put(key: K, value: V): CustomPMap<K, V>?","description":"org.modelix.model.util.pmap.CustomPMap.put","location":"model-client/org.modelix.model.util.pmap/-custom-p-map/put.html","searchKeys":["put","abstract fun put(key: K, value: V): CustomPMap<K, V>?","org.modelix.model.util.pmap.CustomPMap.put"]},{"name":"abstract fun put(key: Long, value: V?, shift: Int): LongKeyPMap.INode<*>?","description":"org.modelix.model.util.pmap.LongKeyPMap.INode.put","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-i-node/put.html","searchKeys":["put","abstract fun put(key: Long, value: V?, shift: Int): LongKeyPMap.INode<*>?","org.modelix.model.util.pmap.LongKeyPMap.INode.put"]},{"name":"abstract fun receivedForbiddenResponse()","description":"org.modelix.model.client.ConnectionListener.receivedForbiddenResponse","location":"model-client/org.modelix.model.client/-connection-listener/received-forbidden-response.html","searchKeys":["receivedForbiddenResponse","abstract fun receivedForbiddenResponse()","org.modelix.model.client.ConnectionListener.receivedForbiddenResponse"]},{"name":"abstract fun receivedSuccessfulResponse()","description":"org.modelix.model.client.ConnectionListener.receivedSuccessfulResponse","location":"model-client/org.modelix.model.client/-connection-listener/received-successful-response.html","searchKeys":["receivedSuccessfulResponse","abstract fun receivedSuccessfulResponse()","org.modelix.model.client.ConnectionListener.receivedSuccessfulResponse"]},{"name":"abstract fun remove(key: K): CustomPMap<K, V>?","description":"org.modelix.model.util.pmap.CustomPMap.remove","location":"model-client/org.modelix.model.util.pmap/-custom-p-map/remove.html","searchKeys":["remove","abstract fun remove(key: K): CustomPMap<K, V>?","org.modelix.model.util.pmap.CustomPMap.remove"]},{"name":"abstract fun remove(key: Long, shift: Int): LongKeyPMap.INode<*>?","description":"org.modelix.model.util.pmap.LongKeyPMap.INode.remove","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-i-node/remove.html","searchKeys":["remove","abstract fun remove(key: Long, shift: Int): LongKeyPMap.INode<*>?","org.modelix.model.util.pmap.LongKeyPMap.INode.remove"]},{"name":"abstract fun removeListener(l: IBranchListener)","description":"org.modelix.model.client.IIndirectBranch.removeListener","location":"model-client/org.modelix.model.client/-i-indirect-branch/remove-listener.html","searchKeys":["removeListener","abstract fun removeListener(l: IBranchListener)","org.modelix.model.client.IIndirectBranch.removeListener"]},{"name":"abstract fun values(): Iterable<V>?","description":"org.modelix.model.util.pmap.CustomPMap.values","location":"model-client/org.modelix.model.util.pmap/-custom-p-map/values.html","searchKeys":["values","abstract fun values(): Iterable<V>?","org.modelix.model.util.pmap.CustomPMap.values"]},{"name":"abstract fun visitChanges(oldNode: LongKeyPMap.INode<V>, visitor: LongKeyPMap.IChangeVisitor<V>)","description":"org.modelix.model.util.pmap.LongKeyPMap.INode.visitChanges","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-i-node/visit-changes.html","searchKeys":["visitChanges","abstract fun visitChanges(oldNode: LongKeyPMap.INode<V>, visitor: LongKeyPMap.IChangeVisitor<V>)","org.modelix.model.util.pmap.LongKeyPMap.INode.visitChanges"]},{"name":"abstract fun visitEntries(visitor: BiPredicate<Long, V>): Boolean","description":"org.modelix.model.util.pmap.LongKeyPMap.INode.visitEntries","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-i-node/visit-entries.html","searchKeys":["visitEntries","abstract fun visitEntries(visitor: BiPredicate<Long, V>): Boolean","org.modelix.model.util.pmap.LongKeyPMap.INode.visitEntries"]},{"name":"abstract inner class IncrementalTransaction<TransactionT : ITransaction>(val transaction: TransactionT) : ITransaction","description":"org.modelix.model.IncrementalBranch.IncrementalTransaction","location":"model-client/org.modelix.model/-incremental-branch/-incremental-transaction/index.html","searchKeys":["IncrementalTransaction","abstract inner class IncrementalTransaction<TransactionT : ITransaction>(val transaction: TransactionT) : ITransaction","org.modelix.model.IncrementalBranch.IncrementalTransaction"]},{"name":"abstract operator fun get(key: K): V","description":"org.modelix.model.util.pmap.CustomPMap.get","location":"model-client/org.modelix.model.util.pmap/-custom-p-map/get.html","searchKeys":["get","abstract operator fun get(key: K): V","org.modelix.model.util.pmap.CustomPMap.get"]},{"name":"abstract operator fun get(key: Long, shift: Int): V","description":"org.modelix.model.util.pmap.LongKeyPMap.INode.get","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-i-node/get.html","searchKeys":["get","abstract operator fun get(key: Long, shift: Int): V","org.modelix.model.util.pmap.LongKeyPMap.INode.get"]},{"name":"abstract operator override fun get(key: K): V","description":"org.modelix.model.util.pmap.SmallPMap.get","location":"model-client/org.modelix.model.util.pmap/-small-p-map/get.html","searchKeys":["get","abstract operator override fun get(key: K): V","org.modelix.model.util.pmap.SmallPMap.get"]},{"name":"abstract override fun keys(): Iterable<K>?","description":"org.modelix.model.util.pmap.SmallPMap.keys","location":"model-client/org.modelix.model.util.pmap/-small-p-map/keys.html","searchKeys":["keys","abstract override fun keys(): Iterable<K>?","org.modelix.model.util.pmap.SmallPMap.keys"]},{"name":"abstract override fun put(key: K, value: V): SmallPMap<K, V>?","description":"org.modelix.model.util.pmap.SmallPMap.put","location":"model-client/org.modelix.model.util.pmap/-small-p-map/put.html","searchKeys":["put","abstract override fun put(key: K, value: V): SmallPMap<K, V>?","org.modelix.model.util.pmap.SmallPMap.put"]},{"name":"abstract override fun remove(key: K): SmallPMap<K, V>?","description":"org.modelix.model.util.pmap.SmallPMap.remove","location":"model-client/org.modelix.model.util.pmap/-small-p-map/remove.html","searchKeys":["remove","abstract override fun remove(key: K): SmallPMap<K, V>?","org.modelix.model.util.pmap.SmallPMap.remove"]},{"name":"abstract override fun values(): Iterable<V>?","description":"org.modelix.model.util.pmap.SmallPMap.values","location":"model-client/org.modelix.model.util.pmap/-small-p-map/values.html","searchKeys":["values","abstract override fun values(): Iterable<V>?","org.modelix.model.util.pmap.SmallPMap.values"]},{"name":"abstract suspend fun <R> query(branch: BranchReference, body: (IMonoStep<INode>) -> IMonoStep<R>): R","description":"org.modelix.model.client2.IModelClientV2.query","location":"model-client/org.modelix.model.client2/-i-model-client-v2/query.html","searchKeys":["query","abstract suspend fun <R> query(branch: BranchReference, body: (IMonoStep<INode>) -> IMonoStep<R>): R","org.modelix.model.client2.IModelClientV2.query"]},{"name":"abstract suspend fun <R> query(repositoryId: RepositoryId, versionHash: String, body: (IMonoStep<INode>) -> IMonoStep<R>): R","description":"org.modelix.model.client2.IModelClientV2.query","location":"model-client/org.modelix.model.client2/-i-model-client-v2/query.html","searchKeys":["query","abstract suspend fun <R> query(repositoryId: RepositoryId, versionHash: String, body: (IMonoStep<INode>) -> IMonoStep<R>): R","org.modelix.model.client2.IModelClientV2.query"]},{"name":"abstract suspend fun initRepository(repository: RepositoryId): IVersion","description":"org.modelix.model.client2.IModelClientV2.initRepository","location":"model-client/org.modelix.model.client2/-i-model-client-v2/init-repository.html","searchKeys":["initRepository","abstract suspend fun initRepository(repository: RepositoryId): IVersion","org.modelix.model.client2.IModelClientV2.initRepository"]},{"name":"abstract suspend fun listBranches(repository: RepositoryId): List<BranchReference>","description":"org.modelix.model.client2.IModelClientV2.listBranches","location":"model-client/org.modelix.model.client2/-i-model-client-v2/list-branches.html","searchKeys":["listBranches","abstract suspend fun listBranches(repository: RepositoryId): List<BranchReference>","org.modelix.model.client2.IModelClientV2.listBranches"]},{"name":"abstract suspend fun listRepositories(): List<RepositoryId>","description":"org.modelix.model.client2.IModelClientV2.listRepositories","location":"model-client/org.modelix.model.client2/-i-model-client-v2/list-repositories.html","searchKeys":["listRepositories","abstract suspend fun listRepositories(): List<RepositoryId>","org.modelix.model.client2.IModelClientV2.listRepositories"]},{"name":"abstract suspend fun loadVersion(repositoryId: RepositoryId, versionHash: String, baseVersion: IVersion?): IVersion","description":"org.modelix.model.client2.IModelClientV2.loadVersion","location":"model-client/org.modelix.model.client2/-i-model-client-v2/load-version.html","searchKeys":["loadVersion","abstract suspend fun loadVersion(repositoryId: RepositoryId, versionHash: String, baseVersion: IVersion?): IVersion","org.modelix.model.client2.IModelClientV2.loadVersion"]},{"name":"abstract suspend fun loadVersion(versionHash: String, baseVersion: IVersion?): IVersion","description":"org.modelix.model.client2.IModelClientV2.loadVersion","location":"model-client/org.modelix.model.client2/-i-model-client-v2/load-version.html","searchKeys":["loadVersion","abstract suspend fun loadVersion(versionHash: String, baseVersion: IVersion?): IVersion","org.modelix.model.client2.IModelClientV2.loadVersion"]},{"name":"abstract suspend fun poll(branch: BranchReference, lastKnownVersion: IVersion?): IVersion","description":"org.modelix.model.client2.IModelClientV2.poll","location":"model-client/org.modelix.model.client2/-i-model-client-v2/poll.html","searchKeys":["poll","abstract suspend fun poll(branch: BranchReference, lastKnownVersion: IVersion?): IVersion","org.modelix.model.client2.IModelClientV2.poll"]},{"name":"abstract suspend fun pollHash(branch: BranchReference, lastKnownVersion: IVersion?): String","description":"org.modelix.model.client2.IModelClientV2.pollHash","location":"model-client/org.modelix.model.client2/-i-model-client-v2/poll-hash.html","searchKeys":["pollHash","abstract suspend fun pollHash(branch: BranchReference, lastKnownVersion: IVersion?): String","org.modelix.model.client2.IModelClientV2.pollHash"]},{"name":"abstract suspend fun pull(branch: BranchReference, lastKnownVersion: IVersion?): IVersion","description":"org.modelix.model.client2.IModelClientV2.pull","location":"model-client/org.modelix.model.client2/-i-model-client-v2/pull.html","searchKeys":["pull","abstract suspend fun pull(branch: BranchReference, lastKnownVersion: IVersion?): IVersion","org.modelix.model.client2.IModelClientV2.pull"]},{"name":"abstract suspend fun pullHash(branch: BranchReference): String","description":"org.modelix.model.client2.IModelClientV2.pullHash","location":"model-client/org.modelix.model.client2/-i-model-client-v2/pull-hash.html","searchKeys":["pullHash","abstract suspend fun pullHash(branch: BranchReference): String","org.modelix.model.client2.IModelClientV2.pullHash"]},{"name":"abstract suspend fun pullIfExists(branch: BranchReference): IVersion?","description":"org.modelix.model.client2.IModelClientV2.pullIfExists","location":"model-client/org.modelix.model.client2/-i-model-client-v2/pull-if-exists.html","searchKeys":["pullIfExists","abstract suspend fun pullIfExists(branch: BranchReference): IVersion?","org.modelix.model.client2.IModelClientV2.pullIfExists"]},{"name":"abstract suspend fun push(branch: BranchReference, version: IVersion, baseVersion: IVersion?): IVersion","description":"org.modelix.model.client2.IModelClientV2.push","location":"model-client/org.modelix.model.client2/-i-model-client-v2/push.html","searchKeys":["push","abstract suspend fun push(branch: BranchReference, version: IVersion, baseVersion: IVersion?): IVersion","org.modelix.model.client2.IModelClientV2.push"]},{"name":"abstract val asyncStore: IKeyValueStore","description":"org.modelix.model.client.IModelClient.asyncStore","location":"model-client/org.modelix.model.client/-i-model-client/async-store.html","searchKeys":["asyncStore","abstract val asyncStore: IKeyValueStore","org.modelix.model.client.IModelClient.asyncStore"]},{"name":"abstract val branch: IBranch","description":"org.modelix.model.client.IIndirectBranch.branch","location":"model-client/org.modelix.model.client/-i-indirect-branch/branch.html","searchKeys":["branch","abstract val branch: IBranch","org.modelix.model.client.IIndirectBranch.branch"]},{"name":"abstract val clientId: Int","description":"org.modelix.model.client.IModelClient.clientId","location":"model-client/org.modelix.model.client/-i-model-client/client-id.html","searchKeys":["clientId","abstract val clientId: Int","org.modelix.model.client.IModelClient.clientId"]},{"name":"abstract val idGenerator: IIdGenerator","description":"org.modelix.model.client.IModelClient.idGenerator","location":"model-client/org.modelix.model.client/-i-model-client/id-generator.html","searchKeys":["idGenerator","abstract val idGenerator: IIdGenerator","org.modelix.model.client.IModelClient.idGenerator"]},{"name":"abstract val node: INodeJS","description":"org.modelix.model.client2.ChangeJS.node","location":"model-client/org.modelix.model.client2/-change-j-s/node.html","searchKeys":["node","abstract val node: INodeJS","org.modelix.model.client2.ChangeJS.node"]},{"name":"abstract val rootNode: INodeJS","description":"org.modelix.model.client2.BranchJS.rootNode","location":"model-client/org.modelix.model.client2/-branch-j-s/root-node.html","searchKeys":["rootNode","abstract val rootNode: INodeJS","org.modelix.model.client2.BranchJS.rootNode"]},{"name":"abstract val storeCache: IDeserializingKeyValueStore","description":"org.modelix.model.client.IModelClient.storeCache","location":"model-client/org.modelix.model.client/-i-model-client/store-cache.html","searchKeys":["storeCache","abstract val storeCache: IDeserializingKeyValueStore","org.modelix.model.client.IModelClient.storeCache"]},{"name":"class AsyncStore(store: IKeyValueStore) : IKeyValueStoreWrapper","description":"org.modelix.model.client.AsyncStore","location":"model-client/org.modelix.model.client/-async-store/index.html","searchKeys":["AsyncStore","class AsyncStore(store: IKeyValueStore) : IKeyValueStoreWrapper","org.modelix.model.client.AsyncStore"]},{"name":"class AutoReadTransaction(val branch: IBranch) : AutoTransaction, IReadTransaction","description":"org.modelix.model.AutoReadTransaction","location":"model-client/org.modelix.model/-auto-read-transaction/index.html","searchKeys":["AutoReadTransaction","class AutoReadTransaction(val branch: IBranch) : AutoTransaction, IReadTransaction","org.modelix.model.AutoReadTransaction"]},{"name":"class AutoTransactionsBranch(branch: IBranch) : IBranch, IBranchWrapper","description":"org.modelix.model.AutoTransactionsBranch","location":"model-client/org.modelix.model/-auto-transactions-branch/index.html","searchKeys":["AutoTransactionsBranch","class AutoTransactionsBranch(branch: IBranch) : IBranch, IBranchWrapper","org.modelix.model.AutoTransactionsBranch"]},{"name":"class AutoWriteTransaction(val branch: IBranch) : AutoTransaction, IWriteTransaction","description":"org.modelix.model.AutoWriteTransaction","location":"model-client/org.modelix.model/-auto-write-transaction/index.html","searchKeys":["AutoWriteTransaction","class AutoWriteTransaction(val branch: IBranch) : AutoTransaction, IWriteTransaction","org.modelix.model.AutoWriteTransaction"]},{"name":"class BranchJSImpl(model: ReplicatedModel, jsRootNode: INodeJS) : BranchJS","description":"org.modelix.model.client2.BranchJSImpl","location":"model-client/org.modelix.model.client2/-branch-j-s-impl/index.html","searchKeys":["BranchJSImpl","class BranchJSImpl(model: ReplicatedModel, jsRootNode: INodeJS) : BranchJS","org.modelix.model.client2.BranchJSImpl"]},{"name":"class ChangeListener(branch: IBranch, changeCallback: (ChangeJS) -> Unit) : IBranchListener","description":"org.modelix.model.client2.ChangeListener","location":"model-client/org.modelix.model.client2/-change-listener/index.html","searchKeys":["ChangeListener","class ChangeListener(branch: IBranch, changeCallback: (ChangeJS) -> Unit) : IBranchListener","org.modelix.model.client2.ChangeListener"]},{"name":"class ClientJSImpl(modelClient: ModelClientV2) : ClientJS","description":"org.modelix.model.client2.ClientJSImpl","location":"model-client/org.modelix.model.client2/-client-j-s-impl/index.html","searchKeys":["ClientJSImpl","class ClientJSImpl(modelClient: ModelClientV2) : ClientJS","org.modelix.model.client2.ClientJSImpl"]},{"name":"class EmptyNode<V> : LongKeyPMap.INode<V?> ","description":"org.modelix.model.util.pmap.LongKeyPMap.EmptyNode","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-empty-node/index.html","searchKeys":["EmptyNode","class EmptyNode<V> : LongKeyPMap.INode<V?> ","org.modelix.model.util.pmap.LongKeyPMap.EmptyNode"]},{"name":"class GarbageFilteringStore(store: IKeyValueStore) : IKeyValueStoreWrapper","description":"org.modelix.model.client.GarbageFilteringStore","location":"model-client/org.modelix.model.client/-garbage-filtering-store/index.html","searchKeys":["GarbageFilteringStore","class GarbageFilteringStore(store: IKeyValueStore) : IKeyValueStoreWrapper","org.modelix.model.client.GarbageFilteringStore"]},{"name":"class IncrementalBranch(val branch: IBranch) : IBranch, IBranchWrapper","description":"org.modelix.model.IncrementalBranch","location":"model-client/org.modelix.model/-incremental-branch/index.html","searchKeys":["IncrementalBranch","class IncrementalBranch(val branch: IBranch) : IBranch, IBranchWrapper","org.modelix.model.IncrementalBranch"]},{"name":"class InternalNode<V>(bitmap: Int, children: Array<LongKeyPMap.INode<V?>>) : LongKeyPMap.INode<V?> ","description":"org.modelix.model.util.pmap.LongKeyPMap.InternalNode","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-internal-node/index.html","searchKeys":["InternalNode","class InternalNode<V>(bitmap: Int, children: Array<LongKeyPMap.INode<V?>>) : LongKeyPMap.INode<V?> ","org.modelix.model.util.pmap.LongKeyPMap.InternalNode"]},{"name":"class KeyValueStoreCache(store: IKeyValueStore) : IKeyValueStoreWrapper","description":"org.modelix.model.KeyValueStoreCache","location":"model-client/org.modelix.model/-key-value-store-cache/index.html","searchKeys":["KeyValueStoreCache","class KeyValueStoreCache(store: IKeyValueStore) : IKeyValueStoreWrapper","org.modelix.model.KeyValueStoreCache"]},{"name":"class LeafNode<V>(val key: Long, val value: V) : LongKeyPMap.INode<V?> ","description":"org.modelix.model.util.pmap.LongKeyPMap.LeafNode","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-leaf-node/index.html","searchKeys":["LeafNode","class LeafNode<V>(val key: Long, val value: V) : LongKeyPMap.INode<V?> ","org.modelix.model.util.pmap.LongKeyPMap.LeafNode"]},{"name":"class LongKeyPMap<V>","description":"org.modelix.model.util.pmap.LongKeyPMap","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/index.html","searchKeys":["LongKeyPMap","class LongKeyPMap<V>","org.modelix.model.util.pmap.LongKeyPMap"]},{"name":"class MetaModelBranch(val branch: IBranch) : IBranch","description":"org.modelix.model.metameta.MetaModelBranch","location":"model-client/org.modelix.model.metameta/-meta-model-branch/index.html","searchKeys":["MetaModelBranch","class MetaModelBranch(val branch: IBranch) : IBranch","org.modelix.model.metameta.MetaModelBranch"]},{"name":"class MetaModelIndex","description":"org.modelix.model.metameta.MetaModelIndex","location":"model-client/org.modelix.model.metameta/-meta-model-index/index.html","searchKeys":["MetaModelIndex","class MetaModelIndex","org.modelix.model.metameta.MetaModelIndex"]},{"name":"class MetaModelSynchronizer(val branch: IBranch)","description":"org.modelix.model.metameta.MetaModelSynchronizer","location":"model-client/org.modelix.model.metameta/-meta-model-synchronizer/index.html","searchKeys":["MetaModelSynchronizer","class MetaModelSynchronizer(val branch: IBranch)","org.modelix.model.metameta.MetaModelSynchronizer"]},{"name":"class ModelClientV2(httpClient: HttpClient, val baseUrl: String, clientProvidedUserId: String?) : IModelClientV2, Closable","description":"org.modelix.model.client2.ModelClientV2","location":"model-client/org.modelix.model.client2/-model-client-v2/index.html","searchKeys":["ModelClientV2","class ModelClientV2(httpClient: HttpClient, val baseUrl: String, clientProvidedUserId: String?) : IModelClientV2, Closable","org.modelix.model.client2.ModelClientV2"]},{"name":"class ModelIndex","description":"org.modelix.model.ModelIndex","location":"model-client/org.modelix.model/-model-index/index.html","searchKeys":["ModelIndex","class ModelIndex","org.modelix.model.ModelIndex"]},{"name":"class Multiple<K, V>(keys: Array<Any?>, values: Array<Any?>) : SmallPMap<K, V?> ","description":"org.modelix.model.util.pmap.SmallPMap.Multiple","location":"model-client/org.modelix.model.util.pmap/-small-p-map/-multiple/index.html","searchKeys":["Multiple","class Multiple<K, V>(keys: Array<Any?>, values: Array<Any?>) : SmallPMap<K, V?> ","org.modelix.model.util.pmap.SmallPMap.Multiple"]},{"name":"class ReplicatedModel(val client: IModelClientV2, val branchRef: BranchReference, providedScope: CoroutineScope? = null)","description":"org.modelix.model.client2.ReplicatedModel","location":"model-client/org.modelix.model.client2/-replicated-model/index.html","searchKeys":["ReplicatedModel","class ReplicatedModel(val client: IModelClientV2, val branchRef: BranchReference, providedScope: CoroutineScope? = null)","org.modelix.model.client2.ReplicatedModel"]},{"name":"class RestWebModelClient constructor(var baseUrl: String = defaultUrl, authTokenProvider: () -> String?? = null, initialConnectionListeners: List<ConnectionListener> = emptyList(), providedClient: HttpClient? = null) : IModelClient","description":"org.modelix.model.client.RestWebModelClient","location":"model-client/org.modelix.model.client/-rest-web-model-client/index.html","searchKeys":["RestWebModelClient","class RestWebModelClient constructor(var baseUrl: String = defaultUrl, authTokenProvider: () -> String?? = null, initialConnectionListeners: List<ConnectionListener> = emptyList(), providedClient: HttpClient? = null) : IModelClient","org.modelix.model.client.RestWebModelClient"]},{"name":"class SimpleIndirectBranch(val branch: IBranch) : IIndirectBranch","description":"org.modelix.model.client.SimpleIndirectBranch","location":"model-client/org.modelix.model.client/-simple-indirect-branch/index.html","searchKeys":["SimpleIndirectBranch","class SimpleIndirectBranch(val branch: IBranch) : IIndirectBranch","org.modelix.model.client.SimpleIndirectBranch"]},{"name":"class Single<K, V>(key: K, value: V) : SmallPMap<K, V?> ","description":"org.modelix.model.util.pmap.SmallPMap.Single","location":"model-client/org.modelix.model.util.pmap/-small-p-map/-single/index.html","searchKeys":["Single","class Single<K, V>(key: K, value: V) : SmallPMap<K, V?> ","org.modelix.model.util.pmap.SmallPMap.Single"]},{"name":"class SubtreeChanges(val cacheSize: Int)","description":"org.modelix.model.SubtreeChanges","location":"model-client/org.modelix.model/-subtree-changes/index.html","searchKeys":["SubtreeChanges","class SubtreeChanges(val cacheSize: Int)","org.modelix.model.SubtreeChanges"]},{"name":"const val DEFAULT_BRANCH_NAME: String","description":"org.modelix.model.client.ActiveBranch.Companion.DEFAULT_BRANCH_NAME","location":"model-client/org.modelix.model.client/-active-branch/-companion/-d-e-f-a-u-l-t_-b-r-a-n-c-h_-n-a-m-e.html","searchKeys":["DEFAULT_BRANCH_NAME","const val DEFAULT_BRANCH_NAME: String","org.modelix.model.client.ActiveBranch.Companion.DEFAULT_BRANCH_NAME"]},{"name":"const val LANGUAGES_ROLE: String","description":"org.modelix.model.metameta.MetaModelIndex.Companion.LANGUAGES_ROLE","location":"model-client/org.modelix.model.metameta/-meta-model-index/-companion/-l-a-n-g-u-a-g-e-s_-r-o-l-e.html","searchKeys":["LANGUAGES_ROLE","const val LANGUAGES_ROLE: String","org.modelix.model.metameta.MetaModelIndex.Companion.LANGUAGES_ROLE"]},{"name":"const val MODEL_URI_VAR_NAME: String","description":"org.modelix.model.client.RestWebModelClient.Companion.MODEL_URI_VAR_NAME","location":"model-client/org.modelix.model.client/-rest-web-model-client/-companion/-m-o-d-e-l_-u-r-i_-v-a-r_-n-a-m-e.html","searchKeys":["MODEL_URI_VAR_NAME","const val MODEL_URI_VAR_NAME: String","org.modelix.model.client.RestWebModelClient.Companion.MODEL_URI_VAR_NAME"]},{"name":"constructor()","description":"org.modelix.model.DependencyBase.DependencyBase","location":"model-client/org.modelix.model/-dependency-base/-dependency-base.html","searchKeys":["DependencyBase","constructor()","org.modelix.model.DependencyBase.DependencyBase"]},{"name":"constructor()","description":"org.modelix.model.client2.ModelClientV2Builder.ModelClientV2Builder","location":"model-client/org.modelix.model.client2/-model-client-v2-builder/-model-client-v2-builder.html","searchKeys":["ModelClientV2Builder","constructor()","org.modelix.model.client2.ModelClientV2Builder.ModelClientV2Builder"]},{"name":"constructor()","description":"org.modelix.model.client2.ModelClientV2PlatformSpecificBuilder.ModelClientV2PlatformSpecificBuilder","location":"model-client/org.modelix.model.client2/-model-client-v2-platform-specific-builder/-model-client-v2-platform-specific-builder.html","searchKeys":["ModelClientV2PlatformSpecificBuilder","constructor()","org.modelix.model.client2.ModelClientV2PlatformSpecificBuilder.ModelClientV2PlatformSpecificBuilder"]},{"name":"constructor()","description":"org.modelix.model.util.pmap.LongKeyPMap.EmptyNode.EmptyNode","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-empty-node/-empty-node.html","searchKeys":["EmptyNode","constructor()","org.modelix.model.util.pmap.LongKeyPMap.EmptyNode.EmptyNode"]},{"name":"constructor()","description":"org.modelix.model.util.pmap.LongKeyPMap.LongKeyPMap","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-long-key-p-map.html","searchKeys":["LongKeyPMap","constructor()","org.modelix.model.util.pmap.LongKeyPMap.LongKeyPMap"]},{"name":"constructor()","description":"org.modelix.model.util.pmap.SmallPMap.SmallPMap","location":"model-client/org.modelix.model.util.pmap/-small-p-map/-small-p-map.html","searchKeys":["SmallPMap","constructor()","org.modelix.model.util.pmap.SmallPMap.SmallPMap"]},{"name":"constructor(baseUrl: String = defaultUrl, authTokenProvider: () -> String?? = null, initialConnectionListeners: List<ConnectionListener> = emptyList(), providedClient: HttpClient? = null)","description":"org.modelix.model.client.RestWebModelClient.RestWebModelClient","location":"model-client/org.modelix.model.client/-rest-web-model-client/-rest-web-model-client.html","searchKeys":["RestWebModelClient","constructor(baseUrl: String = defaultUrl, authTokenProvider: () -> String?? = null, initialConnectionListeners: List<ConnectionListener> = emptyList(), providedClient: HttpClient? = null)","org.modelix.model.client.RestWebModelClient.RestWebModelClient"]},{"name":"constructor(bitmap: Int, children: Array<LongKeyPMap.INode<V?>>)","description":"org.modelix.model.util.pmap.LongKeyPMap.InternalNode.InternalNode","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-internal-node/-internal-node.html","searchKeys":["InternalNode","constructor(bitmap: Int, children: Array<LongKeyPMap.INode<V?>>)","org.modelix.model.util.pmap.LongKeyPMap.InternalNode.InternalNode"]},{"name":"constructor(branch: IBranch)","description":"org.modelix.model.AutoReadTransaction.AutoReadTransaction","location":"model-client/org.modelix.model/-auto-read-transaction/-auto-read-transaction.html","searchKeys":["AutoReadTransaction","constructor(branch: IBranch)","org.modelix.model.AutoReadTransaction.AutoReadTransaction"]},{"name":"constructor(branch: IBranch)","description":"org.modelix.model.AutoTransaction.AutoTransaction","location":"model-client/org.modelix.model/-auto-transaction/-auto-transaction.html","searchKeys":["AutoTransaction","constructor(branch: IBranch)","org.modelix.model.AutoTransaction.AutoTransaction"]},{"name":"constructor(branch: IBranch)","description":"org.modelix.model.AutoTransactionsBranch.AutoTransactionsBranch","location":"model-client/org.modelix.model/-auto-transactions-branch/-auto-transactions-branch.html","searchKeys":["AutoTransactionsBranch","constructor(branch: IBranch)","org.modelix.model.AutoTransactionsBranch.AutoTransactionsBranch"]},{"name":"constructor(branch: IBranch)","description":"org.modelix.model.AutoWriteTransaction.AutoWriteTransaction","location":"model-client/org.modelix.model/-auto-write-transaction/-auto-write-transaction.html","searchKeys":["AutoWriteTransaction","constructor(branch: IBranch)","org.modelix.model.AutoWriteTransaction.AutoWriteTransaction"]},{"name":"constructor(branch: IBranch)","description":"org.modelix.model.BranchDependency.BranchDependency","location":"model-client/org.modelix.model/-branch-dependency/-branch-dependency.html","searchKeys":["BranchDependency","constructor(branch: IBranch)","org.modelix.model.BranchDependency.BranchDependency"]},{"name":"constructor(branch: IBranch)","description":"org.modelix.model.IncrementalBranch.IncrementalBranch","location":"model-client/org.modelix.model/-incremental-branch/-incremental-branch.html","searchKeys":["IncrementalBranch","constructor(branch: IBranch)","org.modelix.model.IncrementalBranch.IncrementalBranch"]},{"name":"constructor(branch: IBranch)","description":"org.modelix.model.client.SimpleIndirectBranch.SimpleIndirectBranch","location":"model-client/org.modelix.model.client/-simple-indirect-branch/-simple-indirect-branch.html","searchKeys":["SimpleIndirectBranch","constructor(branch: IBranch)","org.modelix.model.client.SimpleIndirectBranch.SimpleIndirectBranch"]},{"name":"constructor(branch: IBranch)","description":"org.modelix.model.metameta.MetaModelBranch.MetaModelBranch","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-meta-model-branch.html","searchKeys":["MetaModelBranch","constructor(branch: IBranch)","org.modelix.model.metameta.MetaModelBranch.MetaModelBranch"]},{"name":"constructor(branch: IBranch)","description":"org.modelix.model.metameta.MetaModelSynchronizer.MetaModelSynchronizer","location":"model-client/org.modelix.model.metameta/-meta-model-synchronizer/-meta-model-synchronizer.html","searchKeys":["MetaModelSynchronizer","constructor(branch: IBranch)","org.modelix.model.metameta.MetaModelSynchronizer.MetaModelSynchronizer"]},{"name":"constructor(branch: IBranch, changeCallback: (ChangeJS) -> Unit)","description":"org.modelix.model.client2.ChangeListener.ChangeListener","location":"model-client/org.modelix.model.client2/-change-listener/-change-listener.html","searchKeys":["ChangeListener","constructor(branch: IBranch, changeCallback: (ChangeJS) -> Unit)","org.modelix.model.client2.ChangeListener.ChangeListener"]},{"name":"constructor(branch: IBranch, nodeId: Long)","description":"org.modelix.model.AllChildrenDependency.AllChildrenDependency","location":"model-client/org.modelix.model/-all-children-dependency/-all-children-dependency.html","searchKeys":["AllChildrenDependency","constructor(branch: IBranch, nodeId: Long)","org.modelix.model.AllChildrenDependency.AllChildrenDependency"]},{"name":"constructor(branch: IBranch, nodeId: Long)","description":"org.modelix.model.AllPropertiesDependency.AllPropertiesDependency","location":"model-client/org.modelix.model/-all-properties-dependency/-all-properties-dependency.html","searchKeys":["AllPropertiesDependency","constructor(branch: IBranch, nodeId: Long)","org.modelix.model.AllPropertiesDependency.AllPropertiesDependency"]},{"name":"constructor(branch: IBranch, nodeId: Long)","description":"org.modelix.model.AllReferencesDependency.AllReferencesDependency","location":"model-client/org.modelix.model/-all-references-dependency/-all-references-dependency.html","searchKeys":["AllReferencesDependency","constructor(branch: IBranch, nodeId: Long)","org.modelix.model.AllReferencesDependency.AllReferencesDependency"]},{"name":"constructor(branch: IBranch, nodeId: Long)","description":"org.modelix.model.ContainmentDependency.ContainmentDependency","location":"model-client/org.modelix.model/-containment-dependency/-containment-dependency.html","searchKeys":["ContainmentDependency","constructor(branch: IBranch, nodeId: Long)","org.modelix.model.ContainmentDependency.ContainmentDependency"]},{"name":"constructor(branch: IBranch, nodeId: Long)","description":"org.modelix.model.UnclassifiedNodeDependency.UnclassifiedNodeDependency","location":"model-client/org.modelix.model/-unclassified-node-dependency/-unclassified-node-dependency.html","searchKeys":["UnclassifiedNodeDependency","constructor(branch: IBranch, nodeId: Long)","org.modelix.model.UnclassifiedNodeDependency.UnclassifiedNodeDependency"]},{"name":"constructor(branch: IBranch, nodeId: Long, role: String)","description":"org.modelix.model.PropertyDependency.PropertyDependency","location":"model-client/org.modelix.model/-property-dependency/-property-dependency.html","searchKeys":["PropertyDependency","constructor(branch: IBranch, nodeId: Long, role: String)","org.modelix.model.PropertyDependency.PropertyDependency"]},{"name":"constructor(branch: IBranch, nodeId: Long, role: String)","description":"org.modelix.model.ReferenceDependency.ReferenceDependency","location":"model-client/org.modelix.model/-reference-dependency/-reference-dependency.html","searchKeys":["ReferenceDependency","constructor(branch: IBranch, nodeId: Long, role: String)","org.modelix.model.ReferenceDependency.ReferenceDependency"]},{"name":"constructor(branch: IBranch, nodeId: Long, role: String?)","description":"org.modelix.model.ChildrenDependency.ChildrenDependency","location":"model-client/org.modelix.model/-children-dependency/-children-dependency.html","searchKeys":["ChildrenDependency","constructor(branch: IBranch, nodeId: Long, role: String?)","org.modelix.model.ChildrenDependency.ChildrenDependency"]},{"name":"constructor(cacheSize: Int)","description":"org.modelix.model.SubtreeChanges.SubtreeChanges","location":"model-client/org.modelix.model/-subtree-changes/-subtree-changes.html","searchKeys":["SubtreeChanges","constructor(cacheSize: Int)","org.modelix.model.SubtreeChanges.SubtreeChanges"]},{"name":"constructor(client: IModelClient, repository: RepositoryId, branchName: String?, user: () -> String)","description":"org.modelix.model.client.ActiveBranch.ActiveBranch","location":"model-client/org.modelix.model.client/-active-branch/-active-branch.html","searchKeys":["ActiveBranch","constructor(client: IModelClient, repository: RepositoryId, branchName: String?, user: () -> String)","org.modelix.model.client.ActiveBranch.ActiveBranch"]},{"name":"constructor(client: IModelClientV2, branchRef: BranchReference, providedScope: CoroutineScope? = null)","description":"org.modelix.model.client2.ReplicatedModel.ReplicatedModel","location":"model-client/org.modelix.model.client2/-replicated-model/-replicated-model.html","searchKeys":["ReplicatedModel","constructor(client: IModelClientV2, branchRef: BranchReference, providedScope: CoroutineScope? = null)","org.modelix.model.client2.ReplicatedModel.ReplicatedModel"]},{"name":"constructor(httpClient: HttpClient, baseUrl: String, clientProvidedUserId: String?)","description":"org.modelix.model.client2.ModelClientV2.ModelClientV2","location":"model-client/org.modelix.model.client2/-model-client-v2/-model-client-v2.html","searchKeys":["ModelClientV2","constructor(httpClient: HttpClient, baseUrl: String, clientProvidedUserId: String?)","org.modelix.model.client2.ModelClientV2.ModelClientV2"]},{"name":"constructor(id: Long, uid: String?)","description":"org.modelix.model.metameta.PersistedConcept.PersistedConcept","location":"model-client/org.modelix.model.metameta/-persisted-concept/-persisted-concept.html","searchKeys":["PersistedConcept","constructor(id: Long, uid: String?)","org.modelix.model.metameta.PersistedConcept.PersistedConcept"]},{"name":"constructor(key: K, value: V)","description":"org.modelix.model.util.pmap.SmallPMap.Single.Single","location":"model-client/org.modelix.model.util.pmap/-small-p-map/-single/-single.html","searchKeys":["Single","constructor(key: K, value: V)","org.modelix.model.util.pmap.SmallPMap.Single.Single"]},{"name":"constructor(key: Long, value: V)","description":"org.modelix.model.util.pmap.LongKeyPMap.LeafNode.LeafNode","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-leaf-node/-leaf-node.html","searchKeys":["LeafNode","constructor(key: Long, value: V)","org.modelix.model.util.pmap.LongKeyPMap.LeafNode.LeafNode"]},{"name":"constructor(key: String, keyListener: IKeyListener)","description":"org.modelix.model.client.RestWebModelClient.PollingListener.PollingListener","location":"model-client/org.modelix.model.client/-rest-web-model-client/-polling-listener/-polling-listener.html","searchKeys":["PollingListener","constructor(key: String, keyListener: IKeyListener)","org.modelix.model.client.RestWebModelClient.PollingListener.PollingListener"]},{"name":"constructor(keys: Array<Any?>, values: Array<Any?>)","description":"org.modelix.model.util.pmap.SmallPMap.Multiple.Multiple","location":"model-client/org.modelix.model.util.pmap/-small-p-map/-multiple/-multiple.html","searchKeys":["Multiple","constructor(keys: Array<Any?>, values: Array<Any?>)","org.modelix.model.util.pmap.SmallPMap.Multiple.Multiple"]},{"name":"constructor(listener: IBranchListener)","description":"org.modelix.model.metameta.MetaModelBranch.MMBranchListener.MMBranchListener","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-branch-listener/-m-m-branch-listener.html","searchKeys":["MMBranchListener","constructor(listener: IBranchListener)","org.modelix.model.metameta.MetaModelBranch.MMBranchListener.MMBranchListener"]},{"name":"constructor(model: ReplicatedModel, jsRootNode: INodeJS)","description":"org.modelix.model.client2.BranchJSImpl.BranchJSImpl","location":"model-client/org.modelix.model.client2/-branch-j-s-impl/-branch-j-s-impl.html","searchKeys":["BranchJSImpl","constructor(model: ReplicatedModel, jsRootNode: INodeJS)","org.modelix.model.client2.BranchJSImpl.BranchJSImpl"]},{"name":"constructor(modelClient: ModelClientV2)","description":"org.modelix.model.client2.ClientJSImpl.ClientJSImpl","location":"model-client/org.modelix.model.client2/-client-j-s-impl/-client-j-s-impl.html","searchKeys":["ClientJSImpl","constructor(modelClient: ModelClientV2)","org.modelix.model.client2.ClientJSImpl.ClientJSImpl"]},{"name":"constructor(node: INodeJS)","description":"org.modelix.model.client2.ContainmentChanged.ContainmentChanged","location":"model-client/org.modelix.model.client2/-containment-changed/-containment-changed.html","searchKeys":["ContainmentChanged","constructor(node: INodeJS)","org.modelix.model.client2.ContainmentChanged.ContainmentChanged"]},{"name":"constructor(node: INodeJS, role: String)","description":"org.modelix.model.client2.PropertyChanged.PropertyChanged","location":"model-client/org.modelix.model.client2/-property-changed/-property-changed.html","searchKeys":["PropertyChanged","constructor(node: INodeJS, role: String)","org.modelix.model.client2.PropertyChanged.PropertyChanged"]},{"name":"constructor(node: INodeJS, role: String)","description":"org.modelix.model.client2.ReferenceChanged.ReferenceChanged","location":"model-client/org.modelix.model.client2/-reference-changed/-reference-changed.html","searchKeys":["ReferenceChanged","constructor(node: INodeJS, role: String)","org.modelix.model.client2.ReferenceChanged.ReferenceChanged"]},{"name":"constructor(node: INodeJS, role: String?)","description":"org.modelix.model.client2.ChildrenChanged.ChildrenChanged","location":"model-client/org.modelix.model.client2/-children-changed/-children-changed.html","searchKeys":["ChildrenChanged","constructor(node: INodeJS, role: String?)","org.modelix.model.client2.ChildrenChanged.ChildrenChanged"]},{"name":"constructor(store: IKeyValueStore)","description":"org.modelix.model.KeyValueStoreCache.KeyValueStoreCache","location":"model-client/org.modelix.model/-key-value-store-cache/-key-value-store-cache.html","searchKeys":["KeyValueStoreCache","constructor(store: IKeyValueStore)","org.modelix.model.KeyValueStoreCache.KeyValueStoreCache"]},{"name":"constructor(store: IKeyValueStore)","description":"org.modelix.model.client.AsyncStore.AsyncStore","location":"model-client/org.modelix.model.client/-async-store/-async-store.html","searchKeys":["AsyncStore","constructor(store: IKeyValueStore)","org.modelix.model.client.AsyncStore.AsyncStore"]},{"name":"constructor(store: IKeyValueStore)","description":"org.modelix.model.client.GarbageFilteringStore.GarbageFilteringStore","location":"model-client/org.modelix.model.client/-garbage-filtering-store/-garbage-filtering-store.html","searchKeys":["GarbageFilteringStore","constructor(store: IKeyValueStore)","org.modelix.model.client.GarbageFilteringStore.GarbageFilteringStore"]},{"name":"constructor(store: IKeyValueStore, key: String, coroutineScope: CoroutineScope)","description":"org.modelix.model.client.VersionChangeDetector.VersionChangeDetector","location":"model-client/org.modelix.model.client/-version-change-detector/-version-change-detector.html","searchKeys":["VersionChangeDetector","constructor(store: IKeyValueStore, key: String, coroutineScope: CoroutineScope)","org.modelix.model.client.VersionChangeDetector.VersionChangeDetector"]},{"name":"constructor(transaction: IReadTransaction)","description":"org.modelix.model.IncrementalBranch.IncrementalReadTransaction.IncrementalReadTransaction","location":"model-client/org.modelix.model/-incremental-branch/-incremental-read-transaction/-incremental-read-transaction.html","searchKeys":["IncrementalReadTransaction","constructor(transaction: IReadTransaction)","org.modelix.model.IncrementalBranch.IncrementalReadTransaction.IncrementalReadTransaction"]},{"name":"constructor(transaction: IReadTransaction)","description":"org.modelix.model.metameta.MetaModelBranch.MMReadTransaction.MMReadTransaction","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-read-transaction/-m-m-read-transaction.html","searchKeys":["MMReadTransaction","constructor(transaction: IReadTransaction)","org.modelix.model.metameta.MetaModelBranch.MMReadTransaction.MMReadTransaction"]},{"name":"constructor(transaction: IWriteTransaction)","description":"org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.IncrementalWriteTransaction","location":"model-client/org.modelix.model/-incremental-branch/-incremental-write-transaction/-incremental-write-transaction.html","searchKeys":["IncrementalWriteTransaction","constructor(transaction: IWriteTransaction)","org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.IncrementalWriteTransaction"]},{"name":"constructor(transaction: IWriteTransaction)","description":"org.modelix.model.metameta.MetaModelBranch.MMWriteTransaction.MMWriteTransaction","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-write-transaction/-m-m-write-transaction.html","searchKeys":["MMWriteTransaction","constructor(transaction: IWriteTransaction)","org.modelix.model.metameta.MetaModelBranch.MMWriteTransaction.MMWriteTransaction"]},{"name":"constructor(transaction: TransactionT)","description":"org.modelix.model.IncrementalBranch.IncrementalTransaction.IncrementalTransaction","location":"model-client/org.modelix.model/-incremental-branch/-incremental-transaction/-incremental-transaction.html","searchKeys":["IncrementalTransaction","constructor(transaction: TransactionT)","org.modelix.model.IncrementalBranch.IncrementalTransaction.IncrementalTransaction"]},{"name":"constructor(tree: IBulkTree)","description":"org.modelix.model.metameta.MetaModelBranch.MMBulkTree.MMBulkTree","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-bulk-tree/-m-m-bulk-tree.html","searchKeys":["MMBulkTree","constructor(tree: IBulkTree)","org.modelix.model.metameta.MetaModelBranch.MMBulkTree.MMBulkTree"]},{"name":"constructor(tree: ITree)","description":"org.modelix.model.IncrementalBranch.IncrementalTree.IncrementalTree","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/-incremental-tree.html","searchKeys":["IncrementalTree","constructor(tree: ITree)","org.modelix.model.IncrementalBranch.IncrementalTree.IncrementalTree"]},{"name":"constructor(tree: ITree)","description":"org.modelix.model.metameta.MetaModelBranch.MMTree.MMTree","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-tree/-m-m-tree.html","searchKeys":["MMTree","constructor(tree: ITree)","org.modelix.model.metameta.MetaModelBranch.MMTree.MMTree"]},{"name":"data class AllChildrenDependency(val branch: IBranch, val nodeId: Long) : DependencyBase","description":"org.modelix.model.AllChildrenDependency","location":"model-client/org.modelix.model/-all-children-dependency/index.html","searchKeys":["AllChildrenDependency","data class AllChildrenDependency(val branch: IBranch, val nodeId: Long) : DependencyBase","org.modelix.model.AllChildrenDependency"]},{"name":"data class AllPropertiesDependency(val branch: IBranch, val nodeId: Long) : DependencyBase","description":"org.modelix.model.AllPropertiesDependency","location":"model-client/org.modelix.model/-all-properties-dependency/index.html","searchKeys":["AllPropertiesDependency","data class AllPropertiesDependency(val branch: IBranch, val nodeId: Long) : DependencyBase","org.modelix.model.AllPropertiesDependency"]},{"name":"data class AllReferencesDependency(val branch: IBranch, val nodeId: Long) : DependencyBase","description":"org.modelix.model.AllReferencesDependency","location":"model-client/org.modelix.model/-all-references-dependency/index.html","searchKeys":["AllReferencesDependency","data class AllReferencesDependency(val branch: IBranch, val nodeId: Long) : DependencyBase","org.modelix.model.AllReferencesDependency"]},{"name":"data class BranchDependency(val branch: IBranch) : IStateVariableReference<IBranch> ","description":"org.modelix.model.BranchDependency","location":"model-client/org.modelix.model/-branch-dependency/index.html","searchKeys":["BranchDependency","data class BranchDependency(val branch: IBranch) : IStateVariableReference<IBranch> ","org.modelix.model.BranchDependency"]},{"name":"data class ChildrenChanged(val node: INodeJS, val role: String?) : ChangeJS","description":"org.modelix.model.client2.ChildrenChanged","location":"model-client/org.modelix.model.client2/-children-changed/index.html","searchKeys":["ChildrenChanged","data class ChildrenChanged(val node: INodeJS, val role: String?) : ChangeJS","org.modelix.model.client2.ChildrenChanged"]},{"name":"data class ChildrenDependency(val branch: IBranch, val nodeId: Long, val role: String?) : DependencyBase","description":"org.modelix.model.ChildrenDependency","location":"model-client/org.modelix.model/-children-dependency/index.html","searchKeys":["ChildrenDependency","data class ChildrenDependency(val branch: IBranch, val nodeId: Long, val role: String?) : DependencyBase","org.modelix.model.ChildrenDependency"]},{"name":"data class ContainmentChanged(val node: INodeJS) : ChangeJS","description":"org.modelix.model.client2.ContainmentChanged","location":"model-client/org.modelix.model.client2/-containment-changed/index.html","searchKeys":["ContainmentChanged","data class ContainmentChanged(val node: INodeJS) : ChangeJS","org.modelix.model.client2.ContainmentChanged"]},{"name":"data class ContainmentDependency(val branch: IBranch, val nodeId: Long) : DependencyBase","description":"org.modelix.model.ContainmentDependency","location":"model-client/org.modelix.model/-containment-dependency/index.html","searchKeys":["ContainmentDependency","data class ContainmentDependency(val branch: IBranch, val nodeId: Long) : DependencyBase","org.modelix.model.ContainmentDependency"]},{"name":"data class PersistedConcept(val id: Long, val uid: String?) : IConcept, IConceptReference","description":"org.modelix.model.metameta.PersistedConcept","location":"model-client/org.modelix.model.metameta/-persisted-concept/index.html","searchKeys":["PersistedConcept","data class PersistedConcept(val id: Long, val uid: String?) : IConcept, IConceptReference","org.modelix.model.metameta.PersistedConcept"]},{"name":"data class PropertyChanged(val node: INodeJS, val role: String) : ChangeJS","description":"org.modelix.model.client2.PropertyChanged","location":"model-client/org.modelix.model.client2/-property-changed/index.html","searchKeys":["PropertyChanged","data class PropertyChanged(val node: INodeJS, val role: String) : ChangeJS","org.modelix.model.client2.PropertyChanged"]},{"name":"data class PropertyDependency(val branch: IBranch, val nodeId: Long, val role: String) : DependencyBase","description":"org.modelix.model.PropertyDependency","location":"model-client/org.modelix.model/-property-dependency/index.html","searchKeys":["PropertyDependency","data class PropertyDependency(val branch: IBranch, val nodeId: Long, val role: String) : DependencyBase","org.modelix.model.PropertyDependency"]},{"name":"data class ReferenceChanged(val node: INodeJS, val role: String) : ChangeJS","description":"org.modelix.model.client2.ReferenceChanged","location":"model-client/org.modelix.model.client2/-reference-changed/index.html","searchKeys":["ReferenceChanged","data class ReferenceChanged(val node: INodeJS, val role: String) : ChangeJS","org.modelix.model.client2.ReferenceChanged"]},{"name":"data class ReferenceDependency(val branch: IBranch, val nodeId: Long, val role: String) : DependencyBase","description":"org.modelix.model.ReferenceDependency","location":"model-client/org.modelix.model/-reference-dependency/index.html","searchKeys":["ReferenceDependency","data class ReferenceDependency(val branch: IBranch, val nodeId: Long, val role: String) : DependencyBase","org.modelix.model.ReferenceDependency"]},{"name":"data class UnclassifiedNodeDependency(val branch: IBranch, val nodeId: Long) : DependencyBase","description":"org.modelix.model.UnclassifiedNodeDependency","location":"model-client/org.modelix.model/-unclassified-node-dependency/index.html","searchKeys":["UnclassifiedNodeDependency","data class UnclassifiedNodeDependency(val branch: IBranch, val nodeId: Long) : DependencyBase","org.modelix.model.UnclassifiedNodeDependency"]},{"name":"enum ConnectionStatus : Enum<RestWebModelClient.ConnectionStatus> ","description":"org.modelix.model.client.RestWebModelClient.ConnectionStatus","location":"model-client/org.modelix.model.client/-rest-web-model-client/-connection-status/index.html","searchKeys":["ConnectionStatus","enum ConnectionStatus : Enum<RestWebModelClient.ConnectionStatus> ","org.modelix.model.client.RestWebModelClient.ConnectionStatus"]},{"name":"expect class ModelClientV2PlatformSpecificBuilder : ModelClientV2Builder","description":"org.modelix.model.client2.ModelClientV2PlatformSpecificBuilder","location":"model-client/org.modelix.model.client2/-model-client-v2-platform-specific-builder/index.html","searchKeys":["ModelClientV2PlatformSpecificBuilder","expect class ModelClientV2PlatformSpecificBuilder : ModelClientV2Builder","org.modelix.model.client2.ModelClientV2PlatformSpecificBuilder"]},{"name":"expect class ReplicatedRepository(client: IModelClient, branchReference: BranchReference, user: () -> String)","description":"org.modelix.model.client.ReplicatedRepository","location":"model-client/org.modelix.model.client/-replicated-repository/index.html","searchKeys":["ReplicatedRepository","expect class ReplicatedRepository(client: IModelClient, branchReference: BranchReference, user: () -> String)","org.modelix.model.client.ReplicatedRepository"]},{"name":"expect constructor(client: IModelClient, branchReference: BranchReference, user: () -> String)","description":"org.modelix.model.client.ReplicatedRepository.ReplicatedRepository","location":"model-client/org.modelix.model.client/-replicated-repository/-replicated-repository.html","searchKeys":["ReplicatedRepository","expect constructor(client: IModelClient, branchReference: BranchReference, user: () -> String)","org.modelix.model.client.ReplicatedRepository.ReplicatedRepository"]},{"name":"expect constructor(client: IModelClient, repositoryId: RepositoryId, branchName: String, user: () -> String)","description":"org.modelix.model.client.ReplicatedRepository.ReplicatedRepository","location":"model-client/org.modelix.model.client/-replicated-repository/-replicated-repository.html","searchKeys":["ReplicatedRepository","expect constructor(client: IModelClient, repositoryId: RepositoryId, branchName: String, user: () -> String)","org.modelix.model.client.ReplicatedRepository.ReplicatedRepository"]},{"name":"expect fun dispose()","description":"org.modelix.model.client.ReplicatedRepository.dispose","location":"model-client/org.modelix.model.client/-replicated-repository/dispose.html","searchKeys":["dispose","expect fun dispose()","org.modelix.model.client.ReplicatedRepository.dispose"]},{"name":"expect fun isDisposed(): Boolean","description":"org.modelix.model.client.ReplicatedRepository.isDisposed","location":"model-client/org.modelix.model.client/-replicated-repository/is-disposed.html","searchKeys":["isDisposed","expect fun isDisposed(): Boolean","org.modelix.model.client.ReplicatedRepository.isDisposed"]},{"name":"expect val branch: IBranch","description":"org.modelix.model.client.ReplicatedRepository.branch","location":"model-client/org.modelix.model.client/-replicated-repository/branch.html","searchKeys":["branch","expect val branch: IBranch","org.modelix.model.client.ReplicatedRepository.branch"]},{"name":"expect var localVersion: CLVersion?","description":"org.modelix.model.client.ReplicatedRepository.localVersion","location":"model-client/org.modelix.model.client/-replicated-repository/local-version.html","searchKeys":["localVersion","expect var localVersion: CLVersion?","org.modelix.model.client.ReplicatedRepository.localVersion"]},{"name":"fun <K, V> createS(keys: Iterable<K>?, values: Iterable<V>?): SmallPMap<K, V>","description":"org.modelix.model.util.pmap.SmallPMap.Companion.createS","location":"model-client/org.modelix.model.util.pmap/-small-p-map/-companion/create-s.html","searchKeys":["createS","fun <K, V> createS(keys: Iterable<K>?, values: Iterable<V>?): SmallPMap<K, V>","org.modelix.model.util.pmap.SmallPMap.Companion.createS"]},{"name":"fun <K, V> empty(): SmallPMap<K, V>","description":"org.modelix.model.util.pmap.SmallPMap.Companion.empty","location":"model-client/org.modelix.model.util.pmap/-small-p-map/-companion/empty.html","searchKeys":["empty","fun <K, V> empty(): SmallPMap<K, V>","org.modelix.model.util.pmap.SmallPMap.Companion.empty"]},{"name":"fun <T> empty(): LongKeyPMap.InternalNode<T>","description":"org.modelix.model.util.pmap.LongKeyPMap.InternalNode.Companion.empty","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-internal-node/-companion/empty.html","searchKeys":["empty","fun <T> empty(): LongKeyPMap.InternalNode<T>","org.modelix.model.util.pmap.LongKeyPMap.InternalNode.Companion.empty"]},{"name":"fun <T> intersection(a: Stream<T>, b: Set<T>): Set<T>","description":"org.modelix.model.util.StreamUtils.intersection","location":"model-client/org.modelix.model.util/-stream-utils/intersection.html","searchKeys":["intersection","fun <T> intersection(a: Stream<T>, b: Set<T>): Set<T>","org.modelix.model.util.StreamUtils.intersection"]},{"name":"fun <T> last(list: List<T>): T?","description":"org.modelix.model.util.StreamUtils.last","location":"model-client/org.modelix.model.util/-stream-utils/last.html","searchKeys":["last","fun <T> last(list: List<T>): T?","org.modelix.model.util.StreamUtils.last"]},{"name":"fun <T> readNode(node: INode, body: () -> T): T","description":"org.modelix.model.ModelFacade.readNode","location":"model-client/org.modelix.model/-model-facade/read-node.html","searchKeys":["readNode","fun <T> readNode(node: INode, body: () -> T): T","org.modelix.model.ModelFacade.readNode"]},{"name":"fun <T> removeLast(list: MutableList<T>): T?","description":"org.modelix.model.util.StreamUtils.removeLast","location":"model-client/org.modelix.model.util/-stream-utils/remove-last.html","searchKeys":["removeLast","fun <T> removeLast(list: MutableList<T>): T?","org.modelix.model.util.StreamUtils.removeLast"]},{"name":"fun <T> toList(iterable: Iterable<T>): List<T>","description":"org.modelix.model.util.StreamUtils.toList","location":"model-client/org.modelix.model.util/-stream-utils/to-list.html","searchKeys":["toList","fun <T> toList(iterable: Iterable<T>): List<T>","org.modelix.model.util.StreamUtils.toList"]},{"name":"fun <T> toStream(iterable: Iterable<T>): Stream<T>","description":"org.modelix.model.util.StreamUtils.toStream","location":"model-client/org.modelix.model.util/-stream-utils/to-stream.html","searchKeys":["toStream","fun <T> toStream(iterable: Iterable<T>): Stream<T>","org.modelix.model.util.StreamUtils.toStream"]},{"name":"fun <T> writeNode(node: INode, body: () -> T): T","description":"org.modelix.model.ModelFacade.writeNode","location":"model-client/org.modelix.model/-model-facade/write-node.html","searchKeys":["writeNode","fun <T> writeNode(node: INode, body: () -> T): T","org.modelix.model.ModelFacade.writeNode"]},{"name":"fun <V> create(key: Long, value: V?): LongKeyPMap.LeafNode<V>?","description":"org.modelix.model.util.pmap.LongKeyPMap.LeafNode.Companion.create","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-leaf-node/-companion/create.html","searchKeys":["create","fun <V> create(key: Long, value: V?): LongKeyPMap.LeafNode<V>?","org.modelix.model.util.pmap.LongKeyPMap.LeafNode.Companion.create"]},{"name":"fun IBranch.withAutoTransactions(): AutoTransactionsBranch","description":"org.modelix.model.withAutoTransactions","location":"model-client/org.modelix.model/with-auto-transactions.html","searchKeys":["withAutoTransactions","fun IBranch.withAutoTransactions(): AutoTransactionsBranch","org.modelix.model.withAutoTransactions"]},{"name":"fun IBranch.withIncrementalComputationSupport(): IncrementalBranch","description":"org.modelix.model.withIncrementalComputationSupport","location":"model-client/org.modelix.model/with-incremental-computation-support.html","searchKeys":["withIncrementalComputationSupport","fun IBranch.withIncrementalComputationSupport(): IncrementalBranch","org.modelix.model.withIncrementalComputationSupport"]},{"name":"fun IKeyValueStore.getAllStores(): List<IKeyValueStore>","description":"org.modelix.model.IKeyValueStoreWrapper.Companion.getAllStores","location":"model-client/org.modelix.model/-i-key-value-store-wrapper/-companion/get-all-stores.html","searchKeys":["getAllStores","fun IKeyValueStore.getAllStores(): List<IKeyValueStore>","org.modelix.model.IKeyValueStoreWrapper.Companion.getAllStores"]},{"name":"fun IModelClientV2.getReplicatedModel(branchRef: BranchReference): ReplicatedModel","description":"org.modelix.model.client2.getReplicatedModel","location":"model-client/org.modelix.model.client2/get-replicated-model.html","searchKeys":["getReplicatedModel","fun IModelClientV2.getReplicatedModel(branchRef: BranchReference): ReplicatedModel","org.modelix.model.client2.getReplicatedModel"]},{"name":"fun IModelClientV2.getReplicatedModel(branchRef: BranchReference, scope: CoroutineScope): ReplicatedModel","description":"org.modelix.model.client2.getReplicatedModel","location":"model-client/org.modelix.model.client2/get-replicated-model.html","searchKeys":["getReplicatedModel","fun IModelClientV2.getReplicatedModel(branchRef: BranchReference, scope: CoroutineScope): ReplicatedModel","org.modelix.model.client2.getReplicatedModel"]},{"name":"fun VersionDelta.checkObjectHashes()","description":"org.modelix.model.client2.checkObjectHashes","location":"model-client/org.modelix.model.client2/check-object-hashes.html","searchKeys":["checkObjectHashes","fun VersionDelta.checkObjectHashes()","org.modelix.model.client2.checkObjectHashes"]},{"name":"fun VersionDelta.getAllObjects(): Map<String, String>","description":"org.modelix.model.client2.getAllObjects","location":"model-client/org.modelix.model.client2/get-all-objects.html","searchKeys":["getAllObjects","fun VersionDelta.getAllObjects(): Map<String, String>","org.modelix.model.client2.getAllObjects"]},{"name":"fun accessed(dep: IStateVariableReference<*>)","description":"org.modelix.model.IncrementalBranch.accessed","location":"model-client/org.modelix.model/-incremental-branch/accessed.html","searchKeys":["accessed","fun accessed(dep: IStateVariableReference<*>)","org.modelix.model.IncrementalBranch.accessed"]},{"name":"fun addForbiddenListener(listener: ConnectionListener)","description":"org.modelix.model.client.RestWebModelClient.addForbiddenListener","location":"model-client/org.modelix.model.client/-rest-web-model-client/add-forbidden-listener.html","searchKeys":["addForbiddenListener","fun addForbiddenListener(listener: ConnectionListener)","org.modelix.model.client.RestWebModelClient.addForbiddenListener"]},{"name":"fun addStatusListener(listener: ConnectionStatusListener)","description":"org.modelix.model.client.RestWebModelClient.addStatusListener","location":"model-client/org.modelix.model.client/-rest-web-model-client/add-status-listener.html","searchKeys":["addStatusListener","fun addStatusListener(listener: ConnectionStatusListener)","org.modelix.model.client.RestWebModelClient.addStatusListener"]},{"name":"fun authToken(provider: () -> String?): ModelClientV2Builder","description":"org.modelix.model.client2.ModelClientV2Builder.authToken","location":"model-client/org.modelix.model.client2/-model-client-v2-builder/auth-token.html","searchKeys":["authToken","fun authToken(provider: () -> String?): ModelClientV2Builder","org.modelix.model.client2.ModelClientV2Builder.authToken"]},{"name":"fun build(): ModelClientV2","description":"org.modelix.model.client2.ModelClientV2Builder.build","location":"model-client/org.modelix.model.client2/-model-client-v2-builder/build.html","searchKeys":["build","fun build(): ModelClientV2","org.modelix.model.client2.ModelClientV2Builder.build"]},{"name":"fun builder(): ModelClientV2Builder","description":"org.modelix.model.client2.ModelClientV2.Companion.builder","location":"model-client/org.modelix.model.client2/-model-client-v2/-companion/builder.html","searchKeys":["builder","fun builder(): ModelClientV2Builder","org.modelix.model.client2.ModelClientV2.Companion.builder"]},{"name":"fun checkDisposed()","description":"org.modelix.model.client.ReplicatedRepository.checkDisposed","location":"model-client/org.modelix.model.client/-replicated-repository/check-disposed.html","searchKeys":["checkDisposed","fun checkDisposed()","org.modelix.model.client.ReplicatedRepository.checkDisposed"]},{"name":"fun client(httpClient: HttpClient): ModelClientV2Builder","description":"org.modelix.model.client2.ModelClientV2Builder.client","location":"model-client/org.modelix.model.client2/-model-client-v2-builder/client.html","searchKeys":["client","fun client(httpClient: HttpClient): ModelClientV2Builder","org.modelix.model.client2.ModelClientV2Builder.client"]},{"name":"fun connectClient(url: String): Promise<ClientJS>","description":"org.modelix.model.client2.connectClient","location":"model-client/org.modelix.model.client2/connect-client.html","searchKeys":["connectClient","fun connectClient(url: String): Promise<ClientJS>","org.modelix.model.client2.connectClient"]},{"name":"fun connectTimeout(timeout: Duration): ModelClientV2Builder","description":"org.modelix.model.client2.ModelClientV2Builder.connectTimeout","location":"model-client/org.modelix.model.client2/-model-client-v2-builder/connect-timeout.html","searchKeys":["connectTimeout","fun connectTimeout(timeout: Duration): ModelClientV2Builder","org.modelix.model.client2.ModelClientV2Builder.connectTimeout"]},{"name":"fun createBranchReference(repositoryId: RepositoryId, branchName: String? = null): BranchReference","description":"org.modelix.model.ModelFacade.createBranchReference","location":"model-client/org.modelix.model/-model-facade/create-branch-reference.html","searchKeys":["createBranchReference","fun createBranchReference(repositoryId: RepositoryId, branchName: String? = null): BranchReference","org.modelix.model.ModelFacade.createBranchReference"]},{"name":"fun createRepositoryId(id: String): RepositoryId","description":"org.modelix.model.ModelFacade.createRepositoryId","location":"model-client/org.modelix.model/-model-facade/create-repository-id.html","searchKeys":["createRepositoryId","fun createRepositoryId(id: String): RepositoryId","org.modelix.model.ModelFacade.createRepositoryId"]},{"name":"fun createVersion(tree: CLTree, operations: Array<IOperation>, previousVersion: CLVersion?): CLVersion","description":"org.modelix.model.client.ReplicatedRepository.createVersion","location":"model-client/org.modelix.model.client/-replicated-repository/create-version.html","searchKeys":["createVersion","fun createVersion(tree: CLTree, operations: Array<IOperation>, previousVersion: CLVersion?): CLVersion","org.modelix.model.client.ReplicatedRepository.createVersion"]},{"name":"fun deleteChild(logicalIndex: Int): LongKeyPMap.INode<V?>?","description":"org.modelix.model.util.pmap.LongKeyPMap.InternalNode.deleteChild","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-internal-node/delete-child.html","searchKeys":["deleteChild","fun deleteChild(logicalIndex: Int): LongKeyPMap.INode<V?>?","org.modelix.model.util.pmap.LongKeyPMap.InternalNode.deleteChild"]},{"name":"fun dispose()","description":"org.modelix.model.client.AsyncStore.dispose","location":"model-client/org.modelix.model.client/-async-store/dispose.html","searchKeys":["dispose","fun dispose()","org.modelix.model.client.AsyncStore.dispose"]},{"name":"fun dispose()","description":"org.modelix.model.client.RestWebModelClient.PollingListener.dispose","location":"model-client/org.modelix.model.client/-rest-web-model-client/-polling-listener/dispose.html","searchKeys":["dispose","fun dispose()","org.modelix.model.client.RestWebModelClient.PollingListener.dispose"]},{"name":"fun dispose()","description":"org.modelix.model.client.RestWebModelClient.dispose","location":"model-client/org.modelix.model.client/-rest-web-model-client/dispose.html","searchKeys":["dispose","fun dispose()","org.modelix.model.client.RestWebModelClient.dispose"]},{"name":"fun dispose()","description":"org.modelix.model.client.VersionChangeDetector.dispose","location":"model-client/org.modelix.model.client/-version-change-detector/dispose.html","searchKeys":["dispose","fun dispose()","org.modelix.model.client.VersionChangeDetector.dispose"]},{"name":"fun dispose()","description":"org.modelix.model.client2.ReplicatedModel.dispose","location":"model-client/org.modelix.model.client2/-replicated-model/dispose.html","searchKeys":["dispose","fun dispose()","org.modelix.model.client2.ReplicatedModel.dispose"]},{"name":"fun endEdit(): CLVersion?","description":"org.modelix.model.client.ReplicatedRepository.endEdit","location":"model-client/org.modelix.model.client/-replicated-repository/end-edit.html","searchKeys":["endEdit","fun endEdit(): CLVersion?","org.modelix.model.client.ReplicatedRepository.endEdit"]},{"name":"fun find(propertyValue: String?): Set<Long>","description":"org.modelix.model.ModelIndex.find","location":"model-client/org.modelix.model/-model-index/find.html","searchKeys":["find","fun find(propertyValue: String?): Set<Long>","org.modelix.model.ModelIndex.find"]},{"name":"fun fixDelay(periodMs: Long, r: Runnable): ScheduledFuture<*>","description":"org.modelix.model.client.SharedExecutors.fixDelay","location":"model-client/org.modelix.model.client/-shared-executors/fix-delay.html","searchKeys":["fixDelay","fun fixDelay(periodMs: Long, r: Runnable): ScheduledFuture<*>","org.modelix.model.client.SharedExecutors.fixDelay"]},{"name":"fun fixDelay(periodMs: Long, timeoutMs: Long, r: Runnable): ScheduledFuture<*>","description":"org.modelix.model.client.SharedExecutors.fixDelay","location":"model-client/org.modelix.model.client/-shared-executors/fix-delay.html","searchKeys":["fixDelay","fun fixDelay(periodMs: Long, timeoutMs: Long, r: Runnable): ScheduledFuture<*>","org.modelix.model.client.SharedExecutors.fixDelay"]},{"name":"fun fromTree(tree: ITree): MetaModelIndex","description":"org.modelix.model.metameta.MetaModelIndex.Companion.fromTree","location":"model-client/org.modelix.model.metameta/-meta-model-index/-companion/from-tree.html","searchKeys":["fromTree","fun fromTree(tree: ITree): MetaModelIndex","org.modelix.model.metameta.MetaModelIndex.Companion.fromTree"]},{"name":"fun fromTree(tree: ITree, propertyRole: String): ModelIndex","description":"org.modelix.model.ModelIndex.Companion.fromTree","location":"model-client/org.modelix.model/-model-index/-companion/from-tree.html","searchKeys":["fromTree","fun fromTree(tree: ITree, propertyRole: String): ModelIndex","org.modelix.model.ModelIndex.Companion.fromTree"]},{"name":"fun get(transaction: ITransaction, propertyRole: String): ModelIndex","description":"org.modelix.model.ModelIndex.Companion.get","location":"model-client/org.modelix.model/-model-index/-companion/get.html","searchKeys":["get","fun get(transaction: ITransaction, propertyRole: String): ModelIndex","org.modelix.model.ModelIndex.Companion.get"]},{"name":"fun getAffectedSubtrees(oldTree: ITree, newTree: ITree): Set<Long>","description":"org.modelix.model.SubtreeChanges.getAffectedSubtrees","location":"model-client/org.modelix.model/-subtree-changes/get-affected-subtrees.html","searchKeys":["getAffectedSubtrees","fun getAffectedSubtrees(oldTree: ITree, newTree: ITree): Set<Long>","org.modelix.model.SubtreeChanges.getAffectedSubtrees"]},{"name":"fun getBranch(): IBranch","description":"org.modelix.model.client2.ReplicatedModel.getBranch","location":"model-client/org.modelix.model.client2/-replicated-model/get-branch.html","searchKeys":["getBranch","fun getBranch(): IBranch","org.modelix.model.client2.ReplicatedModel.getBranch"]},{"name":"fun getBranch(node: INode): IBranch?","description":"org.modelix.model.ModelFacade.getBranch","location":"model-client/org.modelix.model/-model-facade/get-branch.html","searchKeys":["getBranch","fun getBranch(node: INode): IBranch?","org.modelix.model.ModelFacade.getBranch"]},{"name":"fun getChild(logicalIndex: Int): LongKeyPMap.INode<V?>?","description":"org.modelix.model.util.pmap.LongKeyPMap.InternalNode.getChild","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-internal-node/get-child.html","searchKeys":["getChild","fun getChild(logicalIndex: Int): LongKeyPMap.INode<V?>?","org.modelix.model.util.pmap.LongKeyPMap.InternalNode.getChild"]},{"name":"fun getChildLinkId(link: IChildLink): Long","description":"org.modelix.model.metameta.MetaModelSynchronizer.getChildLinkId","location":"model-client/org.modelix.model.metameta/-meta-model-synchronizer/get-child-link-id.html","searchKeys":["getChildLinkId","fun getChildLinkId(link: IChildLink): Long","org.modelix.model.metameta.MetaModelSynchronizer.getChildLinkId"]},{"name":"fun getChildLinkId(link: IChildLink): Long?","description":"org.modelix.model.metameta.MetaModelIndex.getChildLinkId","location":"model-client/org.modelix.model.metameta/-meta-model-index/get-child-link-id.html","searchKeys":["getChildLinkId","fun getChildLinkId(link: IChildLink): Long?","org.modelix.model.metameta.MetaModelIndex.getChildLinkId"]},{"name":"fun getConceptId(concept: IConcept): Long","description":"org.modelix.model.metameta.MetaModelSynchronizer.getConceptId","location":"model-client/org.modelix.model.metameta/-meta-model-synchronizer/get-concept-id.html","searchKeys":["getConceptId","fun getConceptId(concept: IConcept): Long","org.modelix.model.metameta.MetaModelSynchronizer.getConceptId"]},{"name":"fun getConceptId(concept: IConcept): Long?","description":"org.modelix.model.metameta.MetaModelIndex.getConceptId","location":"model-client/org.modelix.model.metameta/-meta-model-index/get-concept-id.html","searchKeys":["getConceptId","fun getConceptId(concept: IConcept): Long?","org.modelix.model.metameta.MetaModelIndex.getConceptId"]},{"name":"fun getEmail(): String","description":"org.modelix.model.client.RestWebModelClient.getEmail","location":"model-client/org.modelix.model.client/-rest-web-model-client/get-email.html","searchKeys":["getEmail","fun getEmail(): String","org.modelix.model.client.RestWebModelClient.getEmail"]},{"name":"fun getIndex(): MetaModelIndex","description":"org.modelix.model.metameta.MetaModelSynchronizer.getIndex","location":"model-client/org.modelix.model.metameta/-meta-model-synchronizer/get-index.html","searchKeys":["getIndex","fun getIndex(): MetaModelIndex","org.modelix.model.metameta.MetaModelSynchronizer.getIndex"]},{"name":"fun getLanguageId(lang: ILanguage): Long","description":"org.modelix.model.metameta.MetaModelSynchronizer.getLanguageId","location":"model-client/org.modelix.model.metameta/-meta-model-synchronizer/get-language-id.html","searchKeys":["getLanguageId","fun getLanguageId(lang: ILanguage): Long","org.modelix.model.metameta.MetaModelSynchronizer.getLanguageId"]},{"name":"fun getLanguageId(lang: ILanguage): Long?","description":"org.modelix.model.metameta.MetaModelIndex.getLanguageId","location":"model-client/org.modelix.model.metameta/-meta-model-index/get-language-id.html","searchKeys":["getLanguageId","fun getLanguageId(lang: ILanguage): Long?","org.modelix.model.metameta.MetaModelIndex.getLanguageId"]},{"name":"fun getPropertyId(property: IProperty): Long","description":"org.modelix.model.metameta.MetaModelSynchronizer.getPropertyId","location":"model-client/org.modelix.model.metameta/-meta-model-synchronizer/get-property-id.html","searchKeys":["getPropertyId","fun getPropertyId(property: IProperty): Long","org.modelix.model.metameta.MetaModelSynchronizer.getPropertyId"]},{"name":"fun getPropertyId(property: IProperty): Long?","description":"org.modelix.model.metameta.MetaModelIndex.getPropertyId","location":"model-client/org.modelix.model.metameta/-meta-model-index/get-property-id.html","searchKeys":["getPropertyId","fun getPropertyId(property: IProperty): Long?","org.modelix.model.metameta.MetaModelIndex.getPropertyId"]},{"name":"fun getReferenceLinkId(link: IReferenceLink): Long","description":"org.modelix.model.metameta.MetaModelSynchronizer.getReferenceLinkId","location":"model-client/org.modelix.model.metameta/-meta-model-synchronizer/get-reference-link-id.html","searchKeys":["getReferenceLinkId","fun getReferenceLinkId(link: IReferenceLink): Long","org.modelix.model.metameta.MetaModelSynchronizer.getReferenceLinkId"]},{"name":"fun getReferenceLinkId(link: IReferenceLink): Long?","description":"org.modelix.model.metameta.MetaModelIndex.getReferenceLinkId","location":"model-client/org.modelix.model.metameta/-meta-model-index/get-reference-link-id.html","searchKeys":["getReferenceLinkId","fun getReferenceLinkId(link: IReferenceLink): Long?","org.modelix.model.metameta.MetaModelIndex.getReferenceLinkId"]},{"name":"fun getRootNode(branch: IBranch): INode","description":"org.modelix.model.ModelFacade.getRootNode","location":"model-client/org.modelix.model/-model-facade/get-root-node.html","searchKeys":["getRootNode","fun getRootNode(branch: IBranch): INode","org.modelix.model.ModelFacade.getRootNode"]},{"name":"fun getTokens(): StoredCredential?","description":"org.modelix.model.oauth.ModelixOAuthClient.getTokens","location":"model-client/org.modelix.model.oauth/-modelix-o-auth-client/get-tokens.html","searchKeys":["getTokens","fun getTokens(): StoredCredential?","org.modelix.model.oauth.ModelixOAuthClient.getTokens"]},{"name":"fun incremental(oldIndex: MetaModelIndex, newTree: ITree): MetaModelIndex","description":"org.modelix.model.metameta.MetaModelIndex.Companion.incremental","location":"model-client/org.modelix.model.metameta/-meta-model-index/-companion/incremental.html","searchKeys":["incremental","fun incremental(oldIndex: MetaModelIndex, newTree: ITree): MetaModelIndex","org.modelix.model.metameta.MetaModelIndex.Companion.incremental"]},{"name":"fun incremental(oldIndex: ModelIndex, newTree: ITree): ModelIndex","description":"org.modelix.model.ModelIndex.Companion.incremental","location":"model-client/org.modelix.model/-model-index/-companion/incremental.html","searchKeys":["incremental","fun incremental(oldIndex: ModelIndex, newTree: ITree): ModelIndex","org.modelix.model.ModelIndex.Companion.incremental"]},{"name":"fun indexOf(stream: LongStream, value: Long): Int","description":"org.modelix.model.util.StreamUtils.indexOf","location":"model-client/org.modelix.model.util/-stream-utils/index-of.html","searchKeys":["indexOf","fun indexOf(stream: LongStream, value: Long): Int","org.modelix.model.util.StreamUtils.indexOf"]},{"name":"fun installAuth(config: HttpClientConfig<*>, baseUrl: String, authTokenProvider: () -> String?? = null)","description":"org.modelix.model.oauth.ModelixOAuthClient.installAuth","location":"model-client/org.modelix.model.oauth/-modelix-o-auth-client/install-auth.html","searchKeys":["installAuth","fun installAuth(config: HttpClientConfig<*>, baseUrl: String, authTokenProvider: () -> String?? = null)","org.modelix.model.oauth.ModelixOAuthClient.installAuth"]},{"name":"fun isBitNotSet(bitmap: Int, logicalIndex: Int): Boolean","description":"org.modelix.model.util.pmap.LongKeyPMap.Companion.isBitNotSet","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-companion/is-bit-not-set.html","searchKeys":["isBitNotSet","fun isBitNotSet(bitmap: Int, logicalIndex: Int): Boolean","org.modelix.model.util.pmap.LongKeyPMap.Companion.isBitNotSet"]},{"name":"fun isDisposed(): Boolean","description":"org.modelix.model.client2.ReplicatedModel.isDisposed","location":"model-client/org.modelix.model.client2/-replicated-model/is-disposed.html","searchKeys":["isDisposed","fun isDisposed(): Boolean","org.modelix.model.client2.ReplicatedModel.isDisposed"]},{"name":"fun loadCurrentModel(client: IModelClient, branch: BranchReference): ITree?","description":"org.modelix.model.ModelFacade.loadCurrentModel","location":"model-client/org.modelix.model/-model-facade/load-current-model.html","searchKeys":["loadCurrentModel","fun loadCurrentModel(client: IModelClient, branch: BranchReference): ITree?","org.modelix.model.ModelFacade.loadCurrentModel"]},{"name":"fun loadCurrentVersion(client: IModelClient, branch: BranchReference): CLVersion?","description":"org.modelix.model.ModelFacade.loadCurrentVersion","location":"model-client/org.modelix.model/-model-facade/load-current-version.html","searchKeys":["loadCurrentVersion","fun loadCurrentVersion(client: IModelClient, branch: BranchReference): CLVersion?","org.modelix.model.ModelFacade.loadCurrentVersion"]},{"name":"fun loadModelsFromJson(json: Array<String>, changeCallback: (ChangeJS) -> Unit): INodeJS","description":"org.modelix.model.client2.loadModelsFromJson","location":"model-client/org.modelix.model.client2/load-models-from-json.html","searchKeys":["loadModelsFromJson","fun loadModelsFromJson(json: Array<String>, changeCallback: (ChangeJS) -> Unit): INodeJS","org.modelix.model.client2.loadModelsFromJson"]},{"name":"fun logicalToPhysicalIndex(bitmap: Int, logicalIndex: Int): Int","description":"org.modelix.model.util.pmap.LongKeyPMap.Companion.logicalToPhysicalIndex","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-companion/logical-to-physical-index.html","searchKeys":["logicalToPhysicalIndex","fun logicalToPhysicalIndex(bitmap: Int, logicalIndex: Int): Int","org.modelix.model.util.pmap.LongKeyPMap.Companion.logicalToPhysicalIndex"]},{"name":"fun mergeUpdate(client: IModelClient, branch: BranchReference, baseVersionHash: String? = null, userName: String?, body: (IWriteTransaction) -> Unit): CLVersion","description":"org.modelix.model.ModelFacade.mergeUpdate","location":"model-client/org.modelix.model/-model-facade/merge-update.html","searchKeys":["mergeUpdate","fun mergeUpdate(client: IModelClient, branch: BranchReference, baseVersionHash: String? = null, userName: String?, body: (IWriteTransaction) -> Unit): CLVersion","org.modelix.model.ModelFacade.mergeUpdate"]},{"name":"fun modified(dep: IStateVariableReference<*>)","description":"org.modelix.model.IncrementalBranch.modified","location":"model-client/org.modelix.model/-incremental-branch/modified.html","searchKeys":["modified","fun modified(dep: IStateVariableReference<*>)","org.modelix.model.IncrementalBranch.modified"]},{"name":"fun newLocalTree(): ITree","description":"org.modelix.model.ModelFacade.newLocalTree","location":"model-client/org.modelix.model/-model-facade/new-local-tree.html","searchKeys":["newLocalTree","fun newLocalTree(): ITree","org.modelix.model.ModelFacade.newLocalTree"]},{"name":"fun nodeIdToInode(nodeId: Long): INodeJS","description":"org.modelix.model.client2.ChangeListener.nodeIdToInode","location":"model-client/org.modelix.model.client2/-change-listener/node-id-to-inode.html","searchKeys":["nodeIdToInode","fun nodeIdToInode(nodeId: Long): INodeJS","org.modelix.model.client2.ChangeListener.nodeIdToInode"]},{"name":"fun prefetch()","description":"org.modelix.model.metameta.MetaModelSynchronizer.prefetch","location":"model-client/org.modelix.model.metameta/-meta-model-synchronizer/prefetch.html","searchKeys":["prefetch","fun prefetch()","org.modelix.model.metameta.MetaModelSynchronizer.prefetch"]},{"name":"fun put(key: Long, value: V): LongKeyPMap<V?>","description":"org.modelix.model.util.pmap.LongKeyPMap.put","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/put.html","searchKeys":["put","fun put(key: Long, value: V): LongKeyPMap<V?>","org.modelix.model.util.pmap.LongKeyPMap.put"]},{"name":"fun reconnect()","description":"org.modelix.model.client.RestWebModelClient.reconnect","location":"model-client/org.modelix.model.client/-rest-web-model-client/reconnect.html","searchKeys":["reconnect","fun reconnect()","org.modelix.model.client.RestWebModelClient.reconnect"]},{"name":"fun remove(key: Long): LongKeyPMap<V?>","description":"org.modelix.model.util.pmap.LongKeyPMap.remove","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/remove.html","searchKeys":["remove","fun remove(key: Long): LongKeyPMap<V?>","org.modelix.model.util.pmap.LongKeyPMap.remove"]},{"name":"fun removeStatusListener(listener: ConnectionStatusListener)","description":"org.modelix.model.client.RestWebModelClient.removeStatusListener","location":"model-client/org.modelix.model.client/-rest-web-model-client/remove-status-listener.html","searchKeys":["removeStatusListener","fun removeStatusListener(listener: ConnectionStatusListener)","org.modelix.model.client.RestWebModelClient.removeStatusListener"]},{"name":"fun requestTimeout(timeout: Duration): ModelClientV2Builder","description":"org.modelix.model.client2.ModelClientV2Builder.requestTimeout","location":"model-client/org.modelix.model.client2/-model-client-v2-builder/request-timeout.html","searchKeys":["requestTimeout","fun requestTimeout(timeout: Duration): ModelClientV2Builder","org.modelix.model.client2.ModelClientV2Builder.requestTimeout"]},{"name":"fun resolveConcept(localConceptRef: IConceptReference, tree: ITree): IConcept","description":"org.modelix.model.metameta.MetaModelBranch.resolveConcept","location":"model-client/org.modelix.model.metameta/-meta-model-branch/resolve-concept.html","searchKeys":["resolveConcept","fun resolveConcept(localConceptRef: IConceptReference, tree: ITree): IConcept","org.modelix.model.metameta.MetaModelBranch.resolveConcept"]},{"name":"fun setChild(logicalIndex: Int, child: LongKeyPMap.INode<*>?): LongKeyPMap.INode<V?>?","description":"org.modelix.model.util.pmap.LongKeyPMap.InternalNode.setChild","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-internal-node/set-child.html","searchKeys":["setChild","fun setChild(logicalIndex: Int, child: LongKeyPMap.INode<*>?): LongKeyPMap.INode<V?>?","org.modelix.model.util.pmap.LongKeyPMap.InternalNode.setChild"]},{"name":"fun setClientProvideUserId(userId: String?)","description":"org.modelix.model.client2.ModelClientV2.setClientProvideUserId","location":"model-client/org.modelix.model.client2/-model-client-v2/set-client-provide-user-id.html","searchKeys":["setClientProvideUserId","fun setClientProvideUserId(userId: String?)","org.modelix.model.client2.ModelClientV2.setClientProvideUserId"]},{"name":"fun shutdownAll()","description":"org.modelix.model.client.SharedExecutors.shutdownAll","location":"model-client/org.modelix.model.client/-shared-executors/shutdown-all.html","searchKeys":["shutdownAll","fun shutdownAll()","org.modelix.model.client.SharedExecutors.shutdownAll"]},{"name":"fun sortEntriesByDependency(unsorted: Map<String, String?>): Map<String, String?>","description":"org.modelix.model.client.RestWebModelClient.sortEntriesByDependency","location":"model-client/org.modelix.model.client/-rest-web-model-client/sort-entries-by-dependency.html","searchKeys":["sortEntriesByDependency","fun sortEntriesByDependency(unsorted: Map<String, String?>): Map<String, String?>","org.modelix.model.client.RestWebModelClient.sortEntriesByDependency"]},{"name":"fun start()","description":"org.modelix.model.client.RestWebModelClient.PollingListener.start","location":"model-client/org.modelix.model.client/-rest-web-model-client/-polling-listener/start.html","searchKeys":["start","fun start()","org.modelix.model.client.RestWebModelClient.PollingListener.start"]},{"name":"fun startEdit()","description":"org.modelix.model.client.ReplicatedRepository.startEdit","location":"model-client/org.modelix.model.client/-replicated-repository/start-edit.html","searchKeys":["startEdit","fun startEdit()","org.modelix.model.client.ReplicatedRepository.startEdit"]},{"name":"fun switchBranch(name: String)","description":"org.modelix.model.client.ActiveBranch.switchBranch","location":"model-client/org.modelix.model.client/-active-branch/switch-branch.html","searchKeys":["switchBranch","fun switchBranch(name: String)","org.modelix.model.client.ActiveBranch.switchBranch"]},{"name":"fun toGlobalConcept(localConcept: IConcept, tree: ITree): IConcept","description":"org.modelix.model.metameta.MetaModelBranch.toGlobalConcept","location":"model-client/org.modelix.model.metameta/-meta-model-branch/to-global-concept.html","searchKeys":["toGlobalConcept","fun toGlobalConcept(localConcept: IConcept, tree: ITree): IConcept","org.modelix.model.metameta.MetaModelBranch.toGlobalConcept"]},{"name":"fun toGlobalConceptRef(localConceptRef: IConceptReference, tree: ITree): IConceptReference","description":"org.modelix.model.metameta.MetaModelBranch.toGlobalConceptRef","location":"model-client/org.modelix.model.metameta/-meta-model-branch/to-global-concept-ref.html","searchKeys":["toGlobalConceptRef","fun toGlobalConceptRef(localConceptRef: IConceptReference, tree: ITree): IConceptReference","org.modelix.model.metameta.MetaModelBranch.toGlobalConceptRef"]},{"name":"fun toLocalBranch(tree: ITree): IBranch","description":"org.modelix.model.ModelFacade.toLocalBranch","location":"model-client/org.modelix.model/-model-facade/to-local-branch.html","searchKeys":["toLocalBranch","fun toLocalBranch(tree: ITree): IBranch","org.modelix.model.ModelFacade.toLocalBranch"]},{"name":"fun toLocalConcept(globalConcept: IConcept): IConcept","description":"org.modelix.model.metameta.MetaModelBranch.toLocalConcept","location":"model-client/org.modelix.model.metameta/-meta-model-branch/to-local-concept.html","searchKeys":["toLocalConcept","fun toLocalConcept(globalConcept: IConcept): IConcept","org.modelix.model.metameta.MetaModelBranch.toLocalConcept"]},{"name":"fun toNode(tree: ITree): INode","description":"org.modelix.model.ModelFacade.toNode","location":"model-client/org.modelix.model/-model-facade/to-node.html","searchKeys":["toNode","fun toNode(tree: ITree): INode","org.modelix.model.ModelFacade.toNode"]},{"name":"fun toNodeJs(rootNode: INode): INodeJS","description":"org.modelix.model.client2.toNodeJs","location":"model-client/org.modelix.model.client2/to-node-js.html","searchKeys":["toNodeJs","fun toNodeJs(rootNode: INode): INodeJS","org.modelix.model.client2.toNodeJs"]},{"name":"fun url(url: String): ModelClientV2Builder","description":"org.modelix.model.client2.ModelClientV2Builder.url","location":"model-client/org.modelix.model.client2/-model-client-v2-builder/url.html","searchKeys":["url","fun url(url: String): ModelClientV2Builder","org.modelix.model.client2.ModelClientV2Builder.url"]},{"name":"fun useCanonicalReferences(branch: IBranch)","description":"org.modelix.model.ModelMigrations.useCanonicalReferences","location":"model-client/org.modelix.model/-model-migrations/use-canonical-references.html","searchKeys":["useCanonicalReferences","fun useCanonicalReferences(branch: IBranch)","org.modelix.model.ModelMigrations.useCanonicalReferences"]},{"name":"fun userId(userId: String?): ModelClientV2Builder","description":"org.modelix.model.client2.ModelClientV2Builder.userId","location":"model-client/org.modelix.model.client2/-model-client-v2-builder/user-id.html","searchKeys":["userId","fun userId(userId: String?): ModelClientV2Builder","org.modelix.model.client2.ModelClientV2Builder.userId"]},{"name":"fun valueOf(value: String): RestWebModelClient.ConnectionStatus","description":"org.modelix.model.client.RestWebModelClient.ConnectionStatus.valueOf","location":"model-client/org.modelix.model.client/-rest-web-model-client/-connection-status/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): RestWebModelClient.ConnectionStatus","org.modelix.model.client.RestWebModelClient.ConnectionStatus.valueOf"]},{"name":"fun values(): Array<RestWebModelClient.ConnectionStatus>","description":"org.modelix.model.client.RestWebModelClient.ConnectionStatus.values","location":"model-client/org.modelix.model.client/-rest-web-model-client/-connection-status/values.html","searchKeys":["values","fun values(): Array<RestWebModelClient.ConnectionStatus>","org.modelix.model.client.RestWebModelClient.ConnectionStatus.values"]},{"name":"fun visitChanges(oldMap: LongKeyPMap<V>, visitor: LongKeyPMap.IChangeVisitor<V?>?)","description":"org.modelix.model.util.pmap.LongKeyPMap.visitChanges","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/visit-changes.html","searchKeys":["visitChanges","fun visitChanges(oldMap: LongKeyPMap<V>, visitor: LongKeyPMap.IChangeVisitor<V?>?)","org.modelix.model.util.pmap.LongKeyPMap.visitChanges"]},{"name":"fun visitEntries(visitor: BiPredicate<Long, V?>?)","description":"org.modelix.model.util.pmap.LongKeyPMap.visitEntries","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/visit-entries.html","searchKeys":["visitEntries","fun visitEntries(visitor: BiPredicate<Long, V?>?)","org.modelix.model.util.pmap.LongKeyPMap.visitEntries"]},{"name":"fun wrapTree(tree: ITree): MetaModelBranch.MMTree","description":"org.modelix.model.metameta.MetaModelBranch.wrapTree","location":"model-client/org.modelix.model.metameta/-meta-model-branch/wrap-tree.html","searchKeys":["wrapTree","fun wrapTree(tree: ITree): MetaModelBranch.MMTree","org.modelix.model.metameta.MetaModelBranch.wrapTree"]},{"name":"inner class IncrementalReadTransaction(transaction: IReadTransaction) : IncrementalBranch.IncrementalTransaction<IReadTransaction> , IReadTransaction","description":"org.modelix.model.IncrementalBranch.IncrementalReadTransaction","location":"model-client/org.modelix.model/-incremental-branch/-incremental-read-transaction/index.html","searchKeys":["IncrementalReadTransaction","inner class IncrementalReadTransaction(transaction: IReadTransaction) : IncrementalBranch.IncrementalTransaction<IReadTransaction> , IReadTransaction","org.modelix.model.IncrementalBranch.IncrementalReadTransaction"]},{"name":"inner class IncrementalTree(val tree: ITree) : ITree","description":"org.modelix.model.IncrementalBranch.IncrementalTree","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/index.html","searchKeys":["IncrementalTree","inner class IncrementalTree(val tree: ITree) : ITree","org.modelix.model.IncrementalBranch.IncrementalTree"]},{"name":"inner class IncrementalWriteTransaction(transaction: IWriteTransaction) : IncrementalBranch.IncrementalTransaction<IWriteTransaction> , IWriteTransaction","description":"org.modelix.model.IncrementalBranch.IncrementalWriteTransaction","location":"model-client/org.modelix.model/-incremental-branch/-incremental-write-transaction/index.html","searchKeys":["IncrementalWriteTransaction","inner class IncrementalWriteTransaction(transaction: IWriteTransaction) : IncrementalBranch.IncrementalTransaction<IWriteTransaction> , IWriteTransaction","org.modelix.model.IncrementalBranch.IncrementalWriteTransaction"]},{"name":"inner class MMBranchListener(val listener: IBranchListener) : IBranchListener","description":"org.modelix.model.metameta.MetaModelBranch.MMBranchListener","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-branch-listener/index.html","searchKeys":["MMBranchListener","inner class MMBranchListener(val listener: IBranchListener) : IBranchListener","org.modelix.model.metameta.MetaModelBranch.MMBranchListener"]},{"name":"inner class MMBulkTree(val tree: IBulkTree) : MetaModelBranch.MMTree, IBulkTree, ITreeWrapper","description":"org.modelix.model.metameta.MetaModelBranch.MMBulkTree","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-bulk-tree/index.html","searchKeys":["MMBulkTree","inner class MMBulkTree(val tree: IBulkTree) : MetaModelBranch.MMTree, IBulkTree, ITreeWrapper","org.modelix.model.metameta.MetaModelBranch.MMBulkTree"]},{"name":"inner class MMReadTransaction(val transaction: IReadTransaction) : IReadTransaction, ITransactionWrapper","description":"org.modelix.model.metameta.MetaModelBranch.MMReadTransaction","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-read-transaction/index.html","searchKeys":["MMReadTransaction","inner class MMReadTransaction(val transaction: IReadTransaction) : IReadTransaction, ITransactionWrapper","org.modelix.model.metameta.MetaModelBranch.MMReadTransaction"]},{"name":"inner class MMWriteTransaction(val transaction: IWriteTransaction) : IWriteTransaction, ITransactionWrapper","description":"org.modelix.model.metameta.MetaModelBranch.MMWriteTransaction","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-write-transaction/index.html","searchKeys":["MMWriteTransaction","inner class MMWriteTransaction(val transaction: IWriteTransaction) : IWriteTransaction, ITransactionWrapper","org.modelix.model.metameta.MetaModelBranch.MMWriteTransaction"]},{"name":"inner class PollingListener(val key: String, val keyListener: IKeyListener)","description":"org.modelix.model.client.RestWebModelClient.PollingListener","location":"model-client/org.modelix.model.client/-rest-web-model-client/-polling-listener/index.html","searchKeys":["PollingListener","inner class PollingListener(val key: String, val keyListener: IKeyListener)","org.modelix.model.client.RestWebModelClient.PollingListener"]},{"name":"interface BranchJS","description":"org.modelix.model.client2.BranchJS","location":"model-client/org.modelix.model.client2/-branch-j-s/index.html","searchKeys":["BranchJS","interface BranchJS","org.modelix.model.client2.BranchJS"]},{"name":"interface ChangeJS","description":"org.modelix.model.client2.ChangeJS","location":"model-client/org.modelix.model.client2/-change-j-s/index.html","searchKeys":["ChangeJS","interface ChangeJS","org.modelix.model.client2.ChangeJS"]},{"name":"interface ClientJS","description":"org.modelix.model.client2.ClientJS","location":"model-client/org.modelix.model.client2/-client-j-s/index.html","searchKeys":["ClientJS","interface ClientJS","org.modelix.model.client2.ClientJS"]},{"name":"interface ConnectionListener","description":"org.modelix.model.client.ConnectionListener","location":"model-client/org.modelix.model.client/-connection-listener/index.html","searchKeys":["ConnectionListener","interface ConnectionListener","org.modelix.model.client.ConnectionListener"]},{"name":"interface CustomPMap<K, V>","description":"org.modelix.model.util.pmap.CustomPMap","location":"model-client/org.modelix.model.util.pmap/-custom-p-map/index.html","searchKeys":["CustomPMap","interface CustomPMap<K, V>","org.modelix.model.util.pmap.CustomPMap"]},{"name":"interface IChangeVisitor<V>","description":"org.modelix.model.util.pmap.LongKeyPMap.IChangeVisitor","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-i-change-visitor/index.html","searchKeys":["IChangeVisitor","interface IChangeVisitor<V>","org.modelix.model.util.pmap.LongKeyPMap.IChangeVisitor"]},{"name":"interface IIndirectBranch","description":"org.modelix.model.client.IIndirectBranch","location":"model-client/org.modelix.model.client/-i-indirect-branch/index.html","searchKeys":["IIndirectBranch","interface IIndirectBranch","org.modelix.model.client.IIndirectBranch"]},{"name":"interface IKeyValueStoreWrapper : IKeyValueStore","description":"org.modelix.model.IKeyValueStoreWrapper","location":"model-client/org.modelix.model/-i-key-value-store-wrapper/index.html","searchKeys":["IKeyValueStoreWrapper","interface IKeyValueStoreWrapper : IKeyValueStore","org.modelix.model.IKeyValueStoreWrapper"]},{"name":"interface IModelClient : IKeyValueStore","description":"org.modelix.model.client.IModelClient","location":"model-client/org.modelix.model.client/-i-model-client/index.html","searchKeys":["IModelClient","interface IModelClient : IKeyValueStore","org.modelix.model.client.IModelClient"]},{"name":"interface IModelClientV2","description":"org.modelix.model.client2.IModelClientV2","location":"model-client/org.modelix.model.client2/-i-model-client-v2/index.html","searchKeys":["IModelClientV2","interface IModelClientV2","org.modelix.model.client2.IModelClientV2"]},{"name":"interface INode<V>","description":"org.modelix.model.util.pmap.LongKeyPMap.INode","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-i-node/index.html","searchKeys":["INode","interface INode<V>","org.modelix.model.util.pmap.LongKeyPMap.INode"]},{"name":"object Companion","description":"org.modelix.model.IKeyValueStoreWrapper.Companion","location":"model-client/org.modelix.model/-i-key-value-store-wrapper/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.IKeyValueStoreWrapper.Companion"]},{"name":"object Companion","description":"org.modelix.model.IncrementalBranch.Companion","location":"model-client/org.modelix.model/-incremental-branch/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.IncrementalBranch.Companion"]},{"name":"object Companion","description":"org.modelix.model.KeyValueStoreCache.Companion","location":"model-client/org.modelix.model/-key-value-store-cache/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.KeyValueStoreCache.Companion"]},{"name":"object Companion","description":"org.modelix.model.ModelIndex.Companion","location":"model-client/org.modelix.model/-model-index/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.ModelIndex.Companion"]},{"name":"object Companion","description":"org.modelix.model.SubtreeChanges.Companion","location":"model-client/org.modelix.model/-subtree-changes/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.SubtreeChanges.Companion"]},{"name":"object Companion","description":"org.modelix.model.client.ActiveBranch.Companion","location":"model-client/org.modelix.model.client/-active-branch/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.client.ActiveBranch.Companion"]},{"name":"object Companion","description":"org.modelix.model.client.AsyncStore.Companion","location":"model-client/org.modelix.model.client/-async-store/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.client.AsyncStore.Companion"]},{"name":"object Companion","description":"org.modelix.model.client.ReplicatedRepository.Companion","location":"model-client/org.modelix.model.client/-replicated-repository/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.client.ReplicatedRepository.Companion"]},{"name":"object Companion","description":"org.modelix.model.client.RestWebModelClient.Companion","location":"model-client/org.modelix.model.client/-rest-web-model-client/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.client.RestWebModelClient.Companion"]},{"name":"object Companion","description":"org.modelix.model.client.VersionChangeDetector.Companion","location":"model-client/org.modelix.model.client/-version-change-detector/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.client.VersionChangeDetector.Companion"]},{"name":"object Companion","description":"org.modelix.model.client2.ModelClientV2.Companion","location":"model-client/org.modelix.model.client2/-model-client-v2/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.client2.ModelClientV2.Companion"]},{"name":"object Companion","description":"org.modelix.model.client2.ModelClientV2Builder.Companion","location":"model-client/org.modelix.model.client2/-model-client-v2-builder/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.client2.ModelClientV2Builder.Companion"]},{"name":"object Companion","description":"org.modelix.model.client2.ReplicatedModel.Companion","location":"model-client/org.modelix.model.client2/-replicated-model/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.client2.ReplicatedModel.Companion"]},{"name":"object Companion","description":"org.modelix.model.metameta.MetaModelIndex.Companion","location":"model-client/org.modelix.model.metameta/-meta-model-index/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.metameta.MetaModelIndex.Companion"]},{"name":"object Companion","description":"org.modelix.model.util.pmap.LongKeyPMap.Companion","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.util.pmap.LongKeyPMap.Companion"]},{"name":"object Companion","description":"org.modelix.model.util.pmap.LongKeyPMap.InternalNode.Companion","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-internal-node/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.util.pmap.LongKeyPMap.InternalNode.Companion"]},{"name":"object Companion","description":"org.modelix.model.util.pmap.LongKeyPMap.LeafNode.Companion","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-leaf-node/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.util.pmap.LongKeyPMap.LeafNode.Companion"]},{"name":"object Companion","description":"org.modelix.model.util.pmap.SmallPMap.Companion","location":"model-client/org.modelix.model.util.pmap/-small-p-map/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.util.pmap.SmallPMap.Companion"]},{"name":"object MetaMetaLanguage","description":"org.modelix.model.metameta.MetaMetaLanguage","location":"model-client/org.modelix.model.metameta/-meta-meta-language/index.html","searchKeys":["MetaMetaLanguage","object MetaMetaLanguage","org.modelix.model.metameta.MetaMetaLanguage"]},{"name":"object ModelFacade","description":"org.modelix.model.ModelFacade","location":"model-client/org.modelix.model/-model-facade/index.html","searchKeys":["ModelFacade","object ModelFacade","org.modelix.model.ModelFacade"]},{"name":"object ModelMigrations","description":"org.modelix.model.ModelMigrations","location":"model-client/org.modelix.model/-model-migrations/index.html","searchKeys":["ModelMigrations","object ModelMigrations","org.modelix.model.ModelMigrations"]},{"name":"object ModelixOAuthClient","description":"org.modelix.model.oauth.ModelixOAuthClient","location":"model-client/org.modelix.model.oauth/-modelix-o-auth-client/index.html","searchKeys":["ModelixOAuthClient","object ModelixOAuthClient","org.modelix.model.oauth.ModelixOAuthClient"]},{"name":"object SharedExecutors","description":"org.modelix.model.client.SharedExecutors","location":"model-client/org.modelix.model.client/-shared-executors/index.html","searchKeys":["SharedExecutors","object SharedExecutors","org.modelix.model.client.SharedExecutors"]},{"name":"object StreamUtils","description":"org.modelix.model.util.StreamUtils","location":"model-client/org.modelix.model.util/-stream-utils/index.html","searchKeys":["StreamUtils","object StreamUtils","org.modelix.model.util.StreamUtils"]},{"name":"open class ActiveBranch(val client: IModelClient, val repository: RepositoryId, branchName: String?, user: () -> String) : IIndirectBranch","description":"org.modelix.model.client.ActiveBranch","location":"model-client/org.modelix.model.client/-active-branch/index.html","searchKeys":["ActiveBranch","open class ActiveBranch(val client: IModelClient, val repository: RepositoryId, branchName: String?, user: () -> String) : IIndirectBranch","org.modelix.model.client.ActiveBranch"]},{"name":"open class AutoTransaction(val branch: IBranch) : ITransaction","description":"org.modelix.model.AutoTransaction","location":"model-client/org.modelix.model/-auto-transaction/index.html","searchKeys":["AutoTransaction","open class AutoTransaction(val branch: IBranch) : ITransaction","org.modelix.model.AutoTransaction"]},{"name":"open fun dispose()","description":"org.modelix.model.client.ActiveBranch.dispose","location":"model-client/org.modelix.model.client/-active-branch/dispose.html","searchKeys":["dispose","open fun dispose()","org.modelix.model.client.ActiveBranch.dispose"]},{"name":"open inner class MMTree(val tree: ITree) : ITree","description":"org.modelix.model.metameta.MetaModelBranch.MMTree","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-tree/index.html","searchKeys":["MMTree","open inner class MMTree(val tree: ITree) : ITree","org.modelix.model.metameta.MetaModelBranch.MMTree"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.modelix.model.metameta.MetaModelBranch.MMTree.equals","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-tree/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.modelix.model.metameta.MetaModelBranch.MMTree.equals"]},{"name":"open operator override fun get(key: K): V?","description":"org.modelix.model.util.pmap.SmallPMap.Multiple.get","location":"model-client/org.modelix.model.util.pmap/-small-p-map/-multiple/get.html","searchKeys":["get","open operator override fun get(key: K): V?","org.modelix.model.util.pmap.SmallPMap.Multiple.get"]},{"name":"open operator override fun get(key: K): V?","description":"org.modelix.model.util.pmap.SmallPMap.Single.get","location":"model-client/org.modelix.model.util.pmap/-small-p-map/-single/get.html","searchKeys":["get","open operator override fun get(key: K): V?","org.modelix.model.util.pmap.SmallPMap.Single.get"]},{"name":"open operator override fun get(key: Long, shift: Int): V?","description":"org.modelix.model.util.pmap.LongKeyPMap.EmptyNode.get","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-empty-node/get.html","searchKeys":["get","open operator override fun get(key: Long, shift: Int): V?","org.modelix.model.util.pmap.LongKeyPMap.EmptyNode.get"]},{"name":"open operator override fun get(key: Long, shift: Int): V?","description":"org.modelix.model.util.pmap.LongKeyPMap.InternalNode.get","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-internal-node/get.html","searchKeys":["get","open operator override fun get(key: Long, shift: Int): V?","org.modelix.model.util.pmap.LongKeyPMap.InternalNode.get"]},{"name":"open operator override fun get(key: Long, shift: Int): V?","description":"org.modelix.model.util.pmap.LongKeyPMap.LeafNode.get","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-leaf-node/get.html","searchKeys":["get","open operator override fun get(key: Long, shift: Int): V?","org.modelix.model.util.pmap.LongKeyPMap.LeafNode.get"]},{"name":"open operator override fun get(key: String): String?","description":"org.modelix.model.KeyValueStoreCache.get","location":"model-client/org.modelix.model/-key-value-store-cache/get.html","searchKeys":["get","open operator override fun get(key: String): String?","org.modelix.model.KeyValueStoreCache.get"]},{"name":"open operator override fun get(key: String): String?","description":"org.modelix.model.client.AsyncStore.get","location":"model-client/org.modelix.model.client/-async-store/get.html","searchKeys":["get","open operator override fun get(key: String): String?","org.modelix.model.client.AsyncStore.get"]},{"name":"open operator override fun get(key: String): String?","description":"org.modelix.model.client.GarbageFilteringStore.get","location":"model-client/org.modelix.model.client/-garbage-filtering-store/get.html","searchKeys":["get","open operator override fun get(key: String): String?","org.modelix.model.client.GarbageFilteringStore.get"]},{"name":"open operator override fun get(key: String): String?","description":"org.modelix.model.client.RestWebModelClient.get","location":"model-client/org.modelix.model.client/-rest-web-model-client/get.html","searchKeys":["get","open operator override fun get(key: String): String?","org.modelix.model.client.RestWebModelClient.get"]},{"name":"open override fun <T> computeRead(computable: () -> T): T","description":"org.modelix.model.IncrementalBranch.computeRead","location":"model-client/org.modelix.model/-incremental-branch/compute-read.html","searchKeys":["computeRead","open override fun <T> computeRead(computable: () -> T): T","org.modelix.model.IncrementalBranch.computeRead"]},{"name":"open override fun <T> computeRead(computable: () -> T): T","description":"org.modelix.model.metameta.MetaModelBranch.computeRead","location":"model-client/org.modelix.model.metameta/-meta-model-branch/compute-read.html","searchKeys":["computeRead","open override fun <T> computeRead(computable: () -> T): T","org.modelix.model.metameta.MetaModelBranch.computeRead"]},{"name":"open override fun <T> computeReadT(computable: (IReadTransaction) -> T): T","description":"org.modelix.model.IncrementalBranch.computeReadT","location":"model-client/org.modelix.model/-incremental-branch/compute-read-t.html","searchKeys":["computeReadT","open override fun <T> computeReadT(computable: (IReadTransaction) -> T): T","org.modelix.model.IncrementalBranch.computeReadT"]},{"name":"open override fun <T> computeReadT(computable: (IReadTransaction) -> T): T","description":"org.modelix.model.metameta.MetaModelBranch.computeReadT","location":"model-client/org.modelix.model.metameta/-meta-model-branch/compute-read-t.html","searchKeys":["computeReadT","open override fun <T> computeReadT(computable: (IReadTransaction) -> T): T","org.modelix.model.metameta.MetaModelBranch.computeReadT"]},{"name":"open override fun <T> computeWrite(computable: () -> T): T","description":"org.modelix.model.IncrementalBranch.computeWrite","location":"model-client/org.modelix.model/-incremental-branch/compute-write.html","searchKeys":["computeWrite","open override fun <T> computeWrite(computable: () -> T): T","org.modelix.model.IncrementalBranch.computeWrite"]},{"name":"open override fun <T> computeWrite(computable: () -> T): T","description":"org.modelix.model.metameta.MetaModelBranch.computeWrite","location":"model-client/org.modelix.model.metameta/-meta-model-branch/compute-write.html","searchKeys":["computeWrite","open override fun <T> computeWrite(computable: () -> T): T","org.modelix.model.metameta.MetaModelBranch.computeWrite"]},{"name":"open override fun <T> computeWriteT(computable: (IWriteTransaction) -> T): T","description":"org.modelix.model.IncrementalBranch.computeWriteT","location":"model-client/org.modelix.model/-incremental-branch/compute-write-t.html","searchKeys":["computeWriteT","open override fun <T> computeWriteT(computable: (IWriteTransaction) -> T): T","org.modelix.model.IncrementalBranch.computeWriteT"]},{"name":"open override fun <T> computeWriteT(computable: (IWriteTransaction) -> T): T","description":"org.modelix.model.metameta.MetaModelBranch.computeWriteT","location":"model-client/org.modelix.model.metameta/-meta-model-branch/compute-write-t.html","searchKeys":["computeWriteT","open override fun <T> computeWriteT(computable: (IWriteTransaction) -> T): T","org.modelix.model.metameta.MetaModelBranch.computeWriteT"]},{"name":"open override fun addListener(l: IBranchListener)","description":"org.modelix.model.IncrementalBranch.addListener","location":"model-client/org.modelix.model/-incremental-branch/add-listener.html","searchKeys":["addListener","open override fun addListener(l: IBranchListener)","org.modelix.model.IncrementalBranch.addListener"]},{"name":"open override fun addListener(l: IBranchListener)","description":"org.modelix.model.client.ActiveBranch.addListener","location":"model-client/org.modelix.model.client/-active-branch/add-listener.html","searchKeys":["addListener","open override fun addListener(l: IBranchListener)","org.modelix.model.client.ActiveBranch.addListener"]},{"name":"open override fun addListener(l: IBranchListener)","description":"org.modelix.model.client.SimpleIndirectBranch.addListener","location":"model-client/org.modelix.model.client/-simple-indirect-branch/add-listener.html","searchKeys":["addListener","open override fun addListener(l: IBranchListener)","org.modelix.model.client.SimpleIndirectBranch.addListener"]},{"name":"open override fun addListener(l: IBranchListener)","description":"org.modelix.model.metameta.MetaModelBranch.addListener","location":"model-client/org.modelix.model.metameta/-meta-model-branch/add-listener.html","searchKeys":["addListener","open override fun addListener(l: IBranchListener)","org.modelix.model.metameta.MetaModelBranch.addListener"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConcept?)","description":"org.modelix.model.AutoWriteTransaction.addNewChild","location":"model-client/org.modelix.model/-auto-write-transaction/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConcept?)","org.modelix.model.AutoWriteTransaction.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConcept?)","description":"org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.addNewChild","location":"model-client/org.modelix.model/-incremental-branch/-incremental-write-transaction/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConcept?)","org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConcept?)","description":"org.modelix.model.metameta.MetaModelBranch.MMWriteTransaction.addNewChild","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-write-transaction/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConcept?)","org.modelix.model.metameta.MetaModelBranch.MMWriteTransaction.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConcept?): ITree","description":"org.modelix.model.IncrementalBranch.IncrementalTree.addNewChild","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConcept?): ITree","org.modelix.model.IncrementalBranch.IncrementalTree.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConcept?): ITree","description":"org.modelix.model.metameta.MetaModelBranch.MMTree.addNewChild","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-tree/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConcept?): ITree","org.modelix.model.metameta.MetaModelBranch.MMTree.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConceptReference?)","description":"org.modelix.model.AutoWriteTransaction.addNewChild","location":"model-client/org.modelix.model/-auto-write-transaction/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConceptReference?)","org.modelix.model.AutoWriteTransaction.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConceptReference?)","description":"org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.addNewChild","location":"model-client/org.modelix.model/-incremental-branch/-incremental-write-transaction/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConceptReference?)","org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConceptReference?): ITree","description":"org.modelix.model.IncrementalBranch.IncrementalTree.addNewChild","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConceptReference?): ITree","org.modelix.model.IncrementalBranch.IncrementalTree.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConcept?): Long","description":"org.modelix.model.AutoWriteTransaction.addNewChild","location":"model-client/org.modelix.model/-auto-write-transaction/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConcept?): Long","org.modelix.model.AutoWriteTransaction.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConcept?): Long","description":"org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.addNewChild","location":"model-client/org.modelix.model/-incremental-branch/-incremental-write-transaction/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConcept?): Long","org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConcept?): Long","description":"org.modelix.model.metameta.MetaModelBranch.MMWriteTransaction.addNewChild","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-write-transaction/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConcept?): Long","org.modelix.model.metameta.MetaModelBranch.MMWriteTransaction.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConceptReference?): Long","description":"org.modelix.model.AutoWriteTransaction.addNewChild","location":"model-client/org.modelix.model/-auto-write-transaction/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConceptReference?): Long","org.modelix.model.AutoWriteTransaction.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConceptReference?): Long","description":"org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.addNewChild","location":"model-client/org.modelix.model/-incremental-branch/-incremental-write-transaction/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConceptReference?): Long","org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.addNewChild"]},{"name":"open override fun addNewChildren(parentId: Long, role: String?, index: Int, childIds: LongArray, concepts: Array<IConceptReference?>)","description":"org.modelix.model.AutoWriteTransaction.addNewChildren","location":"model-client/org.modelix.model/-auto-write-transaction/add-new-children.html","searchKeys":["addNewChildren","open override fun addNewChildren(parentId: Long, role: String?, index: Int, childIds: LongArray, concepts: Array<IConceptReference?>)","org.modelix.model.AutoWriteTransaction.addNewChildren"]},{"name":"open override fun addNewChildren(parentId: Long, role: String?, index: Int, childIds: LongArray, concepts: Array<IConceptReference?>)","description":"org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.addNewChildren","location":"model-client/org.modelix.model/-incremental-branch/-incremental-write-transaction/add-new-children.html","searchKeys":["addNewChildren","open override fun addNewChildren(parentId: Long, role: String?, index: Int, childIds: LongArray, concepts: Array<IConceptReference?>)","org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.addNewChildren"]},{"name":"open override fun addNewChildren(parentId: Long, role: String?, index: Int, concepts: Array<IConceptReference?>): LongArray","description":"org.modelix.model.AutoWriteTransaction.addNewChildren","location":"model-client/org.modelix.model/-auto-write-transaction/add-new-children.html","searchKeys":["addNewChildren","open override fun addNewChildren(parentId: Long, role: String?, index: Int, concepts: Array<IConceptReference?>): LongArray","org.modelix.model.AutoWriteTransaction.addNewChildren"]},{"name":"open override fun addNewChildren(parentId: Long, role: String?, index: Int, concepts: Array<IConceptReference?>): LongArray","description":"org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.addNewChildren","location":"model-client/org.modelix.model/-incremental-branch/-incremental-write-transaction/add-new-children.html","searchKeys":["addNewChildren","open override fun addNewChildren(parentId: Long, role: String?, index: Int, concepts: Array<IConceptReference?>): LongArray","org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.addNewChildren"]},{"name":"open override fun addNewChildren(parentId: Long, role: String?, index: Int, newIds: LongArray, concepts: Array<IConcept?>): ITree","description":"org.modelix.model.IncrementalBranch.IncrementalTree.addNewChildren","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/add-new-children.html","searchKeys":["addNewChildren","open override fun addNewChildren(parentId: Long, role: String?, index: Int, newIds: LongArray, concepts: Array<IConcept?>): ITree","org.modelix.model.IncrementalBranch.IncrementalTree.addNewChildren"]},{"name":"open override fun addNewChildren(parentId: Long, role: String?, index: Int, newIds: LongArray, concepts: Array<IConcept?>): ITree","description":"org.modelix.model.metameta.MetaModelBranch.MMTree.addNewChildren","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-tree/add-new-children.html","searchKeys":["addNewChildren","open override fun addNewChildren(parentId: Long, role: String?, index: Int, newIds: LongArray, concepts: Array<IConcept?>): ITree","org.modelix.model.metameta.MetaModelBranch.MMTree.addNewChildren"]},{"name":"open override fun addNewChildren(parentId: Long, role: String?, index: Int, newIds: LongArray, concepts: Array<IConceptReference?>): ITree","description":"org.modelix.model.IncrementalBranch.IncrementalTree.addNewChildren","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/add-new-children.html","searchKeys":["addNewChildren","open override fun addNewChildren(parentId: Long, role: String?, index: Int, newIds: LongArray, concepts: Array<IConceptReference?>): ITree","org.modelix.model.IncrementalBranch.IncrementalTree.addNewChildren"]},{"name":"open override fun canRead(): Boolean","description":"org.modelix.model.IncrementalBranch.canRead","location":"model-client/org.modelix.model/-incremental-branch/can-read.html","searchKeys":["canRead","open override fun canRead(): Boolean","org.modelix.model.IncrementalBranch.canRead"]},{"name":"open override fun canWrite(): Boolean","description":"org.modelix.model.IncrementalBranch.canWrite","location":"model-client/org.modelix.model/-incremental-branch/can-write.html","searchKeys":["canWrite","open override fun canWrite(): Boolean","org.modelix.model.IncrementalBranch.canWrite"]},{"name":"open override fun close()","description":"org.modelix.model.client2.ModelClientV2.close","location":"model-client/org.modelix.model.client2/-model-client-v2/close.html","searchKeys":["close","open override fun close()","org.modelix.model.client2.ModelClientV2.close"]},{"name":"open override fun connectBranch(repositoryId: String, branchId: String, changeCallback: (ChangeJS) -> Unit): Promise<BranchJS>","description":"org.modelix.model.client2.ClientJSImpl.connectBranch","location":"model-client/org.modelix.model.client2/-client-j-s-impl/connect-branch.html","searchKeys":["connectBranch","open override fun connectBranch(repositoryId: String, branchId: String, changeCallback: (ChangeJS) -> Unit): Promise<BranchJS>","org.modelix.model.client2.ClientJSImpl.connectBranch"]},{"name":"open override fun containsKey(key: K): Boolean","description":"org.modelix.model.util.pmap.SmallPMap.Multiple.containsKey","location":"model-client/org.modelix.model.util.pmap/-small-p-map/-multiple/contains-key.html","searchKeys":["containsKey","open override fun containsKey(key: K): Boolean","org.modelix.model.util.pmap.SmallPMap.Multiple.containsKey"]},{"name":"open override fun containsKey(key: K): Boolean","description":"org.modelix.model.util.pmap.SmallPMap.Single.containsKey","location":"model-client/org.modelix.model.util.pmap/-small-p-map/-single/contains-key.html","searchKeys":["containsKey","open override fun containsKey(key: K): Boolean","org.modelix.model.util.pmap.SmallPMap.Single.containsKey"]},{"name":"open override fun containsNode(nodeId: Long): Boolean","description":"org.modelix.model.AutoTransaction.containsNode","location":"model-client/org.modelix.model/-auto-transaction/contains-node.html","searchKeys":["containsNode","open override fun containsNode(nodeId: Long): Boolean","org.modelix.model.AutoTransaction.containsNode"]},{"name":"open override fun containsNode(nodeId: Long): Boolean","description":"org.modelix.model.IncrementalBranch.IncrementalTransaction.containsNode","location":"model-client/org.modelix.model/-incremental-branch/-incremental-transaction/contains-node.html","searchKeys":["containsNode","open override fun containsNode(nodeId: Long): Boolean","org.modelix.model.IncrementalBranch.IncrementalTransaction.containsNode"]},{"name":"open override fun containsNode(nodeId: Long): Boolean","description":"org.modelix.model.IncrementalBranch.IncrementalTree.containsNode","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/contains-node.html","searchKeys":["containsNode","open override fun containsNode(nodeId: Long): Boolean","org.modelix.model.IncrementalBranch.IncrementalTree.containsNode"]},{"name":"open override fun deleteNode(nodeId: Long)","description":"org.modelix.model.AutoWriteTransaction.deleteNode","location":"model-client/org.modelix.model/-auto-write-transaction/delete-node.html","searchKeys":["deleteNode","open override fun deleteNode(nodeId: Long)","org.modelix.model.AutoWriteTransaction.deleteNode"]},{"name":"open override fun deleteNode(nodeId: Long)","description":"org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.deleteNode","location":"model-client/org.modelix.model/-incremental-branch/-incremental-write-transaction/delete-node.html","searchKeys":["deleteNode","open override fun deleteNode(nodeId: Long)","org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.deleteNode"]},{"name":"open override fun deleteNode(nodeId: Long): ITree","description":"org.modelix.model.IncrementalBranch.IncrementalTree.deleteNode","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/delete-node.html","searchKeys":["deleteNode","open override fun deleteNode(nodeId: Long): ITree","org.modelix.model.IncrementalBranch.IncrementalTree.deleteNode"]},{"name":"open override fun deleteNode(nodeId: Long): ITree","description":"org.modelix.model.metameta.MetaModelBranch.MMTree.deleteNode","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-tree/delete-node.html","searchKeys":["deleteNode","open override fun deleteNode(nodeId: Long): ITree","org.modelix.model.metameta.MetaModelBranch.MMTree.deleteNode"]},{"name":"open override fun deleteNodes(nodeIds: LongArray): ITree","description":"org.modelix.model.IncrementalBranch.IncrementalTree.deleteNodes","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/delete-nodes.html","searchKeys":["deleteNodes","open override fun deleteNodes(nodeIds: LongArray): ITree","org.modelix.model.IncrementalBranch.IncrementalTree.deleteNodes"]},{"name":"open override fun deleteNodes(nodeIds: LongArray): ITree","description":"org.modelix.model.metameta.MetaModelBranch.MMTree.deleteNodes","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-tree/delete-nodes.html","searchKeys":["deleteNodes","open override fun deleteNodes(nodeIds: LongArray): ITree","org.modelix.model.metameta.MetaModelBranch.MMTree.deleteNodes"]},{"name":"open override fun dispose()","description":"org.modelix.model.client2.BranchJSImpl.dispose","location":"model-client/org.modelix.model.client2/-branch-j-s-impl/dispose.html","searchKeys":["dispose","open override fun dispose()","org.modelix.model.client2.BranchJSImpl.dispose"]},{"name":"open override fun dispose()","description":"org.modelix.model.client2.ClientJSImpl.dispose","location":"model-client/org.modelix.model.client2/-client-j-s-impl/dispose.html","searchKeys":["dispose","open override fun dispose()","org.modelix.model.client2.ClientJSImpl.dispose"]},{"name":"open override fun fetchBranches(repositoryId: String): Promise<Array<String>>","description":"org.modelix.model.client2.ClientJSImpl.fetchBranches","location":"model-client/org.modelix.model.client2/-client-j-s-impl/fetch-branches.html","searchKeys":["fetchBranches","open override fun fetchBranches(repositoryId: String): Promise<Array<String>>","org.modelix.model.client2.ClientJSImpl.fetchBranches"]},{"name":"open override fun fetchRepositories(): Promise<Array<String>>","description":"org.modelix.model.client2.ClientJSImpl.fetchRepositories","location":"model-client/org.modelix.model.client2/-client-j-s-impl/fetch-repositories.html","searchKeys":["fetchRepositories","open override fun fetchRepositories(): Promise<Array<String>>","org.modelix.model.client2.ClientJSImpl.fetchRepositories"]},{"name":"open override fun getAll(keys: Iterable<String>): Map<String, String?>","description":"org.modelix.model.client.RestWebModelClient.getAll","location":"model-client/org.modelix.model.client/-rest-web-model-client/get-all.html","searchKeys":["getAll","open override fun getAll(keys: Iterable<String>): Map<String, String?>","org.modelix.model.client.RestWebModelClient.getAll"]},{"name":"open override fun getAll(keys_: Iterable<String>): Map<String, String?>","description":"org.modelix.model.KeyValueStoreCache.getAll","location":"model-client/org.modelix.model/-key-value-store-cache/get-all.html","searchKeys":["getAll","open override fun getAll(keys_: Iterable<String>): Map<String, String?>","org.modelix.model.KeyValueStoreCache.getAll"]},{"name":"open override fun getAll(keys_: Iterable<String>): Map<String, String?>","description":"org.modelix.model.client.AsyncStore.getAll","location":"model-client/org.modelix.model.client/-async-store/get-all.html","searchKeys":["getAll","open override fun getAll(keys_: Iterable<String>): Map<String, String?>","org.modelix.model.client.AsyncStore.getAll"]},{"name":"open override fun getAll(keys_: Iterable<String>): Map<String, String?>","description":"org.modelix.model.client.GarbageFilteringStore.getAll","location":"model-client/org.modelix.model.client/-garbage-filtering-store/get-all.html","searchKeys":["getAll","open override fun getAll(keys_: Iterable<String>): Map<String, String?>","org.modelix.model.client.GarbageFilteringStore.getAll"]},{"name":"open override fun getAllChildLinks(): List<IChildLink>","description":"org.modelix.model.metameta.PersistedConcept.getAllChildLinks","location":"model-client/org.modelix.model.metameta/-persisted-concept/get-all-child-links.html","searchKeys":["getAllChildLinks","open override fun getAllChildLinks(): List<IChildLink>","org.modelix.model.metameta.PersistedConcept.getAllChildLinks"]},{"name":"open override fun getAllChildren(parentId: Long): Iterable<Long>","description":"org.modelix.model.AutoTransaction.getAllChildren","location":"model-client/org.modelix.model/-auto-transaction/get-all-children.html","searchKeys":["getAllChildren","open override fun getAllChildren(parentId: Long): Iterable<Long>","org.modelix.model.AutoTransaction.getAllChildren"]},{"name":"open override fun getAllChildren(parentId: Long): Iterable<Long>","description":"org.modelix.model.IncrementalBranch.IncrementalTransaction.getAllChildren","location":"model-client/org.modelix.model/-incremental-branch/-incremental-transaction/get-all-children.html","searchKeys":["getAllChildren","open override fun getAllChildren(parentId: Long): Iterable<Long>","org.modelix.model.IncrementalBranch.IncrementalTransaction.getAllChildren"]},{"name":"open override fun getAllChildren(parentId: Long): Iterable<Long>","description":"org.modelix.model.IncrementalBranch.IncrementalTree.getAllChildren","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/get-all-children.html","searchKeys":["getAllChildren","open override fun getAllChildren(parentId: Long): Iterable<Long>","org.modelix.model.IncrementalBranch.IncrementalTree.getAllChildren"]},{"name":"open override fun getAllProperties(): List<IProperty>","description":"org.modelix.model.metameta.PersistedConcept.getAllProperties","location":"model-client/org.modelix.model.metameta/-persisted-concept/get-all-properties.html","searchKeys":["getAllProperties","open override fun getAllProperties(): List<IProperty>","org.modelix.model.metameta.PersistedConcept.getAllProperties"]},{"name":"open override fun getAllReferenceLinks(): List<IReferenceLink>","description":"org.modelix.model.metameta.PersistedConcept.getAllReferenceLinks","location":"model-client/org.modelix.model.metameta/-persisted-concept/get-all-reference-links.html","searchKeys":["getAllReferenceLinks","open override fun getAllReferenceLinks(): List<IReferenceLink>","org.modelix.model.metameta.PersistedConcept.getAllReferenceLinks"]},{"name":"open override fun getAncestors(nodeIds: Iterable<Long>, includeSelf: Boolean): Set<Long>","description":"org.modelix.model.metameta.MetaModelBranch.MMBulkTree.getAncestors","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-bulk-tree/get-ancestors.html","searchKeys":["getAncestors","open override fun getAncestors(nodeIds: Iterable<Long>, includeSelf: Boolean): Set<Long>","org.modelix.model.metameta.MetaModelBranch.MMBulkTree.getAncestors"]},{"name":"open override fun getChildLink(name: String): IChildLink","description":"org.modelix.model.metameta.PersistedConcept.getChildLink","location":"model-client/org.modelix.model.metameta/-persisted-concept/get-child-link.html","searchKeys":["getChildLink","open override fun getChildLink(name: String): IChildLink","org.modelix.model.metameta.PersistedConcept.getChildLink"]},{"name":"open override fun getChildRoles(sourceId: Long): Iterable<String?>","description":"org.modelix.model.IncrementalBranch.IncrementalTree.getChildRoles","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/get-child-roles.html","searchKeys":["getChildRoles","open override fun getChildRoles(sourceId: Long): Iterable<String?>","org.modelix.model.IncrementalBranch.IncrementalTree.getChildRoles"]},{"name":"open override fun getChildren(parentId: Long, role: String?): Iterable<Long>","description":"org.modelix.model.AutoTransaction.getChildren","location":"model-client/org.modelix.model/-auto-transaction/get-children.html","searchKeys":["getChildren","open override fun getChildren(parentId: Long, role: String?): Iterable<Long>","org.modelix.model.AutoTransaction.getChildren"]},{"name":"open override fun getChildren(parentId: Long, role: String?): Iterable<Long>","description":"org.modelix.model.IncrementalBranch.IncrementalTransaction.getChildren","location":"model-client/org.modelix.model/-incremental-branch/-incremental-transaction/get-children.html","searchKeys":["getChildren","open override fun getChildren(parentId: Long, role: String?): Iterable<Long>","org.modelix.model.IncrementalBranch.IncrementalTransaction.getChildren"]},{"name":"open override fun getChildren(parentId: Long, role: String?): Iterable<Long>","description":"org.modelix.model.IncrementalBranch.IncrementalTree.getChildren","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/get-children.html","searchKeys":["getChildren","open override fun getChildren(parentId: Long, role: String?): Iterable<Long>","org.modelix.model.IncrementalBranch.IncrementalTree.getChildren"]},{"name":"open override fun getClientId(): Int","description":"org.modelix.model.client2.ModelClientV2.getClientId","location":"model-client/org.modelix.model.client2/-model-client-v2/get-client-id.html","searchKeys":["getClientId","open override fun getClientId(): Int","org.modelix.model.client2.ModelClientV2.getClientId"]},{"name":"open override fun getConcept(nodeId: Long): IConcept?","description":"org.modelix.model.AutoTransaction.getConcept","location":"model-client/org.modelix.model/-auto-transaction/get-concept.html","searchKeys":["getConcept","open override fun getConcept(nodeId: Long): IConcept?","org.modelix.model.AutoTransaction.getConcept"]},{"name":"open override fun getConcept(nodeId: Long): IConcept?","description":"org.modelix.model.IncrementalBranch.IncrementalTransaction.getConcept","location":"model-client/org.modelix.model/-incremental-branch/-incremental-transaction/get-concept.html","searchKeys":["getConcept","open override fun getConcept(nodeId: Long): IConcept?","org.modelix.model.IncrementalBranch.IncrementalTransaction.getConcept"]},{"name":"open override fun getConcept(nodeId: Long): IConcept?","description":"org.modelix.model.IncrementalBranch.IncrementalTree.getConcept","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/get-concept.html","searchKeys":["getConcept","open override fun getConcept(nodeId: Long): IConcept?","org.modelix.model.IncrementalBranch.IncrementalTree.getConcept"]},{"name":"open override fun getConcept(nodeId: Long): IConcept?","description":"org.modelix.model.metameta.MetaModelBranch.MMReadTransaction.getConcept","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-read-transaction/get-concept.html","searchKeys":["getConcept","open override fun getConcept(nodeId: Long): IConcept?","org.modelix.model.metameta.MetaModelBranch.MMReadTransaction.getConcept"]},{"name":"open override fun getConcept(nodeId: Long): IConcept?","description":"org.modelix.model.metameta.MetaModelBranch.MMTree.getConcept","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-tree/get-concept.html","searchKeys":["getConcept","open override fun getConcept(nodeId: Long): IConcept?","org.modelix.model.metameta.MetaModelBranch.MMTree.getConcept"]},{"name":"open override fun getConcept(nodeId: Long): IConcept?","description":"org.modelix.model.metameta.MetaModelBranch.MMWriteTransaction.getConcept","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-write-transaction/get-concept.html","searchKeys":["getConcept","open override fun getConcept(nodeId: Long): IConcept?","org.modelix.model.metameta.MetaModelBranch.MMWriteTransaction.getConcept"]},{"name":"open override fun getConceptReference(nodeId: Long): IConceptReference?","description":"org.modelix.model.AutoTransaction.getConceptReference","location":"model-client/org.modelix.model/-auto-transaction/get-concept-reference.html","searchKeys":["getConceptReference","open override fun getConceptReference(nodeId: Long): IConceptReference?","org.modelix.model.AutoTransaction.getConceptReference"]},{"name":"open override fun getConceptReference(nodeId: Long): IConceptReference?","description":"org.modelix.model.IncrementalBranch.IncrementalTransaction.getConceptReference","location":"model-client/org.modelix.model/-incremental-branch/-incremental-transaction/get-concept-reference.html","searchKeys":["getConceptReference","open override fun getConceptReference(nodeId: Long): IConceptReference?","org.modelix.model.IncrementalBranch.IncrementalTransaction.getConceptReference"]},{"name":"open override fun getConceptReference(nodeId: Long): IConceptReference?","description":"org.modelix.model.IncrementalBranch.IncrementalTree.getConceptReference","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/get-concept-reference.html","searchKeys":["getConceptReference","open override fun getConceptReference(nodeId: Long): IConceptReference?","org.modelix.model.IncrementalBranch.IncrementalTree.getConceptReference"]},{"name":"open override fun getConceptReference(nodeId: Long): IConceptReference?","description":"org.modelix.model.metameta.MetaModelBranch.MMTree.getConceptReference","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-tree/get-concept-reference.html","searchKeys":["getConceptReference","open override fun getConceptReference(nodeId: Long): IConceptReference?","org.modelix.model.metameta.MetaModelBranch.MMTree.getConceptReference"]},{"name":"open override fun getDescendants(root: Long, includeSelf: Boolean): Iterable<CLNode>","description":"org.modelix.model.metameta.MetaModelBranch.MMBulkTree.getDescendants","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-bulk-tree/get-descendants.html","searchKeys":["getDescendants","open override fun getDescendants(root: Long, includeSelf: Boolean): Iterable<CLNode>","org.modelix.model.metameta.MetaModelBranch.MMBulkTree.getDescendants"]},{"name":"open override fun getDescendants(roots: Iterable<Long>, includeSelf: Boolean): Iterable<CLNode>","description":"org.modelix.model.metameta.MetaModelBranch.MMBulkTree.getDescendants","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-bulk-tree/get-descendants.html","searchKeys":["getDescendants","open override fun getDescendants(roots: Iterable<Long>, includeSelf: Boolean): Iterable<CLNode>","org.modelix.model.metameta.MetaModelBranch.MMBulkTree.getDescendants"]},{"name":"open override fun getDirectSuperConcepts(): List<IConcept>","description":"org.modelix.model.metameta.PersistedConcept.getDirectSuperConcepts","location":"model-client/org.modelix.model.metameta/-persisted-concept/get-direct-super-concepts.html","searchKeys":["getDirectSuperConcepts","open override fun getDirectSuperConcepts(): List<IConcept>","org.modelix.model.metameta.PersistedConcept.getDirectSuperConcepts"]},{"name":"open override fun getGroup(): AllChildrenDependency","description":"org.modelix.model.ChildrenDependency.getGroup","location":"model-client/org.modelix.model/-children-dependency/get-group.html","searchKeys":["getGroup","open override fun getGroup(): AllChildrenDependency","org.modelix.model.ChildrenDependency.getGroup"]},{"name":"open override fun getGroup(): AllPropertiesDependency","description":"org.modelix.model.PropertyDependency.getGroup","location":"model-client/org.modelix.model/-property-dependency/get-group.html","searchKeys":["getGroup","open override fun getGroup(): AllPropertiesDependency","org.modelix.model.PropertyDependency.getGroup"]},{"name":"open override fun getGroup(): AllReferencesDependency","description":"org.modelix.model.ReferenceDependency.getGroup","location":"model-client/org.modelix.model/-reference-dependency/get-group.html","searchKeys":["getGroup","open override fun getGroup(): AllReferencesDependency","org.modelix.model.ReferenceDependency.getGroup"]},{"name":"open override fun getGroup(): IStateVariableGroup?","description":"org.modelix.model.BranchDependency.getGroup","location":"model-client/org.modelix.model/-branch-dependency/get-group.html","searchKeys":["getGroup","open override fun getGroup(): IStateVariableGroup?","org.modelix.model.BranchDependency.getGroup"]},{"name":"open override fun getGroup(): IStateVariableGroup?","description":"org.modelix.model.UnclassifiedNodeDependency.getGroup","location":"model-client/org.modelix.model/-unclassified-node-dependency/get-group.html","searchKeys":["getGroup","open override fun getGroup(): IStateVariableGroup?","org.modelix.model.UnclassifiedNodeDependency.getGroup"]},{"name":"open override fun getGroup(): UnclassifiedNodeDependency","description":"org.modelix.model.AllChildrenDependency.getGroup","location":"model-client/org.modelix.model/-all-children-dependency/get-group.html","searchKeys":["getGroup","open override fun getGroup(): UnclassifiedNodeDependency","org.modelix.model.AllChildrenDependency.getGroup"]},{"name":"open override fun getGroup(): UnclassifiedNodeDependency","description":"org.modelix.model.AllPropertiesDependency.getGroup","location":"model-client/org.modelix.model/-all-properties-dependency/get-group.html","searchKeys":["getGroup","open override fun getGroup(): UnclassifiedNodeDependency","org.modelix.model.AllPropertiesDependency.getGroup"]},{"name":"open override fun getGroup(): UnclassifiedNodeDependency","description":"org.modelix.model.AllReferencesDependency.getGroup","location":"model-client/org.modelix.model/-all-references-dependency/get-group.html","searchKeys":["getGroup","open override fun getGroup(): UnclassifiedNodeDependency","org.modelix.model.AllReferencesDependency.getGroup"]},{"name":"open override fun getGroup(): UnclassifiedNodeDependency","description":"org.modelix.model.ContainmentDependency.getGroup","location":"model-client/org.modelix.model/-containment-dependency/get-group.html","searchKeys":["getGroup","open override fun getGroup(): UnclassifiedNodeDependency","org.modelix.model.ContainmentDependency.getGroup"]},{"name":"open override fun getId(): String","description":"org.modelix.model.IncrementalBranch.getId","location":"model-client/org.modelix.model/-incremental-branch/get-id.html","searchKeys":["getId","open override fun getId(): String","org.modelix.model.IncrementalBranch.getId"]},{"name":"open override fun getId(): String?","description":"org.modelix.model.IncrementalBranch.IncrementalTree.getId","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/get-id.html","searchKeys":["getId","open override fun getId(): String?","org.modelix.model.IncrementalBranch.IncrementalTree.getId"]},{"name":"open override fun getIdGenerator(): IIdGenerator","description":"org.modelix.model.client2.ModelClientV2.getIdGenerator","location":"model-client/org.modelix.model.client2/-model-client-v2/get-id-generator.html","searchKeys":["getIdGenerator","open override fun getIdGenerator(): IIdGenerator","org.modelix.model.client2.ModelClientV2.getIdGenerator"]},{"name":"open override fun getLongName(): String","description":"org.modelix.model.metameta.PersistedConcept.getLongName","location":"model-client/org.modelix.model.metameta/-persisted-concept/get-long-name.html","searchKeys":["getLongName","open override fun getLongName(): String","org.modelix.model.metameta.PersistedConcept.getLongName"]},{"name":"open override fun getOwnChildLinks(): List<IChildLink>","description":"org.modelix.model.metameta.PersistedConcept.getOwnChildLinks","location":"model-client/org.modelix.model.metameta/-persisted-concept/get-own-child-links.html","searchKeys":["getOwnChildLinks","open override fun getOwnChildLinks(): List<IChildLink>","org.modelix.model.metameta.PersistedConcept.getOwnChildLinks"]},{"name":"open override fun getOwnProperties(): List<IProperty>","description":"org.modelix.model.metameta.PersistedConcept.getOwnProperties","location":"model-client/org.modelix.model.metameta/-persisted-concept/get-own-properties.html","searchKeys":["getOwnProperties","open override fun getOwnProperties(): List<IProperty>","org.modelix.model.metameta.PersistedConcept.getOwnProperties"]},{"name":"open override fun getOwnReferenceLinks(): List<IReferenceLink>","description":"org.modelix.model.metameta.PersistedConcept.getOwnReferenceLinks","location":"model-client/org.modelix.model.metameta/-persisted-concept/get-own-reference-links.html","searchKeys":["getOwnReferenceLinks","open override fun getOwnReferenceLinks(): List<IReferenceLink>","org.modelix.model.metameta.PersistedConcept.getOwnReferenceLinks"]},{"name":"open override fun getParent(nodeId: Long): Long","description":"org.modelix.model.AutoTransaction.getParent","location":"model-client/org.modelix.model/-auto-transaction/get-parent.html","searchKeys":["getParent","open override fun getParent(nodeId: Long): Long","org.modelix.model.AutoTransaction.getParent"]},{"name":"open override fun getParent(nodeId: Long): Long","description":"org.modelix.model.IncrementalBranch.IncrementalTransaction.getParent","location":"model-client/org.modelix.model/-incremental-branch/-incremental-transaction/get-parent.html","searchKeys":["getParent","open override fun getParent(nodeId: Long): Long","org.modelix.model.IncrementalBranch.IncrementalTransaction.getParent"]},{"name":"open override fun getParent(nodeId: Long): Long","description":"org.modelix.model.IncrementalBranch.IncrementalTree.getParent","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/get-parent.html","searchKeys":["getParent","open override fun getParent(nodeId: Long): Long","org.modelix.model.IncrementalBranch.IncrementalTree.getParent"]},{"name":"open override fun getPendingSize(): Int","description":"org.modelix.model.KeyValueStoreCache.getPendingSize","location":"model-client/org.modelix.model/-key-value-store-cache/get-pending-size.html","searchKeys":["getPendingSize","open override fun getPendingSize(): Int","org.modelix.model.KeyValueStoreCache.getPendingSize"]},{"name":"open override fun getPendingSize(): Int","description":"org.modelix.model.client.AsyncStore.getPendingSize","location":"model-client/org.modelix.model.client/-async-store/get-pending-size.html","searchKeys":["getPendingSize","open override fun getPendingSize(): Int","org.modelix.model.client.AsyncStore.getPendingSize"]},{"name":"open override fun getPendingSize(): Int","description":"org.modelix.model.client.GarbageFilteringStore.getPendingSize","location":"model-client/org.modelix.model.client/-garbage-filtering-store/get-pending-size.html","searchKeys":["getPendingSize","open override fun getPendingSize(): Int","org.modelix.model.client.GarbageFilteringStore.getPendingSize"]},{"name":"open override fun getPendingSize(): Int","description":"org.modelix.model.client.RestWebModelClient.getPendingSize","location":"model-client/org.modelix.model.client/-rest-web-model-client/get-pending-size.html","searchKeys":["getPendingSize","open override fun getPendingSize(): Int","org.modelix.model.client.RestWebModelClient.getPendingSize"]},{"name":"open override fun getProperty(name: String): IProperty","description":"org.modelix.model.metameta.PersistedConcept.getProperty","location":"model-client/org.modelix.model.metameta/-persisted-concept/get-property.html","searchKeys":["getProperty","open override fun getProperty(name: String): IProperty","org.modelix.model.metameta.PersistedConcept.getProperty"]},{"name":"open override fun getProperty(nodeId: Long, role: String): String?","description":"org.modelix.model.AutoTransaction.getProperty","location":"model-client/org.modelix.model/-auto-transaction/get-property.html","searchKeys":["getProperty","open override fun getProperty(nodeId: Long, role: String): String?","org.modelix.model.AutoTransaction.getProperty"]},{"name":"open override fun getProperty(nodeId: Long, role: String): String?","description":"org.modelix.model.IncrementalBranch.IncrementalTransaction.getProperty","location":"model-client/org.modelix.model/-incremental-branch/-incremental-transaction/get-property.html","searchKeys":["getProperty","open override fun getProperty(nodeId: Long, role: String): String?","org.modelix.model.IncrementalBranch.IncrementalTransaction.getProperty"]},{"name":"open override fun getProperty(nodeId: Long, role: String): String?","description":"org.modelix.model.IncrementalBranch.IncrementalTree.getProperty","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/get-property.html","searchKeys":["getProperty","open override fun getProperty(nodeId: Long, role: String): String?","org.modelix.model.IncrementalBranch.IncrementalTree.getProperty"]},{"name":"open override fun getPropertyRoles(sourceId: Long): Iterable<String>","description":"org.modelix.model.AutoTransaction.getPropertyRoles","location":"model-client/org.modelix.model/-auto-transaction/get-property-roles.html","searchKeys":["getPropertyRoles","open override fun getPropertyRoles(sourceId: Long): Iterable<String>","org.modelix.model.AutoTransaction.getPropertyRoles"]},{"name":"open override fun getPropertyRoles(sourceId: Long): Iterable<String>","description":"org.modelix.model.IncrementalBranch.IncrementalTransaction.getPropertyRoles","location":"model-client/org.modelix.model/-incremental-branch/-incremental-transaction/get-property-roles.html","searchKeys":["getPropertyRoles","open override fun getPropertyRoles(sourceId: Long): Iterable<String>","org.modelix.model.IncrementalBranch.IncrementalTransaction.getPropertyRoles"]},{"name":"open override fun getPropertyRoles(sourceId: Long): Iterable<String>","description":"org.modelix.model.IncrementalBranch.IncrementalTree.getPropertyRoles","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/get-property-roles.html","searchKeys":["getPropertyRoles","open override fun getPropertyRoles(sourceId: Long): Iterable<String>","org.modelix.model.IncrementalBranch.IncrementalTree.getPropertyRoles"]},{"name":"open override fun getReference(): IConceptReference","description":"org.modelix.model.metameta.PersistedConcept.getReference","location":"model-client/org.modelix.model.metameta/-persisted-concept/get-reference.html","searchKeys":["getReference","open override fun getReference(): IConceptReference","org.modelix.model.metameta.PersistedConcept.getReference"]},{"name":"open override fun getReferenceLink(name: String): IReferenceLink","description":"org.modelix.model.metameta.PersistedConcept.getReferenceLink","location":"model-client/org.modelix.model.metameta/-persisted-concept/get-reference-link.html","searchKeys":["getReferenceLink","open override fun getReferenceLink(name: String): IReferenceLink","org.modelix.model.metameta.PersistedConcept.getReferenceLink"]},{"name":"open override fun getReferenceRoles(sourceId: Long): Iterable<String>","description":"org.modelix.model.AutoTransaction.getReferenceRoles","location":"model-client/org.modelix.model/-auto-transaction/get-reference-roles.html","searchKeys":["getReferenceRoles","open override fun getReferenceRoles(sourceId: Long): Iterable<String>","org.modelix.model.AutoTransaction.getReferenceRoles"]},{"name":"open override fun getReferenceRoles(sourceId: Long): Iterable<String>","description":"org.modelix.model.IncrementalBranch.IncrementalTransaction.getReferenceRoles","location":"model-client/org.modelix.model/-incremental-branch/-incremental-transaction/get-reference-roles.html","searchKeys":["getReferenceRoles","open override fun getReferenceRoles(sourceId: Long): Iterable<String>","org.modelix.model.IncrementalBranch.IncrementalTransaction.getReferenceRoles"]},{"name":"open override fun getReferenceRoles(sourceId: Long): Iterable<String>","description":"org.modelix.model.IncrementalBranch.IncrementalTree.getReferenceRoles","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/get-reference-roles.html","searchKeys":["getReferenceRoles","open override fun getReferenceRoles(sourceId: Long): Iterable<String>","org.modelix.model.IncrementalBranch.IncrementalTree.getReferenceRoles"]},{"name":"open override fun getReferenceTarget(sourceId: Long, role: String): INodeReference?","description":"org.modelix.model.AutoTransaction.getReferenceTarget","location":"model-client/org.modelix.model/-auto-transaction/get-reference-target.html","searchKeys":["getReferenceTarget","open override fun getReferenceTarget(sourceId: Long, role: String): INodeReference?","org.modelix.model.AutoTransaction.getReferenceTarget"]},{"name":"open override fun getReferenceTarget(sourceId: Long, role: String): INodeReference?","description":"org.modelix.model.IncrementalBranch.IncrementalTransaction.getReferenceTarget","location":"model-client/org.modelix.model/-incremental-branch/-incremental-transaction/get-reference-target.html","searchKeys":["getReferenceTarget","open override fun getReferenceTarget(sourceId: Long, role: String): INodeReference?","org.modelix.model.IncrementalBranch.IncrementalTransaction.getReferenceTarget"]},{"name":"open override fun getReferenceTarget(sourceId: Long, role: String): INodeReference?","description":"org.modelix.model.IncrementalBranch.IncrementalTree.getReferenceTarget","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/get-reference-target.html","searchKeys":["getReferenceTarget","open override fun getReferenceTarget(sourceId: Long, role: String): INodeReference?","org.modelix.model.IncrementalBranch.IncrementalTree.getReferenceTarget"]},{"name":"open override fun getRole(nodeId: Long): String?","description":"org.modelix.model.AutoTransaction.getRole","location":"model-client/org.modelix.model/-auto-transaction/get-role.html","searchKeys":["getRole","open override fun getRole(nodeId: Long): String?","org.modelix.model.AutoTransaction.getRole"]},{"name":"open override fun getRole(nodeId: Long): String?","description":"org.modelix.model.IncrementalBranch.IncrementalTransaction.getRole","location":"model-client/org.modelix.model/-incremental-branch/-incremental-transaction/get-role.html","searchKeys":["getRole","open override fun getRole(nodeId: Long): String?","org.modelix.model.IncrementalBranch.IncrementalTransaction.getRole"]},{"name":"open override fun getRole(nodeId: Long): String?","description":"org.modelix.model.IncrementalBranch.IncrementalTree.getRole","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/get-role.html","searchKeys":["getRole","open override fun getRole(nodeId: Long): String?","org.modelix.model.IncrementalBranch.IncrementalTree.getRole"]},{"name":"open override fun getShortName(): String","description":"org.modelix.model.metameta.PersistedConcept.getShortName","location":"model-client/org.modelix.model.metameta/-persisted-concept/get-short-name.html","searchKeys":["getShortName","open override fun getShortName(): String","org.modelix.model.metameta.PersistedConcept.getShortName"]},{"name":"open override fun getUID(): String","description":"org.modelix.model.metameta.PersistedConcept.getUID","location":"model-client/org.modelix.model.metameta/-persisted-concept/get-u-i-d.html","searchKeys":["getUID","open override fun getUID(): String","org.modelix.model.metameta.PersistedConcept.getUID"]},{"name":"open override fun getUserId(): String?","description":"org.modelix.model.client2.ModelClientV2.getUserId","location":"model-client/org.modelix.model.client2/-model-client-v2/get-user-id.html","searchKeys":["getUserId","open override fun getUserId(): String?","org.modelix.model.client2.ModelClientV2.getUserId"]},{"name":"open override fun getUserObject(key: Any): Any?","description":"org.modelix.model.AutoTransaction.getUserObject","location":"model-client/org.modelix.model/-auto-transaction/get-user-object.html","searchKeys":["getUserObject","open override fun getUserObject(key: Any): Any?","org.modelix.model.AutoTransaction.getUserObject"]},{"name":"open override fun getUserObject(key: Any): Any?","description":"org.modelix.model.IncrementalBranch.IncrementalTransaction.getUserObject","location":"model-client/org.modelix.model/-incremental-branch/-incremental-transaction/get-user-object.html","searchKeys":["getUserObject","open override fun getUserObject(key: Any): Any?","org.modelix.model.IncrementalBranch.IncrementalTransaction.getUserObject"]},{"name":"open override fun getWrapped(): IKeyValueStore","description":"org.modelix.model.KeyValueStoreCache.getWrapped","location":"model-client/org.modelix.model/-key-value-store-cache/get-wrapped.html","searchKeys":["getWrapped","open override fun getWrapped(): IKeyValueStore","org.modelix.model.KeyValueStoreCache.getWrapped"]},{"name":"open override fun getWrapped(): IKeyValueStore","description":"org.modelix.model.client.AsyncStore.getWrapped","location":"model-client/org.modelix.model.client/-async-store/get-wrapped.html","searchKeys":["getWrapped","open override fun getWrapped(): IKeyValueStore","org.modelix.model.client.AsyncStore.getWrapped"]},{"name":"open override fun getWrapped(): IKeyValueStore","description":"org.modelix.model.client.GarbageFilteringStore.getWrapped","location":"model-client/org.modelix.model.client/-garbage-filtering-store/get-wrapped.html","searchKeys":["getWrapped","open override fun getWrapped(): IKeyValueStore","org.modelix.model.client.GarbageFilteringStore.getWrapped"]},{"name":"open override fun getWrappedTree(): ITree","description":"org.modelix.model.metameta.MetaModelBranch.MMBulkTree.getWrappedTree","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-bulk-tree/get-wrapped-tree.html","searchKeys":["getWrappedTree","open override fun getWrappedTree(): ITree","org.modelix.model.metameta.MetaModelBranch.MMBulkTree.getWrappedTree"]},{"name":"open override fun hashCode(): Int","description":"org.modelix.model.metameta.MetaModelBranch.MMTree.hashCode","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-tree/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.modelix.model.metameta.MetaModelBranch.MMTree.hashCode"]},{"name":"open override fun isAbstract(): Boolean","description":"org.modelix.model.metameta.PersistedConcept.isAbstract","location":"model-client/org.modelix.model.metameta/-persisted-concept/is-abstract.html","searchKeys":["isAbstract","open override fun isAbstract(): Boolean","org.modelix.model.metameta.PersistedConcept.isAbstract"]},{"name":"open override fun isExactly(concept: IConcept?): Boolean","description":"org.modelix.model.metameta.PersistedConcept.isExactly","location":"model-client/org.modelix.model.metameta/-persisted-concept/is-exactly.html","searchKeys":["isExactly","open override fun isExactly(concept: IConcept?): Boolean","org.modelix.model.metameta.PersistedConcept.isExactly"]},{"name":"open override fun isSubConceptOf(superConcept: IConcept?): Boolean","description":"org.modelix.model.metameta.PersistedConcept.isSubConceptOf","location":"model-client/org.modelix.model.metameta/-persisted-concept/is-sub-concept-of.html","searchKeys":["isSubConceptOf","open override fun isSubConceptOf(superConcept: IConcept?): Boolean","org.modelix.model.metameta.PersistedConcept.isSubConceptOf"]},{"name":"open override fun keys(): Iterable<K>?","description":"org.modelix.model.util.pmap.SmallPMap.Multiple.keys","location":"model-client/org.modelix.model.util.pmap/-small-p-map/-multiple/keys.html","searchKeys":["keys","open override fun keys(): Iterable<K>?","org.modelix.model.util.pmap.SmallPMap.Multiple.keys"]},{"name":"open override fun keys(): Iterable<K>?","description":"org.modelix.model.util.pmap.SmallPMap.Single.keys","location":"model-client/org.modelix.model.util.pmap/-small-p-map/-single/keys.html","searchKeys":["keys","open override fun keys(): Iterable<K>?","org.modelix.model.util.pmap.SmallPMap.Single.keys"]},{"name":"open override fun listen(key: String, listener: IKeyListener)","description":"org.modelix.model.KeyValueStoreCache.listen","location":"model-client/org.modelix.model/-key-value-store-cache/listen.html","searchKeys":["listen","open override fun listen(key: String, listener: IKeyListener)","org.modelix.model.KeyValueStoreCache.listen"]},{"name":"open override fun listen(key: String, listener: IKeyListener)","description":"org.modelix.model.client.AsyncStore.listen","location":"model-client/org.modelix.model.client/-async-store/listen.html","searchKeys":["listen","open override fun listen(key: String, listener: IKeyListener)","org.modelix.model.client.AsyncStore.listen"]},{"name":"open override fun listen(key: String, listener: IKeyListener)","description":"org.modelix.model.client.GarbageFilteringStore.listen","location":"model-client/org.modelix.model.client/-garbage-filtering-store/listen.html","searchKeys":["listen","open override fun listen(key: String, listener: IKeyListener)","org.modelix.model.client.GarbageFilteringStore.listen"]},{"name":"open override fun listen(key: String, listener: IKeyListener)","description":"org.modelix.model.client.RestWebModelClient.listen","location":"model-client/org.modelix.model.client/-rest-web-model-client/listen.html","searchKeys":["listen","open override fun listen(key: String, listener: IKeyListener)","org.modelix.model.client.RestWebModelClient.listen"]},{"name":"open override fun moveChild(newParentId: Long, newRole: String?, newIndex: Int, childId: Long)","description":"org.modelix.model.AutoWriteTransaction.moveChild","location":"model-client/org.modelix.model/-auto-write-transaction/move-child.html","searchKeys":["moveChild","open override fun moveChild(newParentId: Long, newRole: String?, newIndex: Int, childId: Long)","org.modelix.model.AutoWriteTransaction.moveChild"]},{"name":"open override fun moveChild(newParentId: Long, newRole: String?, newIndex: Int, childId: Long)","description":"org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.moveChild","location":"model-client/org.modelix.model/-incremental-branch/-incremental-write-transaction/move-child.html","searchKeys":["moveChild","open override fun moveChild(newParentId: Long, newRole: String?, newIndex: Int, childId: Long)","org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.moveChild"]},{"name":"open override fun moveChild(newParentId: Long, newRole: String?, newIndex: Int, childId: Long): ITree","description":"org.modelix.model.IncrementalBranch.IncrementalTree.moveChild","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/move-child.html","searchKeys":["moveChild","open override fun moveChild(newParentId: Long, newRole: String?, newIndex: Int, childId: Long): ITree","org.modelix.model.IncrementalBranch.IncrementalTree.moveChild"]},{"name":"open override fun moveChild(newParentId: Long, newRole: String?, newIndex: Int, childId: Long): ITree","description":"org.modelix.model.metameta.MetaModelBranch.MMTree.moveChild","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-tree/move-child.html","searchKeys":["moveChild","open override fun moveChild(newParentId: Long, newRole: String?, newIndex: Int, childId: Long): ITree","org.modelix.model.metameta.MetaModelBranch.MMTree.moveChild"]},{"name":"open override fun prefetch(key: String)","description":"org.modelix.model.client.AsyncStore.prefetch","location":"model-client/org.modelix.model.client/-async-store/prefetch.html","searchKeys":["prefetch","open override fun prefetch(key: String)","org.modelix.model.client.AsyncStore.prefetch"]},{"name":"open override fun prefetch(key: String)","description":"org.modelix.model.client.GarbageFilteringStore.prefetch","location":"model-client/org.modelix.model.client/-garbage-filtering-store/prefetch.html","searchKeys":["prefetch","open override fun prefetch(key: String)","org.modelix.model.client.GarbageFilteringStore.prefetch"]},{"name":"open override fun prefetch(key: String)","description":"org.modelix.model.client.RestWebModelClient.prefetch","location":"model-client/org.modelix.model.client/-rest-web-model-client/prefetch.html","searchKeys":["prefetch","open override fun prefetch(key: String)","org.modelix.model.client.RestWebModelClient.prefetch"]},{"name":"open override fun prefetch(rootKey: String)","description":"org.modelix.model.KeyValueStoreCache.prefetch","location":"model-client/org.modelix.model/-key-value-store-cache/prefetch.html","searchKeys":["prefetch","open override fun prefetch(rootKey: String)","org.modelix.model.KeyValueStoreCache.prefetch"]},{"name":"open override fun put(key: K, value: V?): SmallPMap<K, V?>?","description":"org.modelix.model.util.pmap.SmallPMap.Multiple.put","location":"model-client/org.modelix.model.util.pmap/-small-p-map/-multiple/put.html","searchKeys":["put","open override fun put(key: K, value: V?): SmallPMap<K, V?>?","org.modelix.model.util.pmap.SmallPMap.Multiple.put"]},{"name":"open override fun put(key: K, value: V?): SmallPMap<K, V?>?","description":"org.modelix.model.util.pmap.SmallPMap.Single.put","location":"model-client/org.modelix.model.util.pmap/-small-p-map/-single/put.html","searchKeys":["put","open override fun put(key: K, value: V?): SmallPMap<K, V?>?","org.modelix.model.util.pmap.SmallPMap.Single.put"]},{"name":"open override fun put(key: Long, value: V?, shift: Int): LongKeyPMap.INode<*>?","description":"org.modelix.model.util.pmap.LongKeyPMap.EmptyNode.put","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-empty-node/put.html","searchKeys":["put","open override fun put(key: Long, value: V?, shift: Int): LongKeyPMap.INode<*>?","org.modelix.model.util.pmap.LongKeyPMap.EmptyNode.put"]},{"name":"open override fun put(key: Long, value: V?, shift: Int): LongKeyPMap.INode<*>?","description":"org.modelix.model.util.pmap.LongKeyPMap.LeafNode.put","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-leaf-node/put.html","searchKeys":["put","open override fun put(key: Long, value: V?, shift: Int): LongKeyPMap.INode<*>?","org.modelix.model.util.pmap.LongKeyPMap.LeafNode.put"]},{"name":"open override fun put(key: Long, value: V?, shift: Int): LongKeyPMap.INode<V?>?","description":"org.modelix.model.util.pmap.LongKeyPMap.InternalNode.put","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-internal-node/put.html","searchKeys":["put","open override fun put(key: Long, value: V?, shift: Int): LongKeyPMap.INode<V?>?","org.modelix.model.util.pmap.LongKeyPMap.InternalNode.put"]},{"name":"open override fun put(key: String, value: String?)","description":"org.modelix.model.KeyValueStoreCache.put","location":"model-client/org.modelix.model/-key-value-store-cache/put.html","searchKeys":["put","open override fun put(key: String, value: String?)","org.modelix.model.KeyValueStoreCache.put"]},{"name":"open override fun put(key: String, value: String?)","description":"org.modelix.model.client.AsyncStore.put","location":"model-client/org.modelix.model.client/-async-store/put.html","searchKeys":["put","open override fun put(key: String, value: String?)","org.modelix.model.client.AsyncStore.put"]},{"name":"open override fun put(key: String, value: String?)","description":"org.modelix.model.client.GarbageFilteringStore.put","location":"model-client/org.modelix.model.client/-garbage-filtering-store/put.html","searchKeys":["put","open override fun put(key: String, value: String?)","org.modelix.model.client.GarbageFilteringStore.put"]},{"name":"open override fun put(key: String, value: String?)","description":"org.modelix.model.client.RestWebModelClient.put","location":"model-client/org.modelix.model.client/-rest-web-model-client/put.html","searchKeys":["put","open override fun put(key: String, value: String?)","org.modelix.model.client.RestWebModelClient.put"]},{"name":"open override fun putAll(entries: Map<String, String?>)","description":"org.modelix.model.KeyValueStoreCache.putAll","location":"model-client/org.modelix.model/-key-value-store-cache/put-all.html","searchKeys":["putAll","open override fun putAll(entries: Map<String, String?>)","org.modelix.model.KeyValueStoreCache.putAll"]},{"name":"open override fun putAll(entries: Map<String, String?>)","description":"org.modelix.model.client.AsyncStore.putAll","location":"model-client/org.modelix.model.client/-async-store/put-all.html","searchKeys":["putAll","open override fun putAll(entries: Map<String, String?>)","org.modelix.model.client.AsyncStore.putAll"]},{"name":"open override fun putAll(entries: Map<String, String?>)","description":"org.modelix.model.client.GarbageFilteringStore.putAll","location":"model-client/org.modelix.model.client/-garbage-filtering-store/put-all.html","searchKeys":["putAll","open override fun putAll(entries: Map<String, String?>)","org.modelix.model.client.GarbageFilteringStore.putAll"]},{"name":"open override fun putAll(entries_: Map<String, String?>)","description":"org.modelix.model.client.RestWebModelClient.putAll","location":"model-client/org.modelix.model.client/-rest-web-model-client/put-all.html","searchKeys":["putAll","open override fun putAll(entries_: Map<String, String?>)","org.modelix.model.client.RestWebModelClient.putAll"]},{"name":"open override fun putUserObject(key: Any, value: Any?)","description":"org.modelix.model.AutoTransaction.putUserObject","location":"model-client/org.modelix.model/-auto-transaction/put-user-object.html","searchKeys":["putUserObject","open override fun putUserObject(key: Any, value: Any?)","org.modelix.model.AutoTransaction.putUserObject"]},{"name":"open override fun putUserObject(key: Any, value: Any?)","description":"org.modelix.model.IncrementalBranch.IncrementalTransaction.putUserObject","location":"model-client/org.modelix.model/-incremental-branch/-incremental-transaction/put-user-object.html","searchKeys":["putUserObject","open override fun putUserObject(key: Any, value: Any?)","org.modelix.model.IncrementalBranch.IncrementalTransaction.putUserObject"]},{"name":"open override fun read()","description":"org.modelix.model.DependencyBase.read","location":"model-client/org.modelix.model/-dependency-base/read.html","searchKeys":["read","open override fun read()","org.modelix.model.DependencyBase.read"]},{"name":"open override fun read()","description":"org.modelix.model.UnclassifiedNodeDependency.read","location":"model-client/org.modelix.model/-unclassified-node-dependency/read.html","searchKeys":["read","open override fun read()","org.modelix.model.UnclassifiedNodeDependency.read"]},{"name":"open override fun read(): IBranch","description":"org.modelix.model.BranchDependency.read","location":"model-client/org.modelix.model/-branch-dependency/read.html","searchKeys":["read","open override fun read(): IBranch","org.modelix.model.BranchDependency.read"]},{"name":"open override fun remove(key: K): SmallPMap<K, V?>?","description":"org.modelix.model.util.pmap.SmallPMap.Multiple.remove","location":"model-client/org.modelix.model.util.pmap/-small-p-map/-multiple/remove.html","searchKeys":["remove","open override fun remove(key: K): SmallPMap<K, V?>?","org.modelix.model.util.pmap.SmallPMap.Multiple.remove"]},{"name":"open override fun remove(key: K): SmallPMap<K, V?>?","description":"org.modelix.model.util.pmap.SmallPMap.Single.remove","location":"model-client/org.modelix.model.util.pmap/-small-p-map/-single/remove.html","searchKeys":["remove","open override fun remove(key: K): SmallPMap<K, V?>?","org.modelix.model.util.pmap.SmallPMap.Single.remove"]},{"name":"open override fun remove(key: Long, shift: Int): LongKeyPMap.INode<*>","description":"org.modelix.model.util.pmap.LongKeyPMap.EmptyNode.remove","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-empty-node/remove.html","searchKeys":["remove","open override fun remove(key: Long, shift: Int): LongKeyPMap.INode<*>","org.modelix.model.util.pmap.LongKeyPMap.EmptyNode.remove"]},{"name":"open override fun remove(key: Long, shift: Int): LongKeyPMap.INode<*>?","description":"org.modelix.model.util.pmap.LongKeyPMap.LeafNode.remove","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-leaf-node/remove.html","searchKeys":["remove","open override fun remove(key: Long, shift: Int): LongKeyPMap.INode<*>?","org.modelix.model.util.pmap.LongKeyPMap.LeafNode.remove"]},{"name":"open override fun remove(key: Long, shift: Int): LongKeyPMap.INode<V?>?","description":"org.modelix.model.util.pmap.LongKeyPMap.InternalNode.remove","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-internal-node/remove.html","searchKeys":["remove","open override fun remove(key: Long, shift: Int): LongKeyPMap.INode<V?>?","org.modelix.model.util.pmap.LongKeyPMap.InternalNode.remove"]},{"name":"open override fun removeListener(key: String, listener: IKeyListener)","description":"org.modelix.model.KeyValueStoreCache.removeListener","location":"model-client/org.modelix.model/-key-value-store-cache/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(key: String, listener: IKeyListener)","org.modelix.model.KeyValueStoreCache.removeListener"]},{"name":"open override fun removeListener(key: String, listener: IKeyListener)","description":"org.modelix.model.client.AsyncStore.removeListener","location":"model-client/org.modelix.model.client/-async-store/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(key: String, listener: IKeyListener)","org.modelix.model.client.AsyncStore.removeListener"]},{"name":"open override fun removeListener(key: String, listener: IKeyListener)","description":"org.modelix.model.client.GarbageFilteringStore.removeListener","location":"model-client/org.modelix.model.client/-garbage-filtering-store/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(key: String, listener: IKeyListener)","org.modelix.model.client.GarbageFilteringStore.removeListener"]},{"name":"open override fun removeListener(key: String, listener: IKeyListener)","description":"org.modelix.model.client.RestWebModelClient.removeListener","location":"model-client/org.modelix.model.client/-rest-web-model-client/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(key: String, listener: IKeyListener)","org.modelix.model.client.RestWebModelClient.removeListener"]},{"name":"open override fun removeListener(l: IBranchListener)","description":"org.modelix.model.IncrementalBranch.removeListener","location":"model-client/org.modelix.model/-incremental-branch/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(l: IBranchListener)","org.modelix.model.IncrementalBranch.removeListener"]},{"name":"open override fun removeListener(l: IBranchListener)","description":"org.modelix.model.client.ActiveBranch.removeListener","location":"model-client/org.modelix.model.client/-active-branch/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(l: IBranchListener)","org.modelix.model.client.ActiveBranch.removeListener"]},{"name":"open override fun removeListener(l: IBranchListener)","description":"org.modelix.model.client.SimpleIndirectBranch.removeListener","location":"model-client/org.modelix.model.client/-simple-indirect-branch/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(l: IBranchListener)","org.modelix.model.client.SimpleIndirectBranch.removeListener"]},{"name":"open override fun removeListener(l: IBranchListener)","description":"org.modelix.model.metameta.MetaModelBranch.removeListener","location":"model-client/org.modelix.model.metameta/-meta-model-branch/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(l: IBranchListener)","org.modelix.model.metameta.MetaModelBranch.removeListener"]},{"name":"open override fun resolve(area: IArea?): IConcept?","description":"org.modelix.model.metameta.PersistedConcept.resolve","location":"model-client/org.modelix.model.metameta/-persisted-concept/resolve.html","searchKeys":["resolve","open override fun resolve(area: IArea?): IConcept?","org.modelix.model.metameta.PersistedConcept.resolve"]},{"name":"open override fun runRead(runnable: () -> Unit)","description":"org.modelix.model.IncrementalBranch.runRead","location":"model-client/org.modelix.model/-incremental-branch/run-read.html","searchKeys":["runRead","open override fun runRead(runnable: () -> Unit)","org.modelix.model.IncrementalBranch.runRead"]},{"name":"open override fun runRead(runnable: () -> Unit)","description":"org.modelix.model.metameta.MetaModelBranch.runRead","location":"model-client/org.modelix.model.metameta/-meta-model-branch/run-read.html","searchKeys":["runRead","open override fun runRead(runnable: () -> Unit)","org.modelix.model.metameta.MetaModelBranch.runRead"]},{"name":"open override fun runReadT(f: (IReadTransaction) -> Unit)","description":"org.modelix.model.IncrementalBranch.runReadT","location":"model-client/org.modelix.model/-incremental-branch/run-read-t.html","searchKeys":["runReadT","open override fun runReadT(f: (IReadTransaction) -> Unit)","org.modelix.model.IncrementalBranch.runReadT"]},{"name":"open override fun runReadT(f: (IReadTransaction) -> Unit)","description":"org.modelix.model.metameta.MetaModelBranch.runReadT","location":"model-client/org.modelix.model.metameta/-meta-model-branch/run-read-t.html","searchKeys":["runReadT","open override fun runReadT(f: (IReadTransaction) -> Unit)","org.modelix.model.metameta.MetaModelBranch.runReadT"]},{"name":"open override fun runWrite(runnable: () -> Unit)","description":"org.modelix.model.IncrementalBranch.runWrite","location":"model-client/org.modelix.model/-incremental-branch/run-write.html","searchKeys":["runWrite","open override fun runWrite(runnable: () -> Unit)","org.modelix.model.IncrementalBranch.runWrite"]},{"name":"open override fun runWrite(runnable: () -> Unit)","description":"org.modelix.model.metameta.MetaModelBranch.runWrite","location":"model-client/org.modelix.model.metameta/-meta-model-branch/run-write.html","searchKeys":["runWrite","open override fun runWrite(runnable: () -> Unit)","org.modelix.model.metameta.MetaModelBranch.runWrite"]},{"name":"open override fun runWriteT(f: (IWriteTransaction) -> Unit)","description":"org.modelix.model.IncrementalBranch.runWriteT","location":"model-client/org.modelix.model/-incremental-branch/run-write-t.html","searchKeys":["runWriteT","open override fun runWriteT(f: (IWriteTransaction) -> Unit)","org.modelix.model.IncrementalBranch.runWriteT"]},{"name":"open override fun runWriteT(f: (IWriteTransaction) -> Unit)","description":"org.modelix.model.metameta.MetaModelBranch.runWriteT","location":"model-client/org.modelix.model.metameta/-meta-model-branch/run-write-t.html","searchKeys":["runWriteT","open override fun runWriteT(f: (IWriteTransaction) -> Unit)","org.modelix.model.metameta.MetaModelBranch.runWriteT"]},{"name":"open override fun serialize(): String","description":"org.modelix.model.metameta.PersistedConcept.serialize","location":"model-client/org.modelix.model.metameta/-persisted-concept/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.model.metameta.PersistedConcept.serialize"]},{"name":"open override fun setProperty(nodeId: Long, role: String, value: String?)","description":"org.modelix.model.AutoWriteTransaction.setProperty","location":"model-client/org.modelix.model/-auto-write-transaction/set-property.html","searchKeys":["setProperty","open override fun setProperty(nodeId: Long, role: String, value: String?)","org.modelix.model.AutoWriteTransaction.setProperty"]},{"name":"open override fun setProperty(nodeId: Long, role: String, value: String?)","description":"org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.setProperty","location":"model-client/org.modelix.model/-incremental-branch/-incremental-write-transaction/set-property.html","searchKeys":["setProperty","open override fun setProperty(nodeId: Long, role: String, value: String?)","org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.setProperty"]},{"name":"open override fun setProperty(nodeId: Long, role: String, value: String?): ITree","description":"org.modelix.model.IncrementalBranch.IncrementalTree.setProperty","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/set-property.html","searchKeys":["setProperty","open override fun setProperty(nodeId: Long, role: String, value: String?): ITree","org.modelix.model.IncrementalBranch.IncrementalTree.setProperty"]},{"name":"open override fun setProperty(nodeId: Long, role: String, value: String?): ITree","description":"org.modelix.model.metameta.MetaModelBranch.MMTree.setProperty","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-tree/set-property.html","searchKeys":["setProperty","open override fun setProperty(nodeId: Long, role: String, value: String?): ITree","org.modelix.model.metameta.MetaModelBranch.MMTree.setProperty"]},{"name":"open override fun setReferenceTarget(sourceId: Long, role: String, target: INodeReference?)","description":"org.modelix.model.AutoWriteTransaction.setReferenceTarget","location":"model-client/org.modelix.model/-auto-write-transaction/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(sourceId: Long, role: String, target: INodeReference?)","org.modelix.model.AutoWriteTransaction.setReferenceTarget"]},{"name":"open override fun setReferenceTarget(sourceId: Long, role: String, target: INodeReference?)","description":"org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.setReferenceTarget","location":"model-client/org.modelix.model/-incremental-branch/-incremental-write-transaction/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(sourceId: Long, role: String, target: INodeReference?)","org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.setReferenceTarget"]},{"name":"open override fun setReferenceTarget(sourceId: Long, role: String, target: INodeReference?): ITree","description":"org.modelix.model.IncrementalBranch.IncrementalTree.setReferenceTarget","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(sourceId: Long, role: String, target: INodeReference?): ITree","org.modelix.model.IncrementalBranch.IncrementalTree.setReferenceTarget"]},{"name":"open override fun setReferenceTarget(sourceId: Long, role: String, target: INodeReference?): ITree","description":"org.modelix.model.metameta.MetaModelBranch.MMTree.setReferenceTarget","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-tree/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(sourceId: Long, role: String, target: INodeReference?): ITree","org.modelix.model.metameta.MetaModelBranch.MMTree.setReferenceTarget"]},{"name":"open override fun toString(): String","description":"org.modelix.model.client.RestWebModelClient.toString","location":"model-client/org.modelix.model.client/-rest-web-model-client/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.client.RestWebModelClient.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.metameta.MetaModelBranch.MMTree.toString","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-tree/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.metameta.MetaModelBranch.MMTree.toString"]},{"name":"open override fun treeChanged(oldTree: ITree?, newTree: ITree)","description":"org.modelix.model.client2.ChangeListener.treeChanged","location":"model-client/org.modelix.model.client2/-change-listener/tree-changed.html","searchKeys":["treeChanged","open override fun treeChanged(oldTree: ITree?, newTree: ITree)","org.modelix.model.client2.ChangeListener.treeChanged"]},{"name":"open override fun treeChanged(oldTree: ITree?, newTree: ITree)","description":"org.modelix.model.metameta.MetaModelBranch.MMBranchListener.treeChanged","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-branch-listener/tree-changed.html","searchKeys":["treeChanged","open override fun treeChanged(oldTree: ITree?, newTree: ITree)","org.modelix.model.metameta.MetaModelBranch.MMBranchListener.treeChanged"]},{"name":"open override fun unwrap(): ITransaction","description":"org.modelix.model.metameta.MetaModelBranch.MMReadTransaction.unwrap","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-read-transaction/unwrap.html","searchKeys":["unwrap","open override fun unwrap(): ITransaction","org.modelix.model.metameta.MetaModelBranch.MMReadTransaction.unwrap"]},{"name":"open override fun unwrap(): ITransaction","description":"org.modelix.model.metameta.MetaModelBranch.MMWriteTransaction.unwrap","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-write-transaction/unwrap.html","searchKeys":["unwrap","open override fun unwrap(): ITransaction","org.modelix.model.metameta.MetaModelBranch.MMWriteTransaction.unwrap"]},{"name":"open override fun unwrapBranch(): IBranch","description":"org.modelix.model.AutoTransactionsBranch.unwrapBranch","location":"model-client/org.modelix.model/-auto-transactions-branch/unwrap-branch.html","searchKeys":["unwrapBranch","open override fun unwrapBranch(): IBranch","org.modelix.model.AutoTransactionsBranch.unwrapBranch"]},{"name":"open override fun unwrapBranch(): IBranch","description":"org.modelix.model.IncrementalBranch.unwrapBranch","location":"model-client/org.modelix.model/-incremental-branch/unwrap-branch.html","searchKeys":["unwrapBranch","open override fun unwrapBranch(): IBranch","org.modelix.model.IncrementalBranch.unwrapBranch"]},{"name":"open override fun usesRoleIds(): Boolean","description":"org.modelix.model.IncrementalBranch.IncrementalTree.usesRoleIds","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/uses-role-ids.html","searchKeys":["usesRoleIds","open override fun usesRoleIds(): Boolean","org.modelix.model.IncrementalBranch.IncrementalTree.usesRoleIds"]},{"name":"open override fun values(): Iterable<V?>?","description":"org.modelix.model.util.pmap.SmallPMap.Multiple.values","location":"model-client/org.modelix.model.util.pmap/-small-p-map/-multiple/values.html","searchKeys":["values","open override fun values(): Iterable<V?>?","org.modelix.model.util.pmap.SmallPMap.Multiple.values"]},{"name":"open override fun values(): Iterable<V?>?","description":"org.modelix.model.util.pmap.SmallPMap.Single.values","location":"model-client/org.modelix.model.util.pmap/-small-p-map/-single/values.html","searchKeys":["values","open override fun values(): Iterable<V?>?","org.modelix.model.util.pmap.SmallPMap.Single.values"]},{"name":"open override fun visitChanges(oldNode: LongKeyPMap.INode<V?>, visitor: LongKeyPMap.IChangeVisitor<V?>)","description":"org.modelix.model.util.pmap.LongKeyPMap.EmptyNode.visitChanges","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-empty-node/visit-changes.html","searchKeys":["visitChanges","open override fun visitChanges(oldNode: LongKeyPMap.INode<V?>, visitor: LongKeyPMap.IChangeVisitor<V?>)","org.modelix.model.util.pmap.LongKeyPMap.EmptyNode.visitChanges"]},{"name":"open override fun visitChanges(oldNode: LongKeyPMap.INode<V?>, visitor: LongKeyPMap.IChangeVisitor<V?>)","description":"org.modelix.model.util.pmap.LongKeyPMap.InternalNode.visitChanges","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-internal-node/visit-changes.html","searchKeys":["visitChanges","open override fun visitChanges(oldNode: LongKeyPMap.INode<V?>, visitor: LongKeyPMap.IChangeVisitor<V?>)","org.modelix.model.util.pmap.LongKeyPMap.InternalNode.visitChanges"]},{"name":"open override fun visitChanges(oldNode: LongKeyPMap.INode<V?>, visitor: LongKeyPMap.IChangeVisitor<V?>)","description":"org.modelix.model.util.pmap.LongKeyPMap.LeafNode.visitChanges","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-leaf-node/visit-changes.html","searchKeys":["visitChanges","open override fun visitChanges(oldNode: LongKeyPMap.INode<V?>, visitor: LongKeyPMap.IChangeVisitor<V?>)","org.modelix.model.util.pmap.LongKeyPMap.LeafNode.visitChanges"]},{"name":"open override fun visitChanges(oldVersion: ITree, visitor: ITreeChangeVisitor)","description":"org.modelix.model.IncrementalBranch.IncrementalTree.visitChanges","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/visit-changes.html","searchKeys":["visitChanges","open override fun visitChanges(oldVersion: ITree, visitor: ITreeChangeVisitor)","org.modelix.model.IncrementalBranch.IncrementalTree.visitChanges"]},{"name":"open override fun visitChanges(oldVersion: ITree, visitor: ITreeChangeVisitor)","description":"org.modelix.model.metameta.MetaModelBranch.MMTree.visitChanges","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-tree/visit-changes.html","searchKeys":["visitChanges","open override fun visitChanges(oldVersion: ITree, visitor: ITreeChangeVisitor)","org.modelix.model.metameta.MetaModelBranch.MMTree.visitChanges"]},{"name":"open override fun visitEntries(visitor: BiPredicate<Long, V?>): Boolean","description":"org.modelix.model.util.pmap.LongKeyPMap.EmptyNode.visitEntries","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-empty-node/visit-entries.html","searchKeys":["visitEntries","open override fun visitEntries(visitor: BiPredicate<Long, V?>): Boolean","org.modelix.model.util.pmap.LongKeyPMap.EmptyNode.visitEntries"]},{"name":"open override fun visitEntries(visitor: BiPredicate<Long, V?>): Boolean","description":"org.modelix.model.util.pmap.LongKeyPMap.InternalNode.visitEntries","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-internal-node/visit-entries.html","searchKeys":["visitEntries","open override fun visitEntries(visitor: BiPredicate<Long, V?>): Boolean","org.modelix.model.util.pmap.LongKeyPMap.InternalNode.visitEntries"]},{"name":"open override fun visitEntries(visitor: BiPredicate<Long, V?>): Boolean","description":"org.modelix.model.util.pmap.LongKeyPMap.LeafNode.visitEntries","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-leaf-node/visit-entries.html","searchKeys":["visitEntries","open override fun visitEntries(visitor: BiPredicate<Long, V?>): Boolean","org.modelix.model.util.pmap.LongKeyPMap.LeafNode.visitEntries"]},{"name":"open override val asyncStore: IKeyValueStore","description":"org.modelix.model.client.RestWebModelClient.asyncStore","location":"model-client/org.modelix.model.client/-rest-web-model-client/async-store.html","searchKeys":["asyncStore","open override val asyncStore: IKeyValueStore","org.modelix.model.client.RestWebModelClient.asyncStore"]},{"name":"open override val branch: IBranch","description":"org.modelix.model.AutoTransaction.branch","location":"model-client/org.modelix.model/-auto-transaction/branch.html","searchKeys":["branch","open override val branch: IBranch","org.modelix.model.AutoTransaction.branch"]},{"name":"open override val branch: IBranch","description":"org.modelix.model.IncrementalBranch.IncrementalTransaction.branch","location":"model-client/org.modelix.model/-incremental-branch/-incremental-transaction/branch.html","searchKeys":["branch","open override val branch: IBranch","org.modelix.model.IncrementalBranch.IncrementalTransaction.branch"]},{"name":"open override val branch: IBranch","description":"org.modelix.model.client.ActiveBranch.branch","location":"model-client/org.modelix.model.client/-active-branch/branch.html","searchKeys":["branch","open override val branch: IBranch","org.modelix.model.client.ActiveBranch.branch"]},{"name":"open override val branch: IBranch","description":"org.modelix.model.client.SimpleIndirectBranch.branch","location":"model-client/org.modelix.model.client/-simple-indirect-branch/branch.html","searchKeys":["branch","open override val branch: IBranch","org.modelix.model.client.SimpleIndirectBranch.branch"]},{"name":"open override val branch: IBranch","description":"org.modelix.model.metameta.MetaModelBranch.MMReadTransaction.branch","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-read-transaction/branch.html","searchKeys":["branch","open override val branch: IBranch","org.modelix.model.metameta.MetaModelBranch.MMReadTransaction.branch"]},{"name":"open override val branch: IBranch","description":"org.modelix.model.metameta.MetaModelBranch.MMWriteTransaction.branch","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-write-transaction/branch.html","searchKeys":["branch","open override val branch: IBranch","org.modelix.model.metameta.MetaModelBranch.MMWriteTransaction.branch"]},{"name":"open override val clientId: Int","description":"org.modelix.model.client.RestWebModelClient.clientId","location":"model-client/org.modelix.model.client/-rest-web-model-client/client-id.html","searchKeys":["clientId","open override val clientId: Int","org.modelix.model.client.RestWebModelClient.clientId"]},{"name":"open override val idGenerator: IIdGenerator","description":"org.modelix.model.client.RestWebModelClient.idGenerator","location":"model-client/org.modelix.model.client/-rest-web-model-client/id-generator.html","searchKeys":["idGenerator","open override val idGenerator: IIdGenerator","org.modelix.model.client.RestWebModelClient.idGenerator"]},{"name":"open override val language: ILanguage?","description":"org.modelix.model.metameta.PersistedConcept.language","location":"model-client/org.modelix.model.metameta/-persisted-concept/language.html","searchKeys":["language","open override val language: ILanguage?","org.modelix.model.metameta.PersistedConcept.language"]},{"name":"open override val node: INodeJS","description":"org.modelix.model.client2.ChildrenChanged.node","location":"model-client/org.modelix.model.client2/-children-changed/node.html","searchKeys":["node","open override val node: INodeJS","org.modelix.model.client2.ChildrenChanged.node"]},{"name":"open override val node: INodeJS","description":"org.modelix.model.client2.ContainmentChanged.node","location":"model-client/org.modelix.model.client2/-containment-changed/node.html","searchKeys":["node","open override val node: INodeJS","org.modelix.model.client2.ContainmentChanged.node"]},{"name":"open override val node: INodeJS","description":"org.modelix.model.client2.PropertyChanged.node","location":"model-client/org.modelix.model.client2/-property-changed/node.html","searchKeys":["node","open override val node: INodeJS","org.modelix.model.client2.PropertyChanged.node"]},{"name":"open override val node: INodeJS","description":"org.modelix.model.client2.ReferenceChanged.node","location":"model-client/org.modelix.model.client2/-reference-changed/node.html","searchKeys":["node","open override val node: INodeJS","org.modelix.model.client2.ReferenceChanged.node"]},{"name":"open override val readTransaction: IReadTransaction","description":"org.modelix.model.AutoTransactionsBranch.readTransaction","location":"model-client/org.modelix.model/-auto-transactions-branch/read-transaction.html","searchKeys":["readTransaction","open override val readTransaction: IReadTransaction","org.modelix.model.AutoTransactionsBranch.readTransaction"]},{"name":"open override val readTransaction: IReadTransaction","description":"org.modelix.model.IncrementalBranch.readTransaction","location":"model-client/org.modelix.model/-incremental-branch/read-transaction.html","searchKeys":["readTransaction","open override val readTransaction: IReadTransaction","org.modelix.model.IncrementalBranch.readTransaction"]},{"name":"open override val readTransaction: IReadTransaction","description":"org.modelix.model.metameta.MetaModelBranch.readTransaction","location":"model-client/org.modelix.model.metameta/-meta-model-branch/read-transaction.html","searchKeys":["readTransaction","open override val readTransaction: IReadTransaction","org.modelix.model.metameta.MetaModelBranch.readTransaction"]},{"name":"open override val rootNode: INodeJS","description":"org.modelix.model.client2.BranchJSImpl.rootNode","location":"model-client/org.modelix.model.client2/-branch-j-s-impl/root-node.html","searchKeys":["rootNode","open override val rootNode: INodeJS","org.modelix.model.client2.BranchJSImpl.rootNode"]},{"name":"open override val storeCache: IDeserializingKeyValueStore","description":"org.modelix.model.client.RestWebModelClient.storeCache","location":"model-client/org.modelix.model.client/-rest-web-model-client/store-cache.html","searchKeys":["storeCache","open override val storeCache: IDeserializingKeyValueStore","org.modelix.model.client.RestWebModelClient.storeCache"]},{"name":"open override val transaction: ITransaction","description":"org.modelix.model.AutoTransactionsBranch.transaction","location":"model-client/org.modelix.model/-auto-transactions-branch/transaction.html","searchKeys":["transaction","open override val transaction: ITransaction","org.modelix.model.AutoTransactionsBranch.transaction"]},{"name":"open override val transaction: ITransaction","description":"org.modelix.model.IncrementalBranch.transaction","location":"model-client/org.modelix.model/-incremental-branch/transaction.html","searchKeys":["transaction","open override val transaction: ITransaction","org.modelix.model.IncrementalBranch.transaction"]},{"name":"open override val transaction: ITransaction","description":"org.modelix.model.metameta.MetaModelBranch.transaction","location":"model-client/org.modelix.model.metameta/-meta-model-branch/transaction.html","searchKeys":["transaction","open override val transaction: ITransaction","org.modelix.model.metameta.MetaModelBranch.transaction"]},{"name":"open override val tree: IBulkTree","description":"org.modelix.model.metameta.MetaModelBranch.MMBulkTree.tree","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-bulk-tree/tree.html","searchKeys":["tree","open override val tree: IBulkTree","org.modelix.model.metameta.MetaModelBranch.MMBulkTree.tree"]},{"name":"open override val tree: ITree","description":"org.modelix.model.AutoTransaction.tree","location":"model-client/org.modelix.model/-auto-transaction/tree.html","searchKeys":["tree","open override val tree: ITree","org.modelix.model.AutoTransaction.tree"]},{"name":"open override val tree: ITree","description":"org.modelix.model.IncrementalBranch.IncrementalReadTransaction.tree","location":"model-client/org.modelix.model/-incremental-branch/-incremental-read-transaction/tree.html","searchKeys":["tree","open override val tree: ITree","org.modelix.model.IncrementalBranch.IncrementalReadTransaction.tree"]},{"name":"open override val tree: ITree","description":"org.modelix.model.metameta.MetaModelBranch.MMReadTransaction.tree","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-read-transaction/tree.html","searchKeys":["tree","open override val tree: ITree","org.modelix.model.metameta.MetaModelBranch.MMReadTransaction.tree"]},{"name":"open override val writeTransaction: IWriteTransaction","description":"org.modelix.model.AutoTransactionsBranch.writeTransaction","location":"model-client/org.modelix.model/-auto-transactions-branch/write-transaction.html","searchKeys":["writeTransaction","open override val writeTransaction: IWriteTransaction","org.modelix.model.AutoTransactionsBranch.writeTransaction"]},{"name":"open override val writeTransaction: IWriteTransaction","description":"org.modelix.model.IncrementalBranch.writeTransaction","location":"model-client/org.modelix.model/-incremental-branch/write-transaction.html","searchKeys":["writeTransaction","open override val writeTransaction: IWriteTransaction","org.modelix.model.IncrementalBranch.writeTransaction"]},{"name":"open override val writeTransaction: IWriteTransaction","description":"org.modelix.model.metameta.MetaModelBranch.writeTransaction","location":"model-client/org.modelix.model.metameta/-meta-model-branch/write-transaction.html","searchKeys":["writeTransaction","open override val writeTransaction: IWriteTransaction","org.modelix.model.metameta.MetaModelBranch.writeTransaction"]},{"name":"open override var tree: ITree","description":"org.modelix.model.AutoWriteTransaction.tree","location":"model-client/org.modelix.model/-auto-write-transaction/tree.html","searchKeys":["tree","open override var tree: ITree","org.modelix.model.AutoWriteTransaction.tree"]},{"name":"open override var tree: ITree","description":"org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.tree","location":"model-client/org.modelix.model/-incremental-branch/-incremental-write-transaction/tree.html","searchKeys":["tree","open override var tree: ITree","org.modelix.model.IncrementalBranch.IncrementalWriteTransaction.tree"]},{"name":"open override var tree: ITree","description":"org.modelix.model.metameta.MetaModelBranch.MMWriteTransaction.tree","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-write-transaction/tree.html","searchKeys":["tree","open override var tree: ITree","org.modelix.model.metameta.MetaModelBranch.MMWriteTransaction.tree"]},{"name":"open suspend override fun <R> query(branch: BranchReference, body: (IMonoStep<INode>) -> IMonoStep<R>): R","description":"org.modelix.model.client2.ModelClientV2.query","location":"model-client/org.modelix.model.client2/-model-client-v2/query.html","searchKeys":["query","open suspend override fun <R> query(branch: BranchReference, body: (IMonoStep<INode>) -> IMonoStep<R>): R","org.modelix.model.client2.ModelClientV2.query"]},{"name":"open suspend override fun <R> query(repository: RepositoryId, versionHash: String, body: (IMonoStep<INode>) -> IMonoStep<R>): R","description":"org.modelix.model.client2.ModelClientV2.query","location":"model-client/org.modelix.model.client2/-model-client-v2/query.html","searchKeys":["query","open suspend override fun <R> query(repository: RepositoryId, versionHash: String, body: (IMonoStep<INode>) -> IMonoStep<R>): R","org.modelix.model.client2.ModelClientV2.query"]},{"name":"open suspend override fun getA(key: String): String?","description":"org.modelix.model.client.RestWebModelClient.getA","location":"model-client/org.modelix.model.client/-rest-web-model-client/get-a.html","searchKeys":["getA","open suspend override fun getA(key: String): String?","org.modelix.model.client.RestWebModelClient.getA"]},{"name":"open suspend override fun initRepository(repository: RepositoryId): IVersion","description":"org.modelix.model.client2.ModelClientV2.initRepository","location":"model-client/org.modelix.model.client2/-model-client-v2/init-repository.html","searchKeys":["initRepository","open suspend override fun initRepository(repository: RepositoryId): IVersion","org.modelix.model.client2.ModelClientV2.initRepository"]},{"name":"open suspend override fun listBranches(repository: RepositoryId): List<BranchReference>","description":"org.modelix.model.client2.ModelClientV2.listBranches","location":"model-client/org.modelix.model.client2/-model-client-v2/list-branches.html","searchKeys":["listBranches","open suspend override fun listBranches(repository: RepositoryId): List<BranchReference>","org.modelix.model.client2.ModelClientV2.listBranches"]},{"name":"open suspend override fun listRepositories(): List<RepositoryId>","description":"org.modelix.model.client2.ModelClientV2.listRepositories","location":"model-client/org.modelix.model.client2/-model-client-v2/list-repositories.html","searchKeys":["listRepositories","open suspend override fun listRepositories(): List<RepositoryId>","org.modelix.model.client2.ModelClientV2.listRepositories"]},{"name":"open suspend override fun loadVersion(repositoryId: RepositoryId, versionHash: String, baseVersion: IVersion?): IVersion","description":"org.modelix.model.client2.ModelClientV2.loadVersion","location":"model-client/org.modelix.model.client2/-model-client-v2/load-version.html","searchKeys":["loadVersion","open suspend override fun loadVersion(repositoryId: RepositoryId, versionHash: String, baseVersion: IVersion?): IVersion","org.modelix.model.client2.ModelClientV2.loadVersion"]},{"name":"open suspend override fun loadVersion(versionHash: String, baseVersion: IVersion?): IVersion","description":"org.modelix.model.client2.ModelClientV2.loadVersion","location":"model-client/org.modelix.model.client2/-model-client-v2/load-version.html","searchKeys":["loadVersion","open suspend override fun loadVersion(versionHash: String, baseVersion: IVersion?): IVersion","org.modelix.model.client2.ModelClientV2.loadVersion"]},{"name":"open suspend override fun poll(branch: BranchReference, lastKnownVersion: IVersion?): IVersion","description":"org.modelix.model.client2.ModelClientV2.poll","location":"model-client/org.modelix.model.client2/-model-client-v2/poll.html","searchKeys":["poll","open suspend override fun poll(branch: BranchReference, lastKnownVersion: IVersion?): IVersion","org.modelix.model.client2.ModelClientV2.poll"]},{"name":"open suspend override fun pollHash(branch: BranchReference, lastKnownVersion: IVersion?): String","description":"org.modelix.model.client2.ModelClientV2.pollHash","location":"model-client/org.modelix.model.client2/-model-client-v2/poll-hash.html","searchKeys":["pollHash","open suspend override fun pollHash(branch: BranchReference, lastKnownVersion: IVersion?): String","org.modelix.model.client2.ModelClientV2.pollHash"]},{"name":"open suspend override fun pull(branch: BranchReference, lastKnownVersion: IVersion?): IVersion","description":"org.modelix.model.client2.ModelClientV2.pull","location":"model-client/org.modelix.model.client2/-model-client-v2/pull.html","searchKeys":["pull","open suspend override fun pull(branch: BranchReference, lastKnownVersion: IVersion?): IVersion","org.modelix.model.client2.ModelClientV2.pull"]},{"name":"open suspend override fun pullHash(branch: BranchReference): String","description":"org.modelix.model.client2.ModelClientV2.pullHash","location":"model-client/org.modelix.model.client2/-model-client-v2/pull-hash.html","searchKeys":["pullHash","open suspend override fun pullHash(branch: BranchReference): String","org.modelix.model.client2.ModelClientV2.pullHash"]},{"name":"open suspend override fun pullIfExists(branch: BranchReference): IVersion?","description":"org.modelix.model.client2.ModelClientV2.pullIfExists","location":"model-client/org.modelix.model.client2/-model-client-v2/pull-if-exists.html","searchKeys":["pullIfExists","open suspend override fun pullIfExists(branch: BranchReference): IVersion?","org.modelix.model.client2.ModelClientV2.pullIfExists"]},{"name":"open suspend override fun push(branch: BranchReference, version: IVersion, baseVersion: IVersion?): IVersion","description":"org.modelix.model.client2.ModelClientV2.push","location":"model-client/org.modelix.model.client2/-model-client-v2/push.html","searchKeys":["push","open suspend override fun push(branch: BranchReference, version: IVersion, baseVersion: IVersion?): IVersion","org.modelix.model.client2.ModelClientV2.push"]},{"name":"open val tree: ITree","description":"org.modelix.model.metameta.MetaModelBranch.MMTree.tree","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-tree/tree.html","searchKeys":["tree","open val tree: ITree","org.modelix.model.metameta.MetaModelBranch.MMTree.tree"]},{"name":"operator fun get(key: Long): V","description":"org.modelix.model.util.pmap.LongKeyPMap.get","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/get.html","searchKeys":["get","operator fun get(key: Long): V","org.modelix.model.util.pmap.LongKeyPMap.get"]},{"name":"suspend fun <T> IModelClientV2.runWrite(branchRef: BranchReference, body: (INode) -> T): T","description":"org.modelix.model.client2.runWrite","location":"model-client/org.modelix.model.client2/run-write.html","searchKeys":["runWrite","suspend fun <T> IModelClientV2.runWrite(branchRef: BranchReference, body: (INode) -> T): T","org.modelix.model.client2.runWrite"]},{"name":"suspend fun authorize(modelixServerUrl: String): Credential","description":"org.modelix.model.oauth.ModelixOAuthClient.authorize","location":"model-client/org.modelix.model.oauth/-modelix-o-auth-client/authorize.html","searchKeys":["authorize","suspend fun authorize(modelixServerUrl: String): Credential","org.modelix.model.oauth.ModelixOAuthClient.authorize"]},{"name":"suspend fun getAllA(keys: Iterable<String>): Map<String, String?>","description":"org.modelix.model.client.RestWebModelClient.getAllA","location":"model-client/org.modelix.model.client/-rest-web-model-client/get-all-a.html","searchKeys":["getAllA","suspend fun getAllA(keys: Iterable<String>): Map<String, String?>","org.modelix.model.client.RestWebModelClient.getAllA"]},{"name":"suspend fun getCurrentVersion(): CLVersion","description":"org.modelix.model.client2.ReplicatedModel.getCurrentVersion","location":"model-client/org.modelix.model.client2/-replicated-model/get-current-version.html","searchKeys":["getCurrentVersion","suspend fun getCurrentVersion(): CLVersion","org.modelix.model.client2.ReplicatedModel.getCurrentVersion"]},{"name":"suspend fun getEmailA(): String","description":"org.modelix.model.client.RestWebModelClient.getEmailA","location":"model-client/org.modelix.model.client/-rest-web-model-client/get-email-a.html","searchKeys":["getEmailA","suspend fun getEmailA(): String","org.modelix.model.client.RestWebModelClient.getEmailA"]},{"name":"suspend fun init()","description":"org.modelix.model.client2.ModelClientV2.init","location":"model-client/org.modelix.model.client2/-model-client-v2/init.html","searchKeys":["init","suspend fun init()","org.modelix.model.client2.ModelClientV2.init"]},{"name":"suspend fun putA(key: String, value: String?)","description":"org.modelix.model.client.RestWebModelClient.putA","location":"model-client/org.modelix.model.client/-rest-web-model-client/put-a.html","searchKeys":["putA","suspend fun putA(key: String, value: String?)","org.modelix.model.client.RestWebModelClient.putA"]},{"name":"suspend fun putAllA(entries_: Map<String, String?>)","description":"org.modelix.model.client.RestWebModelClient.putAllA","location":"model-client/org.modelix.model.client/-rest-web-model-client/put-all-a.html","searchKeys":["putAllA","suspend fun putAllA(entries_: Map<String, String?>)","org.modelix.model.client.RestWebModelClient.putAllA"]},{"name":"suspend fun resetToServerVersion()","description":"org.modelix.model.client2.ReplicatedModel.resetToServerVersion","location":"model-client/org.modelix.model.client2/-replicated-model/reset-to-server-version.html","searchKeys":["resetToServerVersion","suspend fun resetToServerVersion()","org.modelix.model.client2.ReplicatedModel.resetToServerVersion"]},{"name":"suspend fun start(): IBranch","description":"org.modelix.model.client2.ReplicatedModel.start","location":"model-client/org.modelix.model.client2/-replicated-model/start.html","searchKeys":["start","suspend fun start(): IBranch","org.modelix.model.client2.ReplicatedModel.start"]},{"name":"suspend fun updateUserId()","description":"org.modelix.model.client2.ModelClientV2.updateUserId","location":"model-client/org.modelix.model.client2/-model-client-v2/update-user-id.html","searchKeys":["updateUserId","suspend fun updateUserId()","org.modelix.model.client2.ModelClientV2.updateUserId"]},{"name":"typealias ConnectionStatusListener = (oldValue: RestWebModelClient.ConnectionStatus, newValue: RestWebModelClient.ConnectionStatus) -> Unit","description":"org.modelix.model.client.ConnectionStatusListener","location":"model-client/org.modelix.model.client/-connection-status-listener/index.html","searchKeys":["ConnectionStatusListener","typealias ConnectionStatusListener = (oldValue: RestWebModelClient.ConnectionStatus, newValue: RestWebModelClient.ConnectionStatus) -> Unit","org.modelix.model.client.ConnectionStatusListener"]},{"name":"val EMPTY: LongKeyPMap.InternalNode<*>","description":"org.modelix.model.util.pmap.LongKeyPMap.InternalNode.Companion.EMPTY","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-internal-node/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: LongKeyPMap.InternalNode<*>","org.modelix.model.util.pmap.LongKeyPMap.InternalNode.Companion.EMPTY"]},{"name":"val FIXED: ExecutorService","description":"org.modelix.model.client.SharedExecutors.FIXED","location":"model-client/org.modelix.model.client/-shared-executors/-f-i-x-e-d.html","searchKeys":["FIXED","val FIXED: ExecutorService","org.modelix.model.client.SharedExecutors.FIXED"]},{"name":"val HttpResponse.forbidden: Boolean","description":"org.modelix.model.client.forbidden","location":"model-client/org.modelix.model.client/forbidden.html","searchKeys":["forbidden","val HttpResponse.forbidden: Boolean","org.modelix.model.client.forbidden"]},{"name":"val HttpResponse.successful: Boolean","description":"org.modelix.model.client.successful","location":"model-client/org.modelix.model.client/successful.html","searchKeys":["successful","val HttpResponse.successful: Boolean","org.modelix.model.client.successful"]},{"name":"val HttpResponse.unsuccessful: Boolean","description":"org.modelix.model.client.unsuccessful","location":"model-client/org.modelix.model.client/unsuccessful.html","searchKeys":["unsuccessful","val HttpResponse.unsuccessful: Boolean","org.modelix.model.client.unsuccessful"]},{"name":"val INSTANCE: SubtreeChanges","description":"org.modelix.model.SubtreeChanges.Companion.INSTANCE","location":"model-client/org.modelix.model/-subtree-changes/-companion/-i-n-s-t-a-n-c-e.html","searchKeys":["INSTANCE","val INSTANCE: SubtreeChanges","org.modelix.model.SubtreeChanges.Companion.INSTANCE"]},{"name":"val SCHEDULED: ScheduledExecutorService","description":"org.modelix.model.client.SharedExecutors.SCHEDULED","location":"model-client/org.modelix.model.client/-shared-executors/-s-c-h-e-d-u-l-e-d.html","searchKeys":["SCHEDULED","val SCHEDULED: ScheduledExecutorService","org.modelix.model.client.SharedExecutors.SCHEDULED"]},{"name":"val baseUrl: String","description":"org.modelix.model.client2.ModelClientV2.baseUrl","location":"model-client/org.modelix.model.client2/-model-client-v2/base-url.html","searchKeys":["baseUrl","val baseUrl: String","org.modelix.model.client2.ModelClientV2.baseUrl"]},{"name":"val branch: IBranch","description":"org.modelix.model.AllChildrenDependency.branch","location":"model-client/org.modelix.model/-all-children-dependency/branch.html","searchKeys":["branch","val branch: IBranch","org.modelix.model.AllChildrenDependency.branch"]},{"name":"val branch: IBranch","description":"org.modelix.model.AllPropertiesDependency.branch","location":"model-client/org.modelix.model/-all-properties-dependency/branch.html","searchKeys":["branch","val branch: IBranch","org.modelix.model.AllPropertiesDependency.branch"]},{"name":"val branch: IBranch","description":"org.modelix.model.AllReferencesDependency.branch","location":"model-client/org.modelix.model/-all-references-dependency/branch.html","searchKeys":["branch","val branch: IBranch","org.modelix.model.AllReferencesDependency.branch"]},{"name":"val branch: IBranch","description":"org.modelix.model.BranchDependency.branch","location":"model-client/org.modelix.model/-branch-dependency/branch.html","searchKeys":["branch","val branch: IBranch","org.modelix.model.BranchDependency.branch"]},{"name":"val branch: IBranch","description":"org.modelix.model.ChildrenDependency.branch","location":"model-client/org.modelix.model/-children-dependency/branch.html","searchKeys":["branch","val branch: IBranch","org.modelix.model.ChildrenDependency.branch"]},{"name":"val branch: IBranch","description":"org.modelix.model.ContainmentDependency.branch","location":"model-client/org.modelix.model/-containment-dependency/branch.html","searchKeys":["branch","val branch: IBranch","org.modelix.model.ContainmentDependency.branch"]},{"name":"val branch: IBranch","description":"org.modelix.model.IncrementalBranch.branch","location":"model-client/org.modelix.model/-incremental-branch/branch.html","searchKeys":["branch","val branch: IBranch","org.modelix.model.IncrementalBranch.branch"]},{"name":"val branch: IBranch","description":"org.modelix.model.PropertyDependency.branch","location":"model-client/org.modelix.model/-property-dependency/branch.html","searchKeys":["branch","val branch: IBranch","org.modelix.model.PropertyDependency.branch"]},{"name":"val branch: IBranch","description":"org.modelix.model.ReferenceDependency.branch","location":"model-client/org.modelix.model/-reference-dependency/branch.html","searchKeys":["branch","val branch: IBranch","org.modelix.model.ReferenceDependency.branch"]},{"name":"val branch: IBranch","description":"org.modelix.model.UnclassifiedNodeDependency.branch","location":"model-client/org.modelix.model/-unclassified-node-dependency/branch.html","searchKeys":["branch","val branch: IBranch","org.modelix.model.UnclassifiedNodeDependency.branch"]},{"name":"val branch: IBranch","description":"org.modelix.model.metameta.MetaModelBranch.branch","location":"model-client/org.modelix.model.metameta/-meta-model-branch/branch.html","searchKeys":["branch","val branch: IBranch","org.modelix.model.metameta.MetaModelBranch.branch"]},{"name":"val branch: IBranch","description":"org.modelix.model.metameta.MetaModelSynchronizer.branch","location":"model-client/org.modelix.model.metameta/-meta-model-synchronizer/branch.html","searchKeys":["branch","val branch: IBranch","org.modelix.model.metameta.MetaModelSynchronizer.branch"]},{"name":"val branchRef: BranchReference","description":"org.modelix.model.client2.ReplicatedModel.branchRef","location":"model-client/org.modelix.model.client2/-replicated-model/branch-ref.html","searchKeys":["branchRef","val branchRef: BranchReference","org.modelix.model.client2.ReplicatedModel.branchRef"]},{"name":"val cacheSize: Int","description":"org.modelix.model.SubtreeChanges.cacheSize","location":"model-client/org.modelix.model/-subtree-changes/cache-size.html","searchKeys":["cacheSize","val cacheSize: Int","org.modelix.model.SubtreeChanges.cacheSize"]},{"name":"val childLink_Concept_childLinks: SimpleChildLink","description":"org.modelix.model.metameta.MetaMetaLanguage.childLink_Concept_childLinks","location":"model-client/org.modelix.model.metameta/-meta-meta-language/child-link_-concept_child-links.html","searchKeys":["childLink_Concept_childLinks","val childLink_Concept_childLinks: SimpleChildLink","org.modelix.model.metameta.MetaMetaLanguage.childLink_Concept_childLinks"]},{"name":"val childLink_Concept_properties: SimpleChildLink","description":"org.modelix.model.metameta.MetaMetaLanguage.childLink_Concept_properties","location":"model-client/org.modelix.model.metameta/-meta-meta-language/child-link_-concept_properties.html","searchKeys":["childLink_Concept_properties","val childLink_Concept_properties: SimpleChildLink","org.modelix.model.metameta.MetaMetaLanguage.childLink_Concept_properties"]},{"name":"val childLink_Concept_referenceLinks: SimpleChildLink","description":"org.modelix.model.metameta.MetaMetaLanguage.childLink_Concept_referenceLinks","location":"model-client/org.modelix.model.metameta/-meta-meta-language/child-link_-concept_reference-links.html","searchKeys":["childLink_Concept_referenceLinks","val childLink_Concept_referenceLinks: SimpleChildLink","org.modelix.model.metameta.MetaMetaLanguage.childLink_Concept_referenceLinks"]},{"name":"val childLink_Concept_superConcepts: SimpleChildLink","description":"org.modelix.model.metameta.MetaMetaLanguage.childLink_Concept_superConcepts","location":"model-client/org.modelix.model.metameta/-meta-meta-language/child-link_-concept_super-concepts.html","searchKeys":["childLink_Concept_superConcepts","val childLink_Concept_superConcepts: SimpleChildLink","org.modelix.model.metameta.MetaMetaLanguage.childLink_Concept_superConcepts"]},{"name":"val childLink_Language_concepts: SimpleChildLink","description":"org.modelix.model.metameta.MetaMetaLanguage.childLink_Language_concepts","location":"model-client/org.modelix.model.metameta/-meta-meta-language/child-link_-language_concepts.html","searchKeys":["childLink_Language_concepts","val childLink_Language_concepts: SimpleChildLink","org.modelix.model.metameta.MetaMetaLanguage.childLink_Language_concepts"]},{"name":"val client: IModelClient","description":"org.modelix.model.client.ActiveBranch.client","location":"model-client/org.modelix.model.client/-active-branch/client.html","searchKeys":["client","val client: IModelClient","org.modelix.model.client.ActiveBranch.client"]},{"name":"val client: IModelClientV2","description":"org.modelix.model.client2.ReplicatedModel.client","location":"model-client/org.modelix.model.client2/-replicated-model/client.html","searchKeys":["client","val client: IModelClientV2","org.modelix.model.client2.ReplicatedModel.client"]},{"name":"val concept_ChildLink: SimpleConcept","description":"org.modelix.model.metameta.MetaMetaLanguage.concept_ChildLink","location":"model-client/org.modelix.model.metameta/-meta-meta-language/concept_-child-link.html","searchKeys":["concept_ChildLink","val concept_ChildLink: SimpleConcept","org.modelix.model.metameta.MetaMetaLanguage.concept_ChildLink"]},{"name":"val concept_Concept: SimpleConcept","description":"org.modelix.model.metameta.MetaMetaLanguage.concept_Concept","location":"model-client/org.modelix.model.metameta/-meta-meta-language/concept_-concept.html","searchKeys":["concept_Concept","val concept_Concept: SimpleConcept","org.modelix.model.metameta.MetaMetaLanguage.concept_Concept"]},{"name":"val concept_ConceptReference: SimpleConcept","description":"org.modelix.model.metameta.MetaMetaLanguage.concept_ConceptReference","location":"model-client/org.modelix.model.metameta/-meta-meta-language/concept_-concept-reference.html","searchKeys":["concept_ConceptReference","val concept_ConceptReference: SimpleConcept","org.modelix.model.metameta.MetaMetaLanguage.concept_ConceptReference"]},{"name":"val concept_IHasUID: SimpleConcept","description":"org.modelix.model.metameta.MetaMetaLanguage.concept_IHasUID","location":"model-client/org.modelix.model.metameta/-meta-meta-language/concept_-i-has-u-i-d.html","searchKeys":["concept_IHasUID","val concept_IHasUID: SimpleConcept","org.modelix.model.metameta.MetaMetaLanguage.concept_IHasUID"]},{"name":"val concept_Language: SimpleConcept","description":"org.modelix.model.metameta.MetaMetaLanguage.concept_Language","location":"model-client/org.modelix.model.metameta/-meta-meta-language/concept_-language.html","searchKeys":["concept_Language","val concept_Language: SimpleConcept","org.modelix.model.metameta.MetaMetaLanguage.concept_Language"]},{"name":"val concept_Property: SimpleConcept","description":"org.modelix.model.metameta.MetaMetaLanguage.concept_Property","location":"model-client/org.modelix.model.metameta/-meta-meta-language/concept_-property.html","searchKeys":["concept_Property","val concept_Property: SimpleConcept","org.modelix.model.metameta.MetaMetaLanguage.concept_Property"]},{"name":"val concept_ReferenceLink: SimpleConcept","description":"org.modelix.model.metameta.MetaMetaLanguage.concept_ReferenceLink","location":"model-client/org.modelix.model.metameta/-meta-meta-language/concept_-reference-link.html","searchKeys":["concept_ReferenceLink","val concept_ReferenceLink: SimpleConcept","org.modelix.model.metameta.MetaMetaLanguage.concept_ReferenceLink"]},{"name":"val defaultUrl: String","description":"org.modelix.model.client.RestWebModelClient.Companion.defaultUrl","location":"model-client/org.modelix.model.client/-rest-web-model-client/-companion/default-url.html","searchKeys":["defaultUrl","val defaultUrl: String","org.modelix.model.client.RestWebModelClient.Companion.defaultUrl"]},{"name":"val entries: EnumEntries<RestWebModelClient.ConnectionStatus>","description":"org.modelix.model.client.RestWebModelClient.ConnectionStatus.entries","location":"model-client/org.modelix.model.client/-rest-web-model-client/-connection-status/entries.html","searchKeys":["entries","val entries: EnumEntries<RestWebModelClient.ConnectionStatus>","org.modelix.model.client.RestWebModelClient.ConnectionStatus.entries"]},{"name":"val id: Long","description":"org.modelix.model.metameta.PersistedConcept.id","location":"model-client/org.modelix.model.metameta/-persisted-concept/id.html","searchKeys":["id","val id: Long","org.modelix.model.metameta.PersistedConcept.id"]},{"name":"val key: Long","description":"org.modelix.model.util.pmap.LongKeyPMap.LeafNode.key","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-leaf-node/key.html","searchKeys":["key","val key: Long","org.modelix.model.util.pmap.LongKeyPMap.LeafNode.key"]},{"name":"val key: String","description":"org.modelix.model.client.RestWebModelClient.PollingListener.key","location":"model-client/org.modelix.model.client/-rest-web-model-client/-polling-listener/key.html","searchKeys":["key","val key: String","org.modelix.model.client.RestWebModelClient.PollingListener.key"]},{"name":"val keyListener: IKeyListener","description":"org.modelix.model.client.RestWebModelClient.PollingListener.keyListener","location":"model-client/org.modelix.model.client/-rest-web-model-client/-polling-listener/key-listener.html","searchKeys":["keyListener","val keyListener: IKeyListener","org.modelix.model.client.RestWebModelClient.PollingListener.keyListener"]},{"name":"val language_metameta: SimpleLanguage","description":"org.modelix.model.metameta.MetaMetaLanguage.language_metameta","location":"model-client/org.modelix.model.metameta/-meta-meta-language/language_metameta.html","searchKeys":["language_metameta","val language_metameta: SimpleLanguage","org.modelix.model.metameta.MetaMetaLanguage.language_metameta"]},{"name":"val listener: IBranchListener","description":"org.modelix.model.metameta.MetaModelBranch.MMBranchListener.listener","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-branch-listener/listener.html","searchKeys":["listener","val listener: IBranchListener","org.modelix.model.metameta.MetaModelBranch.MMBranchListener.listener"]},{"name":"val modelUrlFromEnv: String?","description":"org.modelix.model.client.RestWebModelClient.Companion.modelUrlFromEnv","location":"model-client/org.modelix.model.client/-rest-web-model-client/-companion/model-url-from-env.html","searchKeys":["modelUrlFromEnv","val modelUrlFromEnv: String?","org.modelix.model.client.RestWebModelClient.Companion.modelUrlFromEnv"]},{"name":"val nodeId: Long","description":"org.modelix.model.AllChildrenDependency.nodeId","location":"model-client/org.modelix.model/-all-children-dependency/node-id.html","searchKeys":["nodeId","val nodeId: Long","org.modelix.model.AllChildrenDependency.nodeId"]},{"name":"val nodeId: Long","description":"org.modelix.model.AllPropertiesDependency.nodeId","location":"model-client/org.modelix.model/-all-properties-dependency/node-id.html","searchKeys":["nodeId","val nodeId: Long","org.modelix.model.AllPropertiesDependency.nodeId"]},{"name":"val nodeId: Long","description":"org.modelix.model.AllReferencesDependency.nodeId","location":"model-client/org.modelix.model/-all-references-dependency/node-id.html","searchKeys":["nodeId","val nodeId: Long","org.modelix.model.AllReferencesDependency.nodeId"]},{"name":"val nodeId: Long","description":"org.modelix.model.ChildrenDependency.nodeId","location":"model-client/org.modelix.model/-children-dependency/node-id.html","searchKeys":["nodeId","val nodeId: Long","org.modelix.model.ChildrenDependency.nodeId"]},{"name":"val nodeId: Long","description":"org.modelix.model.ContainmentDependency.nodeId","location":"model-client/org.modelix.model/-containment-dependency/node-id.html","searchKeys":["nodeId","val nodeId: Long","org.modelix.model.ContainmentDependency.nodeId"]},{"name":"val nodeId: Long","description":"org.modelix.model.PropertyDependency.nodeId","location":"model-client/org.modelix.model/-property-dependency/node-id.html","searchKeys":["nodeId","val nodeId: Long","org.modelix.model.PropertyDependency.nodeId"]},{"name":"val nodeId: Long","description":"org.modelix.model.ReferenceDependency.nodeId","location":"model-client/org.modelix.model/-reference-dependency/node-id.html","searchKeys":["nodeId","val nodeId: Long","org.modelix.model.ReferenceDependency.nodeId"]},{"name":"val nodeId: Long","description":"org.modelix.model.UnclassifiedNodeDependency.nodeId","location":"model-client/org.modelix.model/-unclassified-node-dependency/node-id.html","searchKeys":["nodeId","val nodeId: Long","org.modelix.model.UnclassifiedNodeDependency.nodeId"]},{"name":"val propertyRole: String","description":"org.modelix.model.ModelIndex.propertyRole","location":"model-client/org.modelix.model/-model-index/property-role.html","searchKeys":["propertyRole","val propertyRole: String","org.modelix.model.ModelIndex.propertyRole"]},{"name":"val property_ChildLink_multiple: SimpleProperty","description":"org.modelix.model.metameta.MetaMetaLanguage.property_ChildLink_multiple","location":"model-client/org.modelix.model.metameta/-meta-meta-language/property_-child-link_multiple.html","searchKeys":["property_ChildLink_multiple","val property_ChildLink_multiple: SimpleProperty","org.modelix.model.metameta.MetaMetaLanguage.property_ChildLink_multiple"]},{"name":"val property_ChildLink_name: SimpleProperty","description":"org.modelix.model.metameta.MetaMetaLanguage.property_ChildLink_name","location":"model-client/org.modelix.model.metameta/-meta-meta-language/property_-child-link_name.html","searchKeys":["property_ChildLink_name","val property_ChildLink_name: SimpleProperty","org.modelix.model.metameta.MetaMetaLanguage.property_ChildLink_name"]},{"name":"val property_ChildLink_optional: SimpleProperty","description":"org.modelix.model.metameta.MetaMetaLanguage.property_ChildLink_optional","location":"model-client/org.modelix.model.metameta/-meta-meta-language/property_-child-link_optional.html","searchKeys":["property_ChildLink_optional","val property_ChildLink_optional: SimpleProperty","org.modelix.model.metameta.MetaMetaLanguage.property_ChildLink_optional"]},{"name":"val property_Concept_abstract: SimpleProperty","description":"org.modelix.model.metameta.MetaMetaLanguage.property_Concept_abstract","location":"model-client/org.modelix.model.metameta/-meta-meta-language/property_-concept_abstract.html","searchKeys":["property_Concept_abstract","val property_Concept_abstract: SimpleProperty","org.modelix.model.metameta.MetaMetaLanguage.property_Concept_abstract"]},{"name":"val property_Concept_name: SimpleProperty","description":"org.modelix.model.metameta.MetaMetaLanguage.property_Concept_name","location":"model-client/org.modelix.model.metameta/-meta-meta-language/property_-concept_name.html","searchKeys":["property_Concept_name","val property_Concept_name: SimpleProperty","org.modelix.model.metameta.MetaMetaLanguage.property_Concept_name"]},{"name":"val property_IHasUID_uid: SimpleProperty","description":"org.modelix.model.metameta.MetaMetaLanguage.property_IHasUID_uid","location":"model-client/org.modelix.model.metameta/-meta-meta-language/property_-i-has-u-i-d_uid.html","searchKeys":["property_IHasUID_uid","val property_IHasUID_uid: SimpleProperty","org.modelix.model.metameta.MetaMetaLanguage.property_IHasUID_uid"]},{"name":"val property_Language_name: SimpleProperty","description":"org.modelix.model.metameta.MetaMetaLanguage.property_Language_name","location":"model-client/org.modelix.model.metameta/-meta-meta-language/property_-language_name.html","searchKeys":["property_Language_name","val property_Language_name: SimpleProperty","org.modelix.model.metameta.MetaMetaLanguage.property_Language_name"]},{"name":"val property_Property_name: SimpleProperty","description":"org.modelix.model.metameta.MetaMetaLanguage.property_Property_name","location":"model-client/org.modelix.model.metameta/-meta-meta-language/property_-property_name.html","searchKeys":["property_Property_name","val property_Property_name: SimpleProperty","org.modelix.model.metameta.MetaMetaLanguage.property_Property_name"]},{"name":"val property_ReferenceLink_name: SimpleProperty","description":"org.modelix.model.metameta.MetaMetaLanguage.property_ReferenceLink_name","location":"model-client/org.modelix.model.metameta/-meta-meta-language/property_-reference-link_name.html","searchKeys":["property_ReferenceLink_name","val property_ReferenceLink_name: SimpleProperty","org.modelix.model.metameta.MetaMetaLanguage.property_ReferenceLink_name"]},{"name":"val property_ReferenceLink_optional: SimpleProperty","description":"org.modelix.model.metameta.MetaMetaLanguage.property_ReferenceLink_optional","location":"model-client/org.modelix.model.metameta/-meta-meta-language/property_-reference-link_optional.html","searchKeys":["property_ReferenceLink_optional","val property_ReferenceLink_optional: SimpleProperty","org.modelix.model.metameta.MetaMetaLanguage.property_ReferenceLink_optional"]},{"name":"val referenceLink_ChildLink_childConcept: SimpleReferenceLink","description":"org.modelix.model.metameta.MetaMetaLanguage.referenceLink_ChildLink_childConcept","location":"model-client/org.modelix.model.metameta/-meta-meta-language/reference-link_-child-link_child-concept.html","searchKeys":["referenceLink_ChildLink_childConcept","val referenceLink_ChildLink_childConcept: SimpleReferenceLink","org.modelix.model.metameta.MetaMetaLanguage.referenceLink_ChildLink_childConcept"]},{"name":"val referenceLink_ConceptReference_concept: SimpleReferenceLink","description":"org.modelix.model.metameta.MetaMetaLanguage.referenceLink_ConceptReference_concept","location":"model-client/org.modelix.model.metameta/-meta-meta-language/reference-link_-concept-reference_concept.html","searchKeys":["referenceLink_ConceptReference_concept","val referenceLink_ConceptReference_concept: SimpleReferenceLink","org.modelix.model.metameta.MetaMetaLanguage.referenceLink_ConceptReference_concept"]},{"name":"val referenceLink_ReferenceLink_targetConcept: SimpleReferenceLink","description":"org.modelix.model.metameta.MetaMetaLanguage.referenceLink_ReferenceLink_targetConcept","location":"model-client/org.modelix.model.metameta/-meta-meta-language/reference-link_-reference-link_target-concept.html","searchKeys":["referenceLink_ReferenceLink_targetConcept","val referenceLink_ReferenceLink_targetConcept: SimpleReferenceLink","org.modelix.model.metameta.MetaMetaLanguage.referenceLink_ReferenceLink_targetConcept"]},{"name":"val repository: RepositoryId","description":"org.modelix.model.client.ActiveBranch.repository","location":"model-client/org.modelix.model.client/-active-branch/repository.html","searchKeys":["repository","val repository: RepositoryId","org.modelix.model.client.ActiveBranch.repository"]},{"name":"val role: String","description":"org.modelix.model.PropertyDependency.role","location":"model-client/org.modelix.model/-property-dependency/role.html","searchKeys":["role","val role: String","org.modelix.model.PropertyDependency.role"]},{"name":"val role: String","description":"org.modelix.model.ReferenceDependency.role","location":"model-client/org.modelix.model/-reference-dependency/role.html","searchKeys":["role","val role: String","org.modelix.model.ReferenceDependency.role"]},{"name":"val role: String","description":"org.modelix.model.client2.PropertyChanged.role","location":"model-client/org.modelix.model.client2/-property-changed/role.html","searchKeys":["role","val role: String","org.modelix.model.client2.PropertyChanged.role"]},{"name":"val role: String","description":"org.modelix.model.client2.ReferenceChanged.role","location":"model-client/org.modelix.model.client2/-reference-changed/role.html","searchKeys":["role","val role: String","org.modelix.model.client2.ReferenceChanged.role"]},{"name":"val role: String?","description":"org.modelix.model.ChildrenDependency.role","location":"model-client/org.modelix.model/-children-dependency/role.html","searchKeys":["role","val role: String?","org.modelix.model.ChildrenDependency.role"]},{"name":"val role: String?","description":"org.modelix.model.client2.ChildrenChanged.role","location":"model-client/org.modelix.model.client2/-children-changed/role.html","searchKeys":["role","val role: String?","org.modelix.model.client2.ChildrenChanged.role"]},{"name":"val store: ObjectStoreCache","description":"org.modelix.model.client2.ModelClientV2.store","location":"model-client/org.modelix.model.client2/-model-client-v2/store.html","searchKeys":["store","val store: ObjectStoreCache","org.modelix.model.client2.ModelClientV2.store"]},{"name":"val transaction: IReadTransaction","description":"org.modelix.model.metameta.MetaModelBranch.MMReadTransaction.transaction","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-read-transaction/transaction.html","searchKeys":["transaction","val transaction: IReadTransaction","org.modelix.model.metameta.MetaModelBranch.MMReadTransaction.transaction"]},{"name":"val transaction: IWriteTransaction","description":"org.modelix.model.metameta.MetaModelBranch.MMWriteTransaction.transaction","location":"model-client/org.modelix.model.metameta/-meta-model-branch/-m-m-write-transaction/transaction.html","searchKeys":["transaction","val transaction: IWriteTransaction","org.modelix.model.metameta.MetaModelBranch.MMWriteTransaction.transaction"]},{"name":"val transaction: TransactionT","description":"org.modelix.model.IncrementalBranch.IncrementalTransaction.transaction","location":"model-client/org.modelix.model/-incremental-branch/-incremental-transaction/transaction.html","searchKeys":["transaction","val transaction: TransactionT","org.modelix.model.IncrementalBranch.IncrementalTransaction.transaction"]},{"name":"val tree: ITree","description":"org.modelix.model.IncrementalBranch.IncrementalTree.tree","location":"model-client/org.modelix.model/-incremental-branch/-incremental-tree/tree.html","searchKeys":["tree","val tree: ITree","org.modelix.model.IncrementalBranch.IncrementalTree.tree"]},{"name":"val tree: ITree","description":"org.modelix.model.ModelIndex.tree","location":"model-client/org.modelix.model/-model-index/tree.html","searchKeys":["tree","val tree: ITree","org.modelix.model.ModelIndex.tree"]},{"name":"val tree: ITree","description":"org.modelix.model.metameta.MetaModelIndex.tree","location":"model-client/org.modelix.model.metameta/-meta-model-index/tree.html","searchKeys":["tree","val tree: ITree","org.modelix.model.metameta.MetaModelIndex.tree"]},{"name":"val uid: String?","description":"org.modelix.model.metameta.PersistedConcept.uid","location":"model-client/org.modelix.model.metameta/-persisted-concept/uid.html","searchKeys":["uid","val uid: String?","org.modelix.model.metameta.PersistedConcept.uid"]},{"name":"val value: V","description":"org.modelix.model.util.pmap.LongKeyPMap.LeafNode.value","location":"model-client/org.modelix.model.util.pmap/-long-key-p-map/-leaf-node/value.html","searchKeys":["value","val value: V","org.modelix.model.util.pmap.LongKeyPMap.LeafNode.value"]},{"name":"val version: CLVersion","description":"org.modelix.model.client.ActiveBranch.version","location":"model-client/org.modelix.model.client/-active-branch/version.html","searchKeys":["version","val version: CLVersion","org.modelix.model.client.ActiveBranch.version"]},{"name":"var baseUrl: String","description":"org.modelix.model.client.RestWebModelClient.baseUrl","location":"model-client/org.modelix.model.client/-rest-web-model-client/base-url.html","searchKeys":["baseUrl","var baseUrl: String","org.modelix.model.client.RestWebModelClient.baseUrl"]},{"name":"var branchName: String","description":"org.modelix.model.client.ActiveBranch.branchName","location":"model-client/org.modelix.model.client/-active-branch/branch-name.html","searchKeys":["branchName","var branchName: String","org.modelix.model.client.ActiveBranch.branchName"]},{"name":"var connectionStatus: RestWebModelClient.ConnectionStatus","description":"org.modelix.model.client.RestWebModelClient.connectionStatus","location":"model-client/org.modelix.model.client/-rest-web-model-client/connection-status.html","searchKeys":["connectionStatus","var connectionStatus: RestWebModelClient.ConnectionStatus","org.modelix.model.client.RestWebModelClient.connectionStatus"]},{"name":"var disabled: Boolean","description":"org.modelix.model.metameta.MetaModelBranch.disabled","location":"model-client/org.modelix.model.metameta/-meta-model-branch/disabled.html","searchKeys":["disabled","var disabled: Boolean","org.modelix.model.metameta.MetaModelBranch.disabled"]},{"name":"var lastVersionHash: String?","description":"org.modelix.model.client.VersionChangeDetector.lastVersionHash","location":"model-client/org.modelix.model.client/-version-change-detector/last-version-hash.html","searchKeys":["lastVersionHash","var lastVersionHash: String?","org.modelix.model.client.VersionChangeDetector.lastVersionHash"]},{"name":"var nextDelay: Duration","description":"org.modelix.model.client.RestWebModelClient.PollingListener.nextDelay","location":"model-client/org.modelix.model.client/-rest-web-model-client/-polling-listener/next-delay.html","searchKeys":["nextDelay","var nextDelay: Duration","org.modelix.model.client.RestWebModelClient.PollingListener.nextDelay"]},{"name":"class ConceptSwitchBuilder<In : ITypedNode, Out>(input: IMonoStep<In>)","description":"org.modelix.modelql.typed.ConceptSwitchBuilder","location":"modelql-typed/org.modelix.modelql.typed/-concept-switch-builder/index.html","searchKeys":["ConceptSwitchBuilder","class ConceptSwitchBuilder<In : ITypedNode, Out>(input: IMonoStep<In>)","org.modelix.modelql.typed.ConceptSwitchBuilder"]},{"name":"class TypedNodeSerializer<Typed : ITypedNode>(val nodeClass: KClass<out Typed>, val untypedSerializer: KSerializer<IStepOutput<INode>>) : KSerializer<Typed> ","description":"org.modelix.modelql.typed.TypedNodeSerializer","location":"modelql-typed/org.modelix.modelql.typed/-typed-node-serializer/index.html","searchKeys":["TypedNodeSerializer","class TypedNodeSerializer<Typed : ITypedNode>(val nodeClass: KClass<out Typed>, val untypedSerializer: KSerializer<IStepOutput<INode>>) : KSerializer<Typed> ","org.modelix.modelql.typed.TypedNodeSerializer"]},{"name":"class TypedNodeStep<Typed : ITypedNode>(val nodeClass: KClass<out Typed>) : MonoTransformingStep<INode, Typed> ","description":"org.modelix.modelql.typed.TypedNodeStep","location":"modelql-typed/org.modelix.modelql.typed/-typed-node-step/index.html","searchKeys":["TypedNodeStep","class TypedNodeStep<Typed : ITypedNode>(val nodeClass: KClass<out Typed>) : MonoTransformingStep<INode, Typed> ","org.modelix.modelql.typed.TypedNodeStep"]},{"name":"class UntypedNodeSerializer(val typedSerializer: KSerializer<IStepOutput<ITypedNode>>) : KSerializer<INode> ","description":"org.modelix.modelql.typed.UntypedNodeSerializer","location":"modelql-typed/org.modelix.modelql.typed/-untyped-node-serializer/index.html","searchKeys":["UntypedNodeSerializer","class UntypedNodeSerializer(val typedSerializer: KSerializer<IStepOutput<ITypedNode>>) : KSerializer<INode> ","org.modelix.modelql.typed.UntypedNodeSerializer"]},{"name":"class UntypedNodeStep : MonoTransformingStep<ITypedNode, INode> ","description":"org.modelix.modelql.typed.UntypedNodeStep","location":"modelql-typed/org.modelix.modelql.typed/-untyped-node-step/index.html","searchKeys":["UntypedNodeStep","class UntypedNodeStep : MonoTransformingStep<ITypedNode, INode> ","org.modelix.modelql.typed.UntypedNodeStep"]},{"name":"constructor()","description":"org.modelix.modelql.typed.UntypedNodeStep.UntypedNodeStep","location":"modelql-typed/org.modelix.modelql.typed/-untyped-node-step/-untyped-node-step.html","searchKeys":["UntypedNodeStep","constructor()","org.modelix.modelql.typed.UntypedNodeStep.UntypedNodeStep"]},{"name":"constructor(concept: IConceptOfTypedNode<Node>)","description":"org.modelix.modelql.typed.ConceptSwitchBuilder.CaseBuilder.CaseBuilder","location":"modelql-typed/org.modelix.modelql.typed/-concept-switch-builder/-case-builder/-case-builder.html","searchKeys":["CaseBuilder","constructor(concept: IConceptOfTypedNode<Node>)","org.modelix.modelql.typed.ConceptSwitchBuilder.CaseBuilder.CaseBuilder"]},{"name":"constructor(input: IMonoStep<In>)","description":"org.modelix.modelql.typed.ConceptSwitchBuilder.ConceptSwitchBuilder","location":"modelql-typed/org.modelix.modelql.typed/-concept-switch-builder/-concept-switch-builder.html","searchKeys":["ConceptSwitchBuilder","constructor(input: IMonoStep<In>)","org.modelix.modelql.typed.ConceptSwitchBuilder.ConceptSwitchBuilder"]},{"name":"constructor(nodeClass: KClass<out Typed>)","description":"org.modelix.modelql.typed.TypedNodeStep.TypedNodeStep","location":"modelql-typed/org.modelix.modelql.typed/-typed-node-step/-typed-node-step.html","searchKeys":["TypedNodeStep","constructor(nodeClass: KClass<out Typed>)","org.modelix.modelql.typed.TypedNodeStep.TypedNodeStep"]},{"name":"constructor(nodeClass: KClass<out Typed>, untypedSerializer: KSerializer<IStepOutput<INode>>)","description":"org.modelix.modelql.typed.TypedNodeSerializer.TypedNodeSerializer","location":"modelql-typed/org.modelix.modelql.typed/-typed-node-serializer/-typed-node-serializer.html","searchKeys":["TypedNodeSerializer","constructor(nodeClass: KClass<out Typed>, untypedSerializer: KSerializer<IStepOutput<INode>>)","org.modelix.modelql.typed.TypedNodeSerializer.TypedNodeSerializer"]},{"name":"constructor(typedSerializer: KSerializer<IStepOutput<ITypedNode>>)","description":"org.modelix.modelql.typed.UntypedNodeSerializer.UntypedNodeSerializer","location":"modelql-typed/org.modelix.modelql.typed/-untyped-node-serializer/-untyped-node-serializer.html","searchKeys":["UntypedNodeSerializer","constructor(typedSerializer: KSerializer<IStepOutput<ITypedNode>>)","org.modelix.modelql.typed.UntypedNodeSerializer.UntypedNodeSerializer"]},{"name":"fun <In : ITypedNode, CaseIn : In, Context> ConceptSwitchBuilder.CaseBuilder<CaseIn, In, IBoundFragment<Context>>.thenFragment(body: IRecursiveFragmentBuilder<CaseIn, Context>.() -> Unit): ConceptSwitchBuilder<In, IBoundFragment<Context>>","description":"org.modelix.modelql.typed.thenFragment","location":"modelql-typed/org.modelix.modelql.typed/then-fragment.html","searchKeys":["thenFragment","fun <In : ITypedNode, CaseIn : In, Context> ConceptSwitchBuilder.CaseBuilder<CaseIn, In, IBoundFragment<Context>>.thenFragment(body: IRecursiveFragmentBuilder<CaseIn, Context>.() -> Unit): ConceptSwitchBuilder<In, IBoundFragment<Context>>","org.modelix.modelql.typed.thenFragment"]},{"name":"fun <In : ITypedNode, Context> ConceptSwitchBuilder<In, IBoundFragment<Context>>.elseFragment(body: IRecursiveFragmentBuilder<In, Context>.() -> Unit): IMonoStep<IBoundFragment<Context>>","description":"org.modelix.modelql.typed.elseFragment","location":"modelql-typed/org.modelix.modelql.typed/else-fragment.html","searchKeys":["elseFragment","fun <In : ITypedNode, Context> ConceptSwitchBuilder<In, IBoundFragment<Context>>.elseFragment(body: IRecursiveFragmentBuilder<In, Context>.() -> Unit): IMonoStep<IBoundFragment<Context>>","org.modelix.modelql.typed.elseFragment"]},{"name":"fun <In : ITypedNode, Context> IMonoStep<In>.conceptSwitchFragment(): ConceptSwitchBuilder<In, IBoundFragment<Context>>","description":"org.modelix.modelql.typed.conceptSwitchFragment","location":"modelql-typed/org.modelix.modelql.typed/concept-switch-fragment.html","searchKeys":["conceptSwitchFragment","fun <In : ITypedNode, Context> IMonoStep<In>.conceptSwitchFragment(): ConceptSwitchBuilder<In, IBoundFragment<Context>>","org.modelix.modelql.typed.conceptSwitchFragment"]},{"name":"fun <In : ITypedNode, Out : In> IFluxStep<In?>.ofConcept(concept: IConceptOfTypedNode<Out>): IFluxStep<Out>","description":"org.modelix.modelql.typed.ofConcept","location":"modelql-typed/org.modelix.modelql.typed/of-concept.html","searchKeys":["ofConcept","fun <In : ITypedNode, Out : In> IFluxStep<In?>.ofConcept(concept: IConceptOfTypedNode<Out>): IFluxStep<Out>","org.modelix.modelql.typed.ofConcept"]},{"name":"fun <In : ITypedNode, Out : In> IMonoStep<In?>.instanceOf(concept: IConceptOfTypedNode<Out>): IMonoStep<Boolean>","description":"org.modelix.modelql.typed.instanceOf","location":"modelql-typed/org.modelix.modelql.typed/instance-of.html","searchKeys":["instanceOf","fun <In : ITypedNode, Out : In> IMonoStep<In?>.instanceOf(concept: IConceptOfTypedNode<Out>): IMonoStep<Boolean>","org.modelix.modelql.typed.instanceOf"]},{"name":"fun <In : ITypedNode, Out : In> IMonoStep<In?>.ofConcept(concept: IConceptOfTypedNode<Out>): IMonoStep<Out>","description":"org.modelix.modelql.typed.ofConcept","location":"modelql-typed/org.modelix.modelql.typed/of-concept.html","searchKeys":["ofConcept","fun <In : ITypedNode, Out : In> IMonoStep<In?>.ofConcept(concept: IConceptOfTypedNode<Out>): IMonoStep<Out>","org.modelix.modelql.typed.ofConcept"]},{"name":"fun <In : ITypedNode, Out> IMonoStep<In>.conceptSwitch(): ConceptSwitchBuilder<In, Out>","description":"org.modelix.modelql.typed.conceptSwitch","location":"modelql-typed/org.modelix.modelql.typed/concept-switch.html","searchKeys":["conceptSwitch","fun <In : ITypedNode, Out> IMonoStep<In>.conceptSwitch(): ConceptSwitchBuilder<In, Out>","org.modelix.modelql.typed.conceptSwitch"]},{"name":"fun <NodeT : ITypedNode, ValueT : String?> setProperty(input: IMonoStep<NodeT>, link: ITypedProperty<ValueT>, value: IMonoStep<ValueT>): IMonoStep<NodeT>","description":"org.modelix.modelql.typed.TypedModelQL.setProperty","location":"modelql-typed/org.modelix.modelql.typed/-typed-model-q-l/set-property.html","searchKeys":["setProperty","fun <NodeT : ITypedNode, ValueT : String?> setProperty(input: IMonoStep<NodeT>, link: ITypedProperty<ValueT>, value: IMonoStep<ValueT>): IMonoStep<NodeT>","org.modelix.modelql.typed.TypedModelQL.setProperty"]},{"name":"fun <NodeT : ITypedNode, ValueT> setProperty(input: IMonoStep<NodeT>, link: ITypedProperty<ValueT>, value: IMonoStep<ValueT>): IMonoStep<NodeT>","description":"org.modelix.modelql.typed.TypedModelQL.setProperty","location":"modelql-typed/org.modelix.modelql.typed/-typed-model-q-l/set-property.html","searchKeys":["setProperty","fun <NodeT : ITypedNode, ValueT> setProperty(input: IMonoStep<NodeT>, link: ITypedProperty<ValueT>, value: IMonoStep<ValueT>): IMonoStep<NodeT>","org.modelix.modelql.typed.TypedModelQL.setProperty"]},{"name":"fun <Out : ITypedNode> IFluxStep<INode?>.ofConcept(concept: IConceptOfTypedNode<Out>): IFluxStep<Out>","description":"org.modelix.modelql.typed.ofConcept","location":"modelql-typed/org.modelix.modelql.typed/of-concept.html","searchKeys":["ofConcept","fun <Out : ITypedNode> IFluxStep<INode?>.ofConcept(concept: IConceptOfTypedNode<Out>): IFluxStep<Out>","org.modelix.modelql.typed.ofConcept"]},{"name":"fun <Out : ITypedNode> IMonoStep<INode?>.instanceOf(concept: IConceptOfTypedNode<Out>): IMonoStep<Boolean>","description":"org.modelix.modelql.typed.instanceOf","location":"modelql-typed/org.modelix.modelql.typed/instance-of.html","searchKeys":["instanceOf","fun <Out : ITypedNode> IMonoStep<INode?>.instanceOf(concept: IConceptOfTypedNode<Out>): IMonoStep<Boolean>","org.modelix.modelql.typed.instanceOf"]},{"name":"fun <Out : ITypedNode> IMonoStep<INode?>.ofConcept(concept: IConceptOfTypedNode<Out>): IMonoStep<Out>","description":"org.modelix.modelql.typed.ofConcept","location":"modelql-typed/org.modelix.modelql.typed/of-concept.html","searchKeys":["ofConcept","fun <Out : ITypedNode> IMonoStep<INode?>.ofConcept(concept: IConceptOfTypedNode<Out>): IMonoStep<Out>","org.modelix.modelql.typed.ofConcept"]},{"name":"fun <ParentT : ITypedNode, ChildT : ITypedNode> children(input: IFluxStep<ParentT>, link: ITypedChildLink<ChildT>): IFluxStep<ChildT>","description":"org.modelix.modelql.typed.TypedModelQL.children","location":"modelql-typed/org.modelix.modelql.typed/-typed-model-q-l/children.html","searchKeys":["children","fun <ParentT : ITypedNode, ChildT : ITypedNode> children(input: IFluxStep<ParentT>, link: ITypedChildLink<ChildT>): IFluxStep<ChildT>","org.modelix.modelql.typed.TypedModelQL.children"]},{"name":"fun <ParentT : ITypedNode, ChildT : ITypedNode> children(input: IMonoStep<ParentT>, link: ITypedMandatorySingleChildLink<ChildT>): IMonoStep<ChildT>","description":"org.modelix.modelql.typed.TypedModelQL.children","location":"modelql-typed/org.modelix.modelql.typed/-typed-model-q-l/children.html","searchKeys":["children","fun <ParentT : ITypedNode, ChildT : ITypedNode> children(input: IMonoStep<ParentT>, link: ITypedMandatorySingleChildLink<ChildT>): IMonoStep<ChildT>","org.modelix.modelql.typed.TypedModelQL.children"]},{"name":"fun <ParentT : ITypedNode, ChildT : ITypedNode> children(input: IMonoStep<ParentT>, link: ITypedSingleChildLink<ChildT>): IMonoStep<ChildT?>","description":"org.modelix.modelql.typed.TypedModelQL.children","location":"modelql-typed/org.modelix.modelql.typed/-typed-model-q-l/children.html","searchKeys":["children","fun <ParentT : ITypedNode, ChildT : ITypedNode> children(input: IMonoStep<ParentT>, link: ITypedSingleChildLink<ChildT>): IMonoStep<ChildT?>","org.modelix.modelql.typed.TypedModelQL.children"]},{"name":"fun <ParentT : ITypedNode, ChildT : ITypedNode> children(input: IProducingStep<ParentT>, link: ITypedChildListLink<ChildT>): IFluxStep<ChildT>","description":"org.modelix.modelql.typed.TypedModelQL.children","location":"modelql-typed/org.modelix.modelql.typed/-typed-model-q-l/children.html","searchKeys":["children","fun <ParentT : ITypedNode, ChildT : ITypedNode> children(input: IProducingStep<ParentT>, link: ITypedChildListLink<ChildT>): IFluxStep<ChildT>","org.modelix.modelql.typed.TypedModelQL.children"]},{"name":"fun <SourceT : ITypedNode, TargetT : ITypedNode> reference(input: IFluxStep<SourceT>, link: ITypedReferenceLink<TargetT>): IFluxStep<TargetT>","description":"org.modelix.modelql.typed.TypedModelQL.reference","location":"modelql-typed/org.modelix.modelql.typed/-typed-model-q-l/reference.html","searchKeys":["reference","fun <SourceT : ITypedNode, TargetT : ITypedNode> reference(input: IFluxStep<SourceT>, link: ITypedReferenceLink<TargetT>): IFluxStep<TargetT>","org.modelix.modelql.typed.TypedModelQL.reference"]},{"name":"fun <SourceT : ITypedNode, TargetT : ITypedNode> reference(input: IMonoStep<SourceT>, link: ITypedReferenceLink<TargetT>): IMonoStep<TargetT>","description":"org.modelix.modelql.typed.TypedModelQL.reference","location":"modelql-typed/org.modelix.modelql.typed/-typed-model-q-l/reference.html","searchKeys":["reference","fun <SourceT : ITypedNode, TargetT : ITypedNode> reference(input: IMonoStep<SourceT>, link: ITypedReferenceLink<TargetT>): IMonoStep<TargetT>","org.modelix.modelql.typed.TypedModelQL.reference"]},{"name":"fun <SourceT : ITypedNode, TargetT : ITypedNode> referenceOrNull(input: IFluxStep<SourceT>, link: ITypedReferenceLink<TargetT>): IFluxStep<TargetT?>","description":"org.modelix.modelql.typed.TypedModelQL.referenceOrNull","location":"modelql-typed/org.modelix.modelql.typed/-typed-model-q-l/reference-or-null.html","searchKeys":["referenceOrNull","fun <SourceT : ITypedNode, TargetT : ITypedNode> referenceOrNull(input: IFluxStep<SourceT>, link: ITypedReferenceLink<TargetT>): IFluxStep<TargetT?>","org.modelix.modelql.typed.TypedModelQL.referenceOrNull"]},{"name":"fun <SourceT : ITypedNode, TargetT : ITypedNode> referenceOrNull(input: IMonoStep<SourceT>, link: ITypedReferenceLink<TargetT>): IMonoStep<TargetT?>","description":"org.modelix.modelql.typed.TypedModelQL.referenceOrNull","location":"modelql-typed/org.modelix.modelql.typed/-typed-model-q-l/reference-or-null.html","searchKeys":["referenceOrNull","fun <SourceT : ITypedNode, TargetT : ITypedNode> referenceOrNull(input: IMonoStep<SourceT>, link: ITypedReferenceLink<TargetT>): IMonoStep<TargetT?>","org.modelix.modelql.typed.TypedModelQL.referenceOrNull"]},{"name":"fun <TNode : In, TConcept : IConceptOfTypedNode<TNode>> if(concept: TConcept): ConceptSwitchBuilder.CaseBuilder<TNode, In, Out>","description":"org.modelix.modelql.typed.ConceptSwitchBuilder.if","location":"modelql-typed/org.modelix.modelql.typed/-concept-switch-builder/if.html","searchKeys":["if","fun <TNode : In, TConcept : IConceptOfTypedNode<TNode>> if(concept: TConcept): ConceptSwitchBuilder.CaseBuilder<TNode, In, Out>","org.modelix.modelql.typed.ConceptSwitchBuilder.if"]},{"name":"fun <Typed : ITypedNode> IFluxStep<INode>.typedUnsafe(nodeClass: KClass<out Typed>): IFluxStep<Typed>","description":"org.modelix.modelql.typed.typedUnsafe","location":"modelql-typed/org.modelix.modelql.typed/typed-unsafe.html","searchKeys":["typedUnsafe","fun <Typed : ITypedNode> IFluxStep<INode>.typedUnsafe(nodeClass: KClass<out Typed>): IFluxStep<Typed>","org.modelix.modelql.typed.typedUnsafe"]},{"name":"fun <Typed : ITypedNode> IMonoStep<INode>.typedUnsafe(nodeClass: KClass<out Typed>): IMonoStep<Typed>","description":"org.modelix.modelql.typed.typedUnsafe","location":"modelql-typed/org.modelix.modelql.typed/typed-unsafe.html","searchKeys":["typedUnsafe","fun <Typed : ITypedNode> IMonoStep<INode>.typedUnsafe(nodeClass: KClass<out Typed>): IMonoStep<Typed>","org.modelix.modelql.typed.typedUnsafe"]},{"name":"fun IFluxStep<ITypedNode>.conceptReference(): IFluxStep<ConceptReference?>","description":"org.modelix.modelql.typed.conceptReference","location":"modelql-typed/org.modelix.modelql.typed/concept-reference.html","searchKeys":["conceptReference","fun IFluxStep<ITypedNode>.conceptReference(): IFluxStep<ConceptReference?>","org.modelix.modelql.typed.conceptReference"]},{"name":"fun IFluxStep<ITypedNode>.descendants(includeSelf: Boolean = false): IFluxStep<ITypedNode>","description":"org.modelix.modelql.typed.descendants","location":"modelql-typed/org.modelix.modelql.typed/descendants.html","searchKeys":["descendants","fun IFluxStep<ITypedNode>.descendants(includeSelf: Boolean = false): IFluxStep<ITypedNode>","org.modelix.modelql.typed.descendants"]},{"name":"fun IFluxStep<ITypedNode>.nodeReference(): IFluxStep<INodeReference>","description":"org.modelix.modelql.typed.nodeReference","location":"modelql-typed/org.modelix.modelql.typed/node-reference.html","searchKeys":["nodeReference","fun IFluxStep<ITypedNode>.nodeReference(): IFluxStep<INodeReference>","org.modelix.modelql.typed.nodeReference"]},{"name":"fun IFluxStep<ITypedNode>.nodeReferenceAsString(): IFluxStep<String>","description":"org.modelix.modelql.typed.nodeReferenceAsString","location":"modelql-typed/org.modelix.modelql.typed/node-reference-as-string.html","searchKeys":["nodeReferenceAsString","fun IFluxStep<ITypedNode>.nodeReferenceAsString(): IFluxStep<String>","org.modelix.modelql.typed.nodeReferenceAsString"]},{"name":"fun IFluxStep<ITypedNode>.untyped(): IFluxStep<INode>","description":"org.modelix.modelql.typed.untyped","location":"modelql-typed/org.modelix.modelql.typed/untyped.html","searchKeys":["untyped","fun IFluxStep<ITypedNode>.untyped(): IFluxStep<INode>","org.modelix.modelql.typed.untyped"]},{"name":"fun IFluxStep<ITypedNode?>.untyped(): IFluxStep<INode?>","description":"org.modelix.modelql.typed.untyped","location":"modelql-typed/org.modelix.modelql.typed/untyped.html","searchKeys":["untyped","fun IFluxStep<ITypedNode?>.untyped(): IFluxStep<INode?>","org.modelix.modelql.typed.untyped"]},{"name":"fun IMonoStep<INode?>.instanceOf(concept: IConcept): IMonoStep<Boolean>","description":"org.modelix.modelql.typed.instanceOf","location":"modelql-typed/org.modelix.modelql.typed/instance-of.html","searchKeys":["instanceOf","fun IMonoStep<INode?>.instanceOf(concept: IConcept): IMonoStep<Boolean>","org.modelix.modelql.typed.instanceOf"]},{"name":"fun IMonoStep<INode?>.instanceOfExactly(concept: IConcept): IMonoStep<Boolean>","description":"org.modelix.modelql.typed.instanceOfExactly","location":"modelql-typed/org.modelix.modelql.typed/instance-of-exactly.html","searchKeys":["instanceOfExactly","fun IMonoStep<INode?>.instanceOfExactly(concept: IConcept): IMonoStep<Boolean>","org.modelix.modelql.typed.instanceOfExactly"]},{"name":"fun IMonoStep<INode?>.instanceOfExactly(concept: ITypedConcept): IMonoStep<Boolean>","description":"org.modelix.modelql.typed.instanceOfExactly","location":"modelql-typed/org.modelix.modelql.typed/instance-of-exactly.html","searchKeys":["instanceOfExactly","fun IMonoStep<INode?>.instanceOfExactly(concept: ITypedConcept): IMonoStep<Boolean>","org.modelix.modelql.typed.instanceOfExactly"]},{"name":"fun IMonoStep<ITypedNode>.conceptReference(): IMonoStep<ConceptReference?>","description":"org.modelix.modelql.typed.conceptReference","location":"modelql-typed/org.modelix.modelql.typed/concept-reference.html","searchKeys":["conceptReference","fun IMonoStep<ITypedNode>.conceptReference(): IMonoStep<ConceptReference?>","org.modelix.modelql.typed.conceptReference"]},{"name":"fun IMonoStep<ITypedNode>.descendants(includeSelf: Boolean = false): IFluxStep<ITypedNode>","description":"org.modelix.modelql.typed.descendants","location":"modelql-typed/org.modelix.modelql.typed/descendants.html","searchKeys":["descendants","fun IMonoStep<ITypedNode>.descendants(includeSelf: Boolean = false): IFluxStep<ITypedNode>","org.modelix.modelql.typed.descendants"]},{"name":"fun IMonoStep<ITypedNode>.instanceOfExactly(concept: IConcept): IMonoStep<Boolean>","description":"org.modelix.modelql.typed.instanceOfExactly","location":"modelql-typed/org.modelix.modelql.typed/instance-of-exactly.html","searchKeys":["instanceOfExactly","fun IMonoStep<ITypedNode>.instanceOfExactly(concept: IConcept): IMonoStep<Boolean>","org.modelix.modelql.typed.instanceOfExactly"]},{"name":"fun IMonoStep<ITypedNode>.instanceOfExactly(concept: ITypedConcept): IMonoStep<Boolean>","description":"org.modelix.modelql.typed.instanceOfExactly","location":"modelql-typed/org.modelix.modelql.typed/instance-of-exactly.html","searchKeys":["instanceOfExactly","fun IMonoStep<ITypedNode>.instanceOfExactly(concept: ITypedConcept): IMonoStep<Boolean>","org.modelix.modelql.typed.instanceOfExactly"]},{"name":"fun IMonoStep<ITypedNode>.nodeReference(): IMonoStep<INodeReference>","description":"org.modelix.modelql.typed.nodeReference","location":"modelql-typed/org.modelix.modelql.typed/node-reference.html","searchKeys":["nodeReference","fun IMonoStep<ITypedNode>.nodeReference(): IMonoStep<INodeReference>","org.modelix.modelql.typed.nodeReference"]},{"name":"fun IMonoStep<ITypedNode>.nodeReferenceAsString(): IMonoStep<String>","description":"org.modelix.modelql.typed.nodeReferenceAsString","location":"modelql-typed/org.modelix.modelql.typed/node-reference-as-string.html","searchKeys":["nodeReferenceAsString","fun IMonoStep<ITypedNode>.nodeReferenceAsString(): IMonoStep<String>","org.modelix.modelql.typed.nodeReferenceAsString"]},{"name":"fun IMonoStep<ITypedNode>.untyped(): IMonoStep<INode>","description":"org.modelix.modelql.typed.untyped","location":"modelql-typed/org.modelix.modelql.typed/untyped.html","searchKeys":["untyped","fun IMonoStep<ITypedNode>.untyped(): IMonoStep<INode>","org.modelix.modelql.typed.untyped"]},{"name":"fun IMonoStep<ITypedNode?>.untyped(): IMonoStep<INode?>","description":"org.modelix.modelql.typed.untyped","location":"modelql-typed/org.modelix.modelql.typed/untyped.html","searchKeys":["untyped","fun IMonoStep<ITypedNode?>.untyped(): IMonoStep<INode?>","org.modelix.modelql.typed.untyped"]},{"name":"fun booleanProperty(input: IFluxStep<ITypedNode>, link: ITypedProperty<Boolean>): IFluxStep<Boolean>","description":"org.modelix.modelql.typed.TypedModelQL.booleanProperty","location":"modelql-typed/org.modelix.modelql.typed/-typed-model-q-l/boolean-property.html","searchKeys":["booleanProperty","fun booleanProperty(input: IFluxStep<ITypedNode>, link: ITypedProperty<Boolean>): IFluxStep<Boolean>","org.modelix.modelql.typed.TypedModelQL.booleanProperty"]},{"name":"fun booleanProperty(input: IMonoStep<ITypedNode>, link: ITypedProperty<Boolean>): IMonoStep<Boolean>","description":"org.modelix.modelql.typed.TypedModelQL.booleanProperty","location":"modelql-typed/org.modelix.modelql.typed/-typed-model-q-l/boolean-property.html","searchKeys":["booleanProperty","fun booleanProperty(input: IMonoStep<ITypedNode>, link: ITypedProperty<Boolean>): IMonoStep<Boolean>","org.modelix.modelql.typed.TypedModelQL.booleanProperty"]},{"name":"fun else(elseBody: (IMonoStep<In>) -> IMonoStep<Out>): IMonoStep<Out>","description":"org.modelix.modelql.typed.ConceptSwitchBuilder.else","location":"modelql-typed/org.modelix.modelql.typed/-concept-switch-builder/else.html","searchKeys":["else","fun else(elseBody: (IMonoStep<In>) -> IMonoStep<Out>): IMonoStep<Out>","org.modelix.modelql.typed.ConceptSwitchBuilder.else"]},{"name":"fun intProperty(input: IFluxStep<ITypedNode>, link: ITypedProperty<Int>): IFluxStep<Int>","description":"org.modelix.modelql.typed.TypedModelQL.intProperty","location":"modelql-typed/org.modelix.modelql.typed/-typed-model-q-l/int-property.html","searchKeys":["intProperty","fun intProperty(input: IFluxStep<ITypedNode>, link: ITypedProperty<Int>): IFluxStep<Int>","org.modelix.modelql.typed.TypedModelQL.intProperty"]},{"name":"fun intProperty(input: IMonoStep<ITypedNode>, link: ITypedProperty<Int>): IMonoStep<Int>","description":"org.modelix.modelql.typed.TypedModelQL.intProperty","location":"modelql-typed/org.modelix.modelql.typed/-typed-model-q-l/int-property.html","searchKeys":["intProperty","fun intProperty(input: IMonoStep<ITypedNode>, link: ITypedProperty<Int>): IMonoStep<Int>","org.modelix.modelql.typed.TypedModelQL.intProperty"]},{"name":"fun optionalStringProperty(input: IFluxStep<ITypedNode>, link: ITypedProperty<String>): IFluxStep<String?>","description":"org.modelix.modelql.typed.TypedModelQL.optionalStringProperty","location":"modelql-typed/org.modelix.modelql.typed/-typed-model-q-l/optional-string-property.html","searchKeys":["optionalStringProperty","fun optionalStringProperty(input: IFluxStep<ITypedNode>, link: ITypedProperty<String>): IFluxStep<String?>","org.modelix.modelql.typed.TypedModelQL.optionalStringProperty"]},{"name":"fun optionalStringProperty(input: IMonoStep<ITypedNode>, link: ITypedProperty<String>): IMonoStep<String?>","description":"org.modelix.modelql.typed.TypedModelQL.optionalStringProperty","location":"modelql-typed/org.modelix.modelql.typed/-typed-model-q-l/optional-string-property.html","searchKeys":["optionalStringProperty","fun optionalStringProperty(input: IMonoStep<ITypedNode>, link: ITypedProperty<String>): IMonoStep<String?>","org.modelix.modelql.typed.TypedModelQL.optionalStringProperty"]},{"name":"fun rawProperty(input: IFluxStep<ITypedNode>, link: ITypedProperty<*>): IFluxStep<String?>","description":"org.modelix.modelql.typed.TypedModelQL.rawProperty","location":"modelql-typed/org.modelix.modelql.typed/-typed-model-q-l/raw-property.html","searchKeys":["rawProperty","fun rawProperty(input: IFluxStep<ITypedNode>, link: ITypedProperty<*>): IFluxStep<String?>","org.modelix.modelql.typed.TypedModelQL.rawProperty"]},{"name":"fun rawProperty(input: IMonoStep<ITypedNode>, link: ITypedProperty<*>): IMonoStep<String?>","description":"org.modelix.modelql.typed.TypedModelQL.rawProperty","location":"modelql-typed/org.modelix.modelql.typed/-typed-model-q-l/raw-property.html","searchKeys":["rawProperty","fun rawProperty(input: IMonoStep<ITypedNode>, link: ITypedProperty<*>): IMonoStep<String?>","org.modelix.modelql.typed.TypedModelQL.rawProperty"]},{"name":"fun stringProperty(input: IFluxStep<ITypedNode>, link: ITypedProperty<String>): IFluxStep<String>","description":"org.modelix.modelql.typed.TypedModelQL.stringProperty","location":"modelql-typed/org.modelix.modelql.typed/-typed-model-q-l/string-property.html","searchKeys":["stringProperty","fun stringProperty(input: IFluxStep<ITypedNode>, link: ITypedProperty<String>): IFluxStep<String>","org.modelix.modelql.typed.TypedModelQL.stringProperty"]},{"name":"fun stringProperty(input: IMonoStep<ITypedNode>, link: ITypedProperty<String>): IMonoStep<String>","description":"org.modelix.modelql.typed.TypedModelQL.stringProperty","location":"modelql-typed/org.modelix.modelql.typed/-typed-model-q-l/string-property.html","searchKeys":["stringProperty","fun stringProperty(input: IMonoStep<ITypedNode>, link: ITypedProperty<String>): IMonoStep<String>","org.modelix.modelql.typed.TypedModelQL.stringProperty"]},{"name":"fun then(body: (IMonoStep<Node>) -> IMonoStep<Out>): ConceptSwitchBuilder<In, Out>","description":"org.modelix.modelql.typed.ConceptSwitchBuilder.CaseBuilder.then","location":"modelql-typed/org.modelix.modelql.typed/-concept-switch-builder/-case-builder/then.html","searchKeys":["then","fun then(body: (IMonoStep<Node>) -> IMonoStep<Out>): ConceptSwitchBuilder<In, Out>","org.modelix.modelql.typed.ConceptSwitchBuilder.CaseBuilder.then"]},{"name":"inline fun <Typed : ITypedNode> IFluxStep<INode>.typedUnsafe(): IFluxStep<Typed>","description":"org.modelix.modelql.typed.typedUnsafe","location":"modelql-typed/org.modelix.modelql.typed/typed-unsafe.html","searchKeys":["typedUnsafe","inline fun <Typed : ITypedNode> IFluxStep<INode>.typedUnsafe(): IFluxStep<Typed>","org.modelix.modelql.typed.typedUnsafe"]},{"name":"inline fun <Typed : ITypedNode> IMonoStep<INode>.typedUnsafe(): IMonoStep<Typed>","description":"org.modelix.modelql.typed.typedUnsafe","location":"modelql-typed/org.modelix.modelql.typed/typed-unsafe.html","searchKeys":["typedUnsafe","inline fun <Typed : ITypedNode> IMonoStep<INode>.typedUnsafe(): IMonoStep<Typed>","org.modelix.modelql.typed.typedUnsafe"]},{"name":"inline suspend fun <NodeT : ITypedNode, R> NodeT.query(noinline body: (IMonoStep<NodeT>) -> IMonoStep<R>): R","description":"org.modelix.modelql.typed.query","location":"modelql-typed/org.modelix.modelql.typed/query.html","searchKeys":["query","inline suspend fun <NodeT : ITypedNode, R> NodeT.query(noinline body: (IMonoStep<NodeT>) -> IMonoStep<R>): R","org.modelix.modelql.typed.query"]},{"name":"inner class CaseBuilder<Node : In>(val concept: IConceptOfTypedNode<Node>)","description":"org.modelix.modelql.typed.ConceptSwitchBuilder.CaseBuilder","location":"modelql-typed/org.modelix.modelql.typed/-concept-switch-builder/-case-builder/index.html","searchKeys":["CaseBuilder","inner class CaseBuilder<Node : In>(val concept: IConceptOfTypedNode<Node>)","org.modelix.modelql.typed.ConceptSwitchBuilder.CaseBuilder"]},{"name":"object TypedModelQL","description":"org.modelix.modelql.typed.TypedModelQL","location":"modelql-typed/org.modelix.modelql.typed/-typed-model-q-l/index.html","searchKeys":["TypedModelQL","object TypedModelQL","org.modelix.modelql.typed.TypedModelQL"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.typed.TypedNodeStep.createDescriptor","location":"modelql-typed/org.modelix.modelql.typed/-typed-node-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.typed.TypedNodeStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.typed.UntypedNodeStep.createDescriptor","location":"modelql-typed/org.modelix.modelql.typed/-untyped-node-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.typed.UntypedNodeStep.createDescriptor"]},{"name":"open override fun deserialize(decoder: Decoder): INode","description":"org.modelix.modelql.typed.UntypedNodeSerializer.deserialize","location":"modelql-typed/org.modelix.modelql.typed/-untyped-node-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): INode","org.modelix.modelql.typed.UntypedNodeSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Typed","description":"org.modelix.modelql.typed.TypedNodeSerializer.deserialize","location":"modelql-typed/org.modelix.modelql.typed/-typed-node-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Typed","org.modelix.modelql.typed.TypedNodeSerializer.deserialize"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","description":"org.modelix.modelql.typed.UntypedNodeStep.getOutputSerializer","location":"modelql-typed/org.modelix.modelql.typed/-untyped-node-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","org.modelix.modelql.typed.UntypedNodeStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Typed>>","description":"org.modelix.modelql.typed.TypedNodeStep.getOutputSerializer","location":"modelql-typed/org.modelix.modelql.typed/-typed-node-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Typed>>","org.modelix.modelql.typed.TypedNodeStep.getOutputSerializer"]},{"name":"open override fun serialize(encoder: Encoder, value: INode)","description":"org.modelix.modelql.typed.UntypedNodeSerializer.serialize","location":"modelql-typed/org.modelix.modelql.typed/-untyped-node-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: INode)","org.modelix.modelql.typed.UntypedNodeSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Typed)","description":"org.modelix.modelql.typed.TypedNodeSerializer.serialize","location":"modelql-typed/org.modelix.modelql.typed/-typed-node-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Typed)","org.modelix.modelql.typed.TypedNodeSerializer.serialize"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.typed.TypedNodeStep.toString","location":"modelql-typed/org.modelix.modelql.typed/-typed-node-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.typed.TypedNodeStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.typed.UntypedNodeStep.toString","location":"modelql-typed/org.modelix.modelql.typed/-untyped-node-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.typed.UntypedNodeStep.toString"]},{"name":"open override val descriptor: SerialDescriptor","description":"org.modelix.modelql.typed.TypedNodeSerializer.descriptor","location":"modelql-typed/org.modelix.modelql.typed/-typed-node-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","org.modelix.modelql.typed.TypedNodeSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"org.modelix.modelql.typed.UntypedNodeSerializer.descriptor","location":"modelql-typed/org.modelix.modelql.typed/-untyped-node-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","org.modelix.modelql.typed.UntypedNodeSerializer.descriptor"]},{"name":"suspend fun <NodeT : ITypedNode, R> NodeT.query(nodeClass: KClass<out NodeT>, body: (IMonoStep<NodeT>) -> IMonoStep<R>): R","description":"org.modelix.modelql.typed.query","location":"modelql-typed/org.modelix.modelql.typed/query.html","searchKeys":["query","suspend fun <NodeT : ITypedNode, R> NodeT.query(nodeClass: KClass<out NodeT>, body: (IMonoStep<NodeT>) -> IMonoStep<R>): R","org.modelix.modelql.typed.query"]},{"name":"val concept: IConceptOfTypedNode<Node>","description":"org.modelix.modelql.typed.ConceptSwitchBuilder.CaseBuilder.concept","location":"modelql-typed/org.modelix.modelql.typed/-concept-switch-builder/-case-builder/concept.html","searchKeys":["concept","val concept: IConceptOfTypedNode<Node>","org.modelix.modelql.typed.ConceptSwitchBuilder.CaseBuilder.concept"]},{"name":"val nodeClass: KClass<out Typed>","description":"org.modelix.modelql.typed.TypedNodeSerializer.nodeClass","location":"modelql-typed/org.modelix.modelql.typed/-typed-node-serializer/node-class.html","searchKeys":["nodeClass","val nodeClass: KClass<out Typed>","org.modelix.modelql.typed.TypedNodeSerializer.nodeClass"]},{"name":"val nodeClass: KClass<out Typed>","description":"org.modelix.modelql.typed.TypedNodeStep.nodeClass","location":"modelql-typed/org.modelix.modelql.typed/-typed-node-step/node-class.html","searchKeys":["nodeClass","val nodeClass: KClass<out Typed>","org.modelix.modelql.typed.TypedNodeStep.nodeClass"]},{"name":"val serializersModule: SerializersModule","description":"org.modelix.modelql.typed.TypedModelQL.serializersModule","location":"modelql-typed/org.modelix.modelql.typed/-typed-model-q-l/serializers-module.html","searchKeys":["serializersModule","val serializersModule: SerializersModule","org.modelix.modelql.typed.TypedModelQL.serializersModule"]},{"name":"val typedSerializer: KSerializer<IStepOutput<ITypedNode>>","description":"org.modelix.modelql.typed.UntypedNodeSerializer.typedSerializer","location":"modelql-typed/org.modelix.modelql.typed/-untyped-node-serializer/typed-serializer.html","searchKeys":["typedSerializer","val typedSerializer: KSerializer<IStepOutput<ITypedNode>>","org.modelix.modelql.typed.UntypedNodeSerializer.typedSerializer"]},{"name":"val untypedSerializer: KSerializer<IStepOutput<INode>>","description":"org.modelix.modelql.typed.TypedNodeSerializer.untypedSerializer","location":"modelql-typed/org.modelix.modelql.typed/-typed-node-serializer/untyped-serializer.html","searchKeys":["untypedSerializer","val untypedSerializer: KSerializer<IStepOutput<INode>>","org.modelix.modelql.typed.TypedNodeSerializer.untypedSerializer"]},{"name":"class MPSLanguageRepository(repository: SRepository) : ILanguageRepository","description":"org.modelix.model.mpsadapters.MPSLanguageRepository","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-language-repository/index.html","searchKeys":["MPSLanguageRepository","class MPSLanguageRepository(repository: SRepository) : ILanguageRepository","org.modelix.model.mpsadapters.MPSLanguageRepository"]},{"name":"class MPSModelImportAsNode(val importedModel: SModel, val importingModel: SModel) : IDefaultNodeAdapter","description":"org.modelix.model.mpsadapters.MPSModelImportAsNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-import-as-node/index.html","searchKeys":["MPSModelImportAsNode","class MPSModelImportAsNode(val importedModel: SModel, val importingModel: SModel) : IDefaultNodeAdapter","org.modelix.model.mpsadapters.MPSModelImportAsNode"]},{"name":"constructor(concept: SAbstractConcept)","description":"org.modelix.model.mpsadapters.ConceptWorkaround.ConceptWorkaround","location":"mps-model-adapters/org.modelix.model.mpsadapters/-concept-workaround/-concept-workaround.html","searchKeys":["ConceptWorkaround","constructor(concept: SAbstractConcept)","org.modelix.model.mpsadapters.ConceptWorkaround.ConceptWorkaround"]},{"name":"constructor(concept: SAbstractConcept)","description":"org.modelix.model.mpsadapters.MPSConcept.MPSConcept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-concept/-m-p-s-concept.html","searchKeys":["MPSConcept","constructor(concept: SAbstractConcept)","org.modelix.model.mpsadapters.MPSConcept.MPSConcept"]},{"name":"constructor(concept: SAbstractConceptAdapter)","description":"org.modelix.model.mpsadapters.MPSConcept.MPSConcept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-concept/-m-p-s-concept.html","searchKeys":["MPSConcept","constructor(concept: SAbstractConceptAdapter)","org.modelix.model.mpsadapters.MPSConcept.MPSConcept"]},{"name":"constructor(facet: JavaModuleFacet)","description":"org.modelix.model.mpsadapters.MPSJavaModuleFacetAsNode.MPSJavaModuleFacetAsNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-java-module-facet-as-node/-m-p-s-java-module-facet-as-node.html","searchKeys":["MPSJavaModuleFacetAsNode","constructor(facet: JavaModuleFacet)","org.modelix.model.mpsadapters.MPSJavaModuleFacetAsNode.MPSJavaModuleFacetAsNode"]},{"name":"constructor(importedModel: SModel, importingModel: SModel)","description":"org.modelix.model.mpsadapters.MPSModelImportAsNode.MPSModelImportAsNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-import-as-node/-m-p-s-model-import-as-node.html","searchKeys":["MPSModelImportAsNode","constructor(importedModel: SModel, importingModel: SModel)","org.modelix.model.mpsadapters.MPSModelImportAsNode.MPSModelImportAsNode"]},{"name":"constructor(importedModel: SModelReference, importingModel: SModelReference)","description":"org.modelix.model.mpsadapters.MPSModelImportReference.MPSModelImportReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-import-reference/-m-p-s-model-import-reference.html","searchKeys":["MPSModelImportReference","constructor(importedModel: SModelReference, importingModel: SModelReference)","org.modelix.model.mpsadapters.MPSModelImportReference.MPSModelImportReference"]},{"name":"constructor(language: SLanguage)","description":"org.modelix.model.mpsadapters.MPSLanguage.MPSLanguage","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-language/-m-p-s-language.html","searchKeys":["MPSLanguage","constructor(language: SLanguage)","org.modelix.model.mpsadapters.MPSLanguage.MPSLanguage"]},{"name":"constructor(link: SContainmentLink)","description":"org.modelix.model.mpsadapters.MPSChildLink.MPSChildLink","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-child-link/-m-p-s-child-link.html","searchKeys":["MPSChildLink","constructor(link: SContainmentLink)","org.modelix.model.mpsadapters.MPSChildLink.MPSChildLink"]},{"name":"constructor(link: SContainmentLinkAdapter)","description":"org.modelix.model.mpsadapters.MPSChildLink.MPSChildLink","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-child-link/-m-p-s-child-link.html","searchKeys":["MPSChildLink","constructor(link: SContainmentLinkAdapter)","org.modelix.model.mpsadapters.MPSChildLink.MPSChildLink"]},{"name":"constructor(link: SReferenceLink)","description":"org.modelix.model.mpsadapters.MPSReferenceLink.MPSReferenceLink","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-reference-link/-m-p-s-reference-link.html","searchKeys":["MPSReferenceLink","constructor(link: SReferenceLink)","org.modelix.model.mpsadapters.MPSReferenceLink.MPSReferenceLink"]},{"name":"constructor(link: SReferenceLinkAdapter)","description":"org.modelix.model.mpsadapters.MPSReferenceLink.MPSReferenceLink","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-reference-link/-m-p-s-reference-link.html","searchKeys":["MPSReferenceLink","constructor(link: SReferenceLinkAdapter)","org.modelix.model.mpsadapters.MPSReferenceLink.MPSReferenceLink"]},{"name":"constructor(model: SModel)","description":"org.modelix.model.mpsadapters.MPSModelAsNode.MPSModelAsNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-as-node/-m-p-s-model-as-node.html","searchKeys":["MPSModelAsNode","constructor(model: SModel)","org.modelix.model.mpsadapters.MPSModelAsNode.MPSModelAsNode"]},{"name":"constructor(modelReference: SModelReference)","description":"org.modelix.model.mpsadapters.MPSModelReference.MPSModelReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-reference/-m-p-s-model-reference.html","searchKeys":["MPSModelReference","constructor(modelReference: SModelReference)","org.modelix.model.mpsadapters.MPSModelReference.MPSModelReference"]},{"name":"constructor(module: SModule)","description":"org.modelix.model.mpsadapters.MPSModuleAsNode.MPSModuleAsNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-as-node/-m-p-s-module-as-node.html","searchKeys":["MPSModuleAsNode","constructor(module: SModule)","org.modelix.model.mpsadapters.MPSModuleAsNode.MPSModuleAsNode"]},{"name":"constructor(moduleRef: SModuleReference, projectRef: MPSProjectReference)","description":"org.modelix.model.mpsadapters.MPSProjectModuleReference.MPSProjectModuleReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-module-reference/-m-p-s-project-module-reference.html","searchKeys":["MPSProjectModuleReference","constructor(moduleRef: SModuleReference, projectRef: MPSProjectReference)","org.modelix.model.mpsadapters.MPSProjectModuleReference.MPSProjectModuleReference"]},{"name":"constructor(moduleReference: SModuleReference)","description":"org.modelix.model.mpsadapters.MPSJavaModuleFacetReference.MPSJavaModuleFacetReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-java-module-facet-reference/-m-p-s-java-module-facet-reference.html","searchKeys":["MPSJavaModuleFacetReference","constructor(moduleReference: SModuleReference)","org.modelix.model.mpsadapters.MPSJavaModuleFacetReference.MPSJavaModuleFacetReference"]},{"name":"constructor(moduleReference: SModuleReference)","description":"org.modelix.model.mpsadapters.MPSModuleReference.MPSModuleReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-reference/-m-p-s-module-reference.html","searchKeys":["MPSModuleReference","constructor(moduleReference: SModuleReference)","org.modelix.model.mpsadapters.MPSModuleReference.MPSModuleReference"]},{"name":"constructor(moduleReference: SModuleReference, languageVersion: Int, moduleImporter: SModule? = null, modelImporter: SModel? = null)","description":"org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode.MPSSingleLanguageDependencyAsNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-single-language-dependency-as-node/-m-p-s-single-language-dependency-as-node.html","searchKeys":["MPSSingleLanguageDependencyAsNode","constructor(moduleReference: SModuleReference, languageVersion: Int, moduleImporter: SModule? = null, modelImporter: SModel? = null)","org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode.MPSSingleLanguageDependencyAsNode"]},{"name":"constructor(moduleReference: SModuleReference, moduleImporter: SModule? = null, modelImporter: SModel? = null)","description":"org.modelix.model.mpsadapters.MPSDevKitDependencyAsNode.MPSDevKitDependencyAsNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-dev-kit-dependency-as-node/-m-p-s-dev-kit-dependency-as-node.html","searchKeys":["MPSDevKitDependencyAsNode","constructor(moduleReference: SModuleReference, moduleImporter: SModule? = null, modelImporter: SModel? = null)","org.modelix.model.mpsadapters.MPSDevKitDependencyAsNode.MPSDevKitDependencyAsNode"]},{"name":"constructor(moduleReference: SModuleReference, moduleVersion: Int, explicit: Boolean, reexport: Boolean, importer: SModule, dependencyScope: SDependencyScope?)","description":"org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.MPSModuleDependencyAsNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-dependency-as-node/-m-p-s-module-dependency-as-node.html","searchKeys":["MPSModuleDependencyAsNode","constructor(moduleReference: SModuleReference, moduleVersion: Int, explicit: Boolean, reexport: Boolean, importer: SModule, dependencyScope: SDependencyScope?)","org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.MPSModuleDependencyAsNode"]},{"name":"constructor(node: SNode)","description":"org.modelix.model.mpsadapters.MPSNode.MPSNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/-m-p-s-node.html","searchKeys":["MPSNode","constructor(node: SNode)","org.modelix.model.mpsadapters.MPSNode.MPSNode"]},{"name":"constructor(project: ProjectBase)","description":"org.modelix.model.mpsadapters.MPSProjectAsNode.MPSProjectAsNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-as-node/-m-p-s-project-as-node.html","searchKeys":["MPSProjectAsNode","constructor(project: ProjectBase)","org.modelix.model.mpsadapters.MPSProjectAsNode.MPSProjectAsNode"]},{"name":"constructor(project: ProjectBase, module: SModule)","description":"org.modelix.model.mpsadapters.MPSProjectModuleAsNode.MPSProjectModuleAsNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-module-as-node/-m-p-s-project-module-as-node.html","searchKeys":["MPSProjectModuleAsNode","constructor(project: ProjectBase, module: SModule)","org.modelix.model.mpsadapters.MPSProjectModuleAsNode.MPSProjectModuleAsNode"]},{"name":"constructor(projectName: String)","description":"org.modelix.model.mpsadapters.MPSProjectReference.MPSProjectReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-reference/-m-p-s-project-reference.html","searchKeys":["MPSProjectReference","constructor(projectName: String)","org.modelix.model.mpsadapters.MPSProjectReference.MPSProjectReference"]},{"name":"constructor(property: SProperty)","description":"org.modelix.model.mpsadapters.MPSProperty.MPSProperty","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-property/-m-p-s-property.html","searchKeys":["MPSProperty","constructor(property: SProperty)","org.modelix.model.mpsadapters.MPSProperty.MPSProperty"]},{"name":"constructor(property: SPropertyAdapter)","description":"org.modelix.model.mpsadapters.MPSProperty.MPSProperty","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-property/-m-p-s-property.html","searchKeys":["MPSProperty","constructor(property: SPropertyAdapter)","org.modelix.model.mpsadapters.MPSProperty.MPSProperty"]},{"name":"constructor(ref: SNodeReference)","description":"org.modelix.model.mpsadapters.MPSNodeReference.MPSNodeReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node-reference/-m-p-s-node-reference.html","searchKeys":["MPSNodeReference","constructor(ref: SNodeReference)","org.modelix.model.mpsadapters.MPSNodeReference.MPSNodeReference"]},{"name":"constructor(repository: SRepository)","description":"org.modelix.model.mpsadapters.MPSArea.MPSArea","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-area/-m-p-s-area.html","searchKeys":["MPSArea","constructor(repository: SRepository)","org.modelix.model.mpsadapters.MPSArea.MPSArea"]},{"name":"constructor(repository: SRepository)","description":"org.modelix.model.mpsadapters.MPSLanguageRepository.MPSLanguageRepository","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-language-repository/-m-p-s-language-repository.html","searchKeys":["MPSLanguageRepository","constructor(repository: SRepository)","org.modelix.model.mpsadapters.MPSLanguageRepository.MPSLanguageRepository"]},{"name":"constructor(repository: SRepository)","description":"org.modelix.model.mpsadapters.MPSRepositoryAsNode.MPSRepositoryAsNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-repository-as-node/-m-p-s-repository-as-node.html","searchKeys":["MPSRepositoryAsNode","constructor(repository: SRepository)","org.modelix.model.mpsadapters.MPSRepositoryAsNode.MPSRepositoryAsNode"]},{"name":"constructor(usedModuleId: SModuleId, userModule: SModuleReference? = null, userModel: SModelReference? = null)","description":"org.modelix.model.mpsadapters.MPSDevKitDependencyReference.MPSDevKitDependencyReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-dev-kit-dependency-reference/-m-p-s-dev-kit-dependency-reference.html","searchKeys":["MPSDevKitDependencyReference","constructor(usedModuleId: SModuleId, userModule: SModuleReference? = null, userModel: SModelReference? = null)","org.modelix.model.mpsadapters.MPSDevKitDependencyReference.MPSDevKitDependencyReference"]},{"name":"constructor(usedModuleId: SModuleId, userModule: SModuleReference? = null, userModel: SModelReference? = null)","description":"org.modelix.model.mpsadapters.MPSSingleLanguageDependencyReference.MPSSingleLanguageDependencyReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-single-language-dependency-reference/-m-p-s-single-language-dependency-reference.html","searchKeys":["MPSSingleLanguageDependencyReference","constructor(usedModuleId: SModuleId, userModule: SModuleReference? = null, userModel: SModelReference? = null)","org.modelix.model.mpsadapters.MPSSingleLanguageDependencyReference.MPSSingleLanguageDependencyReference"]},{"name":"constructor(usedModuleId: SModuleId, userModuleReference: SModuleReference)","description":"org.modelix.model.mpsadapters.MPSModuleDependencyReference.MPSModuleDependencyReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-dependency-reference/-m-p-s-module-dependency-reference.html","searchKeys":["MPSModuleDependencyReference","constructor(usedModuleId: SModuleId, userModuleReference: SModuleReference)","org.modelix.model.mpsadapters.MPSModuleDependencyReference.MPSModuleDependencyReference"]},{"name":"data class MPSArea(val repository: SRepository) : IArea, IAreaReference","description":"org.modelix.model.mpsadapters.MPSArea","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-area/index.html","searchKeys":["MPSArea","data class MPSArea(val repository: SRepository) : IArea, IAreaReference","org.modelix.model.mpsadapters.MPSArea"]},{"name":"data class MPSChildLink(val link: SContainmentLinkAdapter) : IChildLink","description":"org.modelix.model.mpsadapters.MPSChildLink","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-child-link/index.html","searchKeys":["MPSChildLink","data class MPSChildLink(val link: SContainmentLinkAdapter) : IChildLink","org.modelix.model.mpsadapters.MPSChildLink"]},{"name":"data class MPSConcept(val concept: SAbstractConceptAdapter) : IConcept","description":"org.modelix.model.mpsadapters.MPSConcept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-concept/index.html","searchKeys":["MPSConcept","data class MPSConcept(val concept: SAbstractConceptAdapter) : IConcept","org.modelix.model.mpsadapters.MPSConcept"]},{"name":"data class MPSDevKitDependencyAsNode(val moduleReference: SModuleReference, val moduleImporter: SModule? = null, val modelImporter: SModel? = null) : IDefaultNodeAdapter","description":"org.modelix.model.mpsadapters.MPSDevKitDependencyAsNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-dev-kit-dependency-as-node/index.html","searchKeys":["MPSDevKitDependencyAsNode","data class MPSDevKitDependencyAsNode(val moduleReference: SModuleReference, val moduleImporter: SModule? = null, val modelImporter: SModel? = null) : IDefaultNodeAdapter","org.modelix.model.mpsadapters.MPSDevKitDependencyAsNode"]},{"name":"data class MPSDevKitDependencyReference(val usedModuleId: SModuleId, val userModule: SModuleReference? = null, val userModel: SModelReference? = null) : INodeReference","description":"org.modelix.model.mpsadapters.MPSDevKitDependencyReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-dev-kit-dependency-reference/index.html","searchKeys":["MPSDevKitDependencyReference","data class MPSDevKitDependencyReference(val usedModuleId: SModuleId, val userModule: SModuleReference? = null, val userModel: SModelReference? = null) : INodeReference","org.modelix.model.mpsadapters.MPSDevKitDependencyReference"]},{"name":"data class MPSJavaModuleFacetAsNode(val facet: JavaModuleFacet) : IDefaultNodeAdapter","description":"org.modelix.model.mpsadapters.MPSJavaModuleFacetAsNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-java-module-facet-as-node/index.html","searchKeys":["MPSJavaModuleFacetAsNode","data class MPSJavaModuleFacetAsNode(val facet: JavaModuleFacet) : IDefaultNodeAdapter","org.modelix.model.mpsadapters.MPSJavaModuleFacetAsNode"]},{"name":"data class MPSJavaModuleFacetReference(val moduleReference: SModuleReference) : INodeReference","description":"org.modelix.model.mpsadapters.MPSJavaModuleFacetReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-java-module-facet-reference/index.html","searchKeys":["MPSJavaModuleFacetReference","data class MPSJavaModuleFacetReference(val moduleReference: SModuleReference) : INodeReference","org.modelix.model.mpsadapters.MPSJavaModuleFacetReference"]},{"name":"data class MPSLanguage(val language: SLanguage) : ILanguage","description":"org.modelix.model.mpsadapters.MPSLanguage","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-language/index.html","searchKeys":["MPSLanguage","data class MPSLanguage(val language: SLanguage) : ILanguage","org.modelix.model.mpsadapters.MPSLanguage"]},{"name":"data class MPSModelAsNode(val model: SModel) : IDefaultNodeAdapter","description":"org.modelix.model.mpsadapters.MPSModelAsNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-as-node/index.html","searchKeys":["MPSModelAsNode","data class MPSModelAsNode(val model: SModel) : IDefaultNodeAdapter","org.modelix.model.mpsadapters.MPSModelAsNode"]},{"name":"data class MPSModelImportReference(val importedModel: SModelReference, val importingModel: SModelReference) : INodeReference","description":"org.modelix.model.mpsadapters.MPSModelImportReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-import-reference/index.html","searchKeys":["MPSModelImportReference","data class MPSModelImportReference(val importedModel: SModelReference, val importingModel: SModelReference) : INodeReference","org.modelix.model.mpsadapters.MPSModelImportReference"]},{"name":"data class MPSModelReference(val modelReference: SModelReference) : INodeReference","description":"org.modelix.model.mpsadapters.MPSModelReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-reference/index.html","searchKeys":["MPSModelReference","data class MPSModelReference(val modelReference: SModelReference) : INodeReference","org.modelix.model.mpsadapters.MPSModelReference"]},{"name":"data class MPSModuleAsNode(val module: SModule) : IDefaultNodeAdapter","description":"org.modelix.model.mpsadapters.MPSModuleAsNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-as-node/index.html","searchKeys":["MPSModuleAsNode","data class MPSModuleAsNode(val module: SModule) : IDefaultNodeAdapter","org.modelix.model.mpsadapters.MPSModuleAsNode"]},{"name":"data class MPSModuleDependencyAsNode(val moduleReference: SModuleReference, val moduleVersion: Int, val explicit: Boolean, val reexport: Boolean, val importer: SModule, val dependencyScope: SDependencyScope?) : IDefaultNodeAdapter","description":"org.modelix.model.mpsadapters.MPSModuleDependencyAsNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-dependency-as-node/index.html","searchKeys":["MPSModuleDependencyAsNode","data class MPSModuleDependencyAsNode(val moduleReference: SModuleReference, val moduleVersion: Int, val explicit: Boolean, val reexport: Boolean, val importer: SModule, val dependencyScope: SDependencyScope?) : IDefaultNodeAdapter","org.modelix.model.mpsadapters.MPSModuleDependencyAsNode"]},{"name":"data class MPSModuleDependencyReference(val usedModuleId: SModuleId, val userModuleReference: SModuleReference) : INodeReference","description":"org.modelix.model.mpsadapters.MPSModuleDependencyReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-dependency-reference/index.html","searchKeys":["MPSModuleDependencyReference","data class MPSModuleDependencyReference(val usedModuleId: SModuleId, val userModuleReference: SModuleReference) : INodeReference","org.modelix.model.mpsadapters.MPSModuleDependencyReference"]},{"name":"data class MPSModuleReference(val moduleReference: SModuleReference) : INodeReference","description":"org.modelix.model.mpsadapters.MPSModuleReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-reference/index.html","searchKeys":["MPSModuleReference","data class MPSModuleReference(val moduleReference: SModuleReference) : INodeReference","org.modelix.model.mpsadapters.MPSModuleReference"]},{"name":"data class MPSNode(val node: SNode) : IDeprecatedNodeDefaults","description":"org.modelix.model.mpsadapters.MPSNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/index.html","searchKeys":["MPSNode","data class MPSNode(val node: SNode) : IDeprecatedNodeDefaults","org.modelix.model.mpsadapters.MPSNode"]},{"name":"data class MPSNodeReference(val ref: SNodeReference) : INodeReference","description":"org.modelix.model.mpsadapters.MPSNodeReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node-reference/index.html","searchKeys":["MPSNodeReference","data class MPSNodeReference(val ref: SNodeReference) : INodeReference","org.modelix.model.mpsadapters.MPSNodeReference"]},{"name":"data class MPSProjectAsNode(val project: ProjectBase) : IDefaultNodeAdapter","description":"org.modelix.model.mpsadapters.MPSProjectAsNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-as-node/index.html","searchKeys":["MPSProjectAsNode","data class MPSProjectAsNode(val project: ProjectBase) : IDefaultNodeAdapter","org.modelix.model.mpsadapters.MPSProjectAsNode"]},{"name":"data class MPSProjectModuleAsNode(val project: ProjectBase, val module: SModule) : IDefaultNodeAdapter","description":"org.modelix.model.mpsadapters.MPSProjectModuleAsNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-module-as-node/index.html","searchKeys":["MPSProjectModuleAsNode","data class MPSProjectModuleAsNode(val project: ProjectBase, val module: SModule) : IDefaultNodeAdapter","org.modelix.model.mpsadapters.MPSProjectModuleAsNode"]},{"name":"data class MPSProjectModuleReference(val moduleRef: SModuleReference, val projectRef: MPSProjectReference) : INodeReference","description":"org.modelix.model.mpsadapters.MPSProjectModuleReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-module-reference/index.html","searchKeys":["MPSProjectModuleReference","data class MPSProjectModuleReference(val moduleRef: SModuleReference, val projectRef: MPSProjectReference) : INodeReference","org.modelix.model.mpsadapters.MPSProjectModuleReference"]},{"name":"data class MPSProjectReference(val projectName: String) : INodeReference","description":"org.modelix.model.mpsadapters.MPSProjectReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-reference/index.html","searchKeys":["MPSProjectReference","data class MPSProjectReference(val projectName: String) : INodeReference","org.modelix.model.mpsadapters.MPSProjectReference"]},{"name":"data class MPSProperty(val property: SPropertyAdapter) : IProperty","description":"org.modelix.model.mpsadapters.MPSProperty","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-property/index.html","searchKeys":["MPSProperty","data class MPSProperty(val property: SPropertyAdapter) : IProperty","org.modelix.model.mpsadapters.MPSProperty"]},{"name":"data class MPSReferenceLink(val link: SReferenceLinkAdapter) : IReferenceLink","description":"org.modelix.model.mpsadapters.MPSReferenceLink","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-reference-link/index.html","searchKeys":["MPSReferenceLink","data class MPSReferenceLink(val link: SReferenceLinkAdapter) : IReferenceLink","org.modelix.model.mpsadapters.MPSReferenceLink"]},{"name":"data class MPSRepositoryAsNode(val repository: SRepository) : IDefaultNodeAdapter","description":"org.modelix.model.mpsadapters.MPSRepositoryAsNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-repository-as-node/index.html","searchKeys":["MPSRepositoryAsNode","data class MPSRepositoryAsNode(val repository: SRepository) : IDefaultNodeAdapter","org.modelix.model.mpsadapters.MPSRepositoryAsNode"]},{"name":"data class MPSSingleLanguageDependencyAsNode(val moduleReference: SModuleReference, val languageVersion: Int, val moduleImporter: SModule? = null, val modelImporter: SModel? = null) : IDefaultNodeAdapter","description":"org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-single-language-dependency-as-node/index.html","searchKeys":["MPSSingleLanguageDependencyAsNode","data class MPSSingleLanguageDependencyAsNode(val moduleReference: SModuleReference, val languageVersion: Int, val moduleImporter: SModule? = null, val modelImporter: SModel? = null) : IDefaultNodeAdapter","org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode"]},{"name":"data class MPSSingleLanguageDependencyReference(val usedModuleId: SModuleId, val userModule: SModuleReference? = null, val userModel: SModelReference? = null) : INodeReference","description":"org.modelix.model.mpsadapters.MPSSingleLanguageDependencyReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-single-language-dependency-reference/index.html","searchKeys":["MPSSingleLanguageDependencyReference","data class MPSSingleLanguageDependencyReference(val usedModuleId: SModuleId, val userModule: SModuleReference? = null, val userModel: SModelReference? = null) : INodeReference","org.modelix.model.mpsadapters.MPSSingleLanguageDependencyReference"]},{"name":"fun tryConvert(ref: INodeReference): MPSNodeReference?","description":"org.modelix.model.mpsadapters.MPSNodeReference.Companion.tryConvert","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node-reference/-companion/try-convert.html","searchKeys":["tryConvert","fun tryConvert(ref: INodeReference): MPSNodeReference?","org.modelix.model.mpsadapters.MPSNodeReference.Companion.tryConvert"]},{"name":"interface IDefaultNodeAdapter : IDeprecatedNodeDefaults","description":"org.modelix.model.mpsadapters.IDefaultNodeAdapter","location":"mps-model-adapters/org.modelix.model.mpsadapters/-i-default-node-adapter/index.html","searchKeys":["IDefaultNodeAdapter","interface IDefaultNodeAdapter : IDeprecatedNodeDefaults","org.modelix.model.mpsadapters.IDefaultNodeAdapter"]},{"name":"object Companion","description":"org.modelix.model.mpsadapters.MPSDevKitDependencyReference.Companion","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-dev-kit-dependency-reference/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.mpsadapters.MPSDevKitDependencyReference.Companion"]},{"name":"object Companion","description":"org.modelix.model.mpsadapters.MPSJavaModuleFacetReference.Companion","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-java-module-facet-reference/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.mpsadapters.MPSJavaModuleFacetReference.Companion"]},{"name":"object Companion","description":"org.modelix.model.mpsadapters.MPSModelImportReference.Companion","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-import-reference/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.mpsadapters.MPSModelImportReference.Companion"]},{"name":"object Companion","description":"org.modelix.model.mpsadapters.MPSModelReference.Companion","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-reference/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.mpsadapters.MPSModelReference.Companion"]},{"name":"object Companion","description":"org.modelix.model.mpsadapters.MPSModuleAsNode.Companion","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-as-node/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.mpsadapters.MPSModuleAsNode.Companion"]},{"name":"object Companion","description":"org.modelix.model.mpsadapters.MPSModuleDependencyReference.Companion","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-dependency-reference/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.mpsadapters.MPSModuleDependencyReference.Companion"]},{"name":"object Companion","description":"org.modelix.model.mpsadapters.MPSModuleReference.Companion","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-reference/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.mpsadapters.MPSModuleReference.Companion"]},{"name":"object Companion","description":"org.modelix.model.mpsadapters.MPSNodeReference.Companion","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node-reference/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.mpsadapters.MPSNodeReference.Companion"]},{"name":"object Companion","description":"org.modelix.model.mpsadapters.MPSProjectModuleReference.Companion","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-module-reference/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.mpsadapters.MPSProjectModuleReference.Companion"]},{"name":"object Companion","description":"org.modelix.model.mpsadapters.MPSProjectReference.Companion","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-reference/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.mpsadapters.MPSProjectReference.Companion"]},{"name":"object Companion","description":"org.modelix.model.mpsadapters.MPSSingleLanguageDependencyReference.Companion","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-single-language-dependency-reference/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.mpsadapters.MPSSingleLanguageDependencyReference.Companion"]},{"name":"object MPSRepositoryReference : INodeReference","description":"org.modelix.model.mpsadapters.MPSRepositoryReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-repository-reference/index.html","searchKeys":["MPSRepositoryReference","object MPSRepositoryReference : INodeReference","org.modelix.model.mpsadapters.MPSRepositoryReference"]},{"name":"object Model : SimpleConcept","description":"org.modelix.model.mpsadapters.Model","location":"mps-model-adapters/org.modelix.model.mpsadapters/-model/index.html","searchKeys":["Model","object Model : SimpleConcept","org.modelix.model.mpsadapters.Model"]},{"name":"object Module : SimpleConcept","description":"org.modelix.model.mpsadapters.Module","location":"mps-model-adapters/org.modelix.model.mpsadapters/-module/index.html","searchKeys":["Module","object Module : SimpleConcept","org.modelix.model.mpsadapters.Module"]},{"name":"object Repository : SimpleConcept","description":"org.modelix.model.mpsadapters.Repository","location":"mps-model-adapters/org.modelix.model.mpsadapters/-repository/index.html","searchKeys":["Repository","object Repository : SimpleConcept","org.modelix.model.mpsadapters.Repository"]},{"name":"object RepositoryLanguage : SimpleLanguage","description":"org.modelix.model.mpsadapters.RepositoryLanguage","location":"mps-model-adapters/org.modelix.model.mpsadapters/-repository-language/index.html","searchKeys":["RepositoryLanguage","object RepositoryLanguage : SimpleLanguage","org.modelix.model.mpsadapters.RepositoryLanguage"]},{"name":"open class ConceptWorkaround","description":"org.modelix.model.mpsadapters.ConceptWorkaround","location":"mps-model-adapters/org.modelix.model.mpsadapters/-concept-workaround/index.html","searchKeys":["ConceptWorkaround","open class ConceptWorkaround","org.modelix.model.mpsadapters.ConceptWorkaround"]},{"name":"open fun getSuperConcept(): SConcept","description":"org.modelix.model.mpsadapters.ConceptWorkaround.getSuperConcept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-concept-workaround/get-super-concept.html","searchKeys":["getSuperConcept","open fun getSuperConcept(): SConcept","org.modelix.model.mpsadapters.ConceptWorkaround.getSuperConcept"]},{"name":"open fun getSuperInterfaces(): Iterable<SInterfaceConcept>","description":"org.modelix.model.mpsadapters.ConceptWorkaround.getSuperInterfaces","location":"mps-model-adapters/org.modelix.model.mpsadapters/-concept-workaround/get-super-interfaces.html","searchKeys":["getSuperInterfaces","open fun getSuperInterfaces(): Iterable<SInterfaceConcept>","org.modelix.model.mpsadapters.ConceptWorkaround.getSuperInterfaces"]},{"name":"open override fun <T> executeRead(f: () -> T): T","description":"org.modelix.model.mpsadapters.MPSArea.executeRead","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-area/execute-read.html","searchKeys":["executeRead","open override fun <T> executeRead(f: () -> T): T","org.modelix.model.mpsadapters.MPSArea.executeRead"]},{"name":"open override fun <T> executeWrite(f: () -> T): T","description":"org.modelix.model.mpsadapters.MPSArea.executeWrite","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-area/execute-write.html","searchKeys":["executeWrite","open override fun <T> executeWrite(f: () -> T): T","org.modelix.model.mpsadapters.MPSArea.executeWrite"]},{"name":"open override fun addListener(l: IAreaListener)","description":"org.modelix.model.mpsadapters.MPSArea.addListener","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-area/add-listener.html","searchKeys":["addListener","open override fun addListener(l: IAreaListener)","org.modelix.model.mpsadapters.MPSArea.addListener"]},{"name":"open override fun addNewChild(role: IChildLink, index: Int, concept: IConcept?): INode","description":"org.modelix.model.mpsadapters.IDefaultNodeAdapter.addNewChild","location":"mps-model-adapters/org.modelix.model.mpsadapters/-i-default-node-adapter/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(role: IChildLink, index: Int, concept: IConcept?): INode","org.modelix.model.mpsadapters.IDefaultNodeAdapter.addNewChild"]},{"name":"open override fun addNewChild(role: IChildLink, index: Int, concept: IConcept?): INode","description":"org.modelix.model.mpsadapters.MPSNode.addNewChild","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(role: IChildLink, index: Int, concept: IConcept?): INode","org.modelix.model.mpsadapters.MPSNode.addNewChild"]},{"name":"open override fun addNewChild(role: IChildLink, index: Int, concept: IConceptReference?): INode","description":"org.modelix.model.mpsadapters.IDefaultNodeAdapter.addNewChild","location":"mps-model-adapters/org.modelix.model.mpsadapters/-i-default-node-adapter/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(role: IChildLink, index: Int, concept: IConceptReference?): INode","org.modelix.model.mpsadapters.IDefaultNodeAdapter.addNewChild"]},{"name":"open override fun addNewChild(role: IChildLink, index: Int, concept: IConceptReference?): INode","description":"org.modelix.model.mpsadapters.MPSNode.addNewChild","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(role: IChildLink, index: Int, concept: IConceptReference?): INode","org.modelix.model.mpsadapters.MPSNode.addNewChild"]},{"name":"open override fun canRead(): Boolean","description":"org.modelix.model.mpsadapters.MPSArea.canRead","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-area/can-read.html","searchKeys":["canRead","open override fun canRead(): Boolean","org.modelix.model.mpsadapters.MPSArea.canRead"]},{"name":"open override fun canWrite(): Boolean","description":"org.modelix.model.mpsadapters.MPSArea.canWrite","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-area/can-write.html","searchKeys":["canWrite","open override fun canWrite(): Boolean","org.modelix.model.mpsadapters.MPSArea.canWrite"]},{"name":"open override fun collectAreas(): List<IArea>","description":"org.modelix.model.mpsadapters.MPSArea.collectAreas","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-area/collect-areas.html","searchKeys":["collectAreas","open override fun collectAreas(): List<IArea>","org.modelix.model.mpsadapters.MPSArea.collectAreas"]},{"name":"open override fun getAllChildLinks(): List<IChildLink>","description":"org.modelix.model.mpsadapters.MPSConcept.getAllChildLinks","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-concept/get-all-child-links.html","searchKeys":["getAllChildLinks","open override fun getAllChildLinks(): List<IChildLink>","org.modelix.model.mpsadapters.MPSConcept.getAllChildLinks"]},{"name":"open override fun getAllConcepts(): List<IConcept>","description":"org.modelix.model.mpsadapters.MPSLanguageRepository.getAllConcepts","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-language-repository/get-all-concepts.html","searchKeys":["getAllConcepts","open override fun getAllConcepts(): List<IConcept>","org.modelix.model.mpsadapters.MPSLanguageRepository.getAllConcepts"]},{"name":"open override fun getAllProperties(): List<IProperty>","description":"org.modelix.model.mpsadapters.MPSConcept.getAllProperties","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-concept/get-all-properties.html","searchKeys":["getAllProperties","open override fun getAllProperties(): List<IProperty>","org.modelix.model.mpsadapters.MPSConcept.getAllProperties"]},{"name":"open override fun getAllReferenceLinks(): List<IReferenceLink>","description":"org.modelix.model.mpsadapters.MPSConcept.getAllReferenceLinks","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-concept/get-all-reference-links.html","searchKeys":["getAllReferenceLinks","open override fun getAllReferenceLinks(): List<IReferenceLink>","org.modelix.model.mpsadapters.MPSConcept.getAllReferenceLinks"]},{"name":"open override fun getArea(): IArea","description":"org.modelix.model.mpsadapters.MPSDevKitDependencyAsNode.getArea","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-dev-kit-dependency-as-node/get-area.html","searchKeys":["getArea","open override fun getArea(): IArea","org.modelix.model.mpsadapters.MPSDevKitDependencyAsNode.getArea"]},{"name":"open override fun getArea(): IArea","description":"org.modelix.model.mpsadapters.MPSJavaModuleFacetAsNode.getArea","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-java-module-facet-as-node/get-area.html","searchKeys":["getArea","open override fun getArea(): IArea","org.modelix.model.mpsadapters.MPSJavaModuleFacetAsNode.getArea"]},{"name":"open override fun getArea(): IArea","description":"org.modelix.model.mpsadapters.MPSModelAsNode.getArea","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-as-node/get-area.html","searchKeys":["getArea","open override fun getArea(): IArea","org.modelix.model.mpsadapters.MPSModelAsNode.getArea"]},{"name":"open override fun getArea(): IArea","description":"org.modelix.model.mpsadapters.MPSModelImportAsNode.getArea","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-import-as-node/get-area.html","searchKeys":["getArea","open override fun getArea(): IArea","org.modelix.model.mpsadapters.MPSModelImportAsNode.getArea"]},{"name":"open override fun getArea(): IArea","description":"org.modelix.model.mpsadapters.MPSModuleAsNode.getArea","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-as-node/get-area.html","searchKeys":["getArea","open override fun getArea(): IArea","org.modelix.model.mpsadapters.MPSModuleAsNode.getArea"]},{"name":"open override fun getArea(): IArea","description":"org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.getArea","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-dependency-as-node/get-area.html","searchKeys":["getArea","open override fun getArea(): IArea","org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.getArea"]},{"name":"open override fun getArea(): IArea","description":"org.modelix.model.mpsadapters.MPSNode.getArea","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/get-area.html","searchKeys":["getArea","open override fun getArea(): IArea","org.modelix.model.mpsadapters.MPSNode.getArea"]},{"name":"open override fun getArea(): IArea","description":"org.modelix.model.mpsadapters.MPSProjectAsNode.getArea","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-as-node/get-area.html","searchKeys":["getArea","open override fun getArea(): IArea","org.modelix.model.mpsadapters.MPSProjectAsNode.getArea"]},{"name":"open override fun getArea(): IArea","description":"org.modelix.model.mpsadapters.MPSProjectModuleAsNode.getArea","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-module-as-node/get-area.html","searchKeys":["getArea","open override fun getArea(): IArea","org.modelix.model.mpsadapters.MPSProjectModuleAsNode.getArea"]},{"name":"open override fun getArea(): IArea","description":"org.modelix.model.mpsadapters.MPSRepositoryAsNode.getArea","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-repository-as-node/get-area.html","searchKeys":["getArea","open override fun getArea(): IArea","org.modelix.model.mpsadapters.MPSRepositoryAsNode.getArea"]},{"name":"open override fun getArea(): IArea","description":"org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode.getArea","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-single-language-dependency-as-node/get-area.html","searchKeys":["getArea","open override fun getArea(): IArea","org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode.getArea"]},{"name":"open override fun getChildLink(name: String): IChildLink","description":"org.modelix.model.mpsadapters.MPSConcept.getChildLink","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-concept/get-child-link.html","searchKeys":["getChildLink","open override fun getChildLink(name: String): IChildLink","org.modelix.model.mpsadapters.MPSConcept.getChildLink"]},{"name":"open override fun getChildren(link: IChildLink): Iterable<INode>","description":"org.modelix.model.mpsadapters.IDefaultNodeAdapter.getChildren","location":"mps-model-adapters/org.modelix.model.mpsadapters/-i-default-node-adapter/get-children.html","searchKeys":["getChildren","open override fun getChildren(link: IChildLink): Iterable<INode>","org.modelix.model.mpsadapters.IDefaultNodeAdapter.getChildren"]},{"name":"open override fun getChildren(link: IChildLink): Iterable<INode>","description":"org.modelix.model.mpsadapters.MPSModelAsNode.getChildren","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-as-node/get-children.html","searchKeys":["getChildren","open override fun getChildren(link: IChildLink): Iterable<INode>","org.modelix.model.mpsadapters.MPSModelAsNode.getChildren"]},{"name":"open override fun getChildren(link: IChildLink): Iterable<INode>","description":"org.modelix.model.mpsadapters.MPSModuleAsNode.getChildren","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-as-node/get-children.html","searchKeys":["getChildren","open override fun getChildren(link: IChildLink): Iterable<INode>","org.modelix.model.mpsadapters.MPSModuleAsNode.getChildren"]},{"name":"open override fun getChildren(link: IChildLink): Iterable<INode>","description":"org.modelix.model.mpsadapters.MPSNode.getChildren","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/get-children.html","searchKeys":["getChildren","open override fun getChildren(link: IChildLink): Iterable<INode>","org.modelix.model.mpsadapters.MPSNode.getChildren"]},{"name":"open override fun getChildren(link: IChildLink): Iterable<INode>","description":"org.modelix.model.mpsadapters.MPSProjectAsNode.getChildren","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-as-node/get-children.html","searchKeys":["getChildren","open override fun getChildren(link: IChildLink): Iterable<INode>","org.modelix.model.mpsadapters.MPSProjectAsNode.getChildren"]},{"name":"open override fun getChildren(link: IChildLink): Iterable<INode>","description":"org.modelix.model.mpsadapters.MPSRepositoryAsNode.getChildren","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-repository-as-node/get-children.html","searchKeys":["getChildren","open override fun getChildren(link: IChildLink): Iterable<INode>","org.modelix.model.mpsadapters.MPSRepositoryAsNode.getChildren"]},{"name":"open override fun getConcept(): IConcept","description":"org.modelix.model.mpsadapters.MPSChildLink.getConcept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-child-link/get-concept.html","searchKeys":["getConcept","open override fun getConcept(): IConcept","org.modelix.model.mpsadapters.MPSChildLink.getConcept"]},{"name":"open override fun getConcept(): IConcept","description":"org.modelix.model.mpsadapters.MPSProperty.getConcept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-property/get-concept.html","searchKeys":["getConcept","open override fun getConcept(): IConcept","org.modelix.model.mpsadapters.MPSProperty.getConcept"]},{"name":"open override fun getConcept(): IConcept","description":"org.modelix.model.mpsadapters.MPSReferenceLink.getConcept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-reference-link/get-concept.html","searchKeys":["getConcept","open override fun getConcept(): IConcept","org.modelix.model.mpsadapters.MPSReferenceLink.getConcept"]},{"name":"open override fun getConceptReference(): ConceptReference","description":"org.modelix.model.mpsadapters.MPSNode.getConceptReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/get-concept-reference.html","searchKeys":["getConceptReference","open override fun getConceptReference(): ConceptReference","org.modelix.model.mpsadapters.MPSNode.getConceptReference"]},{"name":"open override fun getConceptReference(): IConceptReference?","description":"org.modelix.model.mpsadapters.IDefaultNodeAdapter.getConceptReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-i-default-node-adapter/get-concept-reference.html","searchKeys":["getConceptReference","open override fun getConceptReference(): IConceptReference?","org.modelix.model.mpsadapters.IDefaultNodeAdapter.getConceptReference"]},{"name":"open override fun getConcepts(): List<IConcept>","description":"org.modelix.model.mpsadapters.MPSLanguage.getConcepts","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-language/get-concepts.html","searchKeys":["getConcepts","open override fun getConcepts(): List<IConcept>","org.modelix.model.mpsadapters.MPSLanguage.getConcepts"]},{"name":"open override fun getContainmentLink(): IChildLink","description":"org.modelix.model.mpsadapters.MPSDevKitDependencyAsNode.getContainmentLink","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-dev-kit-dependency-as-node/get-containment-link.html","searchKeys":["getContainmentLink","open override fun getContainmentLink(): IChildLink","org.modelix.model.mpsadapters.MPSDevKitDependencyAsNode.getContainmentLink"]},{"name":"open override fun getContainmentLink(): IChildLink","description":"org.modelix.model.mpsadapters.MPSJavaModuleFacetAsNode.getContainmentLink","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-java-module-facet-as-node/get-containment-link.html","searchKeys":["getContainmentLink","open override fun getContainmentLink(): IChildLink","org.modelix.model.mpsadapters.MPSJavaModuleFacetAsNode.getContainmentLink"]},{"name":"open override fun getContainmentLink(): IChildLink","description":"org.modelix.model.mpsadapters.MPSModelAsNode.getContainmentLink","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-as-node/get-containment-link.html","searchKeys":["getContainmentLink","open override fun getContainmentLink(): IChildLink","org.modelix.model.mpsadapters.MPSModelAsNode.getContainmentLink"]},{"name":"open override fun getContainmentLink(): IChildLink","description":"org.modelix.model.mpsadapters.MPSModelImportAsNode.getContainmentLink","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-import-as-node/get-containment-link.html","searchKeys":["getContainmentLink","open override fun getContainmentLink(): IChildLink","org.modelix.model.mpsadapters.MPSModelImportAsNode.getContainmentLink"]},{"name":"open override fun getContainmentLink(): IChildLink","description":"org.modelix.model.mpsadapters.MPSModuleAsNode.getContainmentLink","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-as-node/get-containment-link.html","searchKeys":["getContainmentLink","open override fun getContainmentLink(): IChildLink","org.modelix.model.mpsadapters.MPSModuleAsNode.getContainmentLink"]},{"name":"open override fun getContainmentLink(): IChildLink","description":"org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.getContainmentLink","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-dependency-as-node/get-containment-link.html","searchKeys":["getContainmentLink","open override fun getContainmentLink(): IChildLink","org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.getContainmentLink"]},{"name":"open override fun getContainmentLink(): IChildLink","description":"org.modelix.model.mpsadapters.MPSNode.getContainmentLink","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/get-containment-link.html","searchKeys":["getContainmentLink","open override fun getContainmentLink(): IChildLink","org.modelix.model.mpsadapters.MPSNode.getContainmentLink"]},{"name":"open override fun getContainmentLink(): IChildLink","description":"org.modelix.model.mpsadapters.MPSProjectAsNode.getContainmentLink","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-as-node/get-containment-link.html","searchKeys":["getContainmentLink","open override fun getContainmentLink(): IChildLink","org.modelix.model.mpsadapters.MPSProjectAsNode.getContainmentLink"]},{"name":"open override fun getContainmentLink(): IChildLink","description":"org.modelix.model.mpsadapters.MPSProjectModuleAsNode.getContainmentLink","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-module-as-node/get-containment-link.html","searchKeys":["getContainmentLink","open override fun getContainmentLink(): IChildLink","org.modelix.model.mpsadapters.MPSProjectModuleAsNode.getContainmentLink"]},{"name":"open override fun getContainmentLink(): IChildLink","description":"org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode.getContainmentLink","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-single-language-dependency-as-node/get-containment-link.html","searchKeys":["getContainmentLink","open override fun getContainmentLink(): IChildLink","org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode.getContainmentLink"]},{"name":"open override fun getContainmentLink(): IChildLink?","description":"org.modelix.model.mpsadapters.MPSRepositoryAsNode.getContainmentLink","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-repository-as-node/get-containment-link.html","searchKeys":["getContainmentLink","open override fun getContainmentLink(): IChildLink?","org.modelix.model.mpsadapters.MPSRepositoryAsNode.getContainmentLink"]},{"name":"open override fun getDirectSuperConcepts(): List<IConcept>","description":"org.modelix.model.mpsadapters.MPSConcept.getDirectSuperConcepts","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-concept/get-direct-super-concepts.html","searchKeys":["getDirectSuperConcepts","open override fun getDirectSuperConcepts(): List<IConcept>","org.modelix.model.mpsadapters.MPSConcept.getDirectSuperConcepts"]},{"name":"open override fun getLongName(): String","description":"org.modelix.model.mpsadapters.MPSConcept.getLongName","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-concept/get-long-name.html","searchKeys":["getLongName","open override fun getLongName(): String","org.modelix.model.mpsadapters.MPSConcept.getLongName"]},{"name":"open override fun getName(): String","description":"org.modelix.model.mpsadapters.MPSLanguage.getName","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-language/get-name.html","searchKeys":["getName","open override fun getName(): String","org.modelix.model.mpsadapters.MPSLanguage.getName"]},{"name":"open override fun getOwnChildLinks(): List<IChildLink>","description":"org.modelix.model.mpsadapters.MPSConcept.getOwnChildLinks","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-concept/get-own-child-links.html","searchKeys":["getOwnChildLinks","open override fun getOwnChildLinks(): List<IChildLink>","org.modelix.model.mpsadapters.MPSConcept.getOwnChildLinks"]},{"name":"open override fun getOwnProperties(): List<IProperty>","description":"org.modelix.model.mpsadapters.MPSConcept.getOwnProperties","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-concept/get-own-properties.html","searchKeys":["getOwnProperties","open override fun getOwnProperties(): List<IProperty>","org.modelix.model.mpsadapters.MPSConcept.getOwnProperties"]},{"name":"open override fun getOwnReferenceLinks(): List<IReferenceLink>","description":"org.modelix.model.mpsadapters.MPSConcept.getOwnReferenceLinks","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-concept/get-own-reference-links.html","searchKeys":["getOwnReferenceLinks","open override fun getOwnReferenceLinks(): List<IReferenceLink>","org.modelix.model.mpsadapters.MPSConcept.getOwnReferenceLinks"]},{"name":"open override fun getPriority(): Int","description":"org.modelix.model.mpsadapters.MPSLanguageRepository.getPriority","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-language-repository/get-priority.html","searchKeys":["getPriority","open override fun getPriority(): Int","org.modelix.model.mpsadapters.MPSLanguageRepository.getPriority"]},{"name":"open override fun getProperty(name: String): IProperty","description":"org.modelix.model.mpsadapters.MPSConcept.getProperty","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-concept/get-property.html","searchKeys":["getProperty","open override fun getProperty(name: String): IProperty","org.modelix.model.mpsadapters.MPSConcept.getProperty"]},{"name":"open override fun getPropertyLinks(): List<IProperty>","description":"org.modelix.model.mpsadapters.IDefaultNodeAdapter.getPropertyLinks","location":"mps-model-adapters/org.modelix.model.mpsadapters/-i-default-node-adapter/get-property-links.html","searchKeys":["getPropertyLinks","open override fun getPropertyLinks(): List<IProperty>","org.modelix.model.mpsadapters.IDefaultNodeAdapter.getPropertyLinks"]},{"name":"open override fun getPropertyLinks(): List<IProperty>","description":"org.modelix.model.mpsadapters.MPSNode.getPropertyLinks","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/get-property-links.html","searchKeys":["getPropertyLinks","open override fun getPropertyLinks(): List<IProperty>","org.modelix.model.mpsadapters.MPSNode.getPropertyLinks"]},{"name":"open override fun getPropertyValue(property: IProperty): String?","description":"org.modelix.model.mpsadapters.IDefaultNodeAdapter.getPropertyValue","location":"mps-model-adapters/org.modelix.model.mpsadapters/-i-default-node-adapter/get-property-value.html","searchKeys":["getPropertyValue","open override fun getPropertyValue(property: IProperty): String?","org.modelix.model.mpsadapters.IDefaultNodeAdapter.getPropertyValue"]},{"name":"open override fun getPropertyValue(property: IProperty): String?","description":"org.modelix.model.mpsadapters.MPSDevKitDependencyAsNode.getPropertyValue","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-dev-kit-dependency-as-node/get-property-value.html","searchKeys":["getPropertyValue","open override fun getPropertyValue(property: IProperty): String?","org.modelix.model.mpsadapters.MPSDevKitDependencyAsNode.getPropertyValue"]},{"name":"open override fun getPropertyValue(property: IProperty): String?","description":"org.modelix.model.mpsadapters.MPSJavaModuleFacetAsNode.getPropertyValue","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-java-module-facet-as-node/get-property-value.html","searchKeys":["getPropertyValue","open override fun getPropertyValue(property: IProperty): String?","org.modelix.model.mpsadapters.MPSJavaModuleFacetAsNode.getPropertyValue"]},{"name":"open override fun getPropertyValue(property: IProperty): String?","description":"org.modelix.model.mpsadapters.MPSModelAsNode.getPropertyValue","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-as-node/get-property-value.html","searchKeys":["getPropertyValue","open override fun getPropertyValue(property: IProperty): String?","org.modelix.model.mpsadapters.MPSModelAsNode.getPropertyValue"]},{"name":"open override fun getPropertyValue(property: IProperty): String?","description":"org.modelix.model.mpsadapters.MPSModelImportAsNode.getPropertyValue","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-import-as-node/get-property-value.html","searchKeys":["getPropertyValue","open override fun getPropertyValue(property: IProperty): String?","org.modelix.model.mpsadapters.MPSModelImportAsNode.getPropertyValue"]},{"name":"open override fun getPropertyValue(property: IProperty): String?","description":"org.modelix.model.mpsadapters.MPSModuleAsNode.getPropertyValue","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-as-node/get-property-value.html","searchKeys":["getPropertyValue","open override fun getPropertyValue(property: IProperty): String?","org.modelix.model.mpsadapters.MPSModuleAsNode.getPropertyValue"]},{"name":"open override fun getPropertyValue(property: IProperty): String?","description":"org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.getPropertyValue","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-dependency-as-node/get-property-value.html","searchKeys":["getPropertyValue","open override fun getPropertyValue(property: IProperty): String?","org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.getPropertyValue"]},{"name":"open override fun getPropertyValue(property: IProperty): String?","description":"org.modelix.model.mpsadapters.MPSNode.getPropertyValue","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/get-property-value.html","searchKeys":["getPropertyValue","open override fun getPropertyValue(property: IProperty): String?","org.modelix.model.mpsadapters.MPSNode.getPropertyValue"]},{"name":"open override fun getPropertyValue(property: IProperty): String?","description":"org.modelix.model.mpsadapters.MPSProjectAsNode.getPropertyValue","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-as-node/get-property-value.html","searchKeys":["getPropertyValue","open override fun getPropertyValue(property: IProperty): String?","org.modelix.model.mpsadapters.MPSProjectAsNode.getPropertyValue"]},{"name":"open override fun getPropertyValue(property: IProperty): String?","description":"org.modelix.model.mpsadapters.MPSProjectModuleAsNode.getPropertyValue","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-module-as-node/get-property-value.html","searchKeys":["getPropertyValue","open override fun getPropertyValue(property: IProperty): String?","org.modelix.model.mpsadapters.MPSProjectModuleAsNode.getPropertyValue"]},{"name":"open override fun getPropertyValue(property: IProperty): String?","description":"org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode.getPropertyValue","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-single-language-dependency-as-node/get-property-value.html","searchKeys":["getPropertyValue","open override fun getPropertyValue(property: IProperty): String?","org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode.getPropertyValue"]},{"name":"open override fun getReference(): ConceptReference","description":"org.modelix.model.mpsadapters.MPSConcept.getReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-concept/get-reference.html","searchKeys":["getReference","open override fun getReference(): ConceptReference","org.modelix.model.mpsadapters.MPSConcept.getReference"]},{"name":"open override fun getReference(): IAreaReference","description":"org.modelix.model.mpsadapters.MPSArea.getReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-area/get-reference.html","searchKeys":["getReference","open override fun getReference(): IAreaReference","org.modelix.model.mpsadapters.MPSArea.getReference"]},{"name":"open override fun getReferenceLink(name: String): IReferenceLink","description":"org.modelix.model.mpsadapters.MPSConcept.getReferenceLink","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-concept/get-reference-link.html","searchKeys":["getReferenceLink","open override fun getReferenceLink(name: String): IReferenceLink","org.modelix.model.mpsadapters.MPSConcept.getReferenceLink"]},{"name":"open override fun getReferenceLinks(): List<IReferenceLink>","description":"org.modelix.model.mpsadapters.IDefaultNodeAdapter.getReferenceLinks","location":"mps-model-adapters/org.modelix.model.mpsadapters/-i-default-node-adapter/get-reference-links.html","searchKeys":["getReferenceLinks","open override fun getReferenceLinks(): List<IReferenceLink>","org.modelix.model.mpsadapters.IDefaultNodeAdapter.getReferenceLinks"]},{"name":"open override fun getReferenceLinks(): List<IReferenceLink>","description":"org.modelix.model.mpsadapters.MPSNode.getReferenceLinks","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/get-reference-links.html","searchKeys":["getReferenceLinks","open override fun getReferenceLinks(): List<IReferenceLink>","org.modelix.model.mpsadapters.MPSNode.getReferenceLinks"]},{"name":"open override fun getReferenceTarget(link: IReferenceLink): INode","description":"org.modelix.model.mpsadapters.MPSModelImportAsNode.getReferenceTarget","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-import-as-node/get-reference-target.html","searchKeys":["getReferenceTarget","open override fun getReferenceTarget(link: IReferenceLink): INode","org.modelix.model.mpsadapters.MPSModelImportAsNode.getReferenceTarget"]},{"name":"open override fun getReferenceTarget(link: IReferenceLink): INode?","description":"org.modelix.model.mpsadapters.IDefaultNodeAdapter.getReferenceTarget","location":"mps-model-adapters/org.modelix.model.mpsadapters/-i-default-node-adapter/get-reference-target.html","searchKeys":["getReferenceTarget","open override fun getReferenceTarget(link: IReferenceLink): INode?","org.modelix.model.mpsadapters.IDefaultNodeAdapter.getReferenceTarget"]},{"name":"open override fun getReferenceTarget(link: IReferenceLink): INode?","description":"org.modelix.model.mpsadapters.MPSNode.getReferenceTarget","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/get-reference-target.html","searchKeys":["getReferenceTarget","open override fun getReferenceTarget(link: IReferenceLink): INode?","org.modelix.model.mpsadapters.MPSNode.getReferenceTarget"]},{"name":"open override fun getReferenceTarget(link: IReferenceLink): INode?","description":"org.modelix.model.mpsadapters.MPSProjectModuleAsNode.getReferenceTarget","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-module-as-node/get-reference-target.html","searchKeys":["getReferenceTarget","open override fun getReferenceTarget(link: IReferenceLink): INode?","org.modelix.model.mpsadapters.MPSProjectModuleAsNode.getReferenceTarget"]},{"name":"open override fun getReferenceTargetRef(role: IReferenceLink): INodeReference","description":"org.modelix.model.mpsadapters.MPSModelImportAsNode.getReferenceTargetRef","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-import-as-node/get-reference-target-ref.html","searchKeys":["getReferenceTargetRef","open override fun getReferenceTargetRef(role: IReferenceLink): INodeReference","org.modelix.model.mpsadapters.MPSModelImportAsNode.getReferenceTargetRef"]},{"name":"open override fun getReferenceTargetRef(role: IReferenceLink): INodeReference?","description":"org.modelix.model.mpsadapters.IDefaultNodeAdapter.getReferenceTargetRef","location":"mps-model-adapters/org.modelix.model.mpsadapters/-i-default-node-adapter/get-reference-target-ref.html","searchKeys":["getReferenceTargetRef","open override fun getReferenceTargetRef(role: IReferenceLink): INodeReference?","org.modelix.model.mpsadapters.IDefaultNodeAdapter.getReferenceTargetRef"]},{"name":"open override fun getReferenceTargetRef(role: IReferenceLink): INodeReference?","description":"org.modelix.model.mpsadapters.MPSNode.getReferenceTargetRef","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/get-reference-target-ref.html","searchKeys":["getReferenceTargetRef","open override fun getReferenceTargetRef(role: IReferenceLink): INodeReference?","org.modelix.model.mpsadapters.MPSNode.getReferenceTargetRef"]},{"name":"open override fun getReferenceTargetRef(role: IReferenceLink): INodeReference?","description":"org.modelix.model.mpsadapters.MPSProjectModuleAsNode.getReferenceTargetRef","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-module-as-node/get-reference-target-ref.html","searchKeys":["getReferenceTargetRef","open override fun getReferenceTargetRef(role: IReferenceLink): INodeReference?","org.modelix.model.mpsadapters.MPSProjectModuleAsNode.getReferenceTargetRef"]},{"name":"open override fun getRoot(): INode","description":"org.modelix.model.mpsadapters.MPSArea.getRoot","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-area/get-root.html","searchKeys":["getRoot","open override fun getRoot(): INode","org.modelix.model.mpsadapters.MPSArea.getRoot"]},{"name":"open override fun getShortName(): String","description":"org.modelix.model.mpsadapters.MPSConcept.getShortName","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-concept/get-short-name.html","searchKeys":["getShortName","open override fun getShortName(): String","org.modelix.model.mpsadapters.MPSConcept.getShortName"]},{"name":"open override fun getSimpleName(): String","description":"org.modelix.model.mpsadapters.MPSChildLink.getSimpleName","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-child-link/get-simple-name.html","searchKeys":["getSimpleName","open override fun getSimpleName(): String","org.modelix.model.mpsadapters.MPSChildLink.getSimpleName"]},{"name":"open override fun getSimpleName(): String","description":"org.modelix.model.mpsadapters.MPSProperty.getSimpleName","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-property/get-simple-name.html","searchKeys":["getSimpleName","open override fun getSimpleName(): String","org.modelix.model.mpsadapters.MPSProperty.getSimpleName"]},{"name":"open override fun getSimpleName(): String","description":"org.modelix.model.mpsadapters.MPSReferenceLink.getSimpleName","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-reference-link/get-simple-name.html","searchKeys":["getSimpleName","open override fun getSimpleName(): String","org.modelix.model.mpsadapters.MPSReferenceLink.getSimpleName"]},{"name":"open override fun getUID(): String","description":"org.modelix.model.mpsadapters.MPSChildLink.getUID","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-child-link/get-u-i-d.html","searchKeys":["getUID","open override fun getUID(): String","org.modelix.model.mpsadapters.MPSChildLink.getUID"]},{"name":"open override fun getUID(): String","description":"org.modelix.model.mpsadapters.MPSConcept.getUID","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-concept/get-u-i-d.html","searchKeys":["getUID","open override fun getUID(): String","org.modelix.model.mpsadapters.MPSConcept.getUID"]},{"name":"open override fun getUID(): String","description":"org.modelix.model.mpsadapters.MPSLanguage.getUID","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-language/get-u-i-d.html","searchKeys":["getUID","open override fun getUID(): String","org.modelix.model.mpsadapters.MPSLanguage.getUID"]},{"name":"open override fun getUID(): String","description":"org.modelix.model.mpsadapters.MPSProperty.getUID","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-property/get-u-i-d.html","searchKeys":["getUID","open override fun getUID(): String","org.modelix.model.mpsadapters.MPSProperty.getUID"]},{"name":"open override fun getUID(): String","description":"org.modelix.model.mpsadapters.MPSReferenceLink.getUID","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-reference-link/get-u-i-d.html","searchKeys":["getUID","open override fun getUID(): String","org.modelix.model.mpsadapters.MPSReferenceLink.getUID"]},{"name":"open override fun isAbstract(): Boolean","description":"org.modelix.model.mpsadapters.MPSConcept.isAbstract","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-concept/is-abstract.html","searchKeys":["isAbstract","open override fun isAbstract(): Boolean","org.modelix.model.mpsadapters.MPSConcept.isAbstract"]},{"name":"open override fun isExactly(concept: IConcept?): Boolean","description":"org.modelix.model.mpsadapters.MPSConcept.isExactly","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-concept/is-exactly.html","searchKeys":["isExactly","open override fun isExactly(concept: IConcept?): Boolean","org.modelix.model.mpsadapters.MPSConcept.isExactly"]},{"name":"open override fun isSubConceptOf(superConcept: IConcept?): Boolean","description":"org.modelix.model.mpsadapters.MPSConcept.isSubConceptOf","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-concept/is-sub-concept-of.html","searchKeys":["isSubConceptOf","open override fun isSubConceptOf(superConcept: IConcept?): Boolean","org.modelix.model.mpsadapters.MPSConcept.isSubConceptOf"]},{"name":"open override fun moveChild(role: IChildLink, index: Int, child: INode)","description":"org.modelix.model.mpsadapters.IDefaultNodeAdapter.moveChild","location":"mps-model-adapters/org.modelix.model.mpsadapters/-i-default-node-adapter/move-child.html","searchKeys":["moveChild","open override fun moveChild(role: IChildLink, index: Int, child: INode)","org.modelix.model.mpsadapters.IDefaultNodeAdapter.moveChild"]},{"name":"open override fun moveChild(role: IChildLink, index: Int, child: INode)","description":"org.modelix.model.mpsadapters.MPSNode.moveChild","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/move-child.html","searchKeys":["moveChild","open override fun moveChild(role: IChildLink, index: Int, child: INode)","org.modelix.model.mpsadapters.MPSNode.moveChild"]},{"name":"open override fun removeChild(child: INode)","description":"org.modelix.model.mpsadapters.IDefaultNodeAdapter.removeChild","location":"mps-model-adapters/org.modelix.model.mpsadapters/-i-default-node-adapter/remove-child.html","searchKeys":["removeChild","open override fun removeChild(child: INode)","org.modelix.model.mpsadapters.IDefaultNodeAdapter.removeChild"]},{"name":"open override fun removeChild(child: INode)","description":"org.modelix.model.mpsadapters.MPSModelAsNode.removeChild","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-as-node/remove-child.html","searchKeys":["removeChild","open override fun removeChild(child: INode)","org.modelix.model.mpsadapters.MPSModelAsNode.removeChild"]},{"name":"open override fun removeChild(child: INode)","description":"org.modelix.model.mpsadapters.MPSNode.removeChild","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/remove-child.html","searchKeys":["removeChild","open override fun removeChild(child: INode)","org.modelix.model.mpsadapters.MPSNode.removeChild"]},{"name":"open override fun removeListener(l: IAreaListener)","description":"org.modelix.model.mpsadapters.MPSArea.removeListener","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-area/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(l: IAreaListener)","org.modelix.model.mpsadapters.MPSArea.removeListener"]},{"name":"open override fun resolveArea(ref: IAreaReference): IArea?","description":"org.modelix.model.mpsadapters.MPSArea.resolveArea","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-area/resolve-area.html","searchKeys":["resolveArea","open override fun resolveArea(ref: IAreaReference): IArea?","org.modelix.model.mpsadapters.MPSArea.resolveArea"]},{"name":"open override fun resolveBranch(id: String): IBranch?","description":"org.modelix.model.mpsadapters.MPSArea.resolveBranch","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-area/resolve-branch.html","searchKeys":["resolveBranch","open override fun resolveBranch(id: String): IBranch?","org.modelix.model.mpsadapters.MPSArea.resolveBranch"]},{"name":"open override fun resolveConcept(ref: IConceptReference): IConcept?","description":"org.modelix.model.mpsadapters.MPSArea.resolveConcept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-area/resolve-concept.html","searchKeys":["resolveConcept","open override fun resolveConcept(ref: IConceptReference): IConcept?","org.modelix.model.mpsadapters.MPSArea.resolveConcept"]},{"name":"open override fun resolveConcept(uid: String): IConcept?","description":"org.modelix.model.mpsadapters.MPSLanguageRepository.resolveConcept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-language-repository/resolve-concept.html","searchKeys":["resolveConcept","open override fun resolveConcept(uid: String): IConcept?","org.modelix.model.mpsadapters.MPSLanguageRepository.resolveConcept"]},{"name":"open override fun resolveNode(ref: INodeReference): INode?","description":"org.modelix.model.mpsadapters.MPSArea.resolveNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-area/resolve-node.html","searchKeys":["resolveNode","open override fun resolveNode(ref: INodeReference): INode?","org.modelix.model.mpsadapters.MPSArea.resolveNode"]},{"name":"open override fun resolveOriginalNode(ref: INodeReference): INode?","description":"org.modelix.model.mpsadapters.MPSArea.resolveOriginalNode","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-area/resolve-original-node.html","searchKeys":["resolveOriginalNode","open override fun resolveOriginalNode(ref: INodeReference): INode?","org.modelix.model.mpsadapters.MPSArea.resolveOriginalNode"]},{"name":"open override fun serialize(): String","description":"org.modelix.model.mpsadapters.MPSDevKitDependencyReference.serialize","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-dev-kit-dependency-reference/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.model.mpsadapters.MPSDevKitDependencyReference.serialize"]},{"name":"open override fun serialize(): String","description":"org.modelix.model.mpsadapters.MPSJavaModuleFacetReference.serialize","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-java-module-facet-reference/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.model.mpsadapters.MPSJavaModuleFacetReference.serialize"]},{"name":"open override fun serialize(): String","description":"org.modelix.model.mpsadapters.MPSModelImportReference.serialize","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-import-reference/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.model.mpsadapters.MPSModelImportReference.serialize"]},{"name":"open override fun serialize(): String","description":"org.modelix.model.mpsadapters.MPSModelReference.serialize","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-reference/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.model.mpsadapters.MPSModelReference.serialize"]},{"name":"open override fun serialize(): String","description":"org.modelix.model.mpsadapters.MPSModuleDependencyReference.serialize","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-dependency-reference/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.model.mpsadapters.MPSModuleDependencyReference.serialize"]},{"name":"open override fun serialize(): String","description":"org.modelix.model.mpsadapters.MPSModuleReference.serialize","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-reference/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.model.mpsadapters.MPSModuleReference.serialize"]},{"name":"open override fun serialize(): String","description":"org.modelix.model.mpsadapters.MPSNodeReference.serialize","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node-reference/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.model.mpsadapters.MPSNodeReference.serialize"]},{"name":"open override fun serialize(): String","description":"org.modelix.model.mpsadapters.MPSProjectModuleReference.serialize","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-module-reference/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.model.mpsadapters.MPSProjectModuleReference.serialize"]},{"name":"open override fun serialize(): String","description":"org.modelix.model.mpsadapters.MPSProjectReference.serialize","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-reference/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.model.mpsadapters.MPSProjectReference.serialize"]},{"name":"open override fun serialize(): String","description":"org.modelix.model.mpsadapters.MPSRepositoryReference.serialize","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-repository-reference/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.model.mpsadapters.MPSRepositoryReference.serialize"]},{"name":"open override fun serialize(): String","description":"org.modelix.model.mpsadapters.MPSSingleLanguageDependencyReference.serialize","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-single-language-dependency-reference/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.model.mpsadapters.MPSSingleLanguageDependencyReference.serialize"]},{"name":"open override fun setPropertyValue(property: IProperty, value: String?)","description":"org.modelix.model.mpsadapters.IDefaultNodeAdapter.setPropertyValue","location":"mps-model-adapters/org.modelix.model.mpsadapters/-i-default-node-adapter/set-property-value.html","searchKeys":["setPropertyValue","open override fun setPropertyValue(property: IProperty, value: String?)","org.modelix.model.mpsadapters.IDefaultNodeAdapter.setPropertyValue"]},{"name":"open override fun setPropertyValue(property: IProperty, value: String?)","description":"org.modelix.model.mpsadapters.MPSModelImportAsNode.setPropertyValue","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-import-as-node/set-property-value.html","searchKeys":["setPropertyValue","open override fun setPropertyValue(property: IProperty, value: String?)","org.modelix.model.mpsadapters.MPSModelImportAsNode.setPropertyValue"]},{"name":"open override fun setPropertyValue(property: IProperty, value: String?)","description":"org.modelix.model.mpsadapters.MPSNode.setPropertyValue","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/set-property-value.html","searchKeys":["setPropertyValue","open override fun setPropertyValue(property: IProperty, value: String?)","org.modelix.model.mpsadapters.MPSNode.setPropertyValue"]},{"name":"open override fun setPropertyValue(property: IProperty, value: String?)","description":"org.modelix.model.mpsadapters.MPSProjectModuleAsNode.setPropertyValue","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-module-as-node/set-property-value.html","searchKeys":["setPropertyValue","open override fun setPropertyValue(property: IProperty, value: String?)","org.modelix.model.mpsadapters.MPSProjectModuleAsNode.setPropertyValue"]},{"name":"open override fun setReferenceTarget(link: IReferenceLink, target: INode?)","description":"org.modelix.model.mpsadapters.IDefaultNodeAdapter.setReferenceTarget","location":"mps-model-adapters/org.modelix.model.mpsadapters/-i-default-node-adapter/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(link: IReferenceLink, target: INode?)","org.modelix.model.mpsadapters.IDefaultNodeAdapter.setReferenceTarget"]},{"name":"open override fun setReferenceTarget(link: IReferenceLink, target: INode?)","description":"org.modelix.model.mpsadapters.MPSModelImportAsNode.setReferenceTarget","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-import-as-node/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(link: IReferenceLink, target: INode?)","org.modelix.model.mpsadapters.MPSModelImportAsNode.setReferenceTarget"]},{"name":"open override fun setReferenceTarget(link: IReferenceLink, target: INode?)","description":"org.modelix.model.mpsadapters.MPSNode.setReferenceTarget","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(link: IReferenceLink, target: INode?)","org.modelix.model.mpsadapters.MPSNode.setReferenceTarget"]},{"name":"open override fun setReferenceTarget(role: IReferenceLink, target: INodeReference?)","description":"org.modelix.model.mpsadapters.IDefaultNodeAdapter.setReferenceTarget","location":"mps-model-adapters/org.modelix.model.mpsadapters/-i-default-node-adapter/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(role: IReferenceLink, target: INodeReference?)","org.modelix.model.mpsadapters.IDefaultNodeAdapter.setReferenceTarget"]},{"name":"open override fun setReferenceTarget(role: IReferenceLink, target: INodeReference?)","description":"org.modelix.model.mpsadapters.MPSModelImportAsNode.setReferenceTarget","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-import-as-node/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(role: IReferenceLink, target: INodeReference?)","org.modelix.model.mpsadapters.MPSModelImportAsNode.setReferenceTarget"]},{"name":"open override fun setReferenceTarget(role: IReferenceLink, target: INodeReference?)","description":"org.modelix.model.mpsadapters.MPSNode.setReferenceTarget","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(role: IReferenceLink, target: INodeReference?)","org.modelix.model.mpsadapters.MPSNode.setReferenceTarget"]},{"name":"open override val allChildren: Iterable<INode>","description":"org.modelix.model.mpsadapters.IDefaultNodeAdapter.allChildren","location":"mps-model-adapters/org.modelix.model.mpsadapters/-i-default-node-adapter/all-children.html","searchKeys":["allChildren","open override val allChildren: Iterable<INode>","org.modelix.model.mpsadapters.IDefaultNodeAdapter.allChildren"]},{"name":"open override val allChildren: Iterable<INode>","description":"org.modelix.model.mpsadapters.MPSModelAsNode.allChildren","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-as-node/all-children.html","searchKeys":["allChildren","open override val allChildren: Iterable<INode>","org.modelix.model.mpsadapters.MPSModelAsNode.allChildren"]},{"name":"open override val allChildren: Iterable<INode>","description":"org.modelix.model.mpsadapters.MPSModuleAsNode.allChildren","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-as-node/all-children.html","searchKeys":["allChildren","open override val allChildren: Iterable<INode>","org.modelix.model.mpsadapters.MPSModuleAsNode.allChildren"]},{"name":"open override val allChildren: Iterable<INode>","description":"org.modelix.model.mpsadapters.MPSNode.allChildren","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/all-children.html","searchKeys":["allChildren","open override val allChildren: Iterable<INode>","org.modelix.model.mpsadapters.MPSNode.allChildren"]},{"name":"open override val allChildren: Iterable<INode>","description":"org.modelix.model.mpsadapters.MPSProjectAsNode.allChildren","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-as-node/all-children.html","searchKeys":["allChildren","open override val allChildren: Iterable<INode>","org.modelix.model.mpsadapters.MPSProjectAsNode.allChildren"]},{"name":"open override val allChildren: Iterable<INode>","description":"org.modelix.model.mpsadapters.MPSProjectModuleAsNode.allChildren","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-module-as-node/all-children.html","searchKeys":["allChildren","open override val allChildren: Iterable<INode>","org.modelix.model.mpsadapters.MPSProjectModuleAsNode.allChildren"]},{"name":"open override val allChildren: Iterable<INode>","description":"org.modelix.model.mpsadapters.MPSRepositoryAsNode.allChildren","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-repository-as-node/all-children.html","searchKeys":["allChildren","open override val allChildren: Iterable<INode>","org.modelix.model.mpsadapters.MPSRepositoryAsNode.allChildren"]},{"name":"open override val childConcept: IConcept","description":"org.modelix.model.mpsadapters.MPSChildLink.childConcept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-child-link/child-concept.html","searchKeys":["childConcept","open override val childConcept: IConcept","org.modelix.model.mpsadapters.MPSChildLink.childConcept"]},{"name":"open override val concept: IConcept","description":"org.modelix.model.mpsadapters.MPSDevKitDependencyAsNode.concept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-dev-kit-dependency-as-node/concept.html","searchKeys":["concept","open override val concept: IConcept","org.modelix.model.mpsadapters.MPSDevKitDependencyAsNode.concept"]},{"name":"open override val concept: IConcept","description":"org.modelix.model.mpsadapters.MPSJavaModuleFacetAsNode.concept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-java-module-facet-as-node/concept.html","searchKeys":["concept","open override val concept: IConcept","org.modelix.model.mpsadapters.MPSJavaModuleFacetAsNode.concept"]},{"name":"open override val concept: IConcept","description":"org.modelix.model.mpsadapters.MPSModelAsNode.concept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-as-node/concept.html","searchKeys":["concept","open override val concept: IConcept","org.modelix.model.mpsadapters.MPSModelAsNode.concept"]},{"name":"open override val concept: IConcept","description":"org.modelix.model.mpsadapters.MPSModelImportAsNode.concept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-import-as-node/concept.html","searchKeys":["concept","open override val concept: IConcept","org.modelix.model.mpsadapters.MPSModelImportAsNode.concept"]},{"name":"open override val concept: IConcept","description":"org.modelix.model.mpsadapters.MPSModuleAsNode.concept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-as-node/concept.html","searchKeys":["concept","open override val concept: IConcept","org.modelix.model.mpsadapters.MPSModuleAsNode.concept"]},{"name":"open override val concept: IConcept","description":"org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.concept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-dependency-as-node/concept.html","searchKeys":["concept","open override val concept: IConcept","org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.concept"]},{"name":"open override val concept: IConcept","description":"org.modelix.model.mpsadapters.MPSNode.concept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/concept.html","searchKeys":["concept","open override val concept: IConcept","org.modelix.model.mpsadapters.MPSNode.concept"]},{"name":"open override val concept: IConcept","description":"org.modelix.model.mpsadapters.MPSProjectAsNode.concept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-as-node/concept.html","searchKeys":["concept","open override val concept: IConcept","org.modelix.model.mpsadapters.MPSProjectAsNode.concept"]},{"name":"open override val concept: IConcept","description":"org.modelix.model.mpsadapters.MPSProjectModuleAsNode.concept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-module-as-node/concept.html","searchKeys":["concept","open override val concept: IConcept","org.modelix.model.mpsadapters.MPSProjectModuleAsNode.concept"]},{"name":"open override val concept: IConcept","description":"org.modelix.model.mpsadapters.MPSRepositoryAsNode.concept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-repository-as-node/concept.html","searchKeys":["concept","open override val concept: IConcept","org.modelix.model.mpsadapters.MPSRepositoryAsNode.concept"]},{"name":"open override val concept: IConcept","description":"org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode.concept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-single-language-dependency-as-node/concept.html","searchKeys":["concept","open override val concept: IConcept","org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode.concept"]},{"name":"open override val isMultiple: Boolean","description":"org.modelix.model.mpsadapters.MPSChildLink.isMultiple","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-child-link/is-multiple.html","searchKeys":["isMultiple","open override val isMultiple: Boolean","org.modelix.model.mpsadapters.MPSChildLink.isMultiple"]},{"name":"open override val isOptional: Boolean","description":"org.modelix.model.mpsadapters.MPSChildLink.isOptional","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-child-link/is-optional.html","searchKeys":["isOptional","open override val isOptional: Boolean","org.modelix.model.mpsadapters.MPSChildLink.isOptional"]},{"name":"open override val isOptional: Boolean","description":"org.modelix.model.mpsadapters.MPSProperty.isOptional","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-property/is-optional.html","searchKeys":["isOptional","open override val isOptional: Boolean","org.modelix.model.mpsadapters.MPSProperty.isOptional"]},{"name":"open override val isOptional: Boolean","description":"org.modelix.model.mpsadapters.MPSReferenceLink.isOptional","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-reference-link/is-optional.html","searchKeys":["isOptional","open override val isOptional: Boolean","org.modelix.model.mpsadapters.MPSReferenceLink.isOptional"]},{"name":"open override val isValid: Boolean","description":"org.modelix.model.mpsadapters.IDefaultNodeAdapter.isValid","location":"mps-model-adapters/org.modelix.model.mpsadapters/-i-default-node-adapter/is-valid.html","searchKeys":["isValid","open override val isValid: Boolean","org.modelix.model.mpsadapters.IDefaultNodeAdapter.isValid"]},{"name":"open override val isValid: Boolean","description":"org.modelix.model.mpsadapters.MPSNode.isValid","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/is-valid.html","searchKeys":["isValid","open override val isValid: Boolean","org.modelix.model.mpsadapters.MPSNode.isValid"]},{"name":"open override val language: ILanguage","description":"org.modelix.model.mpsadapters.MPSConcept.language","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-concept/language.html","searchKeys":["language","open override val language: ILanguage","org.modelix.model.mpsadapters.MPSConcept.language"]},{"name":"open override val parent: INode","description":"org.modelix.model.mpsadapters.MPSDevKitDependencyAsNode.parent","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-dev-kit-dependency-as-node/parent.html","searchKeys":["parent","open override val parent: INode","org.modelix.model.mpsadapters.MPSDevKitDependencyAsNode.parent"]},{"name":"open override val parent: INode","description":"org.modelix.model.mpsadapters.MPSModelAsNode.parent","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-as-node/parent.html","searchKeys":["parent","open override val parent: INode","org.modelix.model.mpsadapters.MPSModelAsNode.parent"]},{"name":"open override val parent: INode","description":"org.modelix.model.mpsadapters.MPSModelImportAsNode.parent","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-import-as-node/parent.html","searchKeys":["parent","open override val parent: INode","org.modelix.model.mpsadapters.MPSModelImportAsNode.parent"]},{"name":"open override val parent: INode","description":"org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.parent","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-dependency-as-node/parent.html","searchKeys":["parent","open override val parent: INode","org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.parent"]},{"name":"open override val parent: INode","description":"org.modelix.model.mpsadapters.MPSProjectAsNode.parent","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-as-node/parent.html","searchKeys":["parent","open override val parent: INode","org.modelix.model.mpsadapters.MPSProjectAsNode.parent"]},{"name":"open override val parent: INode","description":"org.modelix.model.mpsadapters.MPSProjectModuleAsNode.parent","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-module-as-node/parent.html","searchKeys":["parent","open override val parent: INode","org.modelix.model.mpsadapters.MPSProjectModuleAsNode.parent"]},{"name":"open override val parent: INode","description":"org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode.parent","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-single-language-dependency-as-node/parent.html","searchKeys":["parent","open override val parent: INode","org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode.parent"]},{"name":"open override val parent: INode?","description":"org.modelix.model.mpsadapters.MPSJavaModuleFacetAsNode.parent","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-java-module-facet-as-node/parent.html","searchKeys":["parent","open override val parent: INode?","org.modelix.model.mpsadapters.MPSJavaModuleFacetAsNode.parent"]},{"name":"open override val parent: INode?","description":"org.modelix.model.mpsadapters.MPSModuleAsNode.parent","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-as-node/parent.html","searchKeys":["parent","open override val parent: INode?","org.modelix.model.mpsadapters.MPSModuleAsNode.parent"]},{"name":"open override val parent: INode?","description":"org.modelix.model.mpsadapters.MPSNode.parent","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/parent.html","searchKeys":["parent","open override val parent: INode?","org.modelix.model.mpsadapters.MPSNode.parent"]},{"name":"open override val parent: INode?","description":"org.modelix.model.mpsadapters.MPSRepositoryAsNode.parent","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-repository-as-node/parent.html","searchKeys":["parent","open override val parent: INode?","org.modelix.model.mpsadapters.MPSRepositoryAsNode.parent"]},{"name":"open override val reference: INodeReference","description":"org.modelix.model.mpsadapters.MPSDevKitDependencyAsNode.reference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-dev-kit-dependency-as-node/reference.html","searchKeys":["reference","open override val reference: INodeReference","org.modelix.model.mpsadapters.MPSDevKitDependencyAsNode.reference"]},{"name":"open override val reference: INodeReference","description":"org.modelix.model.mpsadapters.MPSJavaModuleFacetAsNode.reference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-java-module-facet-as-node/reference.html","searchKeys":["reference","open override val reference: INodeReference","org.modelix.model.mpsadapters.MPSJavaModuleFacetAsNode.reference"]},{"name":"open override val reference: INodeReference","description":"org.modelix.model.mpsadapters.MPSModelAsNode.reference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-as-node/reference.html","searchKeys":["reference","open override val reference: INodeReference","org.modelix.model.mpsadapters.MPSModelAsNode.reference"]},{"name":"open override val reference: INodeReference","description":"org.modelix.model.mpsadapters.MPSModelImportAsNode.reference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-import-as-node/reference.html","searchKeys":["reference","open override val reference: INodeReference","org.modelix.model.mpsadapters.MPSModelImportAsNode.reference"]},{"name":"open override val reference: INodeReference","description":"org.modelix.model.mpsadapters.MPSModuleAsNode.reference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-as-node/reference.html","searchKeys":["reference","open override val reference: INodeReference","org.modelix.model.mpsadapters.MPSModuleAsNode.reference"]},{"name":"open override val reference: INodeReference","description":"org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.reference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-dependency-as-node/reference.html","searchKeys":["reference","open override val reference: INodeReference","org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.reference"]},{"name":"open override val reference: INodeReference","description":"org.modelix.model.mpsadapters.MPSNode.reference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/reference.html","searchKeys":["reference","open override val reference: INodeReference","org.modelix.model.mpsadapters.MPSNode.reference"]},{"name":"open override val reference: INodeReference","description":"org.modelix.model.mpsadapters.MPSProjectAsNode.reference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-as-node/reference.html","searchKeys":["reference","open override val reference: INodeReference","org.modelix.model.mpsadapters.MPSProjectAsNode.reference"]},{"name":"open override val reference: INodeReference","description":"org.modelix.model.mpsadapters.MPSProjectModuleAsNode.reference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-module-as-node/reference.html","searchKeys":["reference","open override val reference: INodeReference","org.modelix.model.mpsadapters.MPSProjectModuleAsNode.reference"]},{"name":"open override val reference: INodeReference","description":"org.modelix.model.mpsadapters.MPSRepositoryAsNode.reference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-repository-as-node/reference.html","searchKeys":["reference","open override val reference: INodeReference","org.modelix.model.mpsadapters.MPSRepositoryAsNode.reference"]},{"name":"open override val reference: INodeReference","description":"org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode.reference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-single-language-dependency-as-node/reference.html","searchKeys":["reference","open override val reference: INodeReference","org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode.reference"]},{"name":"open override val targetConcept: IConcept","description":"org.modelix.model.mpsadapters.MPSChildLink.targetConcept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-child-link/target-concept.html","searchKeys":["targetConcept","open override val targetConcept: IConcept","org.modelix.model.mpsadapters.MPSChildLink.targetConcept"]},{"name":"open override val targetConcept: IConcept","description":"org.modelix.model.mpsadapters.MPSReferenceLink.targetConcept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-reference-link/target-concept.html","searchKeys":["targetConcept","open override val targetConcept: IConcept","org.modelix.model.mpsadapters.MPSReferenceLink.targetConcept"]},{"name":"open var concept: SAbstractConcept","description":"org.modelix.model.mpsadapters.ConceptWorkaround.concept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-concept-workaround/concept.html","searchKeys":["concept","open var concept: SAbstractConcept","org.modelix.model.mpsadapters.ConceptWorkaround.concept"]},{"name":"val BaseConcept: MPSConcept","description":"org.modelix.model.mpsadapters.RepositoryLanguage.BaseConcept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-repository-language/-base-concept.html","searchKeys":["BaseConcept","val BaseConcept: MPSConcept","org.modelix.model.mpsadapters.RepositoryLanguage.BaseConcept"]},{"name":"val INamedConcept: MPSConcept","description":"org.modelix.model.mpsadapters.RepositoryLanguage.INamedConcept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-repository-language/-i-named-concept.html","searchKeys":["INamedConcept","val INamedConcept: MPSConcept","org.modelix.model.mpsadapters.RepositoryLanguage.INamedConcept"]},{"name":"val Model: Model","description":"org.modelix.model.mpsadapters.RepositoryLanguage.Model","location":"mps-model-adapters/org.modelix.model.mpsadapters/-repository-language/-model.html","searchKeys":["Model","val Model: Model","org.modelix.model.mpsadapters.RepositoryLanguage.Model"]},{"name":"val Module: Module","description":"org.modelix.model.mpsadapters.RepositoryLanguage.Module","location":"mps-model-adapters/org.modelix.model.mpsadapters/-repository-language/-module.html","searchKeys":["Module","val Module: Module","org.modelix.model.mpsadapters.RepositoryLanguage.Module"]},{"name":"val NamePropertyUID: String","description":"org.modelix.model.mpsadapters.RepositoryLanguage.NamePropertyUID","location":"mps-model-adapters/org.modelix.model.mpsadapters/-repository-language/-name-property-u-i-d.html","searchKeys":["NamePropertyUID","val NamePropertyUID: String","org.modelix.model.mpsadapters.RepositoryLanguage.NamePropertyUID"]},{"name":"val Repository: Repository","description":"org.modelix.model.mpsadapters.RepositoryLanguage.Repository","location":"mps-model-adapters/org.modelix.model.mpsadapters/-repository-language/-repository.html","searchKeys":["Repository","val Repository: Repository","org.modelix.model.mpsadapters.RepositoryLanguage.Repository"]},{"name":"val VirtualPackagePropertyUID: String","description":"org.modelix.model.mpsadapters.RepositoryLanguage.VirtualPackagePropertyUID","location":"mps-model-adapters/org.modelix.model.mpsadapters/-repository-language/-virtual-package-property-u-i-d.html","searchKeys":["VirtualPackagePropertyUID","val VirtualPackagePropertyUID: String","org.modelix.model.mpsadapters.RepositoryLanguage.VirtualPackagePropertyUID"]},{"name":"val concept: SAbstractConceptAdapter","description":"org.modelix.model.mpsadapters.MPSConcept.concept","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-concept/concept.html","searchKeys":["concept","val concept: SAbstractConceptAdapter","org.modelix.model.mpsadapters.MPSConcept.concept"]},{"name":"val dependencyScope: SDependencyScope?","description":"org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.dependencyScope","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-dependency-as-node/dependency-scope.html","searchKeys":["dependencyScope","val dependencyScope: SDependencyScope?","org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.dependencyScope"]},{"name":"val explicit: Boolean","description":"org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.explicit","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-dependency-as-node/explicit.html","searchKeys":["explicit","val explicit: Boolean","org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.explicit"]},{"name":"val facet: JavaModuleFacet","description":"org.modelix.model.mpsadapters.MPSJavaModuleFacetAsNode.facet","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-java-module-facet-as-node/facet.html","searchKeys":["facet","val facet: JavaModuleFacet","org.modelix.model.mpsadapters.MPSJavaModuleFacetAsNode.facet"]},{"name":"val importedModel: SModel","description":"org.modelix.model.mpsadapters.MPSModelImportAsNode.importedModel","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-import-as-node/imported-model.html","searchKeys":["importedModel","val importedModel: SModel","org.modelix.model.mpsadapters.MPSModelImportAsNode.importedModel"]},{"name":"val importedModel: SModelReference","description":"org.modelix.model.mpsadapters.MPSModelImportReference.importedModel","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-import-reference/imported-model.html","searchKeys":["importedModel","val importedModel: SModelReference","org.modelix.model.mpsadapters.MPSModelImportReference.importedModel"]},{"name":"val importer: SModule","description":"org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.importer","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-dependency-as-node/importer.html","searchKeys":["importer","val importer: SModule","org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.importer"]},{"name":"val importingModel: SModel","description":"org.modelix.model.mpsadapters.MPSModelImportAsNode.importingModel","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-import-as-node/importing-model.html","searchKeys":["importingModel","val importingModel: SModel","org.modelix.model.mpsadapters.MPSModelImportAsNode.importingModel"]},{"name":"val importingModel: SModelReference","description":"org.modelix.model.mpsadapters.MPSModelImportReference.importingModel","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-import-reference/importing-model.html","searchKeys":["importingModel","val importingModel: SModelReference","org.modelix.model.mpsadapters.MPSModelImportReference.importingModel"]},{"name":"val language: SLanguage","description":"org.modelix.model.mpsadapters.MPSLanguage.language","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-language/language.html","searchKeys":["language","val language: SLanguage","org.modelix.model.mpsadapters.MPSLanguage.language"]},{"name":"val languageVersion: Int","description":"org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode.languageVersion","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-single-language-dependency-as-node/language-version.html","searchKeys":["languageVersion","val languageVersion: Int","org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode.languageVersion"]},{"name":"val link: SContainmentLinkAdapter","description":"org.modelix.model.mpsadapters.MPSChildLink.link","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-child-link/link.html","searchKeys":["link","val link: SContainmentLinkAdapter","org.modelix.model.mpsadapters.MPSChildLink.link"]},{"name":"val link: SReferenceLinkAdapter","description":"org.modelix.model.mpsadapters.MPSReferenceLink.link","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-reference-link/link.html","searchKeys":["link","val link: SReferenceLinkAdapter","org.modelix.model.mpsadapters.MPSReferenceLink.link"]},{"name":"val model: SModel","description":"org.modelix.model.mpsadapters.MPSModelAsNode.model","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-as-node/model.html","searchKeys":["model","val model: SModel","org.modelix.model.mpsadapters.MPSModelAsNode.model"]},{"name":"val modelImporter: SModel? = null","description":"org.modelix.model.mpsadapters.MPSDevKitDependencyAsNode.modelImporter","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-dev-kit-dependency-as-node/model-importer.html","searchKeys":["modelImporter","val modelImporter: SModel? = null","org.modelix.model.mpsadapters.MPSDevKitDependencyAsNode.modelImporter"]},{"name":"val modelImporter: SModel? = null","description":"org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode.modelImporter","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-single-language-dependency-as-node/model-importer.html","searchKeys":["modelImporter","val modelImporter: SModel? = null","org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode.modelImporter"]},{"name":"val modelReference: SModelReference","description":"org.modelix.model.mpsadapters.MPSModelReference.modelReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-model-reference/model-reference.html","searchKeys":["modelReference","val modelReference: SModelReference","org.modelix.model.mpsadapters.MPSModelReference.modelReference"]},{"name":"val models: SimpleChildLink","description":"org.modelix.model.mpsadapters.Module.models","location":"mps-model-adapters/org.modelix.model.mpsadapters/-module/models.html","searchKeys":["models","val models: SimpleChildLink","org.modelix.model.mpsadapters.Module.models"]},{"name":"val module: SModule","description":"org.modelix.model.mpsadapters.MPSModuleAsNode.module","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-as-node/module.html","searchKeys":["module","val module: SModule","org.modelix.model.mpsadapters.MPSModuleAsNode.module"]},{"name":"val module: SModule","description":"org.modelix.model.mpsadapters.MPSProjectModuleAsNode.module","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-module-as-node/module.html","searchKeys":["module","val module: SModule","org.modelix.model.mpsadapters.MPSProjectModuleAsNode.module"]},{"name":"val moduleImporter: SModule? = null","description":"org.modelix.model.mpsadapters.MPSDevKitDependencyAsNode.moduleImporter","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-dev-kit-dependency-as-node/module-importer.html","searchKeys":["moduleImporter","val moduleImporter: SModule? = null","org.modelix.model.mpsadapters.MPSDevKitDependencyAsNode.moduleImporter"]},{"name":"val moduleImporter: SModule? = null","description":"org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode.moduleImporter","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-single-language-dependency-as-node/module-importer.html","searchKeys":["moduleImporter","val moduleImporter: SModule? = null","org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode.moduleImporter"]},{"name":"val moduleRef: SModuleReference","description":"org.modelix.model.mpsadapters.MPSProjectModuleReference.moduleRef","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-module-reference/module-ref.html","searchKeys":["moduleRef","val moduleRef: SModuleReference","org.modelix.model.mpsadapters.MPSProjectModuleReference.moduleRef"]},{"name":"val moduleReference: SModuleReference","description":"org.modelix.model.mpsadapters.MPSDevKitDependencyAsNode.moduleReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-dev-kit-dependency-as-node/module-reference.html","searchKeys":["moduleReference","val moduleReference: SModuleReference","org.modelix.model.mpsadapters.MPSDevKitDependencyAsNode.moduleReference"]},{"name":"val moduleReference: SModuleReference","description":"org.modelix.model.mpsadapters.MPSJavaModuleFacetReference.moduleReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-java-module-facet-reference/module-reference.html","searchKeys":["moduleReference","val moduleReference: SModuleReference","org.modelix.model.mpsadapters.MPSJavaModuleFacetReference.moduleReference"]},{"name":"val moduleReference: SModuleReference","description":"org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.moduleReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-dependency-as-node/module-reference.html","searchKeys":["moduleReference","val moduleReference: SModuleReference","org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.moduleReference"]},{"name":"val moduleReference: SModuleReference","description":"org.modelix.model.mpsadapters.MPSModuleReference.moduleReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-reference/module-reference.html","searchKeys":["moduleReference","val moduleReference: SModuleReference","org.modelix.model.mpsadapters.MPSModuleReference.moduleReference"]},{"name":"val moduleReference: SModuleReference","description":"org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode.moduleReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-single-language-dependency-as-node/module-reference.html","searchKeys":["moduleReference","val moduleReference: SModuleReference","org.modelix.model.mpsadapters.MPSSingleLanguageDependencyAsNode.moduleReference"]},{"name":"val moduleVersion: Int","description":"org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.moduleVersion","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-dependency-as-node/module-version.html","searchKeys":["moduleVersion","val moduleVersion: Int","org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.moduleVersion"]},{"name":"val modules: SimpleChildLink","description":"org.modelix.model.mpsadapters.Repository.modules","location":"mps-model-adapters/org.modelix.model.mpsadapters/-repository/modules.html","searchKeys":["modules","val modules: SimpleChildLink","org.modelix.model.mpsadapters.Repository.modules"]},{"name":"val node: SNode","description":"org.modelix.model.mpsadapters.MPSNode.node","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node/node.html","searchKeys":["node","val node: SNode","org.modelix.model.mpsadapters.MPSNode.node"]},{"name":"val project: ProjectBase","description":"org.modelix.model.mpsadapters.MPSProjectAsNode.project","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-as-node/project.html","searchKeys":["project","val project: ProjectBase","org.modelix.model.mpsadapters.MPSProjectAsNode.project"]},{"name":"val project: ProjectBase","description":"org.modelix.model.mpsadapters.MPSProjectModuleAsNode.project","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-module-as-node/project.html","searchKeys":["project","val project: ProjectBase","org.modelix.model.mpsadapters.MPSProjectModuleAsNode.project"]},{"name":"val projectName: String","description":"org.modelix.model.mpsadapters.MPSProjectReference.projectName","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-reference/project-name.html","searchKeys":["projectName","val projectName: String","org.modelix.model.mpsadapters.MPSProjectReference.projectName"]},{"name":"val projectRef: MPSProjectReference","description":"org.modelix.model.mpsadapters.MPSProjectModuleReference.projectRef","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-project-module-reference/project-ref.html","searchKeys":["projectRef","val projectRef: MPSProjectReference","org.modelix.model.mpsadapters.MPSProjectModuleReference.projectRef"]},{"name":"val property: SPropertyAdapter","description":"org.modelix.model.mpsadapters.MPSProperty.property","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-property/property.html","searchKeys":["property","val property: SPropertyAdapter","org.modelix.model.mpsadapters.MPSProperty.property"]},{"name":"val reexport: Boolean","description":"org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.reexport","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-dependency-as-node/reexport.html","searchKeys":["reexport","val reexport: Boolean","org.modelix.model.mpsadapters.MPSModuleDependencyAsNode.reexport"]},{"name":"val ref: SNodeReference","description":"org.modelix.model.mpsadapters.MPSNodeReference.ref","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-node-reference/ref.html","searchKeys":["ref","val ref: SNodeReference","org.modelix.model.mpsadapters.MPSNodeReference.ref"]},{"name":"val repository: SRepository","description":"org.modelix.model.mpsadapters.MPSArea.repository","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-area/repository.html","searchKeys":["repository","val repository: SRepository","org.modelix.model.mpsadapters.MPSArea.repository"]},{"name":"val repository: SRepository","description":"org.modelix.model.mpsadapters.MPSRepositoryAsNode.repository","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-repository-as-node/repository.html","searchKeys":["repository","val repository: SRepository","org.modelix.model.mpsadapters.MPSRepositoryAsNode.repository"]},{"name":"val rootNodes: SimpleChildLink","description":"org.modelix.model.mpsadapters.Model.rootNodes","location":"mps-model-adapters/org.modelix.model.mpsadapters/-model/root-nodes.html","searchKeys":["rootNodes","val rootNodes: SimpleChildLink","org.modelix.model.mpsadapters.Model.rootNodes"]},{"name":"val usedModuleId: SModuleId","description":"org.modelix.model.mpsadapters.MPSDevKitDependencyReference.usedModuleId","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-dev-kit-dependency-reference/used-module-id.html","searchKeys":["usedModuleId","val usedModuleId: SModuleId","org.modelix.model.mpsadapters.MPSDevKitDependencyReference.usedModuleId"]},{"name":"val usedModuleId: SModuleId","description":"org.modelix.model.mpsadapters.MPSModuleDependencyReference.usedModuleId","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-dependency-reference/used-module-id.html","searchKeys":["usedModuleId","val usedModuleId: SModuleId","org.modelix.model.mpsadapters.MPSModuleDependencyReference.usedModuleId"]},{"name":"val usedModuleId: SModuleId","description":"org.modelix.model.mpsadapters.MPSSingleLanguageDependencyReference.usedModuleId","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-single-language-dependency-reference/used-module-id.html","searchKeys":["usedModuleId","val usedModuleId: SModuleId","org.modelix.model.mpsadapters.MPSSingleLanguageDependencyReference.usedModuleId"]},{"name":"val userModel: SModelReference? = null","description":"org.modelix.model.mpsadapters.MPSDevKitDependencyReference.userModel","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-dev-kit-dependency-reference/user-model.html","searchKeys":["userModel","val userModel: SModelReference? = null","org.modelix.model.mpsadapters.MPSDevKitDependencyReference.userModel"]},{"name":"val userModel: SModelReference? = null","description":"org.modelix.model.mpsadapters.MPSSingleLanguageDependencyReference.userModel","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-single-language-dependency-reference/user-model.html","searchKeys":["userModel","val userModel: SModelReference? = null","org.modelix.model.mpsadapters.MPSSingleLanguageDependencyReference.userModel"]},{"name":"val userModule: SModuleReference? = null","description":"org.modelix.model.mpsadapters.MPSDevKitDependencyReference.userModule","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-dev-kit-dependency-reference/user-module.html","searchKeys":["userModule","val userModule: SModuleReference? = null","org.modelix.model.mpsadapters.MPSDevKitDependencyReference.userModule"]},{"name":"val userModule: SModuleReference? = null","description":"org.modelix.model.mpsadapters.MPSSingleLanguageDependencyReference.userModule","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-single-language-dependency-reference/user-module.html","searchKeys":["userModule","val userModule: SModuleReference? = null","org.modelix.model.mpsadapters.MPSSingleLanguageDependencyReference.userModule"]},{"name":"val userModuleReference: SModuleReference","description":"org.modelix.model.mpsadapters.MPSModuleDependencyReference.userModuleReference","location":"mps-model-adapters/org.modelix.model.mpsadapters/-m-p-s-module-dependency-reference/user-module-reference.html","searchKeys":["userModuleReference","val userModuleReference: SModuleReference","org.modelix.model.mpsadapters.MPSModuleDependencyReference.userModuleReference"]},{"name":"fun exportRepository()","description":"org.modelix.mps.model.sync.bulk.MPSBulkSynchronizer.exportRepository","location":"bulk-model-sync-mps/org.modelix.mps.model.sync.bulk/-m-p-s-bulk-synchronizer/export-repository.html","searchKeys":["exportRepository","fun exportRepository()","org.modelix.mps.model.sync.bulk.MPSBulkSynchronizer.exportRepository"]},{"name":"fun importRepository()","description":"org.modelix.mps.model.sync.bulk.MPSBulkSynchronizer.importRepository","location":"bulk-model-sync-mps/org.modelix.mps.model.sync.bulk/-m-p-s-bulk-synchronizer/import-repository.html","searchKeys":["importRepository","fun importRepository()","org.modelix.mps.model.sync.bulk.MPSBulkSynchronizer.importRepository"]},{"name":"object MPSBulkSynchronizer","description":"org.modelix.mps.model.sync.bulk.MPSBulkSynchronizer","location":"bulk-model-sync-mps/org.modelix.mps.model.sync.bulk/-m-p-s-bulk-synchronizer/index.html","searchKeys":["MPSBulkSynchronizer","object MPSBulkSynchronizer","org.modelix.mps.model.sync.bulk.MPSBulkSynchronizer"]},{"name":"annotation class DeprecationInfo(val since: String, val removalHint: String = \"\")","description":"org.modelix.kotlin.utils.DeprecationInfo","location":"kotlin-utils/org.modelix.kotlin.utils/-deprecation-info/index.html","searchKeys":["DeprecationInfo","annotation class DeprecationInfo(val since: String, val removalHint: String = \"\")","org.modelix.kotlin.utils.DeprecationInfo"]},{"name":"annotation class UnstableModelixFeature(val reason: String, val intendedFinalization: String)","description":"org.modelix.kotlin.utils.UnstableModelixFeature","location":"kotlin-utils/org.modelix.kotlin.utils/-unstable-modelix-feature/index.html","searchKeys":["UnstableModelixFeature","annotation class UnstableModelixFeature(val reason: String, val intendedFinalization: String)","org.modelix.kotlin.utils.UnstableModelixFeature"]},{"name":"constructor(initialStack: List<E>)","description":"org.modelix.kotlin.utils.ContextValue.ContextValue","location":"kotlin-utils/org.modelix.kotlin.utils/-context-value/-context-value.html","searchKeys":["ContextValue","constructor(initialStack: List<E>)","org.modelix.kotlin.utils.ContextValue.ContextValue"]},{"name":"constructor(stack: List<E>)","description":"org.modelix.kotlin.utils.ContextValue.ContextValueElement.ContextValueElement","location":"kotlin-utils/org.modelix.kotlin.utils/-context-value/-context-value-element/-context-value-element.html","searchKeys":["ContextValueElement","constructor(stack: List<E>)","org.modelix.kotlin.utils.ContextValue.ContextValueElement.ContextValueElement"]},{"name":"expect class ContextValue<E>","description":"org.modelix.kotlin.utils.ContextValue","location":"kotlin-utils/org.modelix.kotlin.utils/-context-value/index.html","searchKeys":["ContextValue","expect class ContextValue<E>","org.modelix.kotlin.utils.ContextValue"]},{"name":"expect constructor()","description":"org.modelix.kotlin.utils.ContextValue.ContextValue","location":"kotlin-utils/org.modelix.kotlin.utils/-context-value/-context-value.html","searchKeys":["ContextValue","expect constructor()","org.modelix.kotlin.utils.ContextValue.ContextValue"]},{"name":"expect constructor(defaultValue: E)","description":"org.modelix.kotlin.utils.ContextValue.ContextValue","location":"kotlin-utils/org.modelix.kotlin.utils/-context-value/-context-value.html","searchKeys":["ContextValue","expect constructor(defaultValue: E)","org.modelix.kotlin.utils.ContextValue.ContextValue"]},{"name":"expect fun <T> computeWith(newValue: E, body: () -> T): T","description":"org.modelix.kotlin.utils.ContextValue.computeWith","location":"kotlin-utils/org.modelix.kotlin.utils/-context-value/compute-with.html","searchKeys":["computeWith","expect fun <T> computeWith(newValue: E, body: () -> T): T","org.modelix.kotlin.utils.ContextValue.computeWith"]},{"name":"expect fun getAllValues(): List<E>","description":"org.modelix.kotlin.utils.ContextValue.getAllValues","location":"kotlin-utils/org.modelix.kotlin.utils/-context-value/get-all-values.html","searchKeys":["getAllValues","expect fun getAllValues(): List<E>","org.modelix.kotlin.utils.ContextValue.getAllValues"]},{"name":"expect fun getValue(): E","description":"org.modelix.kotlin.utils.ContextValue.getValue","location":"kotlin-utils/org.modelix.kotlin.utils/-context-value/get-value.html","searchKeys":["getValue","expect fun getValue(): E","org.modelix.kotlin.utils.ContextValue.getValue"]},{"name":"expect fun getValueOrNull(): E?","description":"org.modelix.kotlin.utils.ContextValue.getValueOrNull","location":"kotlin-utils/org.modelix.kotlin.utils/-context-value/get-value-or-null.html","searchKeys":["getValueOrNull","expect fun getValueOrNull(): E?","org.modelix.kotlin.utils.ContextValue.getValueOrNull"]},{"name":"expect inline fun <R> runSynchronized(lock: Any, block: () -> R): R","description":"org.modelix.kotlin.utils.runSynchronized","location":"kotlin-utils/org.modelix.kotlin.utils/run-synchronized.html","searchKeys":["runSynchronized","expect inline fun <R> runSynchronized(lock: Any, block: () -> R): R","org.modelix.kotlin.utils.runSynchronized"]},{"name":"expect suspend fun <T> runInCoroutine(newValue: E, body: suspend () -> T): T","description":"org.modelix.kotlin.utils.ContextValue.runInCoroutine","location":"kotlin-utils/org.modelix.kotlin.utils/-context-value/run-in-coroutine.html","searchKeys":["runInCoroutine","expect suspend fun <T> runInCoroutine(newValue: E, body: suspend () -> T): T","org.modelix.kotlin.utils.ContextValue.runInCoroutine"]},{"name":"fun <E, T> ContextValue<E>.offer(value: E, body: () -> T): T","description":"org.modelix.kotlin.utils.offer","location":"kotlin-utils/org.modelix.kotlin.utils/offer.html","searchKeys":["offer","fun <E, T> ContextValue<E>.offer(value: E, body: () -> T): T","org.modelix.kotlin.utils.offer"]},{"name":"inner class ContextValueElement<E>(val stack: List<E>) : AbstractCoroutineContextElement","description":"org.modelix.kotlin.utils.ContextValue.ContextValueElement","location":"kotlin-utils/org.modelix.kotlin.utils/-context-value/-context-value-element/index.html","searchKeys":["ContextValueElement","inner class ContextValueElement<E>(val stack: List<E>) : AbstractCoroutineContextElement","org.modelix.kotlin.utils.ContextValue.ContextValueElement"]},{"name":"val intendedFinalization: String","description":"org.modelix.kotlin.utils.UnstableModelixFeature.intendedFinalization","location":"kotlin-utils/org.modelix.kotlin.utils/-unstable-modelix-feature/intended-finalization.html","searchKeys":["intendedFinalization","val intendedFinalization: String","org.modelix.kotlin.utils.UnstableModelixFeature.intendedFinalization"]},{"name":"val reason: String","description":"org.modelix.kotlin.utils.UnstableModelixFeature.reason","location":"kotlin-utils/org.modelix.kotlin.utils/-unstable-modelix-feature/reason.html","searchKeys":["reason","val reason: String","org.modelix.kotlin.utils.UnstableModelixFeature.reason"]},{"name":"val removalHint: String","description":"org.modelix.kotlin.utils.DeprecationInfo.removalHint","location":"kotlin-utils/org.modelix.kotlin.utils/-deprecation-info/removal-hint.html","searchKeys":["removalHint","val removalHint: String","org.modelix.kotlin.utils.DeprecationInfo.removalHint"]},{"name":"val since: String","description":"org.modelix.kotlin.utils.DeprecationInfo.since","location":"kotlin-utils/org.modelix.kotlin.utils/-deprecation-info/since.html","searchKeys":["since","val since: String","org.modelix.kotlin.utils.DeprecationInfo.since"]},{"name":"val stack: List<E>","description":"org.modelix.kotlin.utils.ContextValue.ContextValueElement.stack","location":"kotlin-utils/org.modelix.kotlin.utils/-context-value/-context-value-element/stack.html","searchKeys":["stack","val stack: List<E>","org.modelix.kotlin.utils.ContextValue.ContextValueElement.stack"]},{"name":"abstract class ModelQLClientBuilder","description":"org.modelix.modelql.client.ModelQLClientBuilder","location":"modelql-client/org.modelix.modelql.client/-model-q-l-client-builder/index.html","searchKeys":["ModelQLClientBuilder","abstract class ModelQLClientBuilder","org.modelix.modelql.client.ModelQLClientBuilder"]},{"name":"abstract class ModelQLNode(val client: ModelQLClient) : INode, ISupportsModelQL, IQueryExecutor<INode> ","description":"org.modelix.modelql.client.ModelQLNode","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/index.html","searchKeys":["ModelQLNode","abstract class ModelQLNode(val client: ModelQLClient) : INode, ISupportsModelQL, IQueryExecutor<INode> ","org.modelix.modelql.client.ModelQLNode"]},{"name":"abstract class ModelQLNodeWithConceptCache(val client: ModelQLClient) : ModelQLNode","description":"org.modelix.modelql.client.ModelQLNodeWithConceptCache","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node-with-concept-cache/index.html","searchKeys":["ModelQLNodeWithConceptCache","abstract class ModelQLNodeWithConceptCache(val client: ModelQLClient) : ModelQLNode","org.modelix.modelql.client.ModelQLNodeWithConceptCache"]},{"name":"class ModelQLClient(val url: String, val client: HttpClient, includedSerializersModule: SerializersModule = UntypedModelQL.serializersModule)","description":"org.modelix.modelql.client.ModelQLClient","location":"modelql-client/org.modelix.modelql.client/-model-q-l-client/index.html","searchKeys":["ModelQLClient","class ModelQLClient(val url: String, val client: HttpClient, includedSerializersModule: SerializersModule = UntypedModelQL.serializersModule)","org.modelix.modelql.client.ModelQLClient"]},{"name":"class ModelQLNodeSerializer(val client: ModelQLClient) : NodeKSerializer","description":"org.modelix.modelql.client.ModelQLNodeSerializer","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node-serializer/index.html","searchKeys":["ModelQLNodeSerializer","class ModelQLNodeSerializer(val client: ModelQLClient) : NodeKSerializer","org.modelix.modelql.client.ModelQLNodeSerializer"]},{"name":"class ModelQLNodeWithConceptQuery(val client: ModelQLClient, val reference: SerializedNodeReference) : ModelQLNodeWithConceptCache","description":"org.modelix.modelql.client.ModelQLNodeWithConceptQuery","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node-with-concept-query/index.html","searchKeys":["ModelQLNodeWithConceptQuery","class ModelQLNodeWithConceptQuery(val client: ModelQLClient, val reference: SerializedNodeReference) : ModelQLNodeWithConceptCache","org.modelix.modelql.client.ModelQLNodeWithConceptQuery"]},{"name":"class ModelQLNodeWithKnownConcept(val client: ModelQLClient, val reference: SerializedNodeReference, conceptReference: ConceptReference?) : ModelQLNode","description":"org.modelix.modelql.client.ModelQLNodeWithKnownConcept","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node-with-known-concept/index.html","searchKeys":["ModelQLNodeWithKnownConcept","class ModelQLNodeWithKnownConcept(val client: ModelQLClient, val reference: SerializedNodeReference, conceptReference: ConceptReference?) : ModelQLNode","org.modelix.modelql.client.ModelQLNodeWithKnownConcept"]},{"name":"class ModelQLRootNode(val client: ModelQLClient) : ModelQLNodeWithConceptCache","description":"org.modelix.modelql.client.ModelQLRootNode","location":"modelql-client/org.modelix.modelql.client/-model-q-l-root-node/index.html","searchKeys":["ModelQLRootNode","class ModelQLRootNode(val client: ModelQLClient) : ModelQLNodeWithConceptCache","org.modelix.modelql.client.ModelQLRootNode"]},{"name":"class ModelQLRootNodeReference : INodeReference","description":"org.modelix.modelql.client.ModelQLRootNodeReference","location":"modelql-client/org.modelix.modelql.client/-model-q-l-root-node-reference/index.html","searchKeys":["ModelQLRootNodeReference","class ModelQLRootNodeReference : INodeReference","org.modelix.modelql.client.ModelQLRootNodeReference"]},{"name":"constructor()","description":"org.modelix.modelql.client.ModelQLClientBuilder.ModelQLClientBuilder","location":"modelql-client/org.modelix.modelql.client/-model-q-l-client-builder/-model-q-l-client-builder.html","searchKeys":["ModelQLClientBuilder","constructor()","org.modelix.modelql.client.ModelQLClientBuilder.ModelQLClientBuilder"]},{"name":"constructor()","description":"org.modelix.modelql.client.ModelQLRootNodeReference.ModelQLRootNodeReference","location":"modelql-client/org.modelix.modelql.client/-model-q-l-root-node-reference/-model-q-l-root-node-reference.html","searchKeys":["ModelQLRootNodeReference","constructor()","org.modelix.modelql.client.ModelQLRootNodeReference.ModelQLRootNodeReference"]},{"name":"constructor(client: ModelQLClient)","description":"org.modelix.modelql.client.ModelQLArea.ModelQLArea","location":"modelql-client/org.modelix.modelql.client/-model-q-l-area/-model-q-l-area.html","searchKeys":["ModelQLArea","constructor(client: ModelQLClient)","org.modelix.modelql.client.ModelQLArea.ModelQLArea"]},{"name":"constructor(client: ModelQLClient)","description":"org.modelix.modelql.client.ModelQLNode.ModelQLNode","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/-model-q-l-node.html","searchKeys":["ModelQLNode","constructor(client: ModelQLClient)","org.modelix.modelql.client.ModelQLNode.ModelQLNode"]},{"name":"constructor(client: ModelQLClient)","description":"org.modelix.modelql.client.ModelQLNodeSerializer.ModelQLNodeSerializer","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node-serializer/-model-q-l-node-serializer.html","searchKeys":["ModelQLNodeSerializer","constructor(client: ModelQLClient)","org.modelix.modelql.client.ModelQLNodeSerializer.ModelQLNodeSerializer"]},{"name":"constructor(client: ModelQLClient)","description":"org.modelix.modelql.client.ModelQLNodeWithConceptCache.ModelQLNodeWithConceptCache","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node-with-concept-cache/-model-q-l-node-with-concept-cache.html","searchKeys":["ModelQLNodeWithConceptCache","constructor(client: ModelQLClient)","org.modelix.modelql.client.ModelQLNodeWithConceptCache.ModelQLNodeWithConceptCache"]},{"name":"constructor(client: ModelQLClient)","description":"org.modelix.modelql.client.ModelQLRootNode.ModelQLRootNode","location":"modelql-client/org.modelix.modelql.client/-model-q-l-root-node/-model-q-l-root-node.html","searchKeys":["ModelQLRootNode","constructor(client: ModelQLClient)","org.modelix.modelql.client.ModelQLRootNode.ModelQLRootNode"]},{"name":"constructor(client: ModelQLClient, reference: SerializedNodeReference)","description":"org.modelix.modelql.client.ModelQLNodeWithConceptQuery.ModelQLNodeWithConceptQuery","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node-with-concept-query/-model-q-l-node-with-concept-query.html","searchKeys":["ModelQLNodeWithConceptQuery","constructor(client: ModelQLClient, reference: SerializedNodeReference)","org.modelix.modelql.client.ModelQLNodeWithConceptQuery.ModelQLNodeWithConceptQuery"]},{"name":"constructor(client: ModelQLClient, reference: SerializedNodeReference, conceptReference: ConceptReference?)","description":"org.modelix.modelql.client.ModelQLNodeWithKnownConcept.ModelQLNodeWithKnownConcept","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node-with-known-concept/-model-q-l-node-with-known-concept.html","searchKeys":["ModelQLNodeWithKnownConcept","constructor(client: ModelQLClient, reference: SerializedNodeReference, conceptReference: ConceptReference?)","org.modelix.modelql.client.ModelQLNodeWithKnownConcept.ModelQLNodeWithKnownConcept"]},{"name":"constructor(url: String, client: HttpClient, includedSerializersModule: SerializersModule = UntypedModelQL.serializersModule)","description":"org.modelix.modelql.client.ModelQLClient.ModelQLClient","location":"modelql-client/org.modelix.modelql.client/-model-q-l-client/-model-q-l-client.html","searchKeys":["ModelQLClient","constructor(url: String, client: HttpClient, includedSerializersModule: SerializersModule = UntypedModelQL.serializersModule)","org.modelix.modelql.client.ModelQLClient.ModelQLClient"]},{"name":"data class ModelQLArea(val client: ModelQLClient) : IArea","description":"org.modelix.modelql.client.ModelQLArea","location":"modelql-client/org.modelix.modelql.client/-model-q-l-area/index.html","searchKeys":["ModelQLArea","data class ModelQLArea(val client: ModelQLClient) : IArea","org.modelix.modelql.client.ModelQLArea"]},{"name":"expect class PlatformSpecificModelQLClientBuilder : ModelQLClientBuilder","description":"org.modelix.modelql.client.PlatformSpecificModelQLClientBuilder","location":"modelql-client/org.modelix.modelql.client/-platform-specific-model-q-l-client-builder/index.html","searchKeys":["PlatformSpecificModelQLClientBuilder","expect class PlatformSpecificModelQLClientBuilder : ModelQLClientBuilder","org.modelix.modelql.client.PlatformSpecificModelQLClientBuilder"]},{"name":"expect constructor()","description":"org.modelix.modelql.client.PlatformSpecificModelQLClientBuilder.PlatformSpecificModelQLClientBuilder","location":"modelql-client/org.modelix.modelql.client/-platform-specific-model-q-l-client-builder/-platform-specific-model-q-l-client-builder.html","searchKeys":["PlatformSpecificModelQLClientBuilder","expect constructor()","org.modelix.modelql.client.PlatformSpecificModelQLClientBuilder.PlatformSpecificModelQLClientBuilder"]},{"name":"expect fun <ResultT> ModelQLClient.blockingQuery(body: (IMonoStep<INode>) -> IMonoStep<ResultT>): ResultT","description":"org.modelix.modelql.client.blockingQuery","location":"modelql-client/org.modelix.modelql.client/blocking-query.html","searchKeys":["blockingQuery","expect fun <ResultT> ModelQLClient.blockingQuery(body: (IMonoStep<INode>) -> IMonoStep<ResultT>): ResultT","org.modelix.modelql.client.blockingQuery"]},{"name":"fun <R> blockingQuery(body: (IMonoStep<INode>) -> IMonoStep<R>): R","description":"org.modelix.modelql.client.ModelQLNode.blockingQuery","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/blocking-query.html","searchKeys":["blockingQuery","fun <R> blockingQuery(body: (IMonoStep<INode>) -> IMonoStep<R>): R","org.modelix.modelql.client.ModelQLNode.blockingQuery"]},{"name":"fun build(): ModelQLClient","description":"org.modelix.modelql.client.ModelQLClientBuilder.build","location":"modelql-client/org.modelix.modelql.client/-model-q-l-client-builder/build.html","searchKeys":["build","fun build(): ModelQLClient","org.modelix.modelql.client.ModelQLClientBuilder.build"]},{"name":"fun builder(): ModelQLClientBuilder","description":"org.modelix.modelql.client.ModelQLClient.Companion.builder","location":"modelql-client/org.modelix.modelql.client/-model-q-l-client/-companion/builder.html","searchKeys":["builder","fun builder(): ModelQLClientBuilder","org.modelix.modelql.client.ModelQLClient.Companion.builder"]},{"name":"fun getArea(): IArea","description":"org.modelix.modelql.client.ModelQLClient.getArea","location":"modelql-client/org.modelix.modelql.client/-model-q-l-client/get-area.html","searchKeys":["getArea","fun getArea(): IArea","org.modelix.modelql.client.ModelQLClient.getArea"]},{"name":"fun getNode(ref: INodeReference): ModelQLNodeWithConceptQuery","description":"org.modelix.modelql.client.ModelQLClient.getNode","location":"modelql-client/org.modelix.modelql.client/-model-q-l-client/get-node.html","searchKeys":["getNode","fun getNode(ref: INodeReference): ModelQLNodeWithConceptQuery","org.modelix.modelql.client.ModelQLClient.getNode"]},{"name":"fun getRootNode(): INode","description":"org.modelix.modelql.client.ModelQLClient.getRootNode","location":"modelql-client/org.modelix.modelql.client/-model-q-l-client/get-root-node.html","searchKeys":["getRootNode","fun getRootNode(): INode","org.modelix.modelql.client.ModelQLClient.getRootNode"]},{"name":"fun httpClient(httpClient: HttpClient): ModelQLClientBuilder","description":"org.modelix.modelql.client.ModelQLClientBuilder.httpClient","location":"modelql-client/org.modelix.modelql.client/-model-q-l-client-builder/http-client.html","searchKeys":["httpClient","fun httpClient(httpClient: HttpClient): ModelQLClientBuilder","org.modelix.modelql.client.ModelQLClientBuilder.httpClient"]},{"name":"fun httpEngine(httpEngine: HttpClientEngine): ModelQLClientBuilder","description":"org.modelix.modelql.client.ModelQLClientBuilder.httpEngine","location":"modelql-client/org.modelix.modelql.client/-model-q-l-client-builder/http-engine.html","searchKeys":["httpEngine","fun httpEngine(httpEngine: HttpClientEngine): ModelQLClientBuilder","org.modelix.modelql.client.ModelQLClientBuilder.httpEngine"]},{"name":"fun httpEngine(httpEngineFactory: HttpClientEngineFactory<*>): ModelQLClientBuilder","description":"org.modelix.modelql.client.ModelQLClientBuilder.httpEngine","location":"modelql-client/org.modelix.modelql.client/-model-q-l-client-builder/http-engine.html","searchKeys":["httpEngine","fun httpEngine(httpEngineFactory: HttpClientEngineFactory<*>): ModelQLClientBuilder","org.modelix.modelql.client.ModelQLClientBuilder.httpEngine"]},{"name":"fun serializersModule(serializersModule: SerializersModule): ModelQLClientBuilder","description":"org.modelix.modelql.client.ModelQLClientBuilder.serializersModule","location":"modelql-client/org.modelix.modelql.client/-model-q-l-client-builder/serializers-module.html","searchKeys":["serializersModule","fun serializersModule(serializersModule: SerializersModule): ModelQLClientBuilder","org.modelix.modelql.client.ModelQLClientBuilder.serializersModule"]},{"name":"fun url(url: String): ModelQLClientBuilder","description":"org.modelix.modelql.client.ModelQLClientBuilder.url","location":"modelql-client/org.modelix.modelql.client/-model-q-l-client-builder/url.html","searchKeys":["url","fun url(url: String): ModelQLClientBuilder","org.modelix.modelql.client.ModelQLClientBuilder.url"]},{"name":"object Companion","description":"org.modelix.modelql.client.ModelQLClient.Companion","location":"modelql-client/org.modelix.modelql.client/-model-q-l-client/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.modelql.client.ModelQLClient.Companion"]},{"name":"open override fun <Out> createFlow(query: IUnboundQuery<INode, *, Out>): StepFlow<Out>","description":"org.modelix.modelql.client.ModelQLNode.createFlow","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/create-flow.html","searchKeys":["createFlow","open override fun <Out> createFlow(query: IUnboundQuery<INode, *, Out>): StepFlow<Out>","org.modelix.modelql.client.ModelQLNode.createFlow"]},{"name":"open override fun <T> executeRead(f: () -> T): T","description":"org.modelix.modelql.client.ModelQLArea.executeRead","location":"modelql-client/org.modelix.modelql.client/-model-q-l-area/execute-read.html","searchKeys":["executeRead","open override fun <T> executeRead(f: () -> T): T","org.modelix.modelql.client.ModelQLArea.executeRead"]},{"name":"open override fun <T> executeWrite(f: () -> T): T","description":"org.modelix.modelql.client.ModelQLArea.executeWrite","location":"modelql-client/org.modelix.modelql.client/-model-q-l-area/execute-write.html","searchKeys":["executeWrite","open override fun <T> executeWrite(f: () -> T): T","org.modelix.modelql.client.ModelQLArea.executeWrite"]},{"name":"open override fun addListener(l: IAreaListener)","description":"org.modelix.modelql.client.ModelQLArea.addListener","location":"modelql-client/org.modelix.modelql.client/-model-q-l-area/add-listener.html","searchKeys":["addListener","open override fun addListener(l: IAreaListener)","org.modelix.modelql.client.ModelQLArea.addListener"]},{"name":"open override fun addNewChild(role: IChildLink, index: Int, concept: IConcept?): INode","description":"org.modelix.modelql.client.ModelQLNode.addNewChild","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(role: IChildLink, index: Int, concept: IConcept?): INode","org.modelix.modelql.client.ModelQLNode.addNewChild"]},{"name":"open override fun addNewChild(role: IChildLink, index: Int, concept: IConceptReference?): INode","description":"org.modelix.modelql.client.ModelQLNode.addNewChild","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(role: IChildLink, index: Int, concept: IConceptReference?): INode","org.modelix.modelql.client.ModelQLNode.addNewChild"]},{"name":"open override fun addNewChild(role: String?, index: Int, concept: IConcept?): INode","description":"org.modelix.modelql.client.ModelQLNode.addNewChild","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(role: String?, index: Int, concept: IConcept?): INode","org.modelix.modelql.client.ModelQLNode.addNewChild"]},{"name":"open override fun addNewChild(role: String?, index: Int, concept: IConceptReference?): INode","description":"org.modelix.modelql.client.ModelQLNode.addNewChild","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(role: String?, index: Int, concept: IConceptReference?): INode","org.modelix.modelql.client.ModelQLNode.addNewChild"]},{"name":"open override fun canRead(): Boolean","description":"org.modelix.modelql.client.ModelQLArea.canRead","location":"modelql-client/org.modelix.modelql.client/-model-q-l-area/can-read.html","searchKeys":["canRead","open override fun canRead(): Boolean","org.modelix.modelql.client.ModelQLArea.canRead"]},{"name":"open override fun canWrite(): Boolean","description":"org.modelix.modelql.client.ModelQLArea.canWrite","location":"modelql-client/org.modelix.modelql.client/-model-q-l-area/can-write.html","searchKeys":["canWrite","open override fun canWrite(): Boolean","org.modelix.modelql.client.ModelQLArea.canWrite"]},{"name":"open override fun collectAreas(): List<IArea>","description":"org.modelix.modelql.client.ModelQLArea.collectAreas","location":"modelql-client/org.modelix.modelql.client/-model-q-l-area/collect-areas.html","searchKeys":["collectAreas","open override fun collectAreas(): List<IArea>","org.modelix.modelql.client.ModelQLArea.collectAreas"]},{"name":"open override fun createQueryExecutor(): IQueryExecutor<INode>","description":"org.modelix.modelql.client.ModelQLNode.createQueryExecutor","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/create-query-executor.html","searchKeys":["createQueryExecutor","open override fun createQueryExecutor(): IQueryExecutor<INode>","org.modelix.modelql.client.ModelQLNode.createQueryExecutor"]},{"name":"open override fun getArea(): IArea","description":"org.modelix.modelql.client.ModelQLNode.getArea","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/get-area.html","searchKeys":["getArea","open override fun getArea(): IArea","org.modelix.modelql.client.ModelQLNode.getArea"]},{"name":"open override fun getChildren(role: IChildLink): Iterable<INode>","description":"org.modelix.modelql.client.ModelQLNode.getChildren","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/get-children.html","searchKeys":["getChildren","open override fun getChildren(role: IChildLink): Iterable<INode>","org.modelix.modelql.client.ModelQLNode.getChildren"]},{"name":"open override fun getChildren(role: String?): Iterable<INode>","description":"org.modelix.modelql.client.ModelQLNode.getChildren","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/get-children.html","searchKeys":["getChildren","open override fun getChildren(role: String?): Iterable<INode>","org.modelix.modelql.client.ModelQLNode.getChildren"]},{"name":"open override fun getConceptReference(): ConceptReference?","description":"org.modelix.modelql.client.ModelQLNodeWithConceptCache.getConceptReference","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node-with-concept-cache/get-concept-reference.html","searchKeys":["getConceptReference","open override fun getConceptReference(): ConceptReference?","org.modelix.modelql.client.ModelQLNodeWithConceptCache.getConceptReference"]},{"name":"open override fun getConceptReference(): ConceptReference?","description":"org.modelix.modelql.client.ModelQLNodeWithKnownConcept.getConceptReference","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node-with-known-concept/get-concept-reference.html","searchKeys":["getConceptReference","open override fun getConceptReference(): ConceptReference?","org.modelix.modelql.client.ModelQLNodeWithKnownConcept.getConceptReference"]},{"name":"open override fun getPropertyRoles(): List<String>","description":"org.modelix.modelql.client.ModelQLNode.getPropertyRoles","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/get-property-roles.html","searchKeys":["getPropertyRoles","open override fun getPropertyRoles(): List<String>","org.modelix.modelql.client.ModelQLNode.getPropertyRoles"]},{"name":"open override fun getPropertyValue(role: String): String?","description":"org.modelix.modelql.client.ModelQLNode.getPropertyValue","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/get-property-value.html","searchKeys":["getPropertyValue","open override fun getPropertyValue(role: String): String?","org.modelix.modelql.client.ModelQLNode.getPropertyValue"]},{"name":"open override fun getReference(): IAreaReference","description":"org.modelix.modelql.client.ModelQLArea.getReference","location":"modelql-client/org.modelix.modelql.client/-model-q-l-area/get-reference.html","searchKeys":["getReference","open override fun getReference(): IAreaReference","org.modelix.modelql.client.ModelQLArea.getReference"]},{"name":"open override fun getReferenceRoles(): List<String>","description":"org.modelix.modelql.client.ModelQLNode.getReferenceRoles","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/get-reference-roles.html","searchKeys":["getReferenceRoles","open override fun getReferenceRoles(): List<String>","org.modelix.modelql.client.ModelQLNode.getReferenceRoles"]},{"name":"open override fun getReferenceTarget(role: String): INode?","description":"org.modelix.modelql.client.ModelQLNode.getReferenceTarget","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/get-reference-target.html","searchKeys":["getReferenceTarget","open override fun getReferenceTarget(role: String): INode?","org.modelix.modelql.client.ModelQLNode.getReferenceTarget"]},{"name":"open override fun getReferenceTargetRef(role: String): INodeReference?","description":"org.modelix.modelql.client.ModelQLNode.getReferenceTargetRef","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/get-reference-target-ref.html","searchKeys":["getReferenceTargetRef","open override fun getReferenceTargetRef(role: String): INodeReference?","org.modelix.modelql.client.ModelQLNode.getReferenceTargetRef"]},{"name":"open override fun getRoot(): INode","description":"org.modelix.modelql.client.ModelQLArea.getRoot","location":"modelql-client/org.modelix.modelql.client/-model-q-l-area/get-root.html","searchKeys":["getRoot","open override fun getRoot(): INode","org.modelix.modelql.client.ModelQLArea.getRoot"]},{"name":"open override fun moveChild(role: IChildLink, index: Int, child: INode)","description":"org.modelix.modelql.client.ModelQLNode.moveChild","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/move-child.html","searchKeys":["moveChild","open override fun moveChild(role: IChildLink, index: Int, child: INode)","org.modelix.modelql.client.ModelQLNode.moveChild"]},{"name":"open override fun moveChild(role: String?, index: Int, child: INode)","description":"org.modelix.modelql.client.ModelQLNode.moveChild","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/move-child.html","searchKeys":["moveChild","open override fun moveChild(role: String?, index: Int, child: INode)","org.modelix.modelql.client.ModelQLNode.moveChild"]},{"name":"open override fun removeChild(child: INode)","description":"org.modelix.modelql.client.ModelQLNode.removeChild","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/remove-child.html","searchKeys":["removeChild","open override fun removeChild(child: INode)","org.modelix.modelql.client.ModelQLNode.removeChild"]},{"name":"open override fun removeListener(l: IAreaListener)","description":"org.modelix.modelql.client.ModelQLArea.removeListener","location":"modelql-client/org.modelix.modelql.client/-model-q-l-area/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(l: IAreaListener)","org.modelix.modelql.client.ModelQLArea.removeListener"]},{"name":"open override fun resolveArea(ref: IAreaReference): IArea?","description":"org.modelix.modelql.client.ModelQLArea.resolveArea","location":"modelql-client/org.modelix.modelql.client/-model-q-l-area/resolve-area.html","searchKeys":["resolveArea","open override fun resolveArea(ref: IAreaReference): IArea?","org.modelix.modelql.client.ModelQLArea.resolveArea"]},{"name":"open override fun resolveBranch(id: String): IBranch?","description":"org.modelix.modelql.client.ModelQLArea.resolveBranch","location":"modelql-client/org.modelix.modelql.client/-model-q-l-area/resolve-branch.html","searchKeys":["resolveBranch","open override fun resolveBranch(id: String): IBranch?","org.modelix.modelql.client.ModelQLArea.resolveBranch"]},{"name":"open override fun resolveConcept(ref: IConceptReference): IConcept?","description":"org.modelix.modelql.client.ModelQLArea.resolveConcept","location":"modelql-client/org.modelix.modelql.client/-model-q-l-area/resolve-concept.html","searchKeys":["resolveConcept","open override fun resolveConcept(ref: IConceptReference): IConcept?","org.modelix.modelql.client.ModelQLArea.resolveConcept"]},{"name":"open override fun resolveNode(area: IArea?): INode?","description":"org.modelix.modelql.client.ModelQLRootNodeReference.resolveNode","location":"modelql-client/org.modelix.modelql.client/-model-q-l-root-node-reference/resolve-node.html","searchKeys":["resolveNode","open override fun resolveNode(area: IArea?): INode?","org.modelix.modelql.client.ModelQLRootNodeReference.resolveNode"]},{"name":"open override fun resolveNode(ref: INodeReference): INode?","description":"org.modelix.modelql.client.ModelQLArea.resolveNode","location":"modelql-client/org.modelix.modelql.client/-model-q-l-area/resolve-node.html","searchKeys":["resolveNode","open override fun resolveNode(ref: INodeReference): INode?","org.modelix.modelql.client.ModelQLArea.resolveNode"]},{"name":"open override fun resolveOriginalNode(ref: INodeReference): INode?","description":"org.modelix.modelql.client.ModelQLArea.resolveOriginalNode","location":"modelql-client/org.modelix.modelql.client/-model-q-l-area/resolve-original-node.html","searchKeys":["resolveOriginalNode","open override fun resolveOriginalNode(ref: INodeReference): INode?","org.modelix.modelql.client.ModelQLArea.resolveOriginalNode"]},{"name":"open override fun setPropertyValue(property: IProperty, value: String?)","description":"org.modelix.modelql.client.ModelQLNode.setPropertyValue","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/set-property-value.html","searchKeys":["setPropertyValue","open override fun setPropertyValue(property: IProperty, value: String?)","org.modelix.modelql.client.ModelQLNode.setPropertyValue"]},{"name":"open override fun setPropertyValue(role: String, value: String?)","description":"org.modelix.modelql.client.ModelQLNode.setPropertyValue","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/set-property-value.html","searchKeys":["setPropertyValue","open override fun setPropertyValue(role: String, value: String?)","org.modelix.modelql.client.ModelQLNode.setPropertyValue"]},{"name":"open override fun setReferenceTarget(link: IReferenceLink, target: INode?)","description":"org.modelix.modelql.client.ModelQLNode.setReferenceTarget","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(link: IReferenceLink, target: INode?)","org.modelix.modelql.client.ModelQLNode.setReferenceTarget"]},{"name":"open override fun setReferenceTarget(role: IReferenceLink, target: INodeReference?)","description":"org.modelix.modelql.client.ModelQLNode.setReferenceTarget","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(role: IReferenceLink, target: INodeReference?)","org.modelix.modelql.client.ModelQLNode.setReferenceTarget"]},{"name":"open override fun setReferenceTarget(role: String, target: INode?)","description":"org.modelix.modelql.client.ModelQLNode.setReferenceTarget","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(role: String, target: INode?)","org.modelix.modelql.client.ModelQLNode.setReferenceTarget"]},{"name":"open override fun usesRoleIds(): Boolean","description":"org.modelix.modelql.client.ModelQLNode.usesRoleIds","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/uses-role-ids.html","searchKeys":["usesRoleIds","open override fun usesRoleIds(): Boolean","org.modelix.modelql.client.ModelQLNode.usesRoleIds"]},{"name":"open override val allChildren: Iterable<INode>","description":"org.modelix.modelql.client.ModelQLNode.allChildren","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/all-children.html","searchKeys":["allChildren","open override val allChildren: Iterable<INode>","org.modelix.modelql.client.ModelQLNode.allChildren"]},{"name":"open override val concept: IConcept?","description":"org.modelix.modelql.client.ModelQLNodeWithConceptCache.concept","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node-with-concept-cache/concept.html","searchKeys":["concept","open override val concept: IConcept?","org.modelix.modelql.client.ModelQLNodeWithConceptCache.concept"]},{"name":"open override val concept: IConcept?","description":"org.modelix.modelql.client.ModelQLNodeWithKnownConcept.concept","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node-with-known-concept/concept.html","searchKeys":["concept","open override val concept: IConcept?","org.modelix.modelql.client.ModelQLNodeWithKnownConcept.concept"]},{"name":"open override val isValid: Boolean","description":"org.modelix.modelql.client.ModelQLNode.isValid","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/is-valid.html","searchKeys":["isValid","open override val isValid: Boolean","org.modelix.modelql.client.ModelQLNode.isValid"]},{"name":"open override val parent: INode?","description":"org.modelix.modelql.client.ModelQLNode.parent","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/parent.html","searchKeys":["parent","open override val parent: INode?","org.modelix.modelql.client.ModelQLNode.parent"]},{"name":"open override val reference: INodeReference","description":"org.modelix.modelql.client.ModelQLRootNode.reference","location":"modelql-client/org.modelix.modelql.client/-model-q-l-root-node/reference.html","searchKeys":["reference","open override val reference: INodeReference","org.modelix.modelql.client.ModelQLRootNode.reference"]},{"name":"open override val reference: SerializedNodeReference","description":"org.modelix.modelql.client.ModelQLNodeWithConceptQuery.reference","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node-with-concept-query/reference.html","searchKeys":["reference","open override val reference: SerializedNodeReference","org.modelix.modelql.client.ModelQLNodeWithConceptQuery.reference"]},{"name":"open override val reference: SerializedNodeReference","description":"org.modelix.modelql.client.ModelQLNodeWithKnownConcept.reference","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node-with-known-concept/reference.html","searchKeys":["reference","open override val reference: SerializedNodeReference","org.modelix.modelql.client.ModelQLNodeWithKnownConcept.reference"]},{"name":"open override val roleInParent: String?","description":"org.modelix.modelql.client.ModelQLNode.roleInParent","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/role-in-parent.html","searchKeys":["roleInParent","open override val roleInParent: String?","org.modelix.modelql.client.ModelQLNode.roleInParent"]},{"name":"suspend fun <R> query(body: (IMonoStep<INode>) -> IMonoStep<R>): R","description":"org.modelix.modelql.client.ModelQLClient.query","location":"modelql-client/org.modelix.modelql.client/-model-q-l-client/query.html","searchKeys":["query","suspend fun <R> query(body: (IMonoStep<INode>) -> IMonoStep<R>): R","org.modelix.modelql.client.ModelQLClient.query"]},{"name":"suspend fun <T> runQuery(query: IUnboundQuery<INode, T, *>): T","description":"org.modelix.modelql.client.ModelQLClient.runQuery","location":"modelql-client/org.modelix.modelql.client/-model-q-l-client/run-query.html","searchKeys":["runQuery","suspend fun <T> runQuery(query: IUnboundQuery<INode, T, *>): T","org.modelix.modelql.client.ModelQLClient.runQuery"]},{"name":"val client: HttpClient","description":"org.modelix.modelql.client.ModelQLClient.client","location":"modelql-client/org.modelix.modelql.client/-model-q-l-client/client.html","searchKeys":["client","val client: HttpClient","org.modelix.modelql.client.ModelQLClient.client"]},{"name":"val client: ModelQLClient","description":"org.modelix.modelql.client.ModelQLArea.client","location":"modelql-client/org.modelix.modelql.client/-model-q-l-area/client.html","searchKeys":["client","val client: ModelQLClient","org.modelix.modelql.client.ModelQLArea.client"]},{"name":"val client: ModelQLClient","description":"org.modelix.modelql.client.ModelQLNode.client","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node/client.html","searchKeys":["client","val client: ModelQLClient","org.modelix.modelql.client.ModelQLNode.client"]},{"name":"val client: ModelQLClient","description":"org.modelix.modelql.client.ModelQLNodeSerializer.client","location":"modelql-client/org.modelix.modelql.client/-model-q-l-node-serializer/client.html","searchKeys":["client","val client: ModelQLClient","org.modelix.modelql.client.ModelQLNodeSerializer.client"]},{"name":"val json: Json","description":"org.modelix.modelql.client.ModelQLClient.json","location":"modelql-client/org.modelix.modelql.client/-model-q-l-client/json.html","searchKeys":["json","val json: Json","org.modelix.modelql.client.ModelQLClient.json"]},{"name":"val serializersModule: SerializersModule","description":"org.modelix.modelql.client.ModelQLClient.serializersModule","location":"modelql-client/org.modelix.modelql.client/-model-q-l-client/serializers-module.html","searchKeys":["serializersModule","val serializersModule: SerializersModule","org.modelix.modelql.client.ModelQLClient.serializersModule"]},{"name":"val url: String","description":"org.modelix.modelql.client.ModelQLClient.url","location":"modelql-client/org.modelix.modelql.client/-model-q-l-client/url.html","searchKeys":["url","val url: String","org.modelix.modelql.client.ModelQLClient.url"]},{"name":"abstract fun run(output: StringBuilder): Boolean","description":"org.modelix.model.server.light.LightModelServer.IHealthCheck.run","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/-i-health-check/run.html","searchKeys":["run","abstract fun run(output: StringBuilder): Boolean","org.modelix.model.server.light.LightModelServer.IHealthCheck.run"]},{"name":"abstract val enabledByDefault: Boolean","description":"org.modelix.model.server.light.LightModelServer.IHealthCheck.enabledByDefault","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/-i-health-check/enabled-by-default.html","searchKeys":["enabledByDefault","abstract val enabledByDefault: Boolean","org.modelix.model.server.light.LightModelServer.IHealthCheck.enabledByDefault"]},{"name":"abstract val id: String","description":"org.modelix.model.server.light.LightModelServer.IHealthCheck.id","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/-i-health-check/id.html","searchKeys":["id","abstract val id: String","org.modelix.model.server.light.LightModelServer.IHealthCheck.id"]},{"name":"class IncrementalModelQueryExecutor(val rootNode: INode)","description":"org.modelix.model.server.light.IncrementalModelQueryExecutor","location":"model-server-lib/org.modelix.model.server.light/-incremental-model-query-executor/index.html","searchKeys":["IncrementalModelQueryExecutor","class IncrementalModelQueryExecutor(val rootNode: INode)","org.modelix.model.server.light.IncrementalModelQueryExecutor"]},{"name":"class LightModelServerBuilder","description":"org.modelix.model.server.light.LightModelServerBuilder","location":"model-server-lib/org.modelix.model.server.light/-light-model-server-builder/index.html","searchKeys":["LightModelServerBuilder","class LightModelServerBuilder","org.modelix.model.server.light.LightModelServerBuilder"]},{"name":"class LightModelServer constructor(val port: Int, val rootNodeProvider: () -> INode?, val ignoredRoles: Set<IRole> = emptySet(), additionalHealthChecks: List<LightModelServer.IHealthCheck> = emptyList())","description":"org.modelix.model.server.light.LightModelServer","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/index.html","searchKeys":["LightModelServer","class LightModelServer constructor(val port: Int, val rootNodeProvider: () -> INode?, val ignoredRoles: Set<IRole> = emptySet(), additionalHealthChecks: List<LightModelServer.IHealthCheck> = emptyList())","org.modelix.model.server.light.LightModelServer"]},{"name":"constructor()","description":"org.modelix.model.server.light.LightModelServerBuilder.LightModelServerBuilder","location":"model-server-lib/org.modelix.model.server.light/-light-model-server-builder/-light-model-server-builder.html","searchKeys":["LightModelServerBuilder","constructor()","org.modelix.model.server.light.LightModelServerBuilder.LightModelServerBuilder"]},{"name":"constructor(port: Int, rootNode: INode, ignoredRoles: Set<IRole> = emptySet(), additionalHealthChecks: List<LightModelServer.IHealthCheck> = emptyList())","description":"org.modelix.model.server.light.LightModelServer.LightModelServer","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/-light-model-server.html","searchKeys":["LightModelServer","constructor(port: Int, rootNode: INode, ignoredRoles: Set<IRole> = emptySet(), additionalHealthChecks: List<LightModelServer.IHealthCheck> = emptyList())","org.modelix.model.server.light.LightModelServer.LightModelServer"]},{"name":"constructor(port: Int, rootNodeProvider: () -> INode?, ignoredRoles: Set<IRole> = emptySet(), additionalHealthChecks: List<LightModelServer.IHealthCheck> = emptyList())","description":"org.modelix.model.server.light.LightModelServer.LightModelServer","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/-light-model-server.html","searchKeys":["LightModelServer","constructor(port: Int, rootNodeProvider: () -> INode?, ignoredRoles: Set<IRole> = emptySet(), additionalHealthChecks: List<LightModelServer.IHealthCheck> = emptyList())","org.modelix.model.server.light.LightModelServer.LightModelServer"]},{"name":"constructor(rootNode: INode)","description":"org.modelix.model.server.light.IncrementalModelQueryExecutor.IncrementalModelQueryExecutor","location":"model-server-lib/org.modelix.model.server.light/-incremental-model-query-executor/-incremental-model-query-executor.html","searchKeys":["IncrementalModelQueryExecutor","constructor(rootNode: INode)","org.modelix.model.server.light.IncrementalModelQueryExecutor.IncrementalModelQueryExecutor"]},{"name":"constructor(websocketSession: DefaultWebSocketServerSession)","description":"org.modelix.model.server.light.LightModelServer.SessionData.SessionData","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/-session-data/-session-data.html","searchKeys":["SessionData","constructor(websocketSession: DefaultWebSocketServerSession)","org.modelix.model.server.light.LightModelServer.SessionData.SessionData"]},{"name":"fun Application.installHandlers()","description":"org.modelix.model.server.light.LightModelServer.installHandlers","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/install-handlers.html","searchKeys":["installHandlers","fun Application.installHandlers()","org.modelix.model.server.light.LightModelServer.installHandlers"]},{"name":"fun Filter.apply(node: INode): Boolean","description":"org.modelix.model.server.light.apply","location":"model-server-lib/org.modelix.model.server.light/apply.html","searchKeys":["apply","fun Filter.apply(node: INode): Boolean","org.modelix.model.server.light.apply"]},{"name":"fun ModelQuery.execute(rootNode: INode): Set<INode>","description":"org.modelix.model.server.light.execute","location":"model-server-lib/org.modelix.model.server.light/execute.html","searchKeys":["execute","fun ModelQuery.execute(rootNode: INode): Set<INode>","org.modelix.model.server.light.execute"]},{"name":"fun RootOrSubquery.applyFilters(node: INode): Boolean","description":"org.modelix.model.server.light.applyFilters","location":"model-server-lib/org.modelix.model.server.light/apply-filters.html","searchKeys":["applyFilters","fun RootOrSubquery.applyFilters(node: INode): Boolean","org.modelix.model.server.light.applyFilters"]},{"name":"fun RootOrSubquery.queryNodes(node: INode): Sequence<INode>","description":"org.modelix.model.server.light.queryNodes","location":"model-server-lib/org.modelix.model.server.light/query-nodes.html","searchKeys":["queryNodes","fun RootOrSubquery.queryNodes(node: INode): Sequence<INode>","org.modelix.model.server.light.queryNodes"]},{"name":"fun StringOperator.apply(value: String?): Boolean","description":"org.modelix.model.server.light.apply","location":"model-server-lib/org.modelix.model.server.light/apply.html","searchKeys":["apply","fun StringOperator.apply(value: String?): Boolean","org.modelix.model.server.light.apply"]},{"name":"fun applyUpdate(operations: List<OperationData>, changeSetId: ChangeSetId?): MessageFromServer","description":"org.modelix.model.server.light.LightModelServer.SessionData.applyUpdate","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/-session-data/apply-update.html","searchKeys":["applyUpdate","fun applyUpdate(operations: List<OperationData>, changeSetId: ChangeSetId?): MessageFromServer","org.modelix.model.server.light.LightModelServer.SessionData.applyUpdate"]},{"name":"fun build(): LightModelServer","description":"org.modelix.model.server.light.LightModelServerBuilder.build","location":"model-server-lib/org.modelix.model.server.light/-light-model-server-builder/build.html","searchKeys":["build","fun build(): LightModelServer","org.modelix.model.server.light.LightModelServerBuilder.build"]},{"name":"fun builder(): LightModelServerBuilder","description":"org.modelix.model.server.light.LightModelServer.Companion.builder","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/-companion/builder.html","searchKeys":["builder","fun builder(): LightModelServerBuilder","org.modelix.model.server.light.LightModelServer.Companion.builder"]},{"name":"fun createUpdate(): VersionData","description":"org.modelix.model.server.light.LightModelServer.SessionData.createUpdate","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/-session-data/create-update.html","searchKeys":["createUpdate","fun createUpdate(): VersionData","org.modelix.model.server.light.LightModelServer.SessionData.createUpdate"]},{"name":"fun createUpdateMessage(): MessageFromServer","description":"org.modelix.model.server.light.LightModelServer.SessionData.createUpdateMessage","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/-session-data/create-update-message.html","searchKeys":["createUpdateMessage","fun createUpdateMessage(): MessageFromServer","org.modelix.model.server.light.LightModelServer.SessionData.createUpdateMessage"]},{"name":"fun healthCheck(check: LightModelServer.IHealthCheck): LightModelServerBuilder","description":"org.modelix.model.server.light.LightModelServerBuilder.healthCheck","location":"model-server-lib/org.modelix.model.server.light/-light-model-server-builder/health-check.html","searchKeys":["healthCheck","fun healthCheck(check: LightModelServer.IHealthCheck): LightModelServerBuilder","org.modelix.model.server.light.LightModelServerBuilder.healthCheck"]},{"name":"fun ignoreRole(role: IRole): LightModelServerBuilder","description":"org.modelix.model.server.light.LightModelServerBuilder.ignoreRole","location":"model-server-lib/org.modelix.model.server.light/-light-model-server-builder/ignore-role.html","searchKeys":["ignoreRole","fun ignoreRole(role: IRole): LightModelServerBuilder","org.modelix.model.server.light.LightModelServerBuilder.ignoreRole"]},{"name":"fun invalidate(changedNodes: Set<INodeReference>)","description":"org.modelix.model.server.light.IncrementalModelQueryExecutor.invalidate","location":"model-server-lib/org.modelix.model.server.light/-incremental-model-query-executor/invalidate.html","searchKeys":["invalidate","fun invalidate(changedNodes: Set<INodeReference>)","org.modelix.model.server.light.IncrementalModelQueryExecutor.invalidate"]},{"name":"fun nodeChanged(node: INode)","description":"org.modelix.model.server.light.LightModelServer.SessionData.nodeChanged","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/-session-data/node-changed.html","searchKeys":["nodeChanged","fun nodeChanged(node: INode)","org.modelix.model.server.light.LightModelServer.SessionData.nodeChanged"]},{"name":"fun nodeChanged(node: INode)","description":"org.modelix.model.server.light.LightModelServer.nodeChanged","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/node-changed.html","searchKeys":["nodeChanged","fun nodeChanged(node: INode)","org.modelix.model.server.light.LightModelServer.nodeChanged"]},{"name":"fun port(port: Int): LightModelServerBuilder","description":"org.modelix.model.server.light.LightModelServerBuilder.port","location":"model-server-lib/org.modelix.model.server.light/-light-model-server-builder/port.html","searchKeys":["port","fun port(port: Int): LightModelServerBuilder","org.modelix.model.server.light.LightModelServerBuilder.port"]},{"name":"fun replaceQuery(newQuery: ModelQuery)","description":"org.modelix.model.server.light.LightModelServer.SessionData.replaceQuery","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/-session-data/replace-query.html","searchKeys":["replaceQuery","fun replaceQuery(newQuery: ModelQuery)","org.modelix.model.server.light.LightModelServer.SessionData.replaceQuery"]},{"name":"fun rootNode(node: INode): LightModelServerBuilder","description":"org.modelix.model.server.light.LightModelServerBuilder.rootNode","location":"model-server-lib/org.modelix.model.server.light/-light-model-server-builder/root-node.html","searchKeys":["rootNode","fun rootNode(node: INode): LightModelServerBuilder","org.modelix.model.server.light.LightModelServerBuilder.rootNode"]},{"name":"fun rootNode(provider: () -> INode?): LightModelServerBuilder","description":"org.modelix.model.server.light.LightModelServerBuilder.rootNode","location":"model-server-lib/org.modelix.model.server.light/-light-model-server-builder/root-node.html","searchKeys":["rootNode","fun rootNode(provider: () -> INode?): LightModelServerBuilder","org.modelix.model.server.light.LightModelServerBuilder.rootNode"]},{"name":"fun sendUpdate()","description":"org.modelix.model.server.light.LightModelServer.sendUpdate","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/send-update.html","searchKeys":["sendUpdate","fun sendUpdate()","org.modelix.model.server.light.LightModelServer.sendUpdate"]},{"name":"fun start(wait: Boolean = false)","description":"org.modelix.model.server.light.LightModelServer.start","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/start.html","searchKeys":["start","fun start(wait: Boolean = false)","org.modelix.model.server.light.LightModelServer.start"]},{"name":"fun stop()","description":"org.modelix.model.server.light.LightModelServer.stop","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/stop.html","searchKeys":["stop","fun stop()","org.modelix.model.server.light.LightModelServer.stop"]},{"name":"fun update(query: ModelQuery, visitor: (INode) -> Unit)","description":"org.modelix.model.server.light.IncrementalModelQueryExecutor.update","location":"model-server-lib/org.modelix.model.server.light/-incremental-model-query-executor/update.html","searchKeys":["update","fun update(query: ModelQuery, visitor: (INode) -> Unit)","org.modelix.model.server.light.IncrementalModelQueryExecutor.update"]},{"name":"inner class SessionData(val websocketSession: DefaultWebSocketServerSession)","description":"org.modelix.model.server.light.LightModelServer.SessionData","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/-session-data/index.html","searchKeys":["SessionData","inner class SessionData(val websocketSession: DefaultWebSocketServerSession)","org.modelix.model.server.light.LightModelServer.SessionData"]},{"name":"interface IHealthCheck","description":"org.modelix.model.server.light.LightModelServer.IHealthCheck","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/-i-health-check/index.html","searchKeys":["IHealthCheck","interface IHealthCheck","org.modelix.model.server.light.LightModelServer.IHealthCheck"]},{"name":"object Companion","description":"org.modelix.model.server.light.LightModelServer.Companion","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.server.light.LightModelServer.Companion"]},{"name":"open fun run(output: StringBuilder, parameters: Map<String, List<String>>): Boolean","description":"org.modelix.model.server.light.LightModelServer.IHealthCheck.run","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/-i-health-check/run.html","searchKeys":["run","open fun run(output: StringBuilder, parameters: Map<String, List<String>>): Boolean","org.modelix.model.server.light.LightModelServer.IHealthCheck.run"]},{"name":"open val validParameterNames: Set<String>","description":"org.modelix.model.server.light.LightModelServer.IHealthCheck.validParameterNames","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/-i-health-check/valid-parameter-names.html","searchKeys":["validParameterNames","open val validParameterNames: Set<String>","org.modelix.model.server.light.LightModelServer.IHealthCheck.validParameterNames"]},{"name":"suspend fun sendMessage(message: MessageFromServer)","description":"org.modelix.model.server.light.LightModelServer.SessionData.sendMessage","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/-session-data/send-message.html","searchKeys":["sendMessage","suspend fun sendMessage(message: MessageFromServer)","org.modelix.model.server.light.LightModelServer.SessionData.sendMessage"]},{"name":"suspend fun sendUpdate()","description":"org.modelix.model.server.light.LightModelServer.SessionData.sendUpdate","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/-session-data/send-update.html","searchKeys":["sendUpdate","suspend fun sendUpdate()","org.modelix.model.server.light.LightModelServer.SessionData.sendUpdate"]},{"name":"val ignoredRoles: Set<IRole>","description":"org.modelix.model.server.light.LightModelServer.ignoredRoles","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/ignored-roles.html","searchKeys":["ignoredRoles","val ignoredRoles: Set<IRole>","org.modelix.model.server.light.LightModelServer.ignoredRoles"]},{"name":"val port: Int","description":"org.modelix.model.server.light.LightModelServer.port","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/port.html","searchKeys":["port","val port: Int","org.modelix.model.server.light.LightModelServer.port"]},{"name":"val rootNode: INode","description":"org.modelix.model.server.light.IncrementalModelQueryExecutor.rootNode","location":"model-server-lib/org.modelix.model.server.light/-incremental-model-query-executor/root-node.html","searchKeys":["rootNode","val rootNode: INode","org.modelix.model.server.light.IncrementalModelQueryExecutor.rootNode"]},{"name":"val rootNode: INode","description":"org.modelix.model.server.light.LightModelServer.rootNode","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/root-node.html","searchKeys":["rootNode","val rootNode: INode","org.modelix.model.server.light.LightModelServer.rootNode"]},{"name":"val rootNodeProvider: () -> INode?","description":"org.modelix.model.server.light.LightModelServer.rootNodeProvider","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/root-node-provider.html","searchKeys":["rootNodeProvider","val rootNodeProvider: () -> INode?","org.modelix.model.server.light.LightModelServer.rootNodeProvider"]},{"name":"val websocketSession: DefaultWebSocketServerSession","description":"org.modelix.model.server.light.LightModelServer.SessionData.websocketSession","location":"model-server-lib/org.modelix.model.server.light/-light-model-server/-session-data/websocket-session.html","searchKeys":["websocketSession","val websocketSession: DefaultWebSocketServerSession","org.modelix.model.server.light.LightModelServer.SessionData.websocketSession"]},{"name":"class MPSModelServer : Disposable","description":"org.modelix.model.server.mps.MPSModelServer","location":"mps-model-server-plugin/org.modelix.model.server.mps/-m-p-s-model-server/index.html","searchKeys":["MPSModelServer","class MPSModelServer : Disposable","org.modelix.model.server.mps.MPSModelServer"]},{"name":"class MPSModelServerForProject(project: Project) : Disposable","description":"org.modelix.model.server.mps.MPSModelServerForProject","location":"mps-model-server-plugin/org.modelix.model.server.mps/-m-p-s-model-server-for-project/index.html","searchKeys":["MPSModelServerForProject","class MPSModelServerForProject(project: Project) : Disposable","org.modelix.model.server.mps.MPSModelServerForProject"]},{"name":"class MPSModelServerStartupActivity : StartupActivity.Background","description":"org.modelix.model.server.mps.MPSModelServerStartupActivity","location":"mps-model-server-plugin/org.modelix.model.server.mps/-m-p-s-model-server-startup-activity/index.html","searchKeys":["MPSModelServerStartupActivity","class MPSModelServerStartupActivity : StartupActivity.Background","org.modelix.model.server.mps.MPSModelServerStartupActivity"]},{"name":"const val LOAD_MODELS_MODULE_PARAMETER_NAME: String","description":"org.modelix.model.server.mps.LOAD_MODELS_MODULE_PARAMETER_NAME","location":"mps-model-server-plugin/org.modelix.model.server.mps/-l-o-a-d_-m-o-d-e-l-s_-m-o-d-u-l-e_-p-a-r-a-m-e-t-e-r_-n-a-m-e.html","searchKeys":["LOAD_MODELS_MODULE_PARAMETER_NAME","const val LOAD_MODELS_MODULE_PARAMETER_NAME: String","org.modelix.model.server.mps.LOAD_MODELS_MODULE_PARAMETER_NAME"]},{"name":"constructor()","description":"org.modelix.model.server.mps.MPSModelServer.MPSModelServer","location":"mps-model-server-plugin/org.modelix.model.server.mps/-m-p-s-model-server/-m-p-s-model-server.html","searchKeys":["MPSModelServer","constructor()","org.modelix.model.server.mps.MPSModelServer.MPSModelServer"]},{"name":"constructor()","description":"org.modelix.model.server.mps.MPSModelServerStartupActivity.MPSModelServerStartupActivity","location":"mps-model-server-plugin/org.modelix.model.server.mps/-m-p-s-model-server-startup-activity/-m-p-s-model-server-startup-activity.html","searchKeys":["MPSModelServerStartupActivity","constructor()","org.modelix.model.server.mps.MPSModelServerStartupActivity.MPSModelServerStartupActivity"]},{"name":"constructor(project: Project)","description":"org.modelix.model.server.mps.MPSModelServerForProject.MPSModelServerForProject","location":"mps-model-server-plugin/org.modelix.model.server.mps/-m-p-s-model-server-for-project/-m-p-s-model-server-for-project.html","searchKeys":["MPSModelServerForProject","constructor(project: Project)","org.modelix.model.server.mps.MPSModelServerForProject.MPSModelServerForProject"]},{"name":"fun ensureStarted()","description":"org.modelix.model.server.mps.MPSModelServer.ensureStarted","location":"mps-model-server-plugin/org.modelix.model.server.mps/-m-p-s-model-server/ensure-started.html","searchKeys":["ensureStarted","fun ensureStarted()","org.modelix.model.server.mps.MPSModelServer.ensureStarted"]},{"name":"fun ensureStopped()","description":"org.modelix.model.server.mps.MPSModelServer.ensureStopped","location":"mps-model-server-plugin/org.modelix.model.server.mps/-m-p-s-model-server/ensure-stopped.html","searchKeys":["ensureStopped","fun ensureStopped()","org.modelix.model.server.mps.MPSModelServer.ensureStopped"]},{"name":"fun registerProject(project: Project)","description":"org.modelix.model.server.mps.MPSModelServer.registerProject","location":"mps-model-server-plugin/org.modelix.model.server.mps/-m-p-s-model-server/register-project.html","searchKeys":["registerProject","fun registerProject(project: Project)","org.modelix.model.server.mps.MPSModelServer.registerProject"]},{"name":"fun unregisterProject(project: Project)","description":"org.modelix.model.server.mps.MPSModelServer.unregisterProject","location":"mps-model-server-plugin/org.modelix.model.server.mps/-m-p-s-model-server/unregister-project.html","searchKeys":["unregisterProject","fun unregisterProject(project: Project)","org.modelix.model.server.mps.MPSModelServer.unregisterProject"]},{"name":"open override fun dispose()","description":"org.modelix.model.server.mps.MPSModelServer.dispose","location":"mps-model-server-plugin/org.modelix.model.server.mps/-m-p-s-model-server/dispose.html","searchKeys":["dispose","open override fun dispose()","org.modelix.model.server.mps.MPSModelServer.dispose"]},{"name":"open override fun dispose()","description":"org.modelix.model.server.mps.MPSModelServerForProject.dispose","location":"mps-model-server-plugin/org.modelix.model.server.mps/-m-p-s-model-server-for-project/dispose.html","searchKeys":["dispose","open override fun dispose()","org.modelix.model.server.mps.MPSModelServerForProject.dispose"]},{"name":"open override fun runActivity(project: Project)","description":"org.modelix.model.server.mps.MPSModelServerStartupActivity.runActivity","location":"mps-model-server-plugin/org.modelix.model.server.mps/-m-p-s-model-server-startup-activity/run-activity.html","searchKeys":["runActivity","open override fun runActivity(project: Project)","org.modelix.model.server.mps.MPSModelServerStartupActivity.runActivity"]},{"name":"READ","description":"org.modelix.authorization.EPermissionType.READ","location":"authorization/org.modelix.authorization/-e-permission-type/-r-e-a-d/index.html","searchKeys":["READ","READ","org.modelix.authorization.EPermissionType.READ"]},{"name":"WRITE","description":"org.modelix.authorization.EPermissionType.WRITE","location":"authorization/org.modelix.authorization/-e-permission-type/-w-r-i-t-e/index.html","searchKeys":["WRITE","WRITE","org.modelix.authorization.EPermissionType.WRITE"]},{"name":"class AccessTokenPrincipal(val jwt: DecodedJWT) : Principal","description":"org.modelix.authorization.AccessTokenPrincipal","location":"authorization/org.modelix.authorization/-access-token-principal/index.html","searchKeys":["AccessTokenPrincipal","class AccessTokenPrincipal(val jwt: DecodedJWT) : Principal","org.modelix.authorization.AccessTokenPrincipal"]},{"name":"class NoPermissionException(val user: AccessTokenPrincipal?, val resourceId: String?, val scope: String?, message: String) : RuntimeException","description":"org.modelix.authorization.NoPermissionException","location":"authorization/org.modelix.authorization/-no-permission-exception/index.html","searchKeys":["NoPermissionException","class NoPermissionException(val user: AccessTokenPrincipal?, val resourceId: String?, val scope: String?, message: String) : RuntimeException","org.modelix.authorization.NoPermissionException"]},{"name":"class NotLoggedInException : RuntimeException","description":"org.modelix.authorization.NotLoggedInException","location":"authorization/org.modelix.authorization/-not-logged-in-exception/index.html","searchKeys":["NotLoggedInException","class NotLoggedInException : RuntimeException","org.modelix.authorization.NotLoggedInException"]},{"name":"constructor()","description":"org.modelix.authorization.NotLoggedInException.NotLoggedInException","location":"authorization/org.modelix.authorization/-not-logged-in-exception/-not-logged-in-exception.html","searchKeys":["NotLoggedInException","constructor()","org.modelix.authorization.NotLoggedInException.NotLoggedInException"]},{"name":"constructor(jwt: DecodedJWT)","description":"org.modelix.authorization.AccessTokenPrincipal.AccessTokenPrincipal","location":"authorization/org.modelix.authorization/-access-token-principal/-access-token-principal.html","searchKeys":["AccessTokenPrincipal","constructor(jwt: DecodedJWT)","org.modelix.authorization.AccessTokenPrincipal.AccessTokenPrincipal"]},{"name":"constructor(message: String)","description":"org.modelix.authorization.NoPermissionException.NoPermissionException","location":"authorization/org.modelix.authorization/-no-permission-exception/-no-permission-exception.html","searchKeys":["NoPermissionException","constructor(message: String)","org.modelix.authorization.NoPermissionException.NoPermissionException"]},{"name":"constructor(name: String)","description":"org.modelix.authorization.KeycloakScope.KeycloakScope","location":"authorization/org.modelix.authorization/-keycloak-scope/-keycloak-scope.html","searchKeys":["KeycloakScope","constructor(name: String)","org.modelix.authorization.KeycloakScope.KeycloakScope"]},{"name":"constructor(name: String, scopes: Set<KeycloakScope>, createByUser: Boolean = false)","description":"org.modelix.authorization.KeycloakResourceType.KeycloakResourceType","location":"authorization/org.modelix.authorization/-keycloak-resource-type/-keycloak-resource-type.html","searchKeys":["KeycloakResourceType","constructor(name: String, scopes: Set<KeycloakScope>, createByUser: Boolean = false)","org.modelix.authorization.KeycloakResourceType.KeycloakResourceType"]},{"name":"constructor(name: String, type: KeycloakResourceType)","description":"org.modelix.authorization.KeycloakResource.KeycloakResource","location":"authorization/org.modelix.authorization/-keycloak-resource/-keycloak-resource.html","searchKeys":["KeycloakResource","constructor(name: String, type: KeycloakResourceType)","org.modelix.authorization.KeycloakResource.KeycloakResource"]},{"name":"constructor(user: AccessTokenPrincipal, permissionId: String, type: String)","description":"org.modelix.authorization.NoPermissionException.NoPermissionException","location":"authorization/org.modelix.authorization/-no-permission-exception/-no-permission-exception.html","searchKeys":["NoPermissionException","constructor(user: AccessTokenPrincipal, permissionId: String, type: String)","org.modelix.authorization.NoPermissionException.NoPermissionException"]},{"name":"constructor(user: AccessTokenPrincipal?, resourceId: String?, scope: String?, message: String)","description":"org.modelix.authorization.NoPermissionException.NoPermissionException","location":"authorization/org.modelix.authorization/-no-permission-exception/-no-permission-exception.html","searchKeys":["NoPermissionException","constructor(user: AccessTokenPrincipal?, resourceId: String?, scope: String?, message: String)","org.modelix.authorization.NoPermissionException.NoPermissionException"]},{"name":"data class KeycloakResource(val name: String, val type: KeycloakResourceType)","description":"org.modelix.authorization.KeycloakResource","location":"authorization/org.modelix.authorization/-keycloak-resource/index.html","searchKeys":["KeycloakResource","data class KeycloakResource(val name: String, val type: KeycloakResourceType)","org.modelix.authorization.KeycloakResource"]},{"name":"data class KeycloakResourceType(val name: String, val scopes: Set<KeycloakScope>, val createByUser: Boolean = false)","description":"org.modelix.authorization.KeycloakResourceType","location":"authorization/org.modelix.authorization/-keycloak-resource-type/index.html","searchKeys":["KeycloakResourceType","data class KeycloakResourceType(val name: String, val scopes: Set<KeycloakScope>, val createByUser: Boolean = false)","org.modelix.authorization.KeycloakResourceType"]},{"name":"data class KeycloakScope(val name: String)","description":"org.modelix.authorization.KeycloakScope","location":"authorization/org.modelix.authorization/-keycloak-scope/index.html","searchKeys":["KeycloakScope","data class KeycloakScope(val name: String)","org.modelix.authorization.KeycloakScope"]},{"name":"enum EPermissionType : Enum<EPermissionType> ","description":"org.modelix.authorization.EPermissionType","location":"authorization/org.modelix.authorization/-e-permission-type/index.html","searchKeys":["EPermissionType","enum EPermissionType : Enum<EPermissionType> ","org.modelix.authorization.EPermissionType"]},{"name":"fun Application.installAuthentication(unitTestMode: Boolean = false)","description":"org.modelix.authorization.installAuthentication","location":"authorization/org.modelix.authorization/install-authentication.html","searchKeys":["installAuthentication","fun Application.installAuthentication(unitTestMode: Boolean = false)","org.modelix.authorization.installAuthentication"]},{"name":"fun ApplicationCall.checkPermission(resource: KeycloakResource, scope: KeycloakScope)","description":"org.modelix.authorization.checkPermission","location":"authorization/org.modelix.authorization/check-permission.html","searchKeys":["checkPermission","fun ApplicationCall.checkPermission(resource: KeycloakResource, scope: KeycloakScope)","org.modelix.authorization.checkPermission"]},{"name":"fun ApplicationCall.getBearerToken(): String?","description":"org.modelix.authorization.getBearerToken","location":"authorization/org.modelix.authorization/get-bearer-token.html","searchKeys":["getBearerToken","fun ApplicationCall.getBearerToken(): String?","org.modelix.authorization.getBearerToken"]},{"name":"fun ApplicationCall.getUserName(): String?","description":"org.modelix.authorization.getUserName","location":"authorization/org.modelix.authorization/get-user-name.html","searchKeys":["getUserName","fun ApplicationCall.getUserName(): String?","org.modelix.authorization.getUserName"]},{"name":"fun ApplicationCall.jwt(): DecodedJWT?","description":"org.modelix.authorization.jwt","location":"authorization/org.modelix.authorization/jwt.html","searchKeys":["jwt","fun ApplicationCall.jwt(): DecodedJWT?","org.modelix.authorization.jwt"]},{"name":"fun ApplicationCall.jwtFromHeaders(): DecodedJWT?","description":"org.modelix.authorization.jwtFromHeaders","location":"authorization/org.modelix.authorization/jwt-from-headers.html","searchKeys":["jwtFromHeaders","fun ApplicationCall.jwtFromHeaders(): DecodedJWT?","org.modelix.authorization.jwtFromHeaders"]},{"name":"fun DecodedJWT.nullIfInvalid(): DecodedJWT?","description":"org.modelix.authorization.nullIfInvalid","location":"authorization/org.modelix.authorization/null-if-invalid.html","searchKeys":["nullIfInvalid","fun DecodedJWT.nullIfInvalid(): DecodedJWT?","org.modelix.authorization.nullIfInvalid"]},{"name":"fun EPermissionType.toKeycloakScope(): KeycloakScope","description":"org.modelix.authorization.toKeycloakScope","location":"authorization/org.modelix.authorization/to-keycloak-scope.html","searchKeys":["toKeycloakScope","fun EPermissionType.toKeycloakScope(): KeycloakScope","org.modelix.authorization.toKeycloakScope"]},{"name":"fun PipelineContext<Unit, ApplicationCall>.getUserName(): String?","description":"org.modelix.authorization.getUserName","location":"authorization/org.modelix.authorization/get-user-name.html","searchKeys":["getUserName","fun PipelineContext<Unit, ApplicationCall>.getUserName(): String?","org.modelix.authorization.getUserName"]},{"name":"fun Route.requiresDelete(resource: KeycloakResource, body: Route.() -> Unit)","description":"org.modelix.authorization.requiresDelete","location":"authorization/org.modelix.authorization/requires-delete.html","searchKeys":["requiresDelete","fun Route.requiresDelete(resource: KeycloakResource, body: Route.() -> Unit)","org.modelix.authorization.requiresDelete"]},{"name":"fun Route.requiresLogin(body: Route.() -> Unit)","description":"org.modelix.authorization.requiresLogin","location":"authorization/org.modelix.authorization/requires-login.html","searchKeys":["requiresLogin","fun Route.requiresLogin(body: Route.() -> Unit)","org.modelix.authorization.requiresLogin"]},{"name":"fun Route.requiresPermission(resource: KeycloakResource, permissionType: EPermissionType, body: Route.() -> Unit)","description":"org.modelix.authorization.requiresPermission","location":"authorization/org.modelix.authorization/requires-permission.html","searchKeys":["requiresPermission","fun Route.requiresPermission(resource: KeycloakResource, permissionType: EPermissionType, body: Route.() -> Unit)","org.modelix.authorization.requiresPermission"]},{"name":"fun Route.requiresPermission(resource: KeycloakResource, scope: KeycloakScope, body: Route.() -> Unit)","description":"org.modelix.authorization.requiresPermission","location":"authorization/org.modelix.authorization/requires-permission.html","searchKeys":["requiresPermission","fun Route.requiresPermission(resource: KeycloakResource, scope: KeycloakScope, body: Route.() -> Unit)","org.modelix.authorization.requiresPermission"]},{"name":"fun Route.requiresRead(resource: KeycloakResource, body: Route.() -> Unit)","description":"org.modelix.authorization.requiresRead","location":"authorization/org.modelix.authorization/requires-read.html","searchKeys":["requiresRead","fun Route.requiresRead(resource: KeycloakResource, body: Route.() -> Unit)","org.modelix.authorization.requiresRead"]},{"name":"fun Route.requiresWrite(resource: KeycloakResource, body: Route.() -> Unit)","description":"org.modelix.authorization.requiresWrite","location":"authorization/org.modelix.authorization/requires-write.html","searchKeys":["requiresWrite","fun Route.requiresWrite(resource: KeycloakResource, body: Route.() -> Unit)","org.modelix.authorization.requiresWrite"]},{"name":"fun String.asResource(): KeycloakResource","description":"org.modelix.authorization.asResource","location":"authorization/org.modelix.authorization/as-resource.html","searchKeys":["asResource","fun String.asResource(): KeycloakResource","org.modelix.authorization.asResource"]},{"name":"fun createInstance(resourceName: String): KeycloakResource","description":"org.modelix.authorization.KeycloakResourceType.createInstance","location":"authorization/org.modelix.authorization/-keycloak-resource-type/create-instance.html","searchKeys":["createInstance","fun createInstance(resourceName: String): KeycloakResource","org.modelix.authorization.KeycloakResourceType.createInstance"]},{"name":"fun createToken(permissions: List<Pair<KeycloakResource, Set<KeycloakScope>>>): DecodedJWT","description":"org.modelix.authorization.KeycloakUtils.createToken","location":"authorization/org.modelix.authorization/-keycloak-utils/create-token.html","searchKeys":["createToken","fun createToken(permissions: List<Pair<KeycloakResource, Set<KeycloakScope>>>): DecodedJWT","org.modelix.authorization.KeycloakUtils.createToken"]},{"name":"fun ensureResourcesExists(resourceSpec: KeycloakResource, owner: DecodedJWT? = null): ResourceRepresentation","description":"org.modelix.authorization.KeycloakUtils.ensureResourcesExists","location":"authorization/org.modelix.authorization/-keycloak-utils/ensure-resources-exists.html","searchKeys":["ensureResourcesExists","fun ensureResourcesExists(resourceSpec: KeycloakResource, owner: DecodedJWT? = null): ResourceRepresentation","org.modelix.authorization.KeycloakUtils.ensureResourcesExists"]},{"name":"fun getServiceAccountToken(): DecodedJWT","description":"org.modelix.authorization.KeycloakUtils.getServiceAccountToken","location":"authorization/org.modelix.authorization/-keycloak-utils/get-service-account-token.html","searchKeys":["getServiceAccountToken","fun getServiceAccountToken(): DecodedJWT","org.modelix.authorization.KeycloakUtils.getServiceAccountToken"]},{"name":"fun getUserName(): String?","description":"org.modelix.authorization.AccessTokenPrincipal.getUserName","location":"authorization/org.modelix.authorization/-access-token-principal/get-user-name.html","searchKeys":["getUserName","fun getUserName(): String?","org.modelix.authorization.AccessTokenPrincipal.getUserName"]},{"name":"fun hasPermission(identityOrAccessToken: DecodedJWT, resourceSpec: KeycloakResource, scope: KeycloakScope): Boolean","description":"org.modelix.authorization.KeycloakUtils.hasPermission","location":"authorization/org.modelix.authorization/-keycloak-utils/has-permission.html","searchKeys":["hasPermission","fun hasPermission(identityOrAccessToken: DecodedJWT, resourceSpec: KeycloakResource, scope: KeycloakScope): Boolean","org.modelix.authorization.KeycloakUtils.hasPermission"]},{"name":"fun includes(type: EPermissionType): Boolean","description":"org.modelix.authorization.EPermissionType.includes","location":"authorization/org.modelix.authorization/-e-permission-type/includes.html","searchKeys":["includes","fun includes(type: EPermissionType): Boolean","org.modelix.authorization.EPermissionType.includes"]},{"name":"fun isEnabled(): Boolean","description":"org.modelix.authorization.KeycloakUtils.isEnabled","location":"authorization/org.modelix.authorization/-keycloak-utils/is-enabled.html","searchKeys":["isEnabled","fun isEnabled(): Boolean","org.modelix.authorization.KeycloakUtils.isEnabled"]},{"name":"fun toSet(): Set<KeycloakScope>","description":"org.modelix.authorization.KeycloakScope.toSet","location":"authorization/org.modelix.authorization/-keycloak-scope/to-set.html","searchKeys":["toSet","fun toSet(): Set<KeycloakScope>","org.modelix.authorization.KeycloakScope.toSet"]},{"name":"fun valueOf(value: String): EPermissionType","description":"org.modelix.authorization.EPermissionType.valueOf","location":"authorization/org.modelix.authorization/-e-permission-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): EPermissionType","org.modelix.authorization.EPermissionType.valueOf"]},{"name":"fun values(): Array<EPermissionType>","description":"org.modelix.authorization.EPermissionType.values","location":"authorization/org.modelix.authorization/-e-permission-type/values.html","searchKeys":["values","fun values(): Array<EPermissionType>","org.modelix.authorization.EPermissionType.values"]},{"name":"fun verifyTokenSignature(token: DecodedJWT)","description":"org.modelix.authorization.verifyTokenSignature","location":"authorization/org.modelix.authorization/verify-token-signature.html","searchKeys":["verifyTokenSignature","fun verifyTokenSignature(token: DecodedJWT)","org.modelix.authorization.verifyTokenSignature"]},{"name":"object Companion","description":"org.modelix.authorization.KeycloakResourceType.Companion","location":"authorization/org.modelix.authorization/-keycloak-resource-type/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.authorization.KeycloakResourceType.Companion"]},{"name":"object Companion","description":"org.modelix.authorization.KeycloakScope.Companion","location":"authorization/org.modelix.authorization/-keycloak-scope/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.authorization.KeycloakScope.Companion"]},{"name":"object KeycloakUtils","description":"org.modelix.authorization.KeycloakUtils","location":"authorization/org.modelix.authorization/-keycloak-utils/index.html","searchKeys":["KeycloakUtils","object KeycloakUtils","org.modelix.authorization.KeycloakUtils"]},{"name":"operator fun plus(other: KeycloakScope): Set<KeycloakScope>","description":"org.modelix.authorization.KeycloakScope.plus","location":"authorization/org.modelix.authorization/-keycloak-scope/plus.html","searchKeys":["plus","operator fun plus(other: KeycloakScope): Set<KeycloakScope>","org.modelix.authorization.KeycloakScope.plus"]},{"name":"val ADD: KeycloakScope","description":"org.modelix.authorization.KeycloakScope.Companion.ADD","location":"authorization/org.modelix.authorization/-keycloak-scope/-companion/-a-d-d.html","searchKeys":["ADD","val ADD: KeycloakScope","org.modelix.authorization.KeycloakScope.Companion.ADD"]},{"name":"val ALL_SCOPES: Set<KeycloakScope>","description":"org.modelix.authorization.KeycloakScope.Companion.ALL_SCOPES","location":"authorization/org.modelix.authorization/-keycloak-scope/-companion/-a-l-l_-s-c-o-p-e-s.html","searchKeys":["ALL_SCOPES","val ALL_SCOPES: Set<KeycloakScope>","org.modelix.authorization.KeycloakScope.Companion.ALL_SCOPES"]},{"name":"val BASE_URL: String","description":"org.modelix.authorization.KeycloakUtils.BASE_URL","location":"authorization/org.modelix.authorization/-keycloak-utils/-b-a-s-e_-u-r-l.html","searchKeys":["BASE_URL","val BASE_URL: String","org.modelix.authorization.KeycloakUtils.BASE_URL"]},{"name":"val CLIENT_ID: String","description":"org.modelix.authorization.KeycloakUtils.CLIENT_ID","location":"authorization/org.modelix.authorization/-keycloak-utils/-c-l-i-e-n-t_-i-d.html","searchKeys":["CLIENT_ID","val CLIENT_ID: String","org.modelix.authorization.KeycloakUtils.CLIENT_ID"]},{"name":"val CLIENT_SECRET: String","description":"org.modelix.authorization.KeycloakUtils.CLIENT_SECRET","location":"authorization/org.modelix.authorization/-keycloak-utils/-c-l-i-e-n-t_-s-e-c-r-e-t.html","searchKeys":["CLIENT_SECRET","val CLIENT_SECRET: String","org.modelix.authorization.KeycloakUtils.CLIENT_SECRET"]},{"name":"val DEFAULT_TYPE: KeycloakResourceType","description":"org.modelix.authorization.KeycloakResourceType.Companion.DEFAULT_TYPE","location":"authorization/org.modelix.authorization/-keycloak-resource-type/-companion/-d-e-f-a-u-l-t_-t-y-p-e.html","searchKeys":["DEFAULT_TYPE","val DEFAULT_TYPE: KeycloakResourceType","org.modelix.authorization.KeycloakResourceType.Companion.DEFAULT_TYPE"]},{"name":"val DELETE: KeycloakScope","description":"org.modelix.authorization.KeycloakScope.Companion.DELETE","location":"authorization/org.modelix.authorization/-keycloak-scope/-companion/-d-e-l-e-t-e.html","searchKeys":["DELETE","val DELETE: KeycloakScope","org.modelix.authorization.KeycloakScope.Companion.DELETE"]},{"name":"val LIST: KeycloakScope","description":"org.modelix.authorization.KeycloakScope.Companion.LIST","location":"authorization/org.modelix.authorization/-keycloak-scope/-companion/-l-i-s-t.html","searchKeys":["LIST","val LIST: KeycloakScope","org.modelix.authorization.KeycloakScope.Companion.LIST"]},{"name":"val MODEL_SERVER_ENTRY: KeycloakResourceType","description":"org.modelix.authorization.KeycloakResourceType.Companion.MODEL_SERVER_ENTRY","location":"authorization/org.modelix.authorization/-keycloak-resource-type/-companion/-m-o-d-e-l_-s-e-r-v-e-r_-e-n-t-r-y.html","searchKeys":["MODEL_SERVER_ENTRY","val MODEL_SERVER_ENTRY: KeycloakResourceType","org.modelix.authorization.KeycloakResourceType.Companion.MODEL_SERVER_ENTRY"]},{"name":"val READ: KeycloakScope","description":"org.modelix.authorization.KeycloakScope.Companion.READ","location":"authorization/org.modelix.authorization/-keycloak-scope/-companion/-r-e-a-d.html","searchKeys":["READ","val READ: KeycloakScope","org.modelix.authorization.KeycloakScope.Companion.READ"]},{"name":"val READ_LIST: Set<KeycloakScope>","description":"org.modelix.authorization.KeycloakScope.Companion.READ_LIST","location":"authorization/org.modelix.authorization/-keycloak-scope/-companion/-r-e-a-d_-l-i-s-t.html","searchKeys":["READ_LIST","val READ_LIST: Set<KeycloakScope>","org.modelix.authorization.KeycloakScope.Companion.READ_LIST"]},{"name":"val READ_ONLY: Set<KeycloakScope>","description":"org.modelix.authorization.KeycloakScope.Companion.READ_ONLY","location":"authorization/org.modelix.authorization/-keycloak-scope/-companion/-r-e-a-d_-o-n-l-y.html","searchKeys":["READ_ONLY","val READ_ONLY: Set<KeycloakScope>","org.modelix.authorization.KeycloakScope.Companion.READ_ONLY"]},{"name":"val READ_WRITE: Set<KeycloakScope>","description":"org.modelix.authorization.KeycloakScope.Companion.READ_WRITE","location":"authorization/org.modelix.authorization/-keycloak-scope/-companion/-r-e-a-d_-w-r-i-t-e.html","searchKeys":["READ_WRITE","val READ_WRITE: Set<KeycloakScope>","org.modelix.authorization.KeycloakScope.Companion.READ_WRITE"]},{"name":"val READ_WRITE_DELETE: Set<KeycloakScope>","description":"org.modelix.authorization.KeycloakScope.Companion.READ_WRITE_DELETE","location":"authorization/org.modelix.authorization/-keycloak-scope/-companion/-r-e-a-d_-w-r-i-t-e_-d-e-l-e-t-e.html","searchKeys":["READ_WRITE_DELETE","val READ_WRITE_DELETE: Set<KeycloakScope>","org.modelix.authorization.KeycloakScope.Companion.READ_WRITE_DELETE"]},{"name":"val READ_WRITE_DELETE_LIST: Set<KeycloakScope>","description":"org.modelix.authorization.KeycloakScope.Companion.READ_WRITE_DELETE_LIST","location":"authorization/org.modelix.authorization/-keycloak-scope/-companion/-r-e-a-d_-w-r-i-t-e_-d-e-l-e-t-e_-l-i-s-t.html","searchKeys":["READ_WRITE_DELETE_LIST","val READ_WRITE_DELETE_LIST: Set<KeycloakScope>","org.modelix.authorization.KeycloakScope.Companion.READ_WRITE_DELETE_LIST"]},{"name":"val READ_WRITE_LIST: Set<KeycloakScope>","description":"org.modelix.authorization.KeycloakScope.Companion.READ_WRITE_LIST","location":"authorization/org.modelix.authorization/-keycloak-scope/-companion/-r-e-a-d_-w-r-i-t-e_-l-i-s-t.html","searchKeys":["READ_WRITE_LIST","val READ_WRITE_LIST: Set<KeycloakScope>","org.modelix.authorization.KeycloakScope.Companion.READ_WRITE_LIST"]},{"name":"val REALM: String","description":"org.modelix.authorization.KeycloakUtils.REALM","location":"authorization/org.modelix.authorization/-keycloak-utils/-r-e-a-l-m.html","searchKeys":["REALM","val REALM: String","org.modelix.authorization.KeycloakUtils.REALM"]},{"name":"val REPOSITORY: KeycloakResourceType","description":"org.modelix.authorization.KeycloakResourceType.Companion.REPOSITORY","location":"authorization/org.modelix.authorization/-keycloak-resource-type/-companion/-r-e-p-o-s-i-t-o-r-y.html","searchKeys":["REPOSITORY","val REPOSITORY: KeycloakResourceType","org.modelix.authorization.KeycloakResourceType.Companion.REPOSITORY"]},{"name":"val WRITE: KeycloakScope","description":"org.modelix.authorization.KeycloakScope.Companion.WRITE","location":"authorization/org.modelix.authorization/-keycloak-scope/-companion/-w-r-i-t-e.html","searchKeys":["WRITE","val WRITE: KeycloakScope","org.modelix.authorization.KeycloakScope.Companion.WRITE"]},{"name":"val authzClient: AuthzClient","description":"org.modelix.authorization.KeycloakUtils.authzClient","location":"authorization/org.modelix.authorization/-keycloak-utils/authz-client.html","searchKeys":["authzClient","val authzClient: AuthzClient","org.modelix.authorization.KeycloakUtils.authzClient"]},{"name":"val createByUser: Boolean = false","description":"org.modelix.authorization.KeycloakResourceType.createByUser","location":"authorization/org.modelix.authorization/-keycloak-resource-type/create-by-user.html","searchKeys":["createByUser","val createByUser: Boolean = false","org.modelix.authorization.KeycloakResourceType.createByUser"]},{"name":"val entries: EnumEntries<EPermissionType>","description":"org.modelix.authorization.EPermissionType.entries","location":"authorization/org.modelix.authorization/-e-permission-type/entries.html","searchKeys":["entries","val entries: EnumEntries<EPermissionType>","org.modelix.authorization.EPermissionType.entries"]},{"name":"val includedTypes: Array<out EPermissionType>","description":"org.modelix.authorization.EPermissionType.includedTypes","location":"authorization/org.modelix.authorization/-e-permission-type/included-types.html","searchKeys":["includedTypes","val includedTypes: Array<out EPermissionType>","org.modelix.authorization.EPermissionType.includedTypes"]},{"name":"val jwkProvider: JwkProvider","description":"org.modelix.authorization.KeycloakUtils.jwkProvider","location":"authorization/org.modelix.authorization/-keycloak-utils/jwk-provider.html","searchKeys":["jwkProvider","val jwkProvider: JwkProvider","org.modelix.authorization.KeycloakUtils.jwkProvider"]},{"name":"val jwt: DecodedJWT","description":"org.modelix.authorization.AccessTokenPrincipal.jwt","location":"authorization/org.modelix.authorization/-access-token-principal/jwt.html","searchKeys":["jwt","val jwt: DecodedJWT","org.modelix.authorization.AccessTokenPrincipal.jwt"]},{"name":"val name: String","description":"org.modelix.authorization.KeycloakResource.name","location":"authorization/org.modelix.authorization/-keycloak-resource/name.html","searchKeys":["name","val name: String","org.modelix.authorization.KeycloakResource.name"]},{"name":"val name: String","description":"org.modelix.authorization.KeycloakResourceType.name","location":"authorization/org.modelix.authorization/-keycloak-resource-type/name.html","searchKeys":["name","val name: String","org.modelix.authorization.KeycloakResourceType.name"]},{"name":"val name: String","description":"org.modelix.authorization.KeycloakScope.name","location":"authorization/org.modelix.authorization/-keycloak-scope/name.html","searchKeys":["name","val name: String","org.modelix.authorization.KeycloakScope.name"]},{"name":"val resourceId: String?","description":"org.modelix.authorization.NoPermissionException.resourceId","location":"authorization/org.modelix.authorization/-no-permission-exception/resource-id.html","searchKeys":["resourceId","val resourceId: String?","org.modelix.authorization.NoPermissionException.resourceId"]},{"name":"val scope: String?","description":"org.modelix.authorization.NoPermissionException.scope","location":"authorization/org.modelix.authorization/-no-permission-exception/scope.html","searchKeys":["scope","val scope: String?","org.modelix.authorization.NoPermissionException.scope"]},{"name":"val scopes: Set<KeycloakScope>","description":"org.modelix.authorization.KeycloakResourceType.scopes","location":"authorization/org.modelix.authorization/-keycloak-resource-type/scopes.html","searchKeys":["scopes","val scopes: Set<KeycloakScope>","org.modelix.authorization.KeycloakResourceType.scopes"]},{"name":"val serviceAccountTokenProvider: () -> String","description":"org.modelix.authorization.serviceAccountTokenProvider","location":"authorization/org.modelix.authorization/service-account-token-provider.html","searchKeys":["serviceAccountTokenProvider","val serviceAccountTokenProvider: () -> String","org.modelix.authorization.serviceAccountTokenProvider"]},{"name":"val type: KeycloakResourceType","description":"org.modelix.authorization.KeycloakResource.type","location":"authorization/org.modelix.authorization/-keycloak-resource/type.html","searchKeys":["type","val type: KeycloakResourceType","org.modelix.authorization.KeycloakResource.type"]},{"name":"val user: AccessTokenPrincipal?","description":"org.modelix.authorization.NoPermissionException.user","location":"authorization/org.modelix.authorization/-no-permission-exception/user.html","searchKeys":["user","val user: AccessTokenPrincipal?","org.modelix.authorization.NoPermissionException.user"]},{"name":"abstract fun <T> runTransaction(body: () -> T): T","description":"org.modelix.model.server.store.IStoreClient.runTransaction","location":"model-server/org.modelix.model.server.store/-i-store-client/run-transaction.html","searchKeys":["runTransaction","abstract fun <T> runTransaction(body: () -> T): T","org.modelix.model.server.store.IStoreClient.runTransaction"]},{"name":"abstract fun generateId(key: String): Long","description":"org.modelix.model.server.store.IStoreClient.generateId","location":"model-server/org.modelix.model.server.store/-i-store-client/generate-id.html","searchKeys":["generateId","abstract fun generateId(key: String): Long","org.modelix.model.server.store.IStoreClient.generateId"]},{"name":"abstract fun getAll(): Map<String, String?>","description":"org.modelix.model.server.store.IStoreClient.getAll","location":"model-server/org.modelix.model.server.store/-i-store-client/get-all.html","searchKeys":["getAll","abstract fun getAll(): Map<String, String?>","org.modelix.model.server.store.IStoreClient.getAll"]},{"name":"abstract fun getAll(keys: List<String>): List<String?>","description":"org.modelix.model.server.store.IStoreClient.getAll","location":"model-server/org.modelix.model.server.store/-i-store-client/get-all.html","searchKeys":["getAll","abstract fun getAll(keys: List<String>): List<String?>","org.modelix.model.server.store.IStoreClient.getAll"]},{"name":"abstract fun getAll(keys: Set<String>): Map<String, String?>","description":"org.modelix.model.server.store.IStoreClient.getAll","location":"model-server/org.modelix.model.server.store/-i-store-client/get-all.html","searchKeys":["getAll","abstract fun getAll(keys: Set<String>): Map<String, String?>","org.modelix.model.server.store.IStoreClient.getAll"]},{"name":"abstract fun listen(key: String, listener: IKeyListener)","description":"org.modelix.model.server.store.IStoreClient.listen","location":"model-server/org.modelix.model.server.store/-i-store-client/listen.html","searchKeys":["listen","abstract fun listen(key: String, listener: IKeyListener)","org.modelix.model.server.store.IStoreClient.listen"]},{"name":"abstract fun put(key: String, value: String?, silent: Boolean = false)","description":"org.modelix.model.server.store.IStoreClient.put","location":"model-server/org.modelix.model.server.store/-i-store-client/put.html","searchKeys":["put","abstract fun put(key: String, value: String?, silent: Boolean = false)","org.modelix.model.server.store.IStoreClient.put"]},{"name":"abstract fun putAll(entries: Map<String, String?>, silent: Boolean = false)","description":"org.modelix.model.server.store.IStoreClient.putAll","location":"model-server/org.modelix.model.server.store/-i-store-client/put-all.html","searchKeys":["putAll","abstract fun putAll(entries: Map<String, String?>, silent: Boolean = false)","org.modelix.model.server.store.IStoreClient.putAll"]},{"name":"abstract fun removeListener(key: String, listener: IKeyListener)","description":"org.modelix.model.server.store.IStoreClient.removeListener","location":"model-server/org.modelix.model.server.store/-i-store-client/remove-listener.html","searchKeys":["removeListener","abstract fun removeListener(key: String, listener: IKeyListener)","org.modelix.model.server.store.IStoreClient.removeListener"]},{"name":"abstract operator fun get(key: String): String?","description":"org.modelix.model.server.store.IStoreClient.get","location":"model-server/org.modelix.model.server.store/-i-store-client/get.html","searchKeys":["get","abstract operator fun get(key: String): String?","org.modelix.model.server.store.IStoreClient.get"]},{"name":"class ChangeNotifier(val store: IStoreClient)","description":"org.modelix.model.server.store.ChangeNotifier","location":"model-server/org.modelix.model.server.store/-change-notifier/index.html","searchKeys":["ChangeNotifier","class ChangeNotifier(val store: IStoreClient)","org.modelix.model.server.store.ChangeNotifier"]},{"name":"class ClientIdProcessor : EntryProcessor<String?, String?, Long> ","description":"org.modelix.model.server.store.ClientIdProcessor","location":"model-server/org.modelix.model.server.store/-client-id-processor/index.html","searchKeys":["ClientIdProcessor","class ClientIdProcessor : EntryProcessor<String?, String?, Long> ","org.modelix.model.server.store.ClientIdProcessor"]},{"name":"class ContainmentData(val parent: Long, val role: String?, val index: Int)","description":"org.modelix.model.server.handlers.ContainmentData","location":"model-server/org.modelix.model.server.handlers/-containment-data/index.html","searchKeys":["ContainmentData","class ContainmentData(val parent: Long, val role: String?, val index: Int)","org.modelix.model.server.handlers.ContainmentData"]},{"name":"class ContentExplorer(client: IModelClient, repoManager: RepositoriesManager)","description":"org.modelix.model.server.handlers.ContentExplorer","location":"model-server/org.modelix.model.server.handlers/-content-explorer/index.html","searchKeys":["ContentExplorer","class ContentExplorer(client: IModelClient, repoManager: RepositoriesManager)","org.modelix.model.server.handlers.ContentExplorer"]},{"name":"class DeprecatedLightModelServer(val client: LocalModelClient)","description":"org.modelix.model.server.handlers.DeprecatedLightModelServer","location":"model-server/org.modelix.model.server.handlers/-deprecated-light-model-server/index.html","searchKeys":["DeprecatedLightModelServer","class DeprecatedLightModelServer(val client: LocalModelClient)","org.modelix.model.server.handlers.DeprecatedLightModelServer"]},{"name":"class FileConverter : IStringConverter<File?> ","description":"org.modelix.model.server.FileConverter","location":"model-server/org.modelix.model.server/-file-converter/index.html","searchKeys":["FileConverter","class FileConverter : IStringConverter<File?> ","org.modelix.model.server.FileConverter"]},{"name":"class HistoryHandler(val client: IModelClient, repositoriesManager: RepositoriesManager)","description":"org.modelix.model.server.handlers.HistoryHandler","location":"model-server/org.modelix.model.server.handlers/-history-handler/index.html","searchKeys":["HistoryHandler","class HistoryHandler(val client: IModelClient, repositoriesManager: RepositoriesManager)","org.modelix.model.server.handlers.HistoryHandler"]},{"name":"class IgniteStoreClient(jdbcConfFile: File? = null, inmemory: Boolean = false) : IStoreClient, AutoCloseable","description":"org.modelix.model.server.store.IgniteStoreClient","location":"model-server/org.modelix.model.server.store/-ignite-store-client/index.html","searchKeys":["IgniteStoreClient","class IgniteStoreClient(jdbcConfFile: File? = null, inmemory: Boolean = false) : IStoreClient, AutoCloseable","org.modelix.model.server.store.IgniteStoreClient"]},{"name":"class InMemoryStoreClient : IStoreClient","description":"org.modelix.model.server.store.InMemoryStoreClient","location":"model-server/org.modelix.model.server.store/-in-memory-store-client/index.html","searchKeys":["InMemoryStoreClient","class InMemoryStoreClient : IStoreClient","org.modelix.model.server.store.InMemoryStoreClient"]},{"name":"class KeyValueLikeModelServer(val repositoriesManager: RepositoriesManager)","description":"org.modelix.model.server.handlers.KeyValueLikeModelServer","location":"model-server/org.modelix.model.server.handlers/-key-value-like-model-server/index.html","searchKeys":["KeyValueLikeModelServer","class KeyValueLikeModelServer(val repositoriesManager: RepositoriesManager)","org.modelix.model.server.handlers.KeyValueLikeModelServer"]},{"name":"class LightModelServer(val client: LocalModelClient)","description":"org.modelix.model.server.handlers.LightModelServer","location":"model-server/org.modelix.model.server.handlers/-light-model-server/index.html","searchKeys":["LightModelServer","class LightModelServer(val client: LocalModelClient)","org.modelix.model.server.handlers.LightModelServer"]},{"name":"class LocalModelClient(val store: IStoreClient) : IModelClient","description":"org.modelix.model.server.store.LocalModelClient","location":"model-server/org.modelix.model.server.store/-local-model-client/index.html","searchKeys":["LocalModelClient","class LocalModelClient(val store: IStoreClient) : IModelClient","org.modelix.model.server.store.LocalModelClient"]},{"name":"class ModelReplicationServer(val repositoriesManager: RepositoriesManager)","description":"org.modelix.model.server.handlers.ModelReplicationServer","location":"model-server/org.modelix.model.server.handlers/-model-replication-server/index.html","searchKeys":["ModelReplicationServer","class ModelReplicationServer(val repositoriesManager: RepositoriesManager)","org.modelix.model.server.handlers.ModelReplicationServer"]},{"name":"class PageWithMenuBar(val activePage: String, val baseUrl: String) : Template<HTML> ","description":"org.modelix.model.server.templates.PageWithMenuBar","location":"model-server/org.modelix.model.server.templates/-page-with-menu-bar/index.html","searchKeys":["PageWithMenuBar","class PageWithMenuBar(val activePage: String, val baseUrl: String) : Template<HTML> ","org.modelix.model.server.templates.PageWithMenuBar"]},{"name":"class PendingChangeMessages(notifier: (String) -> Unit)","description":"org.modelix.model.server.store.PendingChangeMessages","location":"model-server/org.modelix.model.server.store/-pending-change-messages/index.html","searchKeys":["PendingChangeMessages","class PendingChangeMessages(notifier: (String) -> Unit)","org.modelix.model.server.store.PendingChangeMessages"]},{"name":"class PostgresDialect : BasicJdbcDialect","description":"org.modelix.model.server.store.PostgresDialect","location":"model-server/org.modelix.model.server.store/-postgres-dialect/index.html","searchKeys":["PostgresDialect","class PostgresDialect : BasicJdbcDialect","org.modelix.model.server.store.PostgresDialect"]},{"name":"class RepositoriesManager(val client: LocalModelClient)","description":"org.modelix.model.server.handlers.RepositoriesManager","location":"model-server/org.modelix.model.server.handlers/-repositories-manager/index.html","searchKeys":["RepositoriesManager","class RepositoriesManager(val client: LocalModelClient)","org.modelix.model.server.handlers.RepositoriesManager"]},{"name":"class RepositoryAlreadyExistsException(val name: String) : IllegalStateException","description":"org.modelix.model.server.handlers.RepositoryAlreadyExistsException","location":"model-server/org.modelix.model.server.handlers/-repository-already-exists-exception/index.html","searchKeys":["RepositoryAlreadyExistsException","class RepositoryAlreadyExistsException(val name: String) : IllegalStateException","org.modelix.model.server.handlers.RepositoryAlreadyExistsException"]},{"name":"class RepositoryOverview(repoManager: RepositoriesManager)","description":"org.modelix.model.server.handlers.RepositoryOverview","location":"model-server/org.modelix.model.server.handlers/-repository-overview/index.html","searchKeys":["RepositoryOverview","class RepositoryOverview(repoManager: RepositoriesManager)","org.modelix.model.server.handlers.RepositoryOverview"]},{"name":"const val DEFAULT_PORT: Int = 28101","description":"org.modelix.model.server.Main.DEFAULT_PORT","location":"model-server/org.modelix.model.server/-main/-d-e-f-a-u-l-t_-p-o-r-t.html","searchKeys":["DEFAULT_PORT","const val DEFAULT_PORT: Int = 28101","org.modelix.model.server.Main.DEFAULT_PORT"]},{"name":"const val KEY_PREFIX: String","description":"org.modelix.model.server.handlers.RepositoriesManager.Companion.KEY_PREFIX","location":"model-server/org.modelix.model.server.handlers/-repositories-manager/-companion/-k-e-y_-p-r-e-f-i-x.html","searchKeys":["KEY_PREFIX","const val KEY_PREFIX: String","org.modelix.model.server.handlers.RepositoriesManager.Companion.KEY_PREFIX"]},{"name":"const val LEGACY_SERVER_ID_KEY2: String","description":"org.modelix.model.server.handlers.RepositoriesManager.Companion.LEGACY_SERVER_ID_KEY2","location":"model-server/org.modelix.model.server.handlers/-repositories-manager/-companion/-l-e-g-a-c-y_-s-e-r-v-e-r_-i-d_-k-e-y2.html","searchKeys":["LEGACY_SERVER_ID_KEY2","const val LEGACY_SERVER_ID_KEY2: String","org.modelix.model.server.handlers.RepositoriesManager.Companion.LEGACY_SERVER_ID_KEY2"]},{"name":"const val LEGACY_SERVER_ID_KEY: String","description":"org.modelix.model.server.handlers.RepositoriesManager.Companion.LEGACY_SERVER_ID_KEY","location":"model-server/org.modelix.model.server.handlers/-repositories-manager/-companion/-l-e-g-a-c-y_-s-e-r-v-e-r_-i-d_-k-e-y.html","searchKeys":["LEGACY_SERVER_ID_KEY","const val LEGACY_SERVER_ID_KEY: String","org.modelix.model.server.handlers.RepositoriesManager.Companion.LEGACY_SERVER_ID_KEY"]},{"name":"const val PROTECTED_PREFIX: String","description":"org.modelix.model.server.handlers.KeyValueLikeModelServer.Companion.PROTECTED_PREFIX","location":"model-server/org.modelix.model.server.handlers/-key-value-like-model-server/-companion/-p-r-o-t-e-c-t-e-d_-p-r-e-f-i-x.html","searchKeys":["PROTECTED_PREFIX","const val PROTECTED_PREFIX: String","org.modelix.model.server.handlers.KeyValueLikeModelServer.Companion.PROTECTED_PREFIX"]},{"name":"const val SERVER_ID_KEY: String","description":"org.modelix.model.server.handlers.RepositoriesManager.Companion.SERVER_ID_KEY","location":"model-server/org.modelix.model.server.handlers/-repositories-manager/-companion/-s-e-r-v-e-r_-i-d_-k-e-y.html","searchKeys":["SERVER_ID_KEY","const val SERVER_ID_KEY: String","org.modelix.model.server.handlers.RepositoriesManager.Companion.SERVER_ID_KEY"]},{"name":"constructor()","description":"org.modelix.model.server.FileConverter.FileConverter","location":"model-server/org.modelix.model.server/-file-converter/-file-converter.html","searchKeys":["FileConverter","constructor()","org.modelix.model.server.FileConverter.FileConverter"]},{"name":"constructor()","description":"org.modelix.model.server.store.ClientIdProcessor.ClientIdProcessor","location":"model-server/org.modelix.model.server.store/-client-id-processor/-client-id-processor.html","searchKeys":["ClientIdProcessor","constructor()","org.modelix.model.server.store.ClientIdProcessor.ClientIdProcessor"]},{"name":"constructor()","description":"org.modelix.model.server.store.InMemoryStoreClient.InMemoryStoreClient","location":"model-server/org.modelix.model.server.store/-in-memory-store-client/-in-memory-store-client.html","searchKeys":["InMemoryStoreClient","constructor()","org.modelix.model.server.store.InMemoryStoreClient.InMemoryStoreClient"]},{"name":"constructor()","description":"org.modelix.model.server.store.PostgresDialect.PostgresDialect","location":"model-server/org.modelix.model.server.store/-postgres-dialect/-postgres-dialect.html","searchKeys":["PostgresDialect","constructor()","org.modelix.model.server.store.PostgresDialect.PostgresDialect"]},{"name":"constructor(activePage: String, baseUrl: String)","description":"org.modelix.model.server.templates.PageWithMenuBar.PageWithMenuBar","location":"model-server/org.modelix.model.server.templates/-page-with-menu-bar/-page-with-menu-bar.html","searchKeys":["PageWithMenuBar","constructor(activePage: String, baseUrl: String)","org.modelix.model.server.templates.PageWithMenuBar.PageWithMenuBar"]},{"name":"constructor(client: IModelClient, repoManager: RepositoriesManager)","description":"org.modelix.model.server.handlers.ContentExplorer.ContentExplorer","location":"model-server/org.modelix.model.server.handlers/-content-explorer/-content-explorer.html","searchKeys":["ContentExplorer","constructor(client: IModelClient, repoManager: RepositoriesManager)","org.modelix.model.server.handlers.ContentExplorer.ContentExplorer"]},{"name":"constructor(client: IModelClient, repositoriesManager: RepositoriesManager)","description":"org.modelix.model.server.handlers.HistoryHandler.HistoryHandler","location":"model-server/org.modelix.model.server.handlers/-history-handler/-history-handler.html","searchKeys":["HistoryHandler","constructor(client: IModelClient, repositoriesManager: RepositoriesManager)","org.modelix.model.server.handlers.HistoryHandler.HistoryHandler"]},{"name":"constructor(client: LocalModelClient)","description":"org.modelix.model.server.handlers.DeprecatedLightModelServer.DeprecatedLightModelServer","location":"model-server/org.modelix.model.server.handlers/-deprecated-light-model-server/-deprecated-light-model-server.html","searchKeys":["DeprecatedLightModelServer","constructor(client: LocalModelClient)","org.modelix.model.server.handlers.DeprecatedLightModelServer.DeprecatedLightModelServer"]},{"name":"constructor(client: LocalModelClient)","description":"org.modelix.model.server.handlers.LightModelServer.LightModelServer","location":"model-server/org.modelix.model.server.handlers/-light-model-server/-light-model-server.html","searchKeys":["LightModelServer","constructor(client: LocalModelClient)","org.modelix.model.server.handlers.LightModelServer.LightModelServer"]},{"name":"constructor(client: LocalModelClient)","description":"org.modelix.model.server.handlers.RepositoriesManager.RepositoriesManager","location":"model-server/org.modelix.model.server.handlers/-repositories-manager/-repositories-manager.html","searchKeys":["RepositoriesManager","constructor(client: LocalModelClient)","org.modelix.model.server.handlers.RepositoriesManager.RepositoriesManager"]},{"name":"constructor(expandedNodeIds: Set<String>, expandAll: Boolean)","description":"org.modelix.model.server.handlers.ContentExplorerExpandedNodes.ContentExplorerExpandedNodes","location":"model-server/org.modelix.model.server.handlers/-content-explorer-expanded-nodes/-content-explorer-expanded-nodes.html","searchKeys":["ContentExplorerExpandedNodes","constructor(expandedNodeIds: Set<String>, expandAll: Boolean)","org.modelix.model.server.handlers.ContentExplorerExpandedNodes.ContentExplorerExpandedNodes"]},{"name":"constructor(jdbcConfFile: File? = null, inmemory: Boolean = false)","description":"org.modelix.model.server.store.IgniteStoreClient.IgniteStoreClient","location":"model-server/org.modelix.model.server.store/-ignite-store-client/-ignite-store-client.html","searchKeys":["IgniteStoreClient","constructor(jdbcConfFile: File? = null, inmemory: Boolean = false)","org.modelix.model.server.store.IgniteStoreClient.IgniteStoreClient"]},{"name":"constructor(modelClient: LocalModelClient)","description":"org.modelix.model.server.handlers.ModelReplicationServer.ModelReplicationServer","location":"model-server/org.modelix.model.server.handlers/-model-replication-server/-model-replication-server.html","searchKeys":["ModelReplicationServer","constructor(modelClient: LocalModelClient)","org.modelix.model.server.handlers.ModelReplicationServer.ModelReplicationServer"]},{"name":"constructor(name: String)","description":"org.modelix.model.server.handlers.RepositoryAlreadyExistsException.RepositoryAlreadyExistsException","location":"model-server/org.modelix.model.server.handlers/-repository-already-exists-exception/-repository-already-exists-exception.html","searchKeys":["RepositoryAlreadyExistsException","constructor(name: String)","org.modelix.model.server.handlers.RepositoryAlreadyExistsException.RepositoryAlreadyExistsException"]},{"name":"constructor(notifier: (String) -> Unit)","description":"org.modelix.model.server.store.PendingChangeMessages.PendingChangeMessages","location":"model-server/org.modelix.model.server.store/-pending-change-messages/-pending-change-messages.html","searchKeys":["PendingChangeMessages","constructor(notifier: (String) -> Unit)","org.modelix.model.server.store.PendingChangeMessages.PendingChangeMessages"]},{"name":"constructor(parent: Long, role: String?, index: Int)","description":"org.modelix.model.server.handlers.ContainmentData.ContainmentData","location":"model-server/org.modelix.model.server.handlers/-containment-data/-containment-data.html","searchKeys":["ContainmentData","constructor(parent: Long, role: String?, index: Int)","org.modelix.model.server.handlers.ContainmentData.ContainmentData"]},{"name":"constructor(repoManager: RepositoriesManager)","description":"org.modelix.model.server.handlers.RepositoryOverview.RepositoryOverview","location":"model-server/org.modelix.model.server.handlers/-repository-overview/-repository-overview.html","searchKeys":["RepositoryOverview","constructor(repoManager: RepositoriesManager)","org.modelix.model.server.handlers.RepositoryOverview.RepositoryOverview"]},{"name":"constructor(repositoriesManager: RepositoriesManager)","description":"org.modelix.model.server.handlers.KeyValueLikeModelServer.KeyValueLikeModelServer","location":"model-server/org.modelix.model.server.handlers/-key-value-like-model-server/-key-value-like-model-server.html","searchKeys":["KeyValueLikeModelServer","constructor(repositoriesManager: RepositoriesManager)","org.modelix.model.server.handlers.KeyValueLikeModelServer.KeyValueLikeModelServer"]},{"name":"constructor(repositoriesManager: RepositoriesManager)","description":"org.modelix.model.server.handlers.ModelReplicationServer.ModelReplicationServer","location":"model-server/org.modelix.model.server.handlers/-model-replication-server/-model-replication-server.html","searchKeys":["ModelReplicationServer","constructor(repositoriesManager: RepositoriesManager)","org.modelix.model.server.handlers.ModelReplicationServer.ModelReplicationServer"]},{"name":"constructor(store: IStoreClient)","description":"org.modelix.model.server.store.ChangeNotifier.ChangeNotifier","location":"model-server/org.modelix.model.server.store/-change-notifier/-change-notifier.html","searchKeys":["ChangeNotifier","constructor(store: IStoreClient)","org.modelix.model.server.store.ChangeNotifier.ChangeNotifier"]},{"name":"constructor(store: IStoreClient)","description":"org.modelix.model.server.store.LocalModelClient.LocalModelClient","location":"model-server/org.modelix.model.server.store/-local-model-client/-local-model-client.html","searchKeys":["LocalModelClient","constructor(store: IStoreClient)","org.modelix.model.server.store.LocalModelClient.LocalModelClient"]},{"name":"constructor(storeClient: IStoreClient)","description":"org.modelix.model.server.handlers.ModelReplicationServer.ModelReplicationServer","location":"model-server/org.modelix.model.server.handlers/-model-replication-server/-model-replication-server.html","searchKeys":["ModelReplicationServer","constructor(storeClient: IStoreClient)","org.modelix.model.server.handlers.ModelReplicationServer.ModelReplicationServer"]},{"name":"data class ContentExplorerExpandedNodes(val expandedNodeIds: Set<String>, val expandAll: Boolean)","description":"org.modelix.model.server.handlers.ContentExplorerExpandedNodes","location":"model-server/org.modelix.model.server.handlers/-content-explorer-expanded-nodes/index.html","searchKeys":["ContentExplorerExpandedNodes","data class ContentExplorerExpandedNodes(val expandedNodeIds: Set<String>, val expandAll: Boolean)","org.modelix.model.server.handlers.ContentExplorerExpandedNodes"]},{"name":"fun FlowOrInteractiveOrPhrasingContent.buildHistoryLink(repositoryId: String, branchName: String)","description":"org.modelix.model.server.handlers.buildHistoryLink","location":"model-server/org.modelix.model.server.handlers/build-history-link.html","searchKeys":["buildHistoryLink","fun FlowOrInteractiveOrPhrasingContent.buildHistoryLink(repositoryId: String, branchName: String)","org.modelix.model.server.handlers.buildHistoryLink"]},{"name":"fun IStoreClient.loadDump(file: File): Int","description":"org.modelix.model.server.store.loadDump","location":"model-server/org.modelix.model.server.store/load-dump.html","searchKeys":["loadDump","fun IStoreClient.loadDump(file: File): Int","org.modelix.model.server.store.loadDump"]},{"name":"fun IStoreClient.writeDump(file: File)","description":"org.modelix.model.server.store.writeDump","location":"model-server/org.modelix.model.server.store/write-dump.html","searchKeys":["writeDump","fun IStoreClient.writeDump(file: File)","org.modelix.model.server.store.writeDump"]},{"name":"fun Iterable<Any?>.toJsonArray(): JSONArray","description":"org.modelix.model.server.handlers.toJsonArray","location":"model-server/org.modelix.model.server.handlers/to-json-array.html","searchKeys":["toJsonArray","fun Iterable<Any?>.toJsonArray(): JSONArray","org.modelix.model.server.handlers.toJsonArray"]},{"name":"fun JSONArray.asLongList(): List<Long>","description":"org.modelix.model.server.handlers.asLongList","location":"model-server/org.modelix.model.server.handlers/as-long-list.html","searchKeys":["asLongList","fun JSONArray.asLongList(): List<Long>","org.modelix.model.server.handlers.asLongList"]},{"name":"fun JSONArray.asObjectList(): List<JSONObject>","description":"org.modelix.model.server.handlers.asObjectList","location":"model-server/org.modelix.model.server.handlers/as-object-list.html","searchKeys":["asObjectList","fun JSONArray.asObjectList(): List<JSONObject>","org.modelix.model.server.handlers.asObjectList"]},{"name":"fun JSONObject.arrayEntries(): Map<String, JSONArray>","description":"org.modelix.model.server.handlers.arrayEntries","location":"model-server/org.modelix.model.server.handlers/array-entries.html","searchKeys":["arrayEntries","fun JSONObject.arrayEntries(): Map<String, JSONArray>","org.modelix.model.server.handlers.arrayEntries"]},{"name":"fun JSONObject.entries(): Map<String, Any?>","description":"org.modelix.model.server.handlers.entries","location":"model-server/org.modelix.model.server.handlers/entries.html","searchKeys":["entries","fun JSONObject.entries(): Map<String, Any?>","org.modelix.model.server.handlers.entries"]},{"name":"fun JSONObject.longEntries(): Map<String, Long?>","description":"org.modelix.model.server.handlers.longEntries","location":"model-server/org.modelix.model.server.handlers/long-entries.html","searchKeys":["longEntries","fun JSONObject.longEntries(): Map<String, Long?>","org.modelix.model.server.handlers.longEntries"]},{"name":"fun JSONObject.stringEntries(): Map<String, String?>","description":"org.modelix.model.server.handlers.stringEntries","location":"model-server/org.modelix.model.server.handlers/string-entries.html","searchKeys":["stringEntries","fun JSONObject.stringEntries(): Map<String, String?>","org.modelix.model.server.handlers.stringEntries"]},{"name":"fun addListener(key: String, listener: IKeyListener)","description":"org.modelix.model.server.store.ChangeNotifier.addListener","location":"model-server/org.modelix.model.server.store/-change-notifier/add-listener.html","searchKeys":["addListener","fun addListener(key: String, listener: IKeyListener)","org.modelix.model.server.store.ChangeNotifier.addListener"]},{"name":"fun buildJSONArray(vararg elements: Any?): JSONArray","description":"org.modelix.model.server.handlers.buildJSONArray","location":"model-server/org.modelix.model.server.handlers/build-j-s-o-n-array.html","searchKeys":["buildJSONArray","fun buildJSONArray(vararg elements: Any?): JSONArray","org.modelix.model.server.handlers.buildJSONArray"]},{"name":"fun buildJSONObject(body: JSONObject.() -> Unit): JSONObject","description":"org.modelix.model.server.handlers.buildJSONObject","location":"model-server/org.modelix.model.server.handlers/build-j-s-o-n-object.html","searchKeys":["buildJSONObject","fun buildJSONObject(body: JSONObject.() -> Unit): JSONObject","org.modelix.model.server.handlers.buildJSONObject"]},{"name":"fun collect(rootKey: String): JSONArray","description":"org.modelix.model.server.handlers.KeyValueLikeModelServer.collect","location":"model-server/org.modelix.model.server.handlers/-key-value-like-model-server/collect.html","searchKeys":["collect","fun collect(rootKey: String): JSONArray","org.modelix.model.server.handlers.KeyValueLikeModelServer.collect"]},{"name":"fun computeDelta(versionHash: String, baseVersionHash: String?): Map<String, String>","description":"org.modelix.model.server.handlers.RepositoriesManager.computeDelta","location":"model-server/org.modelix.model.server.handlers/-repositories-manager/compute-delta.html","searchKeys":["computeDelta","fun computeDelta(versionHash: String, baseVersionHash: String?): Map<String, String>","org.modelix.model.server.handlers.RepositoriesManager.computeDelta"]},{"name":"fun createRepository(repositoryId: RepositoryId, userName: String?, useRoleIds: Boolean = true): CLVersion","description":"org.modelix.model.server.handlers.RepositoriesManager.createRepository","location":"model-server/org.modelix.model.server.handlers/-repositories-manager/create-repository.html","searchKeys":["createRepository","fun createRepository(repositoryId: RepositoryId, userName: String?, useRoleIds: Boolean = true): CLVersion","org.modelix.model.server.handlers.RepositoriesManager.createRepository"]},{"name":"fun dispose()","description":"org.modelix.model.server.store.IgniteStoreClient.dispose","location":"model-server/org.modelix.model.server.store/-ignite-store-client/dispose.html","searchKeys":["dispose","fun dispose()","org.modelix.model.server.store.IgniteStoreClient.dispose"]},{"name":"fun entryChanged(key: String)","description":"org.modelix.model.server.store.PendingChangeMessages.entryChanged","location":"model-server/org.modelix.model.server.store/-pending-change-messages/entry-changed.html","searchKeys":["entryChanged","fun entryChanged(key: String)","org.modelix.model.server.store.PendingChangeMessages.entryChanged"]},{"name":"fun flushChangeMessages()","description":"org.modelix.model.server.store.PendingChangeMessages.flushChangeMessages","location":"model-server/org.modelix.model.server.store/-pending-change-messages/flush-change-messages.html","searchKeys":["flushChangeMessages","fun flushChangeMessages()","org.modelix.model.server.store.PendingChangeMessages.flushChangeMessages"]},{"name":"fun generateClientId(repositoryId: RepositoryId): Long","description":"org.modelix.model.server.handlers.RepositoriesManager.generateClientId","location":"model-server/org.modelix.model.server.handlers/-repositories-manager/generate-client-id.html","searchKeys":["generateClientId","fun generateClientId(repositoryId: RepositoryId): Long","org.modelix.model.server.handlers.RepositoriesManager.generateClientId"]},{"name":"fun generateId(idStr: String?): Long","description":"org.modelix.model.server.store.generateId","location":"model-server/org.modelix.model.server.store/generate-id.html","searchKeys":["generateId","fun generateId(idStr: String?): Long","org.modelix.model.server.store.generateId"]},{"name":"fun getBranchNames(repositoryId: RepositoryId): Set<String>","description":"org.modelix.model.server.handlers.RepositoriesManager.getBranchNames","location":"model-server/org.modelix.model.server.handlers/-repositories-manager/get-branch-names.html","searchKeys":["getBranchNames","fun getBranchNames(repositoryId: RepositoryId): Set<String>","org.modelix.model.server.handlers.RepositoriesManager.getBranchNames"]},{"name":"fun getBranches(repositoryId: RepositoryId): Set<BranchReference>","description":"org.modelix.model.server.handlers.RepositoriesManager.getBranches","location":"model-server/org.modelix.model.server.handlers/-repositories-manager/get-branches.html","searchKeys":["getBranches","fun getBranches(repositoryId: RepositoryId): Set<BranchReference>","org.modelix.model.server.handlers.RepositoriesManager.getBranches"]},{"name":"fun getRepositories(): Set<RepositoryId>","description":"org.modelix.model.server.handlers.RepositoriesManager.getRepositories","location":"model-server/org.modelix.model.server.handlers/-repositories-manager/get-repositories.html","searchKeys":["getRepositories","fun getRepositories(): Set<RepositoryId>","org.modelix.model.server.handlers.RepositoriesManager.getRepositories"]},{"name":"fun getStore(): IDeserializingKeyValueStore","description":"org.modelix.model.server.handlers.DeprecatedLightModelServer.getStore","location":"model-server/org.modelix.model.server.handlers/-deprecated-light-model-server/get-store.html","searchKeys":["getStore","fun getStore(): IDeserializingKeyValueStore","org.modelix.model.server.handlers.DeprecatedLightModelServer.getStore"]},{"name":"fun getStore(): IDeserializingKeyValueStore","description":"org.modelix.model.server.handlers.LightModelServer.getStore","location":"model-server/org.modelix.model.server.handlers/-light-model-server/get-store.html","searchKeys":["getStore","fun getStore(): IDeserializingKeyValueStore","org.modelix.model.server.handlers.LightModelServer.getStore"]},{"name":"fun getVersion(branch: BranchReference): CLVersion?","description":"org.modelix.model.server.handlers.RepositoriesManager.getVersion","location":"model-server/org.modelix.model.server.handlers/-repositories-manager/get-version.html","searchKeys":["getVersion","fun getVersion(branch: BranchReference): CLVersion?","org.modelix.model.server.handlers.RepositoriesManager.getVersion"]},{"name":"fun getVersionHash(branch: BranchReference): String?","description":"org.modelix.model.server.handlers.RepositoriesManager.getVersionHash","location":"model-server/org.modelix.model.server.handlers/-repositories-manager/get-version-hash.html","searchKeys":["getVersionHash","fun getVersionHash(branch: BranchReference): String?","org.modelix.model.server.handlers.RepositoriesManager.getVersionHash"]},{"name":"fun init(application: Application)","description":"org.modelix.model.server.handlers.ContentExplorer.init","location":"model-server/org.modelix.model.server.handlers/-content-explorer/init.html","searchKeys":["init","fun init(application: Application)","org.modelix.model.server.handlers.ContentExplorer.init"]},{"name":"fun init(application: Application)","description":"org.modelix.model.server.handlers.DeprecatedLightModelServer.init","location":"model-server/org.modelix.model.server.handlers/-deprecated-light-model-server/init.html","searchKeys":["init","fun init(application: Application)","org.modelix.model.server.handlers.DeprecatedLightModelServer.init"]},{"name":"fun init(application: Application)","description":"org.modelix.model.server.handlers.HistoryHandler.init","location":"model-server/org.modelix.model.server.handlers/-history-handler/init.html","searchKeys":["init","fun init(application: Application)","org.modelix.model.server.handlers.HistoryHandler.init"]},{"name":"fun init(application: Application)","description":"org.modelix.model.server.handlers.KeyValueLikeModelServer.init","location":"model-server/org.modelix.model.server.handlers/-key-value-like-model-server/init.html","searchKeys":["init","fun init(application: Application)","org.modelix.model.server.handlers.KeyValueLikeModelServer.init"]},{"name":"fun init(application: Application)","description":"org.modelix.model.server.handlers.LightModelServer.init","location":"model-server/org.modelix.model.server.handlers/-light-model-server/init.html","searchKeys":["init","fun init(application: Application)","org.modelix.model.server.handlers.LightModelServer.init"]},{"name":"fun init(application: Application)","description":"org.modelix.model.server.handlers.ModelReplicationServer.init","location":"model-server/org.modelix.model.server.handlers/-model-replication-server/init.html","searchKeys":["init","fun init(application: Application)","org.modelix.model.server.handlers.ModelReplicationServer.init"]},{"name":"fun init(application: Application)","description":"org.modelix.model.server.handlers.RepositoryOverview.init","location":"model-server/org.modelix.model.server.handlers/-repository-overview/init.html","searchKeys":["init","fun init(application: Application)","org.modelix.model.server.handlers.RepositoryOverview.init"]},{"name":"fun isHealthy(): Boolean","description":"org.modelix.model.server.handlers.KeyValueLikeModelServer.isHealthy","location":"model-server/org.modelix.model.server.handlers/-key-value-like-model-server/is-healthy.html","searchKeys":["isHealthy","fun isHealthy(): Boolean","org.modelix.model.server.handlers.KeyValueLikeModelServer.isHealthy"]},{"name":"fun jsonNullToJavaNull(value: Any?): Any?","description":"org.modelix.model.server.handlers.jsonNullToJavaNull","location":"model-server/org.modelix.model.server.handlers/json-null-to-java-null.html","searchKeys":["jsonNullToJavaNull","fun jsonNullToJavaNull(value: Any?): Any?","org.modelix.model.server.handlers.jsonNullToJavaNull"]},{"name":"fun main(args: Array<String>)","description":"org.modelix.model.server.Main.main","location":"model-server/org.modelix.model.server/-main/main.html","searchKeys":["main","fun main(args: Array<String>)","org.modelix.model.server.Main.main"]},{"name":"fun maybeInitAndGetSeverId(): String","description":"org.modelix.model.server.handlers.RepositoriesManager.maybeInitAndGetSeverId","location":"model-server/org.modelix.model.server.handlers/-repositories-manager/maybe-init-and-get-sever-id.html","searchKeys":["maybeInitAndGetSeverId","fun maybeInitAndGetSeverId(): String","org.modelix.model.server.handlers.RepositoriesManager.maybeInitAndGetSeverId"]},{"name":"fun mergeChanges(branch: BranchReference, newVersionHash: String): String","description":"org.modelix.model.server.handlers.RepositoriesManager.mergeChanges","location":"model-server/org.modelix.model.server.handlers/-repositories-manager/merge-changes.html","searchKeys":["mergeChanges","fun mergeChanges(branch: BranchReference, newVersionHash: String): String","org.modelix.model.server.handlers.RepositoriesManager.mergeChanges"]},{"name":"fun migrateLegacyRepositoriesList()","description":"org.modelix.model.server.handlers.RepositoriesManager.migrateLegacyRepositoriesList","location":"model-server/org.modelix.model.server.handlers/-repositories-manager/migrate-legacy-repositories-list.html","searchKeys":["migrateLegacyRepositoriesList","fun migrateLegacyRepositoriesList()","org.modelix.model.server.handlers.RepositoriesManager.migrateLegacyRepositoriesList"]},{"name":"fun notifyListeners(key: String)","description":"org.modelix.model.server.store.ChangeNotifier.notifyListeners","location":"model-server/org.modelix.model.server.store/-change-notifier/notify-listeners.html","searchKeys":["notifyListeners","fun notifyListeners(key: String)","org.modelix.model.server.store.ChangeNotifier.notifyListeners"]},{"name":"fun removeBranches(repository: RepositoryId, branchNames: Set<String>)","description":"org.modelix.model.server.handlers.RepositoriesManager.removeBranches","location":"model-server/org.modelix.model.server.handlers/-repositories-manager/remove-branches.html","searchKeys":["removeBranches","fun removeBranches(repository: RepositoryId, branchNames: Set<String>)","org.modelix.model.server.handlers.RepositoriesManager.removeBranches"]},{"name":"fun removeListener(key: String, listener: IKeyListener)","description":"org.modelix.model.server.store.ChangeNotifier.removeListener","location":"model-server/org.modelix.model.server.store/-change-notifier/remove-listener.html","searchKeys":["removeListener","fun removeListener(key: String, listener: IKeyListener)","org.modelix.model.server.store.ChangeNotifier.removeListener"]},{"name":"fun removeRepository(repository: RepositoryId)","description":"org.modelix.model.server.handlers.RepositoriesManager.removeRepository","location":"model-server/org.modelix.model.server.handlers/-repositories-manager/remove-repository.html","searchKeys":["removeRepository","fun removeRepository(repository: RepositoryId)","org.modelix.model.server.handlers.RepositoriesManager.removeRepository"]},{"name":"fun revert(repositoryAndBranch: BranchReference, from: String?, to: String?, author: String?)","description":"org.modelix.model.server.handlers.HistoryHandler.revert","location":"model-server/org.modelix.model.server.handlers/-history-handler/revert.html","searchKeys":["revert","fun revert(repositoryAndBranch: BranchReference, from: String?, to: String?, author: String?)","org.modelix.model.server.handlers.HistoryHandler.revert"]},{"name":"fun setSharedSecret(sharedSecret: String?)","description":"org.modelix.model.server.handlers.KeyValueLikeModelServer.setSharedSecret","location":"model-server/org.modelix.model.server.handlers/-key-value-like-model-server/set-shared-secret.html","searchKeys":["setSharedSecret","fun setSharedSecret(sharedSecret: String?)","org.modelix.model.server.handlers.KeyValueLikeModelServer.setSharedSecret"]},{"name":"interface IStoreClient : AutoCloseable","description":"org.modelix.model.server.store.IStoreClient","location":"model-server/org.modelix.model.server.store/-i-store-client/index.html","searchKeys":["IStoreClient","interface IStoreClient : AutoCloseable","org.modelix.model.server.store.IStoreClient"]},{"name":"object Companion","description":"org.modelix.model.server.handlers.KeyValueLikeModelServer.Companion","location":"model-server/org.modelix.model.server.handlers/-key-value-like-model-server/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.server.handlers.KeyValueLikeModelServer.Companion"]},{"name":"object Companion","description":"org.modelix.model.server.handlers.LightModelServer.Companion","location":"model-server/org.modelix.model.server.handlers/-light-model-server/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.server.handlers.LightModelServer.Companion"]},{"name":"object Companion","description":"org.modelix.model.server.handlers.ModelReplicationServer.Companion","location":"model-server/org.modelix.model.server.handlers/-model-replication-server/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.server.handlers.ModelReplicationServer.Companion"]},{"name":"object Companion","description":"org.modelix.model.server.handlers.RepositoriesManager.Companion","location":"model-server/org.modelix.model.server.handlers/-repositories-manager/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.server.handlers.RepositoriesManager.Companion"]},{"name":"object Companion","description":"org.modelix.model.server.store.InMemoryStoreClient.Companion","location":"model-server/org.modelix.model.server.store/-in-memory-store-client/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.server.store.InMemoryStoreClient.Companion"]},{"name":"object Main","description":"org.modelix.model.server.Main","location":"model-server/org.modelix.model.server/-main/index.html","searchKeys":["Main","object Main","org.modelix.model.server.Main"]},{"name":"open operator override fun get(key: String): String?","description":"org.modelix.model.server.store.IgniteStoreClient.get","location":"model-server/org.modelix.model.server.store/-ignite-store-client/get.html","searchKeys":["get","open operator override fun get(key: String): String?","org.modelix.model.server.store.IgniteStoreClient.get"]},{"name":"open operator override fun get(key: String): String?","description":"org.modelix.model.server.store.InMemoryStoreClient.get","location":"model-server/org.modelix.model.server.store/-in-memory-store-client/get.html","searchKeys":["get","open operator override fun get(key: String): String?","org.modelix.model.server.store.InMemoryStoreClient.get"]},{"name":"open operator override fun get(key: String): String?","description":"org.modelix.model.server.store.LocalModelClient.get","location":"model-server/org.modelix.model.server.store/-local-model-client/get.html","searchKeys":["get","open operator override fun get(key: String): String?","org.modelix.model.server.store.LocalModelClient.get"]},{"name":"open override fun <T> runTransaction(body: () -> T): T","description":"org.modelix.model.server.store.IgniteStoreClient.runTransaction","location":"model-server/org.modelix.model.server.store/-ignite-store-client/run-transaction.html","searchKeys":["runTransaction","open override fun <T> runTransaction(body: () -> T): T","org.modelix.model.server.store.IgniteStoreClient.runTransaction"]},{"name":"open override fun <T> runTransaction(body: () -> T): T","description":"org.modelix.model.server.store.InMemoryStoreClient.runTransaction","location":"model-server/org.modelix.model.server.store/-in-memory-store-client/run-transaction.html","searchKeys":["runTransaction","open override fun <T> runTransaction(body: () -> T): T","org.modelix.model.server.store.InMemoryStoreClient.runTransaction"]},{"name":"open override fun HTML.apply()","description":"org.modelix.model.server.templates.PageWithMenuBar.apply","location":"model-server/org.modelix.model.server.templates/-page-with-menu-bar/apply.html","searchKeys":["apply","open override fun HTML.apply()","org.modelix.model.server.templates.PageWithMenuBar.apply"]},{"name":"open override fun close()","description":"org.modelix.model.server.store.IgniteStoreClient.close","location":"model-server/org.modelix.model.server.store/-ignite-store-client/close.html","searchKeys":["close","open override fun close()","org.modelix.model.server.store.IgniteStoreClient.close"]},{"name":"open override fun close()","description":"org.modelix.model.server.store.InMemoryStoreClient.close","location":"model-server/org.modelix.model.server.store/-in-memory-store-client/close.html","searchKeys":["close","open override fun close()","org.modelix.model.server.store.InMemoryStoreClient.close"]},{"name":"open override fun convert(value: String?): File?","description":"org.modelix.model.server.FileConverter.convert","location":"model-server/org.modelix.model.server/-file-converter/convert.html","searchKeys":["convert","open override fun convert(value: String?): File?","org.modelix.model.server.FileConverter.convert"]},{"name":"open override fun generateId(key: String): Long","description":"org.modelix.model.server.store.IgniteStoreClient.generateId","location":"model-server/org.modelix.model.server.store/-ignite-store-client/generate-id.html","searchKeys":["generateId","open override fun generateId(key: String): Long","org.modelix.model.server.store.IgniteStoreClient.generateId"]},{"name":"open override fun generateId(key: String): Long","description":"org.modelix.model.server.store.InMemoryStoreClient.generateId","location":"model-server/org.modelix.model.server.store/-in-memory-store-client/generate-id.html","searchKeys":["generateId","open override fun generateId(key: String): Long","org.modelix.model.server.store.InMemoryStoreClient.generateId"]},{"name":"open override fun getAll(): Map<String, String?>","description":"org.modelix.model.server.store.IgniteStoreClient.getAll","location":"model-server/org.modelix.model.server.store/-ignite-store-client/get-all.html","searchKeys":["getAll","open override fun getAll(): Map<String, String?>","org.modelix.model.server.store.IgniteStoreClient.getAll"]},{"name":"open override fun getAll(): Map<String, String?>","description":"org.modelix.model.server.store.InMemoryStoreClient.getAll","location":"model-server/org.modelix.model.server.store/-in-memory-store-client/get-all.html","searchKeys":["getAll","open override fun getAll(): Map<String, String?>","org.modelix.model.server.store.InMemoryStoreClient.getAll"]},{"name":"open override fun getAll(keys: List<String>): List<String?>","description":"org.modelix.model.server.store.IgniteStoreClient.getAll","location":"model-server/org.modelix.model.server.store/-ignite-store-client/get-all.html","searchKeys":["getAll","open override fun getAll(keys: List<String>): List<String?>","org.modelix.model.server.store.IgniteStoreClient.getAll"]},{"name":"open override fun getAll(keys: List<String>): List<String?>","description":"org.modelix.model.server.store.InMemoryStoreClient.getAll","location":"model-server/org.modelix.model.server.store/-in-memory-store-client/get-all.html","searchKeys":["getAll","open override fun getAll(keys: List<String>): List<String?>","org.modelix.model.server.store.InMemoryStoreClient.getAll"]},{"name":"open override fun getAll(keys: Set<String>): Map<String, String?>","description":"org.modelix.model.server.store.IgniteStoreClient.getAll","location":"model-server/org.modelix.model.server.store/-ignite-store-client/get-all.html","searchKeys":["getAll","open override fun getAll(keys: Set<String>): Map<String, String?>","org.modelix.model.server.store.IgniteStoreClient.getAll"]},{"name":"open override fun getAll(keys: Set<String>): Map<String, String?>","description":"org.modelix.model.server.store.InMemoryStoreClient.getAll","location":"model-server/org.modelix.model.server.store/-in-memory-store-client/get-all.html","searchKeys":["getAll","open override fun getAll(keys: Set<String>): Map<String, String?>","org.modelix.model.server.store.InMemoryStoreClient.getAll"]},{"name":"open override fun getAll(keys_: Iterable<String>): Map<String, String?>","description":"org.modelix.model.server.store.LocalModelClient.getAll","location":"model-server/org.modelix.model.server.store/-local-model-client/get-all.html","searchKeys":["getAll","open override fun getAll(keys_: Iterable<String>): Map<String, String?>","org.modelix.model.server.store.LocalModelClient.getAll"]},{"name":"open override fun getPendingSize(): Int","description":"org.modelix.model.server.store.LocalModelClient.getPendingSize","location":"model-server/org.modelix.model.server.store/-local-model-client/get-pending-size.html","searchKeys":["getPendingSize","open override fun getPendingSize(): Int","org.modelix.model.server.store.LocalModelClient.getPendingSize"]},{"name":"open override fun hasMerge(): Boolean","description":"org.modelix.model.server.store.PostgresDialect.hasMerge","location":"model-server/org.modelix.model.server.store/-postgres-dialect/has-merge.html","searchKeys":["hasMerge","open override fun hasMerge(): Boolean","org.modelix.model.server.store.PostgresDialect.hasMerge"]},{"name":"open override fun listen(key: String, listener: IKeyListener)","description":"org.modelix.model.server.store.IgniteStoreClient.listen","location":"model-server/org.modelix.model.server.store/-ignite-store-client/listen.html","searchKeys":["listen","open override fun listen(key: String, listener: IKeyListener)","org.modelix.model.server.store.IgniteStoreClient.listen"]},{"name":"open override fun listen(key: String, listener: IKeyListener)","description":"org.modelix.model.server.store.InMemoryStoreClient.listen","location":"model-server/org.modelix.model.server.store/-in-memory-store-client/listen.html","searchKeys":["listen","open override fun listen(key: String, listener: IKeyListener)","org.modelix.model.server.store.InMemoryStoreClient.listen"]},{"name":"open override fun listen(key: String, listener: IKeyListener)","description":"org.modelix.model.server.store.LocalModelClient.listen","location":"model-server/org.modelix.model.server.store/-local-model-client/listen.html","searchKeys":["listen","open override fun listen(key: String, listener: IKeyListener)","org.modelix.model.server.store.LocalModelClient.listen"]},{"name":"open override fun mergeQuery(fullTblName: String, keyCols: Collection<String>, uniqCols: Collection<String>): String","description":"org.modelix.model.server.store.PostgresDialect.mergeQuery","location":"model-server/org.modelix.model.server.store/-postgres-dialect/merge-query.html","searchKeys":["mergeQuery","open override fun mergeQuery(fullTblName: String, keyCols: Collection<String>, uniqCols: Collection<String>): String","org.modelix.model.server.store.PostgresDialect.mergeQuery"]},{"name":"open override fun prefetch(key: String)","description":"org.modelix.model.server.store.LocalModelClient.prefetch","location":"model-server/org.modelix.model.server.store/-local-model-client/prefetch.html","searchKeys":["prefetch","open override fun prefetch(key: String)","org.modelix.model.server.store.LocalModelClient.prefetch"]},{"name":"open override fun process(mutableEntry: MutableEntry<String?, String?>, vararg objects: Any): Long","description":"org.modelix.model.server.store.ClientIdProcessor.process","location":"model-server/org.modelix.model.server.store/-client-id-processor/process.html","searchKeys":["process","open override fun process(mutableEntry: MutableEntry<String?, String?>, vararg objects: Any): Long","org.modelix.model.server.store.ClientIdProcessor.process"]},{"name":"open override fun put(key: String, value: String?)","description":"org.modelix.model.server.store.LocalModelClient.put","location":"model-server/org.modelix.model.server.store/-local-model-client/put.html","searchKeys":["put","open override fun put(key: String, value: String?)","org.modelix.model.server.store.LocalModelClient.put"]},{"name":"open override fun put(key: String, value: String?, silent: Boolean)","description":"org.modelix.model.server.store.IgniteStoreClient.put","location":"model-server/org.modelix.model.server.store/-ignite-store-client/put.html","searchKeys":["put","open override fun put(key: String, value: String?, silent: Boolean)","org.modelix.model.server.store.IgniteStoreClient.put"]},{"name":"open override fun put(key: String, value: String?, silent: Boolean)","description":"org.modelix.model.server.store.InMemoryStoreClient.put","location":"model-server/org.modelix.model.server.store/-in-memory-store-client/put.html","searchKeys":["put","open override fun put(key: String, value: String?, silent: Boolean)","org.modelix.model.server.store.InMemoryStoreClient.put"]},{"name":"open override fun putAll(entries: Map<String, String?>)","description":"org.modelix.model.server.store.LocalModelClient.putAll","location":"model-server/org.modelix.model.server.store/-local-model-client/put-all.html","searchKeys":["putAll","open override fun putAll(entries: Map<String, String?>)","org.modelix.model.server.store.LocalModelClient.putAll"]},{"name":"open override fun putAll(entries: Map<String, String?>, silent: Boolean)","description":"org.modelix.model.server.store.IgniteStoreClient.putAll","location":"model-server/org.modelix.model.server.store/-ignite-store-client/put-all.html","searchKeys":["putAll","open override fun putAll(entries: Map<String, String?>, silent: Boolean)","org.modelix.model.server.store.IgniteStoreClient.putAll"]},{"name":"open override fun putAll(entries: Map<String, String?>, silent: Boolean)","description":"org.modelix.model.server.store.InMemoryStoreClient.putAll","location":"model-server/org.modelix.model.server.store/-in-memory-store-client/put-all.html","searchKeys":["putAll","open override fun putAll(entries: Map<String, String?>, silent: Boolean)","org.modelix.model.server.store.InMemoryStoreClient.putAll"]},{"name":"open override fun removeListener(key: String, listener: IKeyListener)","description":"org.modelix.model.server.store.IgniteStoreClient.removeListener","location":"model-server/org.modelix.model.server.store/-ignite-store-client/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(key: String, listener: IKeyListener)","org.modelix.model.server.store.IgniteStoreClient.removeListener"]},{"name":"open override fun removeListener(key: String, listener: IKeyListener)","description":"org.modelix.model.server.store.InMemoryStoreClient.removeListener","location":"model-server/org.modelix.model.server.store/-in-memory-store-client/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(key: String, listener: IKeyListener)","org.modelix.model.server.store.InMemoryStoreClient.removeListener"]},{"name":"open override fun removeListener(key: String, listener: IKeyListener)","description":"org.modelix.model.server.store.LocalModelClient.removeListener","location":"model-server/org.modelix.model.server.store/-local-model-client/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(key: String, listener: IKeyListener)","org.modelix.model.server.store.LocalModelClient.removeListener"]},{"name":"open override val asyncStore: IKeyValueStore","description":"org.modelix.model.server.store.LocalModelClient.asyncStore","location":"model-server/org.modelix.model.server.store/-local-model-client/async-store.html","searchKeys":["asyncStore","open override val asyncStore: IKeyValueStore","org.modelix.model.server.store.LocalModelClient.asyncStore"]},{"name":"open override val clientId: Int","description":"org.modelix.model.server.store.LocalModelClient.clientId","location":"model-server/org.modelix.model.server.store/-local-model-client/client-id.html","searchKeys":["clientId","open override val clientId: Int","org.modelix.model.server.store.LocalModelClient.clientId"]},{"name":"open override val idGenerator: IIdGenerator","description":"org.modelix.model.server.store.LocalModelClient.idGenerator","location":"model-server/org.modelix.model.server.store/-local-model-client/id-generator.html","searchKeys":["idGenerator","open override val idGenerator: IIdGenerator","org.modelix.model.server.store.LocalModelClient.idGenerator"]},{"name":"open override val storeCache: IDeserializingKeyValueStore","description":"org.modelix.model.server.store.LocalModelClient.storeCache","location":"model-server/org.modelix.model.server.store/-local-model-client/store-cache.html","searchKeys":["storeCache","open override val storeCache: IDeserializingKeyValueStore","org.modelix.model.server.store.LocalModelClient.storeCache"]},{"name":"suspend fun pollEntry(storeClient: IStoreClient, key: String, lastKnownValue: String?): String?","description":"org.modelix.model.server.store.pollEntry","location":"model-server/org.modelix.model.server.store/poll-entry.html","searchKeys":["pollEntry","suspend fun pollEntry(storeClient: IStoreClient, key: String, lastKnownValue: String?): String?","org.modelix.model.server.store.pollEntry"]},{"name":"suspend fun pollVersionHash(branch: BranchReference, lastKnown: String?): String","description":"org.modelix.model.server.handlers.RepositoriesManager.pollVersionHash","location":"model-server/org.modelix.model.server.handlers/-repositories-manager/poll-version-hash.html","searchKeys":["pollVersionHash","suspend fun pollVersionHash(branch: BranchReference, lastKnown: String?): String","org.modelix.model.server.handlers.RepositoriesManager.pollVersionHash"]},{"name":"typealias CallContext = PipelineContext<Unit, ApplicationCall>","description":"org.modelix.model.server.handlers.CallContext","location":"model-server/org.modelix.model.server.handlers/-call-context/index.html","searchKeys":["CallContext","typealias CallContext = PipelineContext<Unit, ApplicationCall>","org.modelix.model.server.handlers.CallContext"]},{"name":"val HASH_PATTERN: Pattern","description":"org.modelix.model.server.handlers.KeyValueLikeModelServer.Companion.HASH_PATTERN","location":"model-server/org.modelix.model.server.handlers/-key-value-like-model-server/-companion/-h-a-s-h_-p-a-t-t-e-r-n.html","searchKeys":["HASH_PATTERN","val HASH_PATTERN: Pattern","org.modelix.model.server.handlers.KeyValueLikeModelServer.Companion.HASH_PATTERN"]},{"name":"val HEALTH_KEY: String","description":"org.modelix.model.server.handlers.KeyValueLikeModelServer.Companion.HEALTH_KEY","location":"model-server/org.modelix.model.server.handlers/-key-value-like-model-server/-companion/-h-e-a-l-t-h_-k-e-y.html","searchKeys":["HEALTH_KEY","val HEALTH_KEY: String","org.modelix.model.server.handlers.KeyValueLikeModelServer.Companion.HEALTH_KEY"]},{"name":"val MODEL_SERVER_ENTRY: KeycloakResourceType","description":"org.modelix.model.server.handlers.MODEL_SERVER_ENTRY","location":"model-server/org.modelix.model.server.handlers/-m-o-d-e-l_-s-e-r-v-e-r_-e-n-t-r-y.html","searchKeys":["MODEL_SERVER_ENTRY","val MODEL_SERVER_ENTRY: KeycloakResourceType","org.modelix.model.server.handlers.MODEL_SERVER_ENTRY"]},{"name":"val PERMISSION_MODEL_SERVER: KeycloakResource","description":"org.modelix.model.server.handlers.PERMISSION_MODEL_SERVER","location":"model-server/org.modelix.model.server.handlers/-p-e-r-m-i-s-s-i-o-n_-m-o-d-e-l_-s-e-r-v-e-r.html","searchKeys":["PERMISSION_MODEL_SERVER","val PERMISSION_MODEL_SERVER: KeycloakResource","org.modelix.model.server.handlers.PERMISSION_MODEL_SERVER"]},{"name":"val activePage: String","description":"org.modelix.model.server.templates.PageWithMenuBar.activePage","location":"model-server/org.modelix.model.server.templates/-page-with-menu-bar/active-page.html","searchKeys":["activePage","val activePage: String","org.modelix.model.server.templates.PageWithMenuBar.activePage"]},{"name":"val baseUrl: String","description":"org.modelix.model.server.templates.PageWithMenuBar.baseUrl","location":"model-server/org.modelix.model.server.templates/-page-with-menu-bar/base-url.html","searchKeys":["baseUrl","val baseUrl: String","org.modelix.model.server.templates.PageWithMenuBar.baseUrl"]},{"name":"val bodyContent: Placeholder<FlowContent>","description":"org.modelix.model.server.templates.PageWithMenuBar.bodyContent","location":"model-server/org.modelix.model.server.templates/-page-with-menu-bar/body-content.html","searchKeys":["bodyContent","val bodyContent: Placeholder<FlowContent>","org.modelix.model.server.templates.PageWithMenuBar.bodyContent"]},{"name":"val client: IModelClient","description":"org.modelix.model.server.handlers.HistoryHandler.client","location":"model-server/org.modelix.model.server.handlers/-history-handler/client.html","searchKeys":["client","val client: IModelClient","org.modelix.model.server.handlers.HistoryHandler.client"]},{"name":"val client: LocalModelClient","description":"org.modelix.model.server.handlers.DeprecatedLightModelServer.client","location":"model-server/org.modelix.model.server.handlers/-deprecated-light-model-server/client.html","searchKeys":["client","val client: LocalModelClient","org.modelix.model.server.handlers.DeprecatedLightModelServer.client"]},{"name":"val client: LocalModelClient","description":"org.modelix.model.server.handlers.LightModelServer.client","location":"model-server/org.modelix.model.server.handlers/-light-model-server/client.html","searchKeys":["client","val client: LocalModelClient","org.modelix.model.server.handlers.LightModelServer.client"]},{"name":"val client: LocalModelClient","description":"org.modelix.model.server.handlers.RepositoriesManager.client","location":"model-server/org.modelix.model.server.handlers/-repositories-manager/client.html","searchKeys":["client","val client: LocalModelClient","org.modelix.model.server.handlers.RepositoriesManager.client"]},{"name":"val expandAll: Boolean","description":"org.modelix.model.server.handlers.ContentExplorerExpandedNodes.expandAll","location":"model-server/org.modelix.model.server.handlers/-content-explorer-expanded-nodes/expand-all.html","searchKeys":["expandAll","val expandAll: Boolean","org.modelix.model.server.handlers.ContentExplorerExpandedNodes.expandAll"]},{"name":"val expandedNodeIds: Set<String>","description":"org.modelix.model.server.handlers.ContentExplorerExpandedNodes.expandedNodeIds","location":"model-server/org.modelix.model.server.handlers/-content-explorer-expanded-nodes/expanded-node-ids.html","searchKeys":["expandedNodeIds","val expandedNodeIds: Set<String>","org.modelix.model.server.handlers.ContentExplorerExpandedNodes.expandedNodeIds"]},{"name":"val headContent: Placeholder<HEAD>","description":"org.modelix.model.server.templates.PageWithMenuBar.headContent","location":"model-server/org.modelix.model.server.templates/-page-with-menu-bar/head-content.html","searchKeys":["headContent","val headContent: Placeholder<HEAD>","org.modelix.model.server.templates.PageWithMenuBar.headContent"]},{"name":"val index: Int","description":"org.modelix.model.server.handlers.ContainmentData.index","location":"model-server/org.modelix.model.server.handlers/-containment-data/--index--.html","searchKeys":["index","val index: Int","org.modelix.model.server.handlers.ContainmentData.index"]},{"name":"val name: String","description":"org.modelix.model.server.handlers.RepositoryAlreadyExistsException.name","location":"model-server/org.modelix.model.server.handlers/-repository-already-exists-exception/name.html","searchKeys":["name","val name: String","org.modelix.model.server.handlers.RepositoryAlreadyExistsException.name"]},{"name":"val parent: Long","description":"org.modelix.model.server.handlers.ContainmentData.parent","location":"model-server/org.modelix.model.server.handlers/-containment-data/parent.html","searchKeys":["parent","val parent: Long","org.modelix.model.server.handlers.ContainmentData.parent"]},{"name":"val repositoriesManager: RepositoriesManager","description":"org.modelix.model.server.handlers.KeyValueLikeModelServer.repositoriesManager","location":"model-server/org.modelix.model.server.handlers/-key-value-like-model-server/repositories-manager.html","searchKeys":["repositoriesManager","val repositoriesManager: RepositoriesManager","org.modelix.model.server.handlers.KeyValueLikeModelServer.repositoriesManager"]},{"name":"val repositoriesManager: RepositoriesManager","description":"org.modelix.model.server.handlers.ModelReplicationServer.repositoriesManager","location":"model-server/org.modelix.model.server.handlers/-model-replication-server/repositories-manager.html","searchKeys":["repositoriesManager","val repositoriesManager: RepositoriesManager","org.modelix.model.server.handlers.ModelReplicationServer.repositoriesManager"]},{"name":"val role: String?","description":"org.modelix.model.server.handlers.ContainmentData.role","location":"model-server/org.modelix.model.server.handlers/-containment-data/role.html","searchKeys":["role","val role: String?","org.modelix.model.server.handlers.ContainmentData.role"]},{"name":"val store: IStoreClient","description":"org.modelix.model.server.store.ChangeNotifier.store","location":"model-server/org.modelix.model.server.store/-change-notifier/store.html","searchKeys":["store","val store: IStoreClient","org.modelix.model.server.store.ChangeNotifier.store"]},{"name":"val store: IStoreClient","description":"org.modelix.model.server.store.LocalModelClient.store","location":"model-server/org.modelix.model.server.store/-local-model-client/store.html","searchKeys":["store","val store: IStoreClient","org.modelix.model.server.store.LocalModelClient.store"]},{"name":"val storeClient: IStoreClient","description":"org.modelix.model.server.handlers.KeyValueLikeModelServer.storeClient","location":"model-server/org.modelix.model.server.handlers/-key-value-like-model-server/store-client.html","searchKeys":["storeClient","val storeClient: IStoreClient","org.modelix.model.server.handlers.KeyValueLikeModelServer.storeClient"]},{"name":"abstract class AbstractOperation : IOperation","description":"org.modelix.model.operations.AbstractOperation","location":"model-datastructure/org.modelix.model.operations/-abstract-operation/index.html","searchKeys":["AbstractOperation","abstract class AbstractOperation : IOperation","org.modelix.model.operations.AbstractOperation"]},{"name":"abstract class CPHamtNode : IKVValue","description":"org.modelix.model.persistent.CPHamtNode","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/index.html","searchKeys":["CPHamtNode","abstract class CPHamtNode : IKVValue","org.modelix.model.persistent.CPHamtNode"]},{"name":"abstract class CPNodeRef","description":"org.modelix.model.persistent.CPNodeRef","location":"model-datastructure/org.modelix.model.persistent/-c-p-node-ref/index.html","searchKeys":["CPNodeRef","abstract class CPNodeRef","org.modelix.model.persistent.CPNodeRef"]},{"name":"abstract class IndirectObjectStore : IDeserializingKeyValueStore","description":"org.modelix.model.lazy.IndirectObjectStore","location":"model-datastructure/org.modelix.model.lazy/-indirect-object-store/index.html","searchKeys":["IndirectObjectStore","abstract class IndirectObjectStore : IDeserializingKeyValueStore","org.modelix.model.lazy.IndirectObjectStore"]},{"name":"abstract fun <I, O> map(input_: Iterable<I>, f: (I) -> IBulkQuery.Value<O>): IBulkQuery.Value<List<O>>","description":"org.modelix.model.lazy.IBulkQuery.map","location":"model-datastructure/org.modelix.model.lazy/-i-bulk-query/map.html","searchKeys":["map","abstract fun <I, O> map(input_: Iterable<I>, f: (I) -> IBulkQuery.Value<O>): IBulkQuery.Value<List<O>>","org.modelix.model.lazy.IBulkQuery.map"]},{"name":"abstract fun <R> map(handler: (T) -> R): IBulkQuery.Value<R>","description":"org.modelix.model.lazy.IBulkQuery.Value.map","location":"model-datastructure/org.modelix.model.lazy/-i-bulk-query/-value/map.html","searchKeys":["map","abstract fun <R> map(handler: (T) -> R): IBulkQuery.Value<R>","org.modelix.model.lazy.IBulkQuery.Value.map"]},{"name":"abstract fun <R> mapBulk(handler: (T) -> IBulkQuery.Value<R>): IBulkQuery.Value<R>","description":"org.modelix.model.lazy.IBulkQuery.Value.mapBulk","location":"model-datastructure/org.modelix.model.lazy/-i-bulk-query/-value/map-bulk.html","searchKeys":["mapBulk","abstract fun <R> mapBulk(handler: (T) -> IBulkQuery.Value<R>): IBulkQuery.Value<R>","org.modelix.model.lazy.IBulkQuery.Value.mapBulk"]},{"name":"abstract fun <T> constant(value: T): IBulkQuery.Value<T>","description":"org.modelix.model.lazy.IBulkQuery.constant","location":"model-datastructure/org.modelix.model.lazy/-i-bulk-query/constant.html","searchKeys":["constant","abstract fun <T> constant(value: T): IBulkQuery.Value<T>","org.modelix.model.lazy.IBulkQuery.constant"]},{"name":"abstract fun <T> getAll(hash: Iterable<String>, deserializer: (String, String) -> T): Iterable<T>","description":"org.modelix.model.lazy.IDeserializingKeyValueStore.getAll","location":"model-datastructure/org.modelix.model.lazy/-i-deserializing-key-value-store/get-all.html","searchKeys":["getAll","abstract fun <T> getAll(hash: Iterable<String>, deserializer: (String, String) -> T): Iterable<T>","org.modelix.model.lazy.IDeserializingKeyValueStore.getAll"]},{"name":"abstract fun apply(transaction: IWriteTransaction, store: IDeserializingKeyValueStore): IAppliedOperation","description":"org.modelix.model.operations.IOperation.apply","location":"model-datastructure/org.modelix.model.operations/-i-operation/apply.html","searchKeys":["apply","abstract fun apply(transaction: IWriteTransaction, store: IDeserializingKeyValueStore): IAppliedOperation","org.modelix.model.operations.IOperation.apply"]},{"name":"abstract fun calculateSize(bulkQuery: IBulkQuery): IBulkQuery.Value<Long>","description":"org.modelix.model.persistent.CPHamtNode.calculateSize","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/calculate-size.html","searchKeys":["calculateSize","abstract fun calculateSize(bulkQuery: IBulkQuery): IBulkQuery.Value<Long>","org.modelix.model.persistent.CPHamtNode.calculateSize"]},{"name":"abstract fun captureIntend(tree: ITree, store: IDeserializingKeyValueStore): IOperationIntend","description":"org.modelix.model.operations.IOperation.captureIntend","location":"model-datastructure/org.modelix.model.operations/-i-operation/capture-intend.html","searchKeys":["captureIntend","abstract fun captureIntend(tree: ITree, store: IDeserializingKeyValueStore): IOperationIntend","org.modelix.model.operations.IOperation.captureIntend"]},{"name":"abstract fun changed(key: String, value: String?)","description":"org.modelix.model.IKeyListener.changed","location":"model-datastructure/org.modelix.model/-i-key-listener/changed.html","searchKeys":["changed","abstract fun changed(key: String, value: String?)","org.modelix.model.IKeyListener.changed"]},{"name":"abstract fun deserialize(serialized: String): E","description":"org.modelix.model.persistent.OperationSerializer.Serializer.deserialize","location":"model-datastructure/org.modelix.model.persistent/-operation-serializer/-serializer/deserialize.html","searchKeys":["deserialize","abstract fun deserialize(serialized: String): E","org.modelix.model.persistent.OperationSerializer.Serializer.deserialize"]},{"name":"abstract fun entryAdded(key: Long, value: KVEntryReference<CPNode>?)","description":"org.modelix.model.persistent.CPHamtNode.IChangeVisitor.entryAdded","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/-i-change-visitor/entry-added.html","searchKeys":["entryAdded","abstract fun entryAdded(key: Long, value: KVEntryReference<CPNode>?)","org.modelix.model.persistent.CPHamtNode.IChangeVisitor.entryAdded"]},{"name":"abstract fun entryChanged(key: Long, oldValue: KVEntryReference<CPNode>?, newValue: KVEntryReference<CPNode>?)","description":"org.modelix.model.persistent.CPHamtNode.IChangeVisitor.entryChanged","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/-i-change-visitor/entry-changed.html","searchKeys":["entryChanged","abstract fun entryChanged(key: Long, oldValue: KVEntryReference<CPNode>?, newValue: KVEntryReference<CPNode>?)","org.modelix.model.persistent.CPHamtNode.IChangeVisitor.entryChanged"]},{"name":"abstract fun entryRemoved(key: Long, value: KVEntryReference<CPNode>?)","description":"org.modelix.model.persistent.CPHamtNode.IChangeVisitor.entryRemoved","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/-i-change-visitor/entry-removed.html","searchKeys":["entryRemoved","abstract fun entryRemoved(key: Long, value: KVEntryReference<CPNode>?)","org.modelix.model.persistent.CPHamtNode.IChangeVisitor.entryRemoved"]},{"name":"abstract fun execute(): T","description":"org.modelix.model.lazy.IBulkQuery.Value.execute","location":"model-datastructure/org.modelix.model.lazy/-i-bulk-query/-value/execute.html","searchKeys":["execute","abstract fun execute(): T","org.modelix.model.lazy.IBulkQuery.Value.execute"]},{"name":"abstract fun get(key: Long, shift: Int, bulkQuery: IBulkQuery): IBulkQuery.Value<KVEntryReference<CPNode>?>","description":"org.modelix.model.persistent.CPHamtNode.get","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/get.html","searchKeys":["get","abstract fun get(key: Long, shift: Int, bulkQuery: IBulkQuery): IBulkQuery.Value<KVEntryReference<CPNode>?>","org.modelix.model.persistent.CPHamtNode.get"]},{"name":"abstract fun getAll(keys: Iterable<String>): Map<String, String?>","description":"org.modelix.model.IKeyValueStore.getAll","location":"model-datastructure/org.modelix.model/-i-key-value-store/get-all.html","searchKeys":["getAll","abstract fun getAll(keys: Iterable<String>): Map<String, String?>","org.modelix.model.IKeyValueStore.getAll"]},{"name":"abstract fun getAncestors(nodeIds: Iterable<Long>, includeSelf: Boolean): Set<Long>","description":"org.modelix.model.lazy.IBulkTree.getAncestors","location":"model-datastructure/org.modelix.model.lazy/-i-bulk-tree/get-ancestors.html","searchKeys":["getAncestors","abstract fun getAncestors(nodeIds: Iterable<Long>, includeSelf: Boolean): Set<Long>","org.modelix.model.lazy.IBulkTree.getAncestors"]},{"name":"abstract fun getContentHash(): String","description":"org.modelix.model.IVersion.getContentHash","location":"model-datastructure/org.modelix.model/-i-version/get-content-hash.html","searchKeys":["getContentHash","abstract fun getContentHash(): String","org.modelix.model.IVersion.getContentHash"]},{"name":"abstract fun getDescendants(root: Long, includeSelf: Boolean): Iterable<CLNode>","description":"org.modelix.model.lazy.IBulkTree.getDescendants","location":"model-datastructure/org.modelix.model.lazy/-i-bulk-tree/get-descendants.html","searchKeys":["getDescendants","abstract fun getDescendants(root: Long, includeSelf: Boolean): Iterable<CLNode>","org.modelix.model.lazy.IBulkTree.getDescendants"]},{"name":"abstract fun getDescendants(roots: Iterable<Long>, includeSelf: Boolean): Iterable<CLNode>","description":"org.modelix.model.lazy.IBulkTree.getDescendants","location":"model-datastructure/org.modelix.model.lazy/-i-bulk-tree/get-descendants.html","searchKeys":["getDescendants","abstract fun getDescendants(roots: Iterable<Long>, includeSelf: Boolean): Iterable<CLNode>","org.modelix.model.lazy.IBulkTree.getDescendants"]},{"name":"abstract fun getDeserializer(): (String) -> E","description":"org.modelix.model.lazy.IKVEntryReference.getDeserializer","location":"model-datastructure/org.modelix.model.lazy/-i-k-v-entry-reference/get-deserializer.html","searchKeys":["getDeserializer","abstract fun getDeserializer(): (String) -> E","org.modelix.model.lazy.IKVEntryReference.getDeserializer"]},{"name":"abstract fun getDeserializer(): (String) -> IKVValue","description":"org.modelix.model.persistent.IKVValue.getDeserializer","location":"model-datastructure/org.modelix.model.persistent/-i-k-v-value/get-deserializer.html","searchKeys":["getDeserializer","abstract fun getDeserializer(): (String) -> IKVValue","org.modelix.model.persistent.IKVValue.getDeserializer"]},{"name":"abstract fun getHash(): String","description":"org.modelix.model.lazy.IKVEntryReference.getHash","location":"model-datastructure/org.modelix.model.lazy/-i-k-v-entry-reference/get-hash.html","searchKeys":["getHash","abstract fun getHash(): String","org.modelix.model.lazy.IKVEntryReference.getHash"]},{"name":"abstract fun getOriginalOp(): IOperation","description":"org.modelix.model.operations.IAppliedOperation.getOriginalOp","location":"model-datastructure/org.modelix.model.operations/-i-applied-operation/get-original-op.html","searchKeys":["getOriginalOp","abstract fun getOriginalOp(): IOperation","org.modelix.model.operations.IAppliedOperation.getOriginalOp"]},{"name":"abstract fun getOriginalOp(): IOperation","description":"org.modelix.model.operations.IOperationIntend.getOriginalOp","location":"model-datastructure/org.modelix.model.operations/-i-operation-intend/get-original-op.html","searchKeys":["getOriginalOp","abstract fun getOriginalOp(): IOperation","org.modelix.model.operations.IOperationIntend.getOriginalOp"]},{"name":"abstract fun getPendingSize(): Int","description":"org.modelix.model.IKeyValueStore.getPendingSize","location":"model-datastructure/org.modelix.model/-i-key-value-store/get-pending-size.html","searchKeys":["getPendingSize","abstract fun getPendingSize(): Int","org.modelix.model.IKeyValueStore.getPendingSize"]},{"name":"abstract fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","description":"org.modelix.model.operations.IOperation.getReferencedEntries","location":"model-datastructure/org.modelix.model.operations/-i-operation/get-referenced-entries.html","searchKeys":["getReferencedEntries","abstract fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","org.modelix.model.operations.IOperation.getReferencedEntries"]},{"name":"abstract fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","description":"org.modelix.model.persistent.IKVValue.getReferencedEntries","location":"model-datastructure/org.modelix.model.persistent/-i-k-v-value/get-referenced-entries.html","searchKeys":["getReferencedEntries","abstract fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","org.modelix.model.persistent.IKVValue.getReferencedEntries"]},{"name":"abstract fun getStore(): IDeserializingKeyValueStore","description":"org.modelix.model.lazy.IndirectObjectStore.getStore","location":"model-datastructure/org.modelix.model.lazy/-indirect-object-store/get-store.html","searchKeys":["getStore","abstract fun getStore(): IDeserializingKeyValueStore","org.modelix.model.lazy.IndirectObjectStore.getStore"]},{"name":"abstract fun getTree(): ITree","description":"org.modelix.model.IVersion.getTree","location":"model-datastructure/org.modelix.model/-i-version/get-tree.html","searchKeys":["getTree","abstract fun getTree(): ITree","org.modelix.model.IVersion.getTree"]},{"name":"abstract fun getValue(store: IDeserializingKeyValueStore): E","description":"org.modelix.model.lazy.IKVEntryReference.getValue","location":"model-datastructure/org.modelix.model.lazy/-i-k-v-entry-reference/get-value.html","searchKeys":["getValue","abstract fun getValue(store: IDeserializingKeyValueStore): E","org.modelix.model.lazy.IKVEntryReference.getValue"]},{"name":"abstract fun getWrappedTree(): ITree","description":"org.modelix.model.lazy.ITreeWrapper.getWrappedTree","location":"model-datastructure/org.modelix.model.lazy/-i-tree-wrapper/get-wrapped-tree.html","searchKeys":["getWrappedTree","abstract fun getWrappedTree(): ITree","org.modelix.model.lazy.ITreeWrapper.getWrappedTree"]},{"name":"abstract fun invert(): List<IOperation>","description":"org.modelix.model.operations.IAppliedOperation.invert","location":"model-datastructure/org.modelix.model.operations/-i-applied-operation/invert.html","searchKeys":["invert","abstract fun invert(): List<IOperation>","org.modelix.model.operations.IAppliedOperation.invert"]},{"name":"abstract fun listen(key: String, listener: IKeyListener)","description":"org.modelix.model.IKeyValueStore.listen","location":"model-datastructure/org.modelix.model/-i-key-value-store/listen.html","searchKeys":["listen","abstract fun listen(key: String, listener: IKeyListener)","org.modelix.model.IKeyValueStore.listen"]},{"name":"abstract fun onSuccess(handler: (T) -> Unit)","description":"org.modelix.model.lazy.IBulkQuery.Value.onSuccess","location":"model-datastructure/org.modelix.model.lazy/-i-bulk-query/-value/on-success.html","searchKeys":["onSuccess","abstract fun onSuccess(handler: (T) -> Unit)","org.modelix.model.lazy.IBulkQuery.Value.onSuccess"]},{"name":"abstract fun prefetch(hash: String)","description":"org.modelix.model.lazy.IDeserializingKeyValueStore.prefetch","location":"model-datastructure/org.modelix.model.lazy/-i-deserializing-key-value-store/prefetch.html","searchKeys":["prefetch","abstract fun prefetch(hash: String)","org.modelix.model.lazy.IDeserializingKeyValueStore.prefetch"]},{"name":"abstract fun prefetch(key: String)","description":"org.modelix.model.IKeyValueStore.prefetch","location":"model-datastructure/org.modelix.model/-i-key-value-store/prefetch.html","searchKeys":["prefetch","abstract fun prefetch(key: String)","org.modelix.model.IKeyValueStore.prefetch"]},{"name":"abstract fun put(hash: String, deserialized: Any, serialized: String)","description":"org.modelix.model.lazy.IDeserializingKeyValueStore.put","location":"model-datastructure/org.modelix.model.lazy/-i-deserializing-key-value-store/put.html","searchKeys":["put","abstract fun put(hash: String, deserialized: Any, serialized: String)","org.modelix.model.lazy.IDeserializingKeyValueStore.put"]},{"name":"abstract fun put(key: Long, value: KVEntryReference<CPNode>?, shift: Int, store: IDeserializingKeyValueStore): CPHamtNode?","description":"org.modelix.model.persistent.CPHamtNode.put","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/put.html","searchKeys":["put","abstract fun put(key: Long, value: KVEntryReference<CPNode>?, shift: Int, store: IDeserializingKeyValueStore): CPHamtNode?","org.modelix.model.persistent.CPHamtNode.put"]},{"name":"abstract fun put(key: String, value: String?)","description":"org.modelix.model.IKeyValueStore.put","location":"model-datastructure/org.modelix.model/-i-key-value-store/put.html","searchKeys":["put","abstract fun put(key: String, value: String?)","org.modelix.model.IKeyValueStore.put"]},{"name":"abstract fun putAll(entries: Map<String, String?>)","description":"org.modelix.model.IKeyValueStore.putAll","location":"model-datastructure/org.modelix.model/-i-key-value-store/put-all.html","searchKeys":["putAll","abstract fun putAll(entries: Map<String, String?>)","org.modelix.model.IKeyValueStore.putAll"]},{"name":"abstract fun remove(key: Long, shift: Int, store: IDeserializingKeyValueStore): CPHamtNode?","description":"org.modelix.model.persistent.CPHamtNode.remove","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/remove.html","searchKeys":["remove","abstract fun remove(key: Long, shift: Int, store: IDeserializingKeyValueStore): CPHamtNode?","org.modelix.model.persistent.CPHamtNode.remove"]},{"name":"abstract fun removeListener(key: String, listener: IKeyListener)","description":"org.modelix.model.IKeyValueStore.removeListener","location":"model-datastructure/org.modelix.model/-i-key-value-store/remove-listener.html","searchKeys":["removeListener","abstract fun removeListener(key: String, listener: IKeyListener)","org.modelix.model.IKeyValueStore.removeListener"]},{"name":"abstract fun restoreIntend(tree: ITree): List<IOperation>","description":"org.modelix.model.operations.IOperationIntend.restoreIntend","location":"model-datastructure/org.modelix.model.operations/-i-operation-intend/restore-intend.html","searchKeys":["restoreIntend","abstract fun restoreIntend(tree: ITree): List<IOperation>","org.modelix.model.operations.IOperationIntend.restoreIntend"]},{"name":"abstract fun serialize(): String","description":"org.modelix.model.persistent.IKVValue.serialize","location":"model-datastructure/org.modelix.model.persistent/-i-k-v-value/serialize.html","searchKeys":["serialize","abstract fun serialize(): String","org.modelix.model.persistent.IKVValue.serialize"]},{"name":"abstract fun serialize(op: E): String","description":"org.modelix.model.persistent.OperationSerializer.Serializer.serialize","location":"model-datastructure/org.modelix.model.persistent/-operation-serializer/-serializer/serialize.html","searchKeys":["serialize","abstract fun serialize(op: E): String","org.modelix.model.persistent.OperationSerializer.Serializer.serialize"]},{"name":"abstract fun unwrap(): ITransaction","description":"org.modelix.model.ITransactionWrapper.unwrap","location":"model-datastructure/org.modelix.model/-i-transaction-wrapper/unwrap.html","searchKeys":["unwrap","abstract fun unwrap(): ITransaction","org.modelix.model.ITransactionWrapper.unwrap"]},{"name":"abstract fun visitChanges(oldNode: CPHamtNode?, shift: Int, visitor: CPHamtNode.IChangeVisitor, bulkQuery: IBulkQuery)","description":"org.modelix.model.persistent.CPHamtNode.visitChanges","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/visit-changes.html","searchKeys":["visitChanges","abstract fun visitChanges(oldNode: CPHamtNode?, shift: Int, visitor: CPHamtNode.IChangeVisitor, bulkQuery: IBulkQuery)","org.modelix.model.persistent.CPHamtNode.visitChanges"]},{"name":"abstract fun visitChangesOnly(): Boolean","description":"org.modelix.model.persistent.CPHamtNode.IChangeVisitor.visitChangesOnly","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/-i-change-visitor/visit-changes-only.html","searchKeys":["visitChangesOnly","abstract fun visitChangesOnly(): Boolean","org.modelix.model.persistent.CPHamtNode.IChangeVisitor.visitChangesOnly"]},{"name":"abstract fun visitEntries(bulkQuery: IBulkQuery, visitor: (Long, KVEntryReference<CPNode>?) -> Unit): IBulkQuery.Value<Unit>","description":"org.modelix.model.persistent.CPHamtNode.visitEntries","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/visit-entries.html","searchKeys":["visitEntries","abstract fun visitEntries(bulkQuery: IBulkQuery, visitor: (Long, KVEntryReference<CPNode>?) -> Unit): IBulkQuery.Value<Unit>","org.modelix.model.persistent.CPHamtNode.visitEntries"]},{"name":"abstract fun write(store: IDeserializingKeyValueStore)","description":"org.modelix.model.lazy.IKVEntryReference.write","location":"model-datastructure/org.modelix.model.lazy/-i-k-v-entry-reference/write.html","searchKeys":["write","abstract fun write(store: IDeserializingKeyValueStore)","org.modelix.model.lazy.IKVEntryReference.write"]},{"name":"abstract inner class Applied","description":"org.modelix.model.operations.AbstractOperation.Applied","location":"model-datastructure/org.modelix.model.operations/-abstract-operation/-applied/index.html","searchKeys":["Applied","abstract inner class Applied","org.modelix.model.operations.AbstractOperation.Applied"]},{"name":"abstract operator fun <T : IKVValue> get(hash: KVEntryReference<T>): IBulkQuery.Value<T?>","description":"org.modelix.model.lazy.IBulkQuery.get","location":"model-datastructure/org.modelix.model.lazy/-i-bulk-query/get.html","searchKeys":["get","abstract operator fun <T : IKVValue> get(hash: KVEntryReference<T>): IBulkQuery.Value<T?>","org.modelix.model.lazy.IBulkQuery.get"]},{"name":"abstract operator fun <T> get(hash: String, deserializer: (String) -> T): T?","description":"org.modelix.model.lazy.IDeserializingKeyValueStore.get","location":"model-datastructure/org.modelix.model.lazy/-i-deserializing-key-value-store/get.html","searchKeys":["get","abstract operator fun <T> get(hash: String, deserializer: (String) -> T): T?","org.modelix.model.lazy.IDeserializingKeyValueStore.get"]},{"name":"abstract operator fun get(key: String): String?","description":"org.modelix.model.IKeyValueStore.get","location":"model-datastructure/org.modelix.model/-i-key-value-store/get.html","searchKeys":["get","abstract operator fun get(key: String): String?","org.modelix.model.IKeyValueStore.get"]},{"name":"abstract override fun deserialize(serialized: String): INodeReference?","description":"org.modelix.model.lazy.INodeReferenceSerializer.deserialize","location":"model-datastructure/org.modelix.model.lazy/-i-node-reference-serializer/deserialize.html","searchKeys":["deserialize","abstract override fun deserialize(serialized: String): INodeReference?","org.modelix.model.lazy.INodeReferenceSerializer.deserialize"]},{"name":"abstract override fun serialize(ref: INodeReference): String?","description":"org.modelix.model.lazy.INodeReferenceSerializer.serialize","location":"model-datastructure/org.modelix.model.lazy/-i-node-reference-serializer/serialize.html","searchKeys":["serialize","abstract override fun serialize(ref: INodeReference): String?","org.modelix.model.lazy.INodeReferenceSerializer.serialize"]},{"name":"abstract val elementId: Long","description":"org.modelix.model.persistent.CPNodeRef.elementId","location":"model-datastructure/org.modelix.model.persistent/-c-p-node-ref/element-id.html","searchKeys":["elementId","abstract val elementId: Long","org.modelix.model.persistent.CPNodeRef.elementId"]},{"name":"abstract val hash: String","description":"org.modelix.model.persistent.IKVValue.hash","location":"model-datastructure/org.modelix.model.persistent/-i-k-v-value/hash.html","searchKeys":["hash","abstract val hash: String","org.modelix.model.persistent.IKVValue.hash"]},{"name":"abstract val isGlobal: Boolean","description":"org.modelix.model.persistent.CPNodeRef.isGlobal","location":"model-datastructure/org.modelix.model.persistent/-c-p-node-ref/is-global.html","searchKeys":["isGlobal","abstract val isGlobal: Boolean","org.modelix.model.persistent.CPNodeRef.isGlobal"]},{"name":"abstract val isLocal: Boolean","description":"org.modelix.model.persistent.CPNodeRef.isLocal","location":"model-datastructure/org.modelix.model.persistent/-c-p-node-ref/is-local.html","searchKeys":["isLocal","abstract val isLocal: Boolean","org.modelix.model.persistent.CPNodeRef.isLocal"]},{"name":"abstract val keyValueStore: IKeyValueStore","description":"org.modelix.model.lazy.IDeserializingKeyValueStore.keyValueStore","location":"model-datastructure/org.modelix.model.lazy/-i-deserializing-key-value-store/key-value-store.html","searchKeys":["keyValueStore","abstract val keyValueStore: IKeyValueStore","org.modelix.model.lazy.IDeserializingKeyValueStore.keyValueStore"]},{"name":"abstract val treeId: String?","description":"org.modelix.model.persistent.CPNodeRef.treeId","location":"model-datastructure/org.modelix.model.persistent/-c-p-node-ref/tree-id.html","searchKeys":["treeId","abstract val treeId: String?","org.modelix.model.persistent.CPNodeRef.treeId"]},{"name":"abstract var isWritten: Boolean","description":"org.modelix.model.persistent.IKVValue.isWritten","location":"model-datastructure/org.modelix.model.persistent/-i-k-v-value/is-written.html","searchKeys":["isWritten","abstract var isWritten: Boolean","org.modelix.model.persistent.IKVValue.isWritten"]},{"name":"class AddNewChildOp(val position: PositionInRole, childId: Long, concept: IConceptReference?) : AddNewChildrenOp","description":"org.modelix.model.operations.AddNewChildOp","location":"model-datastructure/org.modelix.model.operations/-add-new-child-op/index.html","searchKeys":["AddNewChildOp","class AddNewChildOp(val position: PositionInRole, childId: Long, concept: IConceptReference?) : AddNewChildrenOp","org.modelix.model.operations.AddNewChildOp"]},{"name":"class AddNewChildSubtreeOp(val resultTreeHash: KVEntryReference<CPTree>, val position: PositionInRole, val childId: Long, val concept: IConceptReference?) : AbstractOperation","description":"org.modelix.model.operations.AddNewChildSubtreeOp","location":"model-datastructure/org.modelix.model.operations/-add-new-child-subtree-op/index.html","searchKeys":["AddNewChildSubtreeOp","class AddNewChildSubtreeOp(val resultTreeHash: KVEntryReference<CPTree>, val position: PositionInRole, val childId: Long, val concept: IConceptReference?) : AbstractOperation","org.modelix.model.operations.AddNewChildSubtreeOp"]},{"name":"class Builder(var store: IDeserializingKeyValueStore)","description":"org.modelix.model.lazy.CLTree.Builder","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/-builder/index.html","searchKeys":["Builder","class Builder(var store: IDeserializingKeyValueStore)","org.modelix.model.lazy.CLTree.Builder"]},{"name":"class BulkQuery(store: IDeserializingKeyValueStore) : IBulkQuery","description":"org.modelix.model.lazy.BulkQuery","location":"model-datastructure/org.modelix.model.lazy/-bulk-query/index.html","searchKeys":["BulkQuery","class BulkQuery(store: IDeserializingKeyValueStore) : IBulkQuery","org.modelix.model.lazy.BulkQuery"]},{"name":"class BulkUpdateOp(val resultTreeHash: KVEntryReference<CPTree>, val subtreeRootId: Long) : AbstractOperation","description":"org.modelix.model.operations.BulkUpdateOp","location":"model-datastructure/org.modelix.model.operations/-bulk-update-op/index.html","searchKeys":["BulkUpdateOp","class BulkUpdateOp(val resultTreeHash: KVEntryReference<CPTree>, val subtreeRootId: Long) : AbstractOperation","org.modelix.model.operations.BulkUpdateOp"]},{"name":"class CLNode(tree: CLTree, data: CPNode)","description":"org.modelix.model.lazy.CLNode","location":"model-datastructure/org.modelix.model.lazy/-c-l-node/index.html","searchKeys":["CLNode","class CLNode(tree: CLTree, data: CPNode)","org.modelix.model.lazy.CLNode"]},{"name":"class CLTree : ITree, IBulkTree","description":"org.modelix.model.lazy.CLTree","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/index.html","searchKeys":["CLTree","class CLTree : ITree, IBulkTree","org.modelix.model.lazy.CLTree"]},{"name":"class CLVersion : IVersion","description":"org.modelix.model.lazy.CLVersion","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/index.html","searchKeys":["CLVersion","class CLVersion : IVersion","org.modelix.model.lazy.CLVersion"]},{"name":"class CPHamtInternal(val bitmap: Int, val children: Array<KVEntryReference<CPHamtNode>>) : CPHamtNode","description":"org.modelix.model.persistent.CPHamtInternal","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-internal/index.html","searchKeys":["CPHamtInternal","class CPHamtInternal(val bitmap: Int, val children: Array<KVEntryReference<CPHamtNode>>) : CPHamtNode","org.modelix.model.persistent.CPHamtInternal"]},{"name":"class CPHamtLeaf(val key: Long, val value: KVEntryReference<CPNode>) : CPHamtNode","description":"org.modelix.model.persistent.CPHamtLeaf","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-leaf/index.html","searchKeys":["CPHamtLeaf","class CPHamtLeaf(val key: Long, val value: KVEntryReference<CPNode>) : CPHamtNode","org.modelix.model.persistent.CPHamtLeaf"]},{"name":"class CPHamtSingle(val numLevels: Int, val bits: Long, val child: KVEntryReference<CPHamtNode>) : CPHamtNode","description":"org.modelix.model.persistent.CPHamtSingle","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-single/index.html","searchKeys":["CPHamtSingle","class CPHamtSingle(val numLevels: Int, val bits: Long, val child: KVEntryReference<CPHamtNode>) : CPHamtNode","org.modelix.model.persistent.CPHamtSingle"]},{"name":"class CPNode : IKVValue","description":"org.modelix.model.persistent.CPNode","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/index.html","searchKeys":["CPNode","class CPNode : IKVValue","org.modelix.model.persistent.CPNode"]},{"name":"class CPOperationsList(val operations: Array<IOperation>) : IKVValue","description":"org.modelix.model.persistent.CPOperationsList","location":"model-datastructure/org.modelix.model.persistent/-c-p-operations-list/index.html","searchKeys":["CPOperationsList","class CPOperationsList(val operations: Array<IOperation>) : IKVValue","org.modelix.model.persistent.CPOperationsList"]},{"name":"class CPTree(val id: String, var idToHash: KVEntryReference<CPHamtNode>, val usesRoleIds: Boolean) : IKVValue","description":"org.modelix.model.persistent.CPTree","location":"model-datastructure/org.modelix.model.persistent/-c-p-tree/index.html","searchKeys":["CPTree","class CPTree(val id: String, var idToHash: KVEntryReference<CPHamtNode>, val usesRoleIds: Boolean) : IKVValue","org.modelix.model.persistent.CPTree"]},{"name":"class CPVersion(id: Long, time: String?, author: String?, treeHash: KVEntryReference<CPTree>?, previousVersion: KVEntryReference<CPVersion>?, originalVersion: KVEntryReference<CPVersion>?, baseVersion: KVEntryReference<CPVersion>?, mergedVersion1: KVEntryReference<CPVersion>?, mergedVersion2: KVEntryReference<CPVersion>?, operations: Array<IOperation>?, operationsHash: KVEntryReference<CPOperationsList>?, numberOfOperations: Int) : IKVValue","description":"org.modelix.model.persistent.CPVersion","location":"model-datastructure/org.modelix.model.persistent/-c-p-version/index.html","searchKeys":["CPVersion","class CPVersion(id: Long, time: String?, author: String?, treeHash: KVEntryReference<CPTree>?, previousVersion: KVEntryReference<CPVersion>?, originalVersion: KVEntryReference<CPVersion>?, baseVersion: KVEntryReference<CPVersion>?, mergedVersion1: KVEntryReference<CPVersion>?, mergedVersion2: KVEntryReference<CPVersion>?, operations: Array<IOperation>?, operationsHash: KVEntryReference<CPOperationsList>?, numberOfOperations: Int) : IKVValue","org.modelix.model.persistent.CPVersion"]},{"name":"class CapturedInsertPosition(val siblingsBefore: LongArray, val siblingsAfter: LongArray)","description":"org.modelix.model.operations.CapturedInsertPosition","location":"model-datastructure/org.modelix.model.operations/-captured-insert-position/index.html","searchKeys":["CapturedInsertPosition","class CapturedInsertPosition(val siblingsBefore: LongArray, val siblingsAfter: LongArray)","org.modelix.model.operations.CapturedInsertPosition"]},{"name":"class ContextIndirectCache(val directStore: IDeserializingKeyValueStore) : IndirectObjectStore","description":"org.modelix.model.lazy.PrefetchCache.Companion.ContextIndirectCache","location":"model-datastructure/org.modelix.model.lazy/-prefetch-cache/-companion/-context-indirect-cache/index.html","searchKeys":["ContextIndirectCache","class ContextIndirectCache(val directStore: IDeserializingKeyValueStore) : IndirectObjectStore","org.modelix.model.lazy.PrefetchCache.Companion.ContextIndirectCache"]},{"name":"class DeleteNodeOp(val childId: Long) : AbstractOperation, IOperationIntend","description":"org.modelix.model.operations.DeleteNodeOp","location":"model-datastructure/org.modelix.model.operations/-delete-node-op/index.html","searchKeys":["DeleteNodeOp","class DeleteNodeOp(val childId: Long) : AbstractOperation, IOperationIntend","org.modelix.model.operations.DeleteNodeOp"]},{"name":"class DuplicateNodeId(message: String) : RuntimeException","description":"org.modelix.model.lazy.DuplicateNodeId","location":"model-datastructure/org.modelix.model.lazy/-duplicate-node-id/index.html","searchKeys":["DuplicateNodeId","class DuplicateNodeId(message: String) : RuntimeException","org.modelix.model.lazy.DuplicateNodeId"]},{"name":"class KVEntryReference<out E : IKVValue>(writtenOrUnwrittenReference: IKVEntryReference<E>) : IKVEntryReference<E> ","description":"org.modelix.model.lazy.KVEntryReference","location":"model-datastructure/org.modelix.model.lazy/-k-v-entry-reference/index.html","searchKeys":["KVEntryReference","class KVEntryReference<out E : IKVValue>(writtenOrUnwrittenReference: IKVEntryReference<E>) : IKVEntryReference<E> ","org.modelix.model.lazy.KVEntryReference"]},{"name":"class LinearHistory(baseVersionHash: String?)","description":"org.modelix.model.LinearHistory","location":"model-datastructure/org.modelix.model/-linear-history/index.html","searchKeys":["LinearHistory","class LinearHistory(baseVersionHash: String?)","org.modelix.model.LinearHistory"]},{"name":"class MoveNodeOp(val childId: Long, val targetPosition: PositionInRole) : AbstractOperation","description":"org.modelix.model.operations.MoveNodeOp","location":"model-datastructure/org.modelix.model.operations/-move-node-op/index.html","searchKeys":["MoveNodeOp","class MoveNodeOp(val childId: Long, val targetPosition: PositionInRole) : AbstractOperation","org.modelix.model.operations.MoveNodeOp"]},{"name":"class NoOp : AbstractOperation, IAppliedOperation, IOperationIntend","description":"org.modelix.model.operations.NoOp","location":"model-datastructure/org.modelix.model.operations/-no-op/index.html","searchKeys":["NoOp","class NoOp : AbstractOperation, IAppliedOperation, IOperationIntend","org.modelix.model.operations.NoOp"]},{"name":"class NodeNotFoundException(nodeId: Long) : RuntimeException","description":"org.modelix.model.lazy.NodeNotFoundException","location":"model-datastructure/org.modelix.model.lazy/-node-not-found-exception/index.html","searchKeys":["NodeNotFoundException","class NodeNotFoundException(nodeId: Long) : RuntimeException","org.modelix.model.lazy.NodeNotFoundException"]},{"name":"class NonBulkQuery(store: IDeserializingKeyValueStore) : IBulkQuery","description":"org.modelix.model.lazy.NonBulkQuery","location":"model-datastructure/org.modelix.model.lazy/-non-bulk-query/index.html","searchKeys":["NonBulkQuery","class NonBulkQuery(store: IDeserializingKeyValueStore) : IBulkQuery","org.modelix.model.lazy.NonBulkQuery"]},{"name":"class NonWrittenEntry<E : IKVValue> : IKVEntryReference<E> ","description":"org.modelix.model.lazy.NonWrittenEntry","location":"model-datastructure/org.modelix.model.lazy/-non-written-entry/index.html","searchKeys":["NonWrittenEntry","class NonWrittenEntry<E : IKVValue> : IKVEntryReference<E> ","org.modelix.model.lazy.NonWrittenEntry"]},{"name":"class OTBranch(branch: IBranch, idGenerator: IIdGenerator, store: IDeserializingKeyValueStore) : IBranch","description":"org.modelix.model.operations.OTBranch","location":"model-datastructure/org.modelix.model.operations/-o-t-branch/index.html","searchKeys":["OTBranch","class OTBranch(branch: IBranch, idGenerator: IIdGenerator, store: IDeserializingKeyValueStore) : IBranch","org.modelix.model.operations.OTBranch"]},{"name":"class OTWriteTransaction(transaction: IWriteTransaction, otBranch: OTBranch, idGenerator: IIdGenerator, store: IDeserializingKeyValueStore) : IWriteTransaction, ITransactionWrapper","description":"org.modelix.model.operations.OTWriteTransaction","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/index.html","searchKeys":["OTWriteTransaction","class OTWriteTransaction(transaction: IWriteTransaction, otBranch: OTBranch, idGenerator: IIdGenerator, store: IDeserializingKeyValueStore) : IWriteTransaction, ITransactionWrapper","org.modelix.model.operations.OTWriteTransaction"]},{"name":"class ObjectStoreCache(val keyValueStore: IKeyValueStore) : IDeserializingKeyValueStore","description":"org.modelix.model.lazy.ObjectStoreCache","location":"model-datastructure/org.modelix.model.lazy/-object-store-cache/index.html","searchKeys":["ObjectStoreCache","class ObjectStoreCache(val keyValueStore: IKeyValueStore) : IDeserializingKeyValueStore","org.modelix.model.lazy.ObjectStoreCache"]},{"name":"class OperationSerializer","description":"org.modelix.model.persistent.OperationSerializer","location":"model-datastructure/org.modelix.model.persistent/-operation-serializer/index.html","searchKeys":["OperationSerializer","class OperationSerializer","org.modelix.model.persistent.OperationSerializer"]},{"name":"class OperationsCompressor(val resultTree: CLTree)","description":"org.modelix.model.lazy.OperationsCompressor","location":"model-datastructure/org.modelix.model.lazy/-operations-compressor/index.html","searchKeys":["OperationsCompressor","class OperationsCompressor(val resultTree: CLTree)","org.modelix.model.lazy.OperationsCompressor"]},{"name":"class PrefetchCache(store: IDeserializingKeyValueStore) : IDeserializingKeyValueStore","description":"org.modelix.model.lazy.PrefetchCache","location":"model-datastructure/org.modelix.model.lazy/-prefetch-cache/index.html","searchKeys":["PrefetchCache","class PrefetchCache(store: IDeserializingKeyValueStore) : IDeserializingKeyValueStore","org.modelix.model.lazy.PrefetchCache"]},{"name":"class RevertToOp(val latestKnownVersionRef: KVEntryReference<CPVersion>, val versionToRevertToRef: KVEntryReference<CPVersion>) : AbstractOperation","description":"org.modelix.model.operations.RevertToOp","location":"model-datastructure/org.modelix.model.operations/-revert-to-op/index.html","searchKeys":["RevertToOp","class RevertToOp(val latestKnownVersionRef: KVEntryReference<CPVersion>, val versionToRevertToRef: KVEntryReference<CPVersion>) : AbstractOperation","org.modelix.model.operations.RevertToOp"]},{"name":"class SetPropertyOp(val nodeId: Long, val role: String, val value: String?) : AbstractOperation, IOperationIntend","description":"org.modelix.model.operations.SetPropertyOp","location":"model-datastructure/org.modelix.model.operations/-set-property-op/index.html","searchKeys":["SetPropertyOp","class SetPropertyOp(val nodeId: Long, val role: String, val value: String?) : AbstractOperation, IOperationIntend","org.modelix.model.operations.SetPropertyOp"]},{"name":"class SetReferenceOp(val sourceId: Long, val role: String, val target: INodeReference?) : AbstractOperation, IOperationIntend","description":"org.modelix.model.operations.SetReferenceOp","location":"model-datastructure/org.modelix.model.operations/-set-reference-op/index.html","searchKeys":["SetReferenceOp","class SetReferenceOp(val sourceId: Long, val role: String, val target: INodeReference?) : AbstractOperation, IOperationIntend","org.modelix.model.operations.SetReferenceOp"]},{"name":"class UndoOp(val versionHash: KVEntryReference<CPVersion>) : AbstractOperation","description":"org.modelix.model.operations.UndoOp","location":"model-datastructure/org.modelix.model.operations/-undo-op/index.html","searchKeys":["UndoOp","class UndoOp(val versionHash: KVEntryReference<CPVersion>) : AbstractOperation","org.modelix.model.operations.UndoOp"]},{"name":"class Value<T>(value: T) : IBulkQuery.Value<T> ","description":"org.modelix.model.lazy.NonBulkQuery.Value","location":"model-datastructure/org.modelix.model.lazy/-non-bulk-query/-value/index.html","searchKeys":["Value","class Value<T>(value: T) : IBulkQuery.Value<T> ","org.modelix.model.lazy.NonBulkQuery.Value"]},{"name":"class VersionMerger(storeCache: IDeserializingKeyValueStore, idGenerator: IIdGenerator)","description":"org.modelix.model.VersionMerger","location":"model-datastructure/org.modelix.model/-version-merger/index.html","searchKeys":["VersionMerger","class VersionMerger(storeCache: IDeserializingKeyValueStore, idGenerator: IIdGenerator)","org.modelix.model.VersionMerger"]},{"name":"class WrittenEntry<E : IKVValue>(hash: String, deserializer: (String) -> E) : IKVEntryReference<E> ","description":"org.modelix.model.lazy.WrittenEntry","location":"model-datastructure/org.modelix.model.lazy/-written-entry/index.html","searchKeys":["WrittenEntry","class WrittenEntry<E : IKVValue>(hash: String, deserializer: (String) -> E) : IKVEntryReference<E> ","org.modelix.model.lazy.WrittenEntry"]},{"name":"const val BITS_PER_LEVEL: Int = 5","description":"org.modelix.model.persistent.CPHamtNode.Companion.BITS_PER_LEVEL","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/-companion/-b-i-t-s_-p-e-r_-l-e-v-e-l.html","searchKeys":["BITS_PER_LEVEL","const val BITS_PER_LEVEL: Int = 5","org.modelix.model.persistent.CPHamtNode.Companion.BITS_PER_LEVEL"]},{"name":"const val DEFAULT_BRANCH: String","description":"org.modelix.model.lazy.RepositoryId.Companion.DEFAULT_BRANCH","location":"model-datastructure/org.modelix.model.lazy/-repository-id/-companion/-d-e-f-a-u-l-t_-b-r-a-n-c-h.html","searchKeys":["DEFAULT_BRANCH","const val DEFAULT_BRANCH: String","org.modelix.model.lazy.RepositoryId.Companion.DEFAULT_BRANCH"]},{"name":"const val ENTRIES_PER_LEVEL: Int","description":"org.modelix.model.persistent.CPHamtNode.Companion.ENTRIES_PER_LEVEL","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/-companion/-e-n-t-r-i-e-s_-p-e-r_-l-e-v-e-l.html","searchKeys":["ENTRIES_PER_LEVEL","const val ENTRIES_PER_LEVEL: Int","org.modelix.model.persistent.CPHamtNode.Companion.ENTRIES_PER_LEVEL"]},{"name":"const val LEVEL1: String","description":"org.modelix.model.persistent.Separators.LEVEL1","location":"model-datastructure/org.modelix.model.persistent/-separators/-l-e-v-e-l1.html","searchKeys":["LEVEL1","const val LEVEL1: String","org.modelix.model.persistent.Separators.LEVEL1"]},{"name":"const val LEVEL2: String","description":"org.modelix.model.persistent.Separators.LEVEL2","location":"model-datastructure/org.modelix.model.persistent/-separators/-l-e-v-e-l2.html","searchKeys":["LEVEL2","const val LEVEL2: String","org.modelix.model.persistent.Separators.LEVEL2"]},{"name":"const val LEVEL3: String","description":"org.modelix.model.persistent.Separators.LEVEL3","location":"model-datastructure/org.modelix.model.persistent/-separators/-l-e-v-e-l3.html","searchKeys":["LEVEL3","const val LEVEL3: String","org.modelix.model.persistent.Separators.LEVEL3"]},{"name":"const val LEVEL4: String","description":"org.modelix.model.persistent.Separators.LEVEL4","location":"model-datastructure/org.modelix.model.persistent/-separators/-l-e-v-e-l4.html","searchKeys":["LEVEL4","const val LEVEL4: String","org.modelix.model.persistent.Separators.LEVEL4"]},{"name":"const val LEVEL_MASK: Long","description":"org.modelix.model.persistent.CPHamtNode.Companion.LEVEL_MASK","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/-companion/-l-e-v-e-l_-m-a-s-k.html","searchKeys":["LEVEL_MASK","const val LEVEL_MASK: Long","org.modelix.model.persistent.CPHamtNode.Companion.LEVEL_MASK"]},{"name":"const val MAPPING: String","description":"org.modelix.model.persistent.Separators.MAPPING","location":"model-datastructure/org.modelix.model.persistent/-separators/-m-a-p-p-i-n-g.html","searchKeys":["MAPPING","const val MAPPING: String","org.modelix.model.persistent.Separators.MAPPING"]},{"name":"const val MAX_BITS: Int = 64","description":"org.modelix.model.persistent.CPHamtNode.Companion.MAX_BITS","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/-companion/-m-a-x_-b-i-t-s.html","searchKeys":["MAX_BITS","const val MAX_BITS: Int = 64","org.modelix.model.persistent.CPHamtNode.Companion.MAX_BITS"]},{"name":"const val MAX_LEVELS: Int","description":"org.modelix.model.persistent.CPHamtNode.Companion.MAX_LEVELS","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/-companion/-m-a-x_-l-e-v-e-l-s.html","searchKeys":["MAX_LEVELS","const val MAX_LEVELS: Int","org.modelix.model.persistent.CPHamtNode.Companion.MAX_LEVELS"]},{"name":"const val MAX_SHIFT: Int","description":"org.modelix.model.persistent.CPHamtNode.Companion.MAX_SHIFT","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/-companion/-m-a-x_-s-h-i-f-t.html","searchKeys":["MAX_SHIFT","const val MAX_SHIFT: Int","org.modelix.model.persistent.CPHamtNode.Companion.MAX_SHIFT"]},{"name":"const val NULL_VALUE: String","description":"org.modelix.model.IKeyListener.Companion.NULL_VALUE","location":"model-datastructure/org.modelix.model/-i-key-listener/-companion/-n-u-l-l_-v-a-l-u-e.html","searchKeys":["NULL_VALUE","const val NULL_VALUE: String","org.modelix.model.IKeyListener.Companion.NULL_VALUE"]},{"name":"const val OPS: String","description":"org.modelix.model.persistent.Separators.OPS","location":"model-datastructure/org.modelix.model.persistent/-separators/-o-p-s.html","searchKeys":["OPS","const val OPS: String","org.modelix.model.persistent.Separators.OPS"]},{"name":"const val OP_PARTS: String","description":"org.modelix.model.persistent.Separators.OP_PARTS","location":"model-datastructure/org.modelix.model.persistent/-separators/-o-p_-p-a-r-t-s.html","searchKeys":["OP_PARTS","const val OP_PARTS: String","org.modelix.model.persistent.Separators.OP_PARTS"]},{"name":"constructor()","description":"Sha256.Sha256","location":"model-datastructure/[root]/-sha256/-sha256.html","searchKeys":["Sha256","constructor()","Sha256.Sha256"]},{"name":"constructor()","description":"org.modelix.model.lazy.BulkQuery.Value.Value","location":"model-datastructure/org.modelix.model.lazy/-bulk-query/-value/-value.html","searchKeys":["Value","constructor()","org.modelix.model.lazy.BulkQuery.Value.Value"]},{"name":"constructor()","description":"org.modelix.model.lazy.IndirectObjectStore.IndirectObjectStore","location":"model-datastructure/org.modelix.model.lazy/-indirect-object-store/-indirect-object-store.html","searchKeys":["IndirectObjectStore","constructor()","org.modelix.model.lazy.IndirectObjectStore.IndirectObjectStore"]},{"name":"constructor()","description":"org.modelix.model.operations.AbstractOperation.AbstractOperation","location":"model-datastructure/org.modelix.model.operations/-abstract-operation/-abstract-operation.html","searchKeys":["AbstractOperation","constructor()","org.modelix.model.operations.AbstractOperation.AbstractOperation"]},{"name":"constructor()","description":"org.modelix.model.operations.AbstractOperation.Applied.Applied","location":"model-datastructure/org.modelix.model.operations/-abstract-operation/-applied/-applied.html","searchKeys":["Applied","constructor()","org.modelix.model.operations.AbstractOperation.Applied.Applied"]},{"name":"constructor()","description":"org.modelix.model.operations.AddNewChildrenOp.Applied.Applied","location":"model-datastructure/org.modelix.model.operations/-add-new-children-op/-applied/-applied.html","searchKeys":["Applied","constructor()","org.modelix.model.operations.AddNewChildrenOp.Applied.Applied"]},{"name":"constructor()","description":"org.modelix.model.operations.BulkUpdateOp.Intend.Intend","location":"model-datastructure/org.modelix.model.operations/-bulk-update-op/-intend/-intend.html","searchKeys":["Intend","constructor()","org.modelix.model.operations.BulkUpdateOp.Intend.Intend"]},{"name":"constructor()","description":"org.modelix.model.operations.NoOp.NoOp","location":"model-datastructure/org.modelix.model.operations/-no-op/-no-op.html","searchKeys":["NoOp","constructor()","org.modelix.model.operations.NoOp.NoOp"]},{"name":"constructor()","description":"org.modelix.model.persistent.CPHamtNode.CPHamtNode","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/-c-p-hamt-node.html","searchKeys":["CPHamtNode","constructor()","org.modelix.model.persistent.CPHamtNode.CPHamtNode"]},{"name":"constructor()","description":"org.modelix.model.persistent.MapBaseStore.MapBaseStore","location":"model-datastructure/org.modelix.model.persistent/-map-base-store/-map-base-store.html","searchKeys":["MapBaseStore","constructor()","org.modelix.model.persistent.MapBaseStore.MapBaseStore"]},{"name":"constructor()","description":"org.modelix.model.persistent.MapBasedStore.MapBasedStore","location":"model-datastructure/org.modelix.model.persistent/-map-based-store/-map-based-store.html","searchKeys":["MapBasedStore","constructor()","org.modelix.model.persistent.MapBasedStore.MapBasedStore"]},{"name":"constructor(appliedOps: List<IAppliedOperation>)","description":"org.modelix.model.operations.RevertToOp.Applied.Applied","location":"model-datastructure/org.modelix.model.operations/-revert-to-op/-applied/-applied.html","searchKeys":["Applied","constructor(appliedOps: List<IAppliedOperation>)","org.modelix.model.operations.RevertToOp.Applied.Applied"]},{"name":"constructor(appliedOps: List<IAppliedOperation>)","description":"org.modelix.model.operations.UndoOp.Applied.Applied","location":"model-datastructure/org.modelix.model.operations/-undo-op/-applied/-applied.html","searchKeys":["Applied","constructor(appliedOps: List<IAppliedOperation>)","org.modelix.model.operations.UndoOp.Applied.Applied"]},{"name":"constructor(baseTree: CLTree)","description":"org.modelix.model.operations.BulkUpdateOp.Applied.Applied","location":"model-datastructure/org.modelix.model.operations/-bulk-update-op/-applied/-applied.html","searchKeys":["Applied","constructor(baseTree: CLTree)","org.modelix.model.operations.BulkUpdateOp.Applied.Applied"]},{"name":"constructor(baseVersionHash: String?)","description":"org.modelix.model.LinearHistory.LinearHistory","location":"model-datastructure/org.modelix.model/-linear-history/-linear-history.html","searchKeys":["LinearHistory","constructor(baseVersionHash: String?)","org.modelix.model.LinearHistory.LinearHistory"]},{"name":"constructor(bitmap: Int, children: Array<KVEntryReference<CPHamtNode>>)","description":"org.modelix.model.persistent.CPHamtInternal.CPHamtInternal","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-internal/-c-p-hamt-internal.html","searchKeys":["CPHamtInternal","constructor(bitmap: Int, children: Array<KVEntryReference<CPHamtNode>>)","org.modelix.model.persistent.CPHamtInternal.CPHamtInternal"]},{"name":"constructor(branch: IBranch, idGenerator: IIdGenerator, store: IDeserializingKeyValueStore)","description":"org.modelix.model.operations.OTBranch.OTBranch","location":"model-datastructure/org.modelix.model.operations/-o-t-branch/-o-t-branch.html","searchKeys":["OTBranch","constructor(branch: IBranch, idGenerator: IIdGenerator, store: IDeserializingKeyValueStore)","org.modelix.model.operations.OTBranch.OTBranch"]},{"name":"constructor(capturedPosition: CapturedInsertPosition)","description":"org.modelix.model.operations.AddNewChildSubtreeOp.Intend.Intend","location":"model-datastructure/org.modelix.model.operations/-add-new-child-subtree-op/-intend/-intend.html","searchKeys":["Intend","constructor(capturedPosition: CapturedInsertPosition)","org.modelix.model.operations.AddNewChildSubtreeOp.Intend.Intend"]},{"name":"constructor(capturedPosition: CapturedInsertPosition)","description":"org.modelix.model.operations.AddNewChildrenOp.Intend.Intend","location":"model-datastructure/org.modelix.model.operations/-add-new-children-op/-intend/-intend.html","searchKeys":["Intend","constructor(capturedPosition: CapturedInsertPosition)","org.modelix.model.operations.AddNewChildrenOp.Intend.Intend"]},{"name":"constructor(capturedTargetPosition: CapturedInsertPosition)","description":"org.modelix.model.operations.MoveNodeOp.Intend.Intend","location":"model-datastructure/org.modelix.model.operations/-move-node-op/-intend/-intend.html","searchKeys":["Intend","constructor(capturedTargetPosition: CapturedInsertPosition)","org.modelix.model.operations.MoveNodeOp.Intend.Intend"]},{"name":"constructor(childId: Long)","description":"org.modelix.model.operations.DeleteNodeOp.DeleteNodeOp","location":"model-datastructure/org.modelix.model.operations/-delete-node-op/-delete-node-op.html","searchKeys":["DeleteNodeOp","constructor(childId: Long)","org.modelix.model.operations.DeleteNodeOp.DeleteNodeOp"]},{"name":"constructor(childId: Long, targetPosition: PositionInRole)","description":"org.modelix.model.operations.MoveNodeOp.MoveNodeOp","location":"model-datastructure/org.modelix.model.operations/-move-node-op/-move-node-op.html","searchKeys":["MoveNodeOp","constructor(childId: Long, targetPosition: PositionInRole)","org.modelix.model.operations.MoveNodeOp.MoveNodeOp"]},{"name":"constructor(data: CPTree?, repositoryId_: RepositoryId?, store_: IDeserializingKeyValueStore, useRoleIds: Boolean = false)","description":"org.modelix.model.lazy.CLTree.CLTree","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/-c-l-tree.html","searchKeys":["CLTree","constructor(data: CPTree?, repositoryId_: RepositoryId?, store_: IDeserializingKeyValueStore, useRoleIds: Boolean = false)","org.modelix.model.lazy.CLTree.CLTree"]},{"name":"constructor(data: CPTree?, store_: IDeserializingKeyValueStore)","description":"org.modelix.model.lazy.CLTree.CLTree","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/-c-l-tree.html","searchKeys":["CLTree","constructor(data: CPTree?, store_: IDeserializingKeyValueStore)","org.modelix.model.lazy.CLTree.CLTree"]},{"name":"constructor(data: CPVersion?, store: IDeserializingKeyValueStore)","description":"org.modelix.model.lazy.CLVersion.CLVersion","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/-c-l-version.html","searchKeys":["CLVersion","constructor(data: CPVersion?, store: IDeserializingKeyValueStore)","org.modelix.model.lazy.CLVersion.CLVersion"]},{"name":"constructor(deserialized: E)","description":"org.modelix.model.lazy.KVEntryReference.KVEntryReference","location":"model-datastructure/org.modelix.model.lazy/-k-v-entry-reference/-k-v-entry-reference.html","searchKeys":["KVEntryReference","constructor(deserialized: E)","org.modelix.model.lazy.KVEntryReference.KVEntryReference"]},{"name":"constructor(deserialized: E)","description":"org.modelix.model.lazy.NonWrittenEntry.NonWrittenEntry","location":"model-datastructure/org.modelix.model.lazy/-non-written-entry/-non-written-entry.html","searchKeys":["NonWrittenEntry","constructor(deserialized: E)","org.modelix.model.lazy.NonWrittenEntry.NonWrittenEntry"]},{"name":"constructor(directStore: IDeserializingKeyValueStore)","description":"org.modelix.model.lazy.PrefetchCache.Companion.ContextIndirectCache.ContextIndirectCache","location":"model-datastructure/org.modelix.model.lazy/-prefetch-cache/-companion/-context-indirect-cache/-context-indirect-cache.html","searchKeys":["ContextIndirectCache","constructor(directStore: IDeserializingKeyValueStore)","org.modelix.model.lazy.PrefetchCache.Companion.ContextIndirectCache.ContextIndirectCache"]},{"name":"constructor(hash: String, deserializer: (String) -> E)","description":"org.modelix.model.lazy.KVEntryReference.KVEntryReference","location":"model-datastructure/org.modelix.model.lazy/-k-v-entry-reference/-k-v-entry-reference.html","searchKeys":["KVEntryReference","constructor(hash: String, deserializer: (String) -> E)","org.modelix.model.lazy.KVEntryReference.KVEntryReference"]},{"name":"constructor(hash: String, deserializer: (String) -> E)","description":"org.modelix.model.lazy.WrittenEntry.WrittenEntry","location":"model-datastructure/org.modelix.model.lazy/-written-entry/-written-entry.html","searchKeys":["WrittenEntry","constructor(hash: String, deserializer: (String) -> E)","org.modelix.model.lazy.WrittenEntry.WrittenEntry"]},{"name":"constructor(hash: String, store: IDeserializingKeyValueStore)","description":"org.modelix.model.lazy.CLVersion.CLVersion","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/-c-l-version.html","searchKeys":["CLVersion","constructor(hash: String, store: IDeserializingKeyValueStore)","org.modelix.model.lazy.CLVersion.CLVersion"]},{"name":"constructor(hash: String?, store: IDeserializingKeyValueStore)","description":"org.modelix.model.lazy.CLTree.CLTree","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/-c-l-tree.html","searchKeys":["CLTree","constructor(hash: String?, store: IDeserializingKeyValueStore)","org.modelix.model.lazy.CLTree.CLTree"]},{"name":"constructor(id: Long)","description":"org.modelix.model.lazy.CLNodeRef.CLNodeRef","location":"model-datastructure/org.modelix.model.lazy/-c-l-node-ref/-c-l-node-ref.html","searchKeys":["CLNodeRef","constructor(id: Long)","org.modelix.model.lazy.CLNodeRef.CLNodeRef"]},{"name":"constructor(id: Long, time: String?, author: String?, treeHash: KVEntryReference<CPTree>?, previousVersion: KVEntryReference<CPVersion>?, originalVersion: KVEntryReference<CPVersion>?, baseVersion: KVEntryReference<CPVersion>?, mergedVersion1: KVEntryReference<CPVersion>?, mergedVersion2: KVEntryReference<CPVersion>?, operations: Array<IOperation>?, operationsHash: KVEntryReference<CPOperationsList>?, numberOfOperations: Int)","description":"org.modelix.model.persistent.CPVersion.CPVersion","location":"model-datastructure/org.modelix.model.persistent/-c-p-version/-c-p-version.html","searchKeys":["CPVersion","constructor(id: Long, time: String?, author: String?, treeHash: KVEntryReference<CPTree>?, previousVersion: KVEntryReference<CPVersion>?, originalVersion: KVEntryReference<CPVersion>?, baseVersion: KVEntryReference<CPVersion>?, mergedVersion1: KVEntryReference<CPVersion>?, mergedVersion2: KVEntryReference<CPVersion>?, operations: Array<IOperation>?, operationsHash: KVEntryReference<CPOperationsList>?, numberOfOperations: Int)","org.modelix.model.persistent.CPVersion.CPVersion"]},{"name":"constructor(id: RepositoryId?, store: IDeserializingKeyValueStore)","description":"org.modelix.model.lazy.CLTree.CLTree","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/-c-l-tree.html","searchKeys":["CLTree","constructor(id: RepositoryId?, store: IDeserializingKeyValueStore)","org.modelix.model.lazy.CLTree.CLTree"]},{"name":"constructor(id: String)","description":"org.modelix.model.lazy.RepositoryId.RepositoryId","location":"model-datastructure/org.modelix.model.lazy/-repository-id/-repository-id.html","searchKeys":["RepositoryId","constructor(id: String)","org.modelix.model.lazy.RepositoryId.RepositoryId"]},{"name":"constructor(id: String, idToHash: KVEntryReference<CPHamtNode>, usesRoleIds: Boolean)","description":"org.modelix.model.persistent.CPTree.CPTree","location":"model-datastructure/org.modelix.model.persistent/-c-p-tree/-c-p-tree.html","searchKeys":["CPTree","constructor(id: String, idToHash: KVEntryReference<CPHamtNode>, usesRoleIds: Boolean)","org.modelix.model.persistent.CPTree.CPTree"]},{"name":"constructor(index: Int, children: LongArray)","description":"org.modelix.model.operations.CapturedInsertPosition.CapturedInsertPosition","location":"model-datastructure/org.modelix.model.operations/-captured-insert-position/-captured-insert-position.html","searchKeys":["CapturedInsertPosition","constructor(index: Int, children: LongArray)","org.modelix.model.operations.CapturedInsertPosition.CapturedInsertPosition"]},{"name":"constructor(intends: List<IOperationIntend>, store: IDeserializingKeyValueStore)","description":"org.modelix.model.operations.RevertToOp.Intend.Intend","location":"model-datastructure/org.modelix.model.operations/-revert-to-op/-intend/-intend.html","searchKeys":["Intend","constructor(intends: List<IOperationIntend>, store: IDeserializingKeyValueStore)","org.modelix.model.operations.RevertToOp.Intend.Intend"]},{"name":"constructor(intends: List<IOperationIntend>, store: IDeserializingKeyValueStore)","description":"org.modelix.model.operations.UndoOp.Intend.Intend","location":"model-datastructure/org.modelix.model.operations/-undo-op/-intend/-intend.html","searchKeys":["Intend","constructor(intends: List<IOperationIntend>, store: IDeserializingKeyValueStore)","org.modelix.model.operations.UndoOp.Intend.Intend"]},{"name":"constructor(key: Long, value: KVEntryReference<CPNode>)","description":"org.modelix.model.persistent.CPHamtLeaf.CPHamtLeaf","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-leaf/-c-p-hamt-leaf.html","searchKeys":["CPHamtLeaf","constructor(key: Long, value: KVEntryReference<CPNode>)","org.modelix.model.persistent.CPHamtLeaf.CPHamtLeaf"]},{"name":"constructor(keyValueStore: IKeyValueStore)","description":"org.modelix.model.lazy.ObjectStoreCache.ObjectStoreCache","location":"model-datastructure/org.modelix.model.lazy/-object-store-cache/-object-store-cache.html","searchKeys":["ObjectStoreCache","constructor(keyValueStore: IKeyValueStore)","org.modelix.model.lazy.ObjectStoreCache.ObjectStoreCache"]},{"name":"constructor(latestKnownVersionRef: KVEntryReference<CPVersion>, versionToRevertToRef: KVEntryReference<CPVersion>)","description":"org.modelix.model.operations.RevertToOp.RevertToOp","location":"model-datastructure/org.modelix.model.operations/-revert-to-op/-revert-to-op.html","searchKeys":["RevertToOp","constructor(latestKnownVersionRef: KVEntryReference<CPVersion>, versionToRevertToRef: KVEntryReference<CPVersion>)","org.modelix.model.operations.RevertToOp.RevertToOp"]},{"name":"constructor(message: String)","description":"org.modelix.model.lazy.DuplicateNodeId.DuplicateNodeId","location":"model-datastructure/org.modelix.model.lazy/-duplicate-node-id/-duplicate-node-id.html","searchKeys":["DuplicateNodeId","constructor(message: String)","org.modelix.model.lazy.DuplicateNodeId.DuplicateNodeId"]},{"name":"constructor(nodeId: Long)","description":"org.modelix.model.lazy.NodeNotFoundException.NodeNotFoundException","location":"model-datastructure/org.modelix.model.lazy/-node-not-found-exception/-node-not-found-exception.html","searchKeys":["NodeNotFoundException","constructor(nodeId: Long)","org.modelix.model.lazy.NodeNotFoundException.NodeNotFoundException"]},{"name":"constructor(nodeId: Long, role: String, value: String?)","description":"org.modelix.model.operations.SetPropertyOp.SetPropertyOp","location":"model-datastructure/org.modelix.model.operations/-set-property-op/-set-property-op.html","searchKeys":["SetPropertyOp","constructor(nodeId: Long, role: String, value: String?)","org.modelix.model.operations.SetPropertyOp.SetPropertyOp"]},{"name":"constructor(nodeId: Long, role: String?)","description":"org.modelix.model.operations.RoleInNode.RoleInNode","location":"model-datastructure/org.modelix.model.operations/-role-in-node/-role-in-node.html","searchKeys":["RoleInNode","constructor(nodeId: Long, role: String?)","org.modelix.model.operations.RoleInNode.RoleInNode"]},{"name":"constructor(nodeId: Long, role: String?, index: Int)","description":"org.modelix.model.operations.PositionInRole.PositionInRole","location":"model-datastructure/org.modelix.model.operations/-position-in-role/-position-in-role.html","searchKeys":["PositionInRole","constructor(nodeId: Long, role: String?, index: Int)","org.modelix.model.operations.PositionInRole.PositionInRole"]},{"name":"constructor(numLevels: Int, bits: Long, child: KVEntryReference<CPHamtNode>)","description":"org.modelix.model.persistent.CPHamtSingle.CPHamtSingle","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-single/-c-p-hamt-single.html","searchKeys":["CPHamtSingle","constructor(numLevels: Int, bits: Long, child: KVEntryReference<CPHamtNode>)","org.modelix.model.persistent.CPHamtSingle.CPHamtSingle"]},{"name":"constructor(oldValue: INodeReference?)","description":"org.modelix.model.operations.SetReferenceOp.Applied.Applied","location":"model-datastructure/org.modelix.model.operations/-set-reference-op/-applied/-applied.html","searchKeys":["Applied","constructor(oldValue: INodeReference?)","org.modelix.model.operations.SetReferenceOp.Applied.Applied"]},{"name":"constructor(oldValue: String?)","description":"org.modelix.model.operations.SetPropertyOp.Applied.Applied","location":"model-datastructure/org.modelix.model.operations/-set-property-op/-applied/-applied.html","searchKeys":["Applied","constructor(oldValue: String?)","org.modelix.model.operations.SetPropertyOp.Applied.Applied"]},{"name":"constructor(operations: Array<IOperation>)","description":"org.modelix.model.persistent.CPOperationsList.CPOperationsList","location":"model-datastructure/org.modelix.model.persistent/-c-p-operations-list/-c-p-operations-list.html","searchKeys":["CPOperationsList","constructor(operations: Array<IOperation>)","org.modelix.model.persistent.CPOperationsList.CPOperationsList"]},{"name":"constructor(position: PositionInRole, childId: Long, concept: IConceptReference?)","description":"org.modelix.model.operations.AddNewChildOp.AddNewChildOp","location":"model-datastructure/org.modelix.model.operations/-add-new-child-op/-add-new-child-op.html","searchKeys":["AddNewChildOp","constructor(position: PositionInRole, childId: Long, concept: IConceptReference?)","org.modelix.model.operations.AddNewChildOp.AddNewChildOp"]},{"name":"constructor(position: PositionInRole, childIds: LongArray, concepts: Array<IConceptReference?>)","description":"org.modelix.model.operations.AddNewChildrenOp.AddNewChildrenOp","location":"model-datastructure/org.modelix.model.operations/-add-new-children-op/-add-new-children-op.html","searchKeys":["AddNewChildrenOp","constructor(position: PositionInRole, childIds: LongArray, concepts: Array<IConceptReference?>)","org.modelix.model.operations.AddNewChildrenOp.AddNewChildrenOp"]},{"name":"constructor(position: PositionInRole, concept: IConceptReference?, properties: Map<String, String?>, references: Map<String, INodeReference?>)","description":"org.modelix.model.operations.DeleteNodeOp.Applied.Applied","location":"model-datastructure/org.modelix.model.operations/-delete-node-op/-applied/-applied.html","searchKeys":["Applied","constructor(position: PositionInRole, concept: IConceptReference?, properties: Map<String, String?>, references: Map<String, INodeReference?>)","org.modelix.model.operations.DeleteNodeOp.Applied.Applied"]},{"name":"constructor(repositoryId: RepositoryId, branchName: String)","description":"org.modelix.model.lazy.BranchReference.BranchReference","location":"model-datastructure/org.modelix.model.lazy/-branch-reference/-branch-reference.html","searchKeys":["BranchReference","constructor(repositoryId: RepositoryId, branchName: String)","org.modelix.model.lazy.BranchReference.BranchReference"]},{"name":"constructor(resultTree: CLTree)","description":"org.modelix.model.lazy.OperationsCompressor.OperationsCompressor","location":"model-datastructure/org.modelix.model.lazy/-operations-compressor/-operations-compressor.html","searchKeys":["OperationsCompressor","constructor(resultTree: CLTree)","org.modelix.model.lazy.OperationsCompressor.OperationsCompressor"]},{"name":"constructor(resultTreeHash: KVEntryReference<CPTree>, position: PositionInRole, childId: Long, concept: IConceptReference?)","description":"org.modelix.model.operations.AddNewChildSubtreeOp.AddNewChildSubtreeOp","location":"model-datastructure/org.modelix.model.operations/-add-new-child-subtree-op/-add-new-child-subtree-op.html","searchKeys":["AddNewChildSubtreeOp","constructor(resultTreeHash: KVEntryReference<CPTree>, position: PositionInRole, childId: Long, concept: IConceptReference?)","org.modelix.model.operations.AddNewChildSubtreeOp.AddNewChildSubtreeOp"]},{"name":"constructor(resultTreeHash: KVEntryReference<CPTree>, subtreeRootId: Long)","description":"org.modelix.model.operations.BulkUpdateOp.BulkUpdateOp","location":"model-datastructure/org.modelix.model.operations/-bulk-update-op/-bulk-update-op.html","searchKeys":["BulkUpdateOp","constructor(resultTreeHash: KVEntryReference<CPTree>, subtreeRootId: Long)","org.modelix.model.operations.BulkUpdateOp.BulkUpdateOp"]},{"name":"constructor(roleInNode: RoleInNode, index: Int)","description":"org.modelix.model.operations.PositionInRole.PositionInRole","location":"model-datastructure/org.modelix.model.operations/-position-in-role/-position-in-role.html","searchKeys":["PositionInRole","constructor(roleInNode: RoleInNode, index: Int)","org.modelix.model.operations.PositionInRole.PositionInRole"]},{"name":"constructor(serializedRef: String)","description":"org.modelix.model.persistent.CPNodeRef.ForeignRef.ForeignRef","location":"model-datastructure/org.modelix.model.persistent/-c-p-node-ref/-foreign-ref/-foreign-ref.html","searchKeys":["ForeignRef","constructor(serializedRef: String)","org.modelix.model.persistent.CPNodeRef.ForeignRef.ForeignRef"]},{"name":"constructor(siblingsBefore: LongArray, siblingsAfter: LongArray)","description":"org.modelix.model.operations.CapturedInsertPosition.CapturedInsertPosition","location":"model-datastructure/org.modelix.model.operations/-captured-insert-position/-captured-insert-position.html","searchKeys":["CapturedInsertPosition","constructor(siblingsBefore: LongArray, siblingsAfter: LongArray)","org.modelix.model.operations.CapturedInsertPosition.CapturedInsertPosition"]},{"name":"constructor(sourceId: Long, role: String, target: INodeReference?)","description":"org.modelix.model.operations.SetReferenceOp.SetReferenceOp","location":"model-datastructure/org.modelix.model.operations/-set-reference-op/-set-reference-op.html","searchKeys":["SetReferenceOp","constructor(sourceId: Long, role: String, target: INodeReference?)","org.modelix.model.operations.SetReferenceOp.SetReferenceOp"]},{"name":"constructor(sourcePosition: PositionInRole)","description":"org.modelix.model.operations.MoveNodeOp.Applied.Applied","location":"model-datastructure/org.modelix.model.operations/-move-node-op/-applied/-applied.html","searchKeys":["Applied","constructor(sourcePosition: PositionInRole)","org.modelix.model.operations.MoveNodeOp.Applied.Applied"]},{"name":"constructor(store: IDeserializingKeyValueStore)","description":"org.modelix.model.lazy.BulkQuery.BulkQuery","location":"model-datastructure/org.modelix.model.lazy/-bulk-query/-bulk-query.html","searchKeys":["BulkQuery","constructor(store: IDeserializingKeyValueStore)","org.modelix.model.lazy.BulkQuery.BulkQuery"]},{"name":"constructor(store: IDeserializingKeyValueStore)","description":"org.modelix.model.lazy.CLTree.Builder.Builder","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/-builder/-builder.html","searchKeys":["Builder","constructor(store: IDeserializingKeyValueStore)","org.modelix.model.lazy.CLTree.Builder.Builder"]},{"name":"constructor(store: IDeserializingKeyValueStore)","description":"org.modelix.model.lazy.CLTree.CLTree","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/-c-l-tree.html","searchKeys":["CLTree","constructor(store: IDeserializingKeyValueStore)","org.modelix.model.lazy.CLTree.CLTree"]},{"name":"constructor(store: IDeserializingKeyValueStore)","description":"org.modelix.model.lazy.NonBulkQuery.NonBulkQuery","location":"model-datastructure/org.modelix.model.lazy/-non-bulk-query/-non-bulk-query.html","searchKeys":["NonBulkQuery","constructor(store: IDeserializingKeyValueStore)","org.modelix.model.lazy.NonBulkQuery.NonBulkQuery"]},{"name":"constructor(store: IDeserializingKeyValueStore)","description":"org.modelix.model.lazy.PrefetchCache.PrefetchCache","location":"model-datastructure/org.modelix.model.lazy/-prefetch-cache/-prefetch-cache.html","searchKeys":["PrefetchCache","constructor(store: IDeserializingKeyValueStore)","org.modelix.model.lazy.PrefetchCache.PrefetchCache"]},{"name":"constructor(store: IDeserializingKeyValueStore)","description":"org.modelix.model.operations.AddNewChildSubtreeOp.Applied.Applied","location":"model-datastructure/org.modelix.model.operations/-add-new-child-subtree-op/-applied/-applied.html","searchKeys":["Applied","constructor(store: IDeserializingKeyValueStore)","org.modelix.model.operations.AddNewChildSubtreeOp.Applied.Applied"]},{"name":"constructor(storeCache: IDeserializingKeyValueStore, idGenerator: IIdGenerator)","description":"org.modelix.model.VersionMerger.VersionMerger","location":"model-datastructure/org.modelix.model/-version-merger/-version-merger.html","searchKeys":["VersionMerger","constructor(storeCache: IDeserializingKeyValueStore, idGenerator: IIdGenerator)","org.modelix.model.VersionMerger.VersionMerger"]},{"name":"constructor(transaction: IWriteTransaction, otBranch: OTBranch, idGenerator: IIdGenerator, store: IDeserializingKeyValueStore)","description":"org.modelix.model.operations.OTWriteTransaction.OTWriteTransaction","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/-o-t-write-transaction.html","searchKeys":["OTWriteTransaction","constructor(transaction: IWriteTransaction, otBranch: OTBranch, idGenerator: IIdGenerator, store: IDeserializingKeyValueStore)","org.modelix.model.operations.OTWriteTransaction.OTWriteTransaction"]},{"name":"constructor(tree: CLTree, data: CPNode)","description":"org.modelix.model.lazy.CLNode.CLNode","location":"model-datastructure/org.modelix.model.lazy/-c-l-node/-c-l-node.html","searchKeys":["CLNode","constructor(tree: CLTree, data: CPNode)","org.modelix.model.lazy.CLNode.CLNode"]},{"name":"constructor(tree: CLTree, id: Long, concept: String?, parentId: Long, roleInParent: String?, childrenIds: LongArray, propertyRoles: Array<String>, propertyValues: Array<String>, referenceRoles: Array<String>, referenceTargets: Array<CPNodeRef>)","description":"org.modelix.model.lazy.CLNode.CLNode","location":"model-datastructure/org.modelix.model.lazy/-c-l-node/-c-l-node.html","searchKeys":["CLNode","constructor(tree: CLTree, id: Long, concept: String?, parentId: Long, roleInParent: String?, childrenIds: LongArray, propertyRoles: Array<String>, propertyValues: Array<String>, referenceRoles: Array<String>, referenceTargets: Array<CPNodeRef>)","org.modelix.model.lazy.CLNode.CLNode"]},{"name":"constructor(value: T)","description":"org.modelix.model.lazy.BulkQuery.Value.Value","location":"model-datastructure/org.modelix.model.lazy/-bulk-query/-value/-value.html","searchKeys":["Value","constructor(value: T)","org.modelix.model.lazy.BulkQuery.Value.Value"]},{"name":"constructor(value: T)","description":"org.modelix.model.lazy.NonBulkQuery.Value.Value","location":"model-datastructure/org.modelix.model.lazy/-non-bulk-query/-value/-value.html","searchKeys":["Value","constructor(value: T)","org.modelix.model.lazy.NonBulkQuery.Value.Value"]},{"name":"constructor(versionHash: KVEntryReference<CPVersion>)","description":"org.modelix.model.operations.UndoOp.UndoOp","location":"model-datastructure/org.modelix.model.operations/-undo-op/-undo-op.html","searchKeys":["UndoOp","constructor(versionHash: KVEntryReference<CPVersion>)","org.modelix.model.operations.UndoOp.UndoOp"]},{"name":"constructor(writtenOrUnwrittenReference: IKVEntryReference<E>)","description":"org.modelix.model.lazy.KVEntryReference.KVEntryReference","location":"model-datastructure/org.modelix.model.lazy/-k-v-entry-reference/-k-v-entry-reference.html","searchKeys":["KVEntryReference","constructor(writtenOrUnwrittenReference: IKVEntryReference<E>)","org.modelix.model.lazy.KVEntryReference.KVEntryReference"]},{"name":"data class BranchReference(val repositoryId: RepositoryId, val branchName: String)","description":"org.modelix.model.lazy.BranchReference","location":"model-datastructure/org.modelix.model.lazy/-branch-reference/index.html","searchKeys":["BranchReference","data class BranchReference(val repositoryId: RepositoryId, val branchName: String)","org.modelix.model.lazy.BranchReference"]},{"name":"data class CLNodeRef(val id: Long)","description":"org.modelix.model.lazy.CLNodeRef","location":"model-datastructure/org.modelix.model.lazy/-c-l-node-ref/index.html","searchKeys":["CLNodeRef","data class CLNodeRef(val id: Long)","org.modelix.model.lazy.CLNodeRef"]},{"name":"data class ForeignRef(val serializedRef: String) : CPNodeRef","description":"org.modelix.model.persistent.CPNodeRef.ForeignRef","location":"model-datastructure/org.modelix.model.persistent/-c-p-node-ref/-foreign-ref/index.html","searchKeys":["ForeignRef","data class ForeignRef(val serializedRef: String) : CPNodeRef","org.modelix.model.persistent.CPNodeRef.ForeignRef"]},{"name":"data class PositionInRole(val roleInNode: RoleInNode, val index: Int)","description":"org.modelix.model.operations.PositionInRole","location":"model-datastructure/org.modelix.model.operations/-position-in-role/index.html","searchKeys":["PositionInRole","data class PositionInRole(val roleInNode: RoleInNode, val index: Int)","org.modelix.model.operations.PositionInRole"]},{"name":"data class RepositoryId(val id: String)","description":"org.modelix.model.lazy.RepositoryId","location":"model-datastructure/org.modelix.model.lazy/-repository-id/index.html","searchKeys":["RepositoryId","data class RepositoryId(val id: String)","org.modelix.model.lazy.RepositoryId"]},{"name":"data class RoleInNode(val nodeId: Long, val role: String?)","description":"org.modelix.model.operations.RoleInNode","location":"model-datastructure/org.modelix.model.operations/-role-in-node/index.html","searchKeys":["RoleInNode","data class RoleInNode(val nodeId: Long, val role: String?)","org.modelix.model.operations.RoleInNode"]},{"name":"expect class IdGenerator : IIdGenerator","description":"org.modelix.model.client.IdGenerator","location":"model-datastructure/org.modelix.model.client/-id-generator/index.html","searchKeys":["IdGenerator","expect class IdGenerator : IIdGenerator","org.modelix.model.client.IdGenerator"]},{"name":"expect fun <K, V> createLRUMap(size: Int): MutableMap<K, V>","description":"org.modelix.model.createLRUMap","location":"model-datastructure/org.modelix.model/create-l-r-u-map.html","searchKeys":["createLRUMap","expect fun <K, V> createLRUMap(size: Int): MutableMap<K, V>","org.modelix.model.createLRUMap"]},{"name":"expect fun base64encode(input: ByteArray): String","description":"org.modelix.model.persistent.PlatformSpecificHashUtil.base64encode","location":"model-datastructure/org.modelix.model.persistent/-platform-specific-hash-util/base64encode.html","searchKeys":["base64encode","expect fun base64encode(input: ByteArray): String","org.modelix.model.persistent.PlatformSpecificHashUtil.base64encode"]},{"name":"expect fun bitCount(bits: Int): Int","description":"org.modelix.model.bitCount","location":"model-datastructure/org.modelix.model/bit-count.html","searchKeys":["bitCount","expect fun bitCount(bits: Int): Int","org.modelix.model.bitCount"]},{"name":"expect fun escape(value: String?): String","description":"org.modelix.model.persistent.SerializationUtil.escape","location":"model-datastructure/org.modelix.model.persistent/-serialization-util/escape.html","searchKeys":["escape","expect fun escape(value: String?): String","org.modelix.model.persistent.SerializationUtil.escape"]},{"name":"expect fun generate(quantity: Int): LongRange","description":"org.modelix.model.client.IdGenerator.generate","location":"model-datastructure/org.modelix.model.client/-id-generator/generate.html","searchKeys":["generate","expect fun generate(quantity: Int): LongRange","org.modelix.model.client.IdGenerator.generate"]},{"name":"expect fun getInstance(clientId: Int): IdGenerator","description":"org.modelix.model.client.IdGenerator.Companion.getInstance","location":"model-datastructure/org.modelix.model.client/-id-generator/-companion/get-instance.html","searchKeys":["getInstance","expect fun getInstance(clientId: Int): IdGenerator","org.modelix.model.client.IdGenerator.Companion.getInstance"]},{"name":"expect fun intFromHex(hex: String): Int","description":"org.modelix.model.persistent.SerializationUtil.intFromHex","location":"model-datastructure/org.modelix.model.persistent/-serialization-util/int-from-hex.html","searchKeys":["intFromHex","expect fun intFromHex(hex: String): Int","org.modelix.model.persistent.SerializationUtil.intFromHex"]},{"name":"expect fun intToHex(value: Int): String","description":"org.modelix.model.persistent.SerializationUtil.intToHex","location":"model-datastructure/org.modelix.model.persistent/-serialization-util/int-to-hex.html","searchKeys":["intToHex","expect fun intToHex(value: Int): String","org.modelix.model.persistent.SerializationUtil.intToHex"]},{"name":"expect fun longFromHex(hex: String): Long","description":"org.modelix.model.persistent.SerializationUtil.longFromHex","location":"model-datastructure/org.modelix.model.persistent/-serialization-util/long-from-hex.html","searchKeys":["longFromHex","expect fun longFromHex(hex: String): Long","org.modelix.model.persistent.SerializationUtil.longFromHex"]},{"name":"expect fun longToHex(value: Long): String","description":"org.modelix.model.persistent.SerializationUtil.longToHex","location":"model-datastructure/org.modelix.model.persistent/-serialization-util/long-to-hex.html","searchKeys":["longToHex","expect fun longToHex(value: Long): String","org.modelix.model.persistent.SerializationUtil.longToHex"]},{"name":"expect fun newInstance(clientId: Int): IdGenerator","description":"org.modelix.model.client.IdGenerator.Companion.newInstance","location":"model-datastructure/org.modelix.model.client/-id-generator/-companion/new-instance.html","searchKeys":["newInstance","expect fun newInstance(clientId: Int): IdGenerator","org.modelix.model.client.IdGenerator.Companion.newInstance"]},{"name":"expect fun randomUUID(): String","description":"org.modelix.model.randomUUID","location":"model-datastructure/org.modelix.model/random-u-u-i-d.html","searchKeys":["randomUUID","expect fun randomUUID(): String","org.modelix.model.randomUUID"]},{"name":"expect fun sha256asByteArray(input: String): ByteArray","description":"org.modelix.model.persistent.PlatformSpecificHashUtil.sha256asByteArray","location":"model-datastructure/org.modelix.model.persistent/-platform-specific-hash-util/sha256as-byte-array.html","searchKeys":["sha256asByteArray","expect fun sha256asByteArray(input: String): ByteArray","org.modelix.model.persistent.PlatformSpecificHashUtil.sha256asByteArray"]},{"name":"expect fun sleep(milliseconds: Long)","description":"org.modelix.model.sleep","location":"model-datastructure/org.modelix.model/sleep.html","searchKeys":["sleep","expect fun sleep(milliseconds: Long)","org.modelix.model.sleep"]},{"name":"expect fun unescape(value: String?): String?","description":"org.modelix.model.persistent.SerializationUtil.unescape","location":"model-datastructure/org.modelix.model.persistent/-serialization-util/unescape.html","searchKeys":["unescape","expect fun unescape(value: String?): String?","org.modelix.model.persistent.SerializationUtil.unescape"]},{"name":"expect object Companion","description":"org.modelix.model.client.IdGenerator.Companion","location":"model-datastructure/org.modelix.model.client/-id-generator/-companion/index.html","searchKeys":["Companion","expect object Companion","org.modelix.model.client.IdGenerator.Companion"]},{"name":"expect object PlatformSpecificHashUtil","description":"org.modelix.model.persistent.PlatformSpecificHashUtil","location":"model-datastructure/org.modelix.model.persistent/-platform-specific-hash-util/index.html","searchKeys":["PlatformSpecificHashUtil","expect object PlatformSpecificHashUtil","org.modelix.model.persistent.PlatformSpecificHashUtil"]},{"name":"expect object SerializationUtil","description":"org.modelix.model.persistent.SerializationUtil","location":"model-datastructure/org.modelix.model.persistent/-serialization-util/index.html","searchKeys":["SerializationUtil","expect object SerializationUtil","org.modelix.model.persistent.SerializationUtil"]},{"name":"expect open override fun generate(): Long","description":"org.modelix.model.client.IdGenerator.generate","location":"model-datastructure/org.modelix.model.client/-id-generator/generate.html","searchKeys":["generate","expect open override fun generate(): Long","org.modelix.model.client.IdGenerator.generate"]},{"name":"external class Sha256","description":"Sha256","location":"model-datastructure/[root]/-sha256/index.html","searchKeys":["Sha256","external class Sha256","Sha256"]},{"name":"external fun decodeURIComponent(encodedURI: String): String","description":"org.modelix.model.persistent.decodeURIComponent","location":"model-datastructure/org.modelix.model.persistent/decode-u-r-i-component.html","searchKeys":["decodeURIComponent","external fun decodeURIComponent(encodedURI: String): String","org.modelix.model.persistent.decodeURIComponent"]},{"name":"external fun encodeURIComponent(input: String): String","description":"org.modelix.model.persistent.encodeURIComponent","location":"model-datastructure/org.modelix.model.persistent/encode-u-r-i-component.html","searchKeys":["encodeURIComponent","external fun encodeURIComponent(input: String): String","org.modelix.model.persistent.encodeURIComponent"]},{"name":"external object Base64","description":"org.modelix.model.persistent.Base64","location":"model-datastructure/org.modelix.model.persistent/-base64/index.html","searchKeys":["Base64","external object Base64","org.modelix.model.persistent.Base64"]},{"name":"external object uuid","description":"org.modelix.model.uuid","location":"model-datastructure/org.modelix.model/uuid/index.html","searchKeys":["uuid","external object uuid","org.modelix.model.uuid"]},{"name":"fun <K, V> Map<K, V?>.filterNotNullValues(): Map<K, V>","description":"org.modelix.model.lazy.filterNotNullValues","location":"model-datastructure/org.modelix.model.lazy/filter-not-null-values.html","searchKeys":["filterNotNullValues","fun <K, V> Map<K, V?>.filterNotNullValues(): Map<K, V>","org.modelix.model.lazy.filterNotNullValues"]},{"name":"fun <T : IKVValue> query(key: KVEntryReference<T>, callback: (T) -> Unit)","description":"org.modelix.model.lazy.BulkQuery.query","location":"model-datastructure/org.modelix.model.lazy/-bulk-query/query.html","searchKeys":["query","fun <T : IKVValue> query(key: KVEntryReference<T>, callback: (T) -> Unit)","org.modelix.model.lazy.BulkQuery.query"]},{"name":"fun <T : IOperation> registerSerializer(type: KClass<T>, serializer: OperationSerializer.Serializer<T>)","description":"org.modelix.model.persistent.OperationSerializer.registerSerializer","location":"model-datastructure/org.modelix.model.persistent/-operation-serializer/register-serializer.html","searchKeys":["registerSerializer","fun <T : IOperation> registerSerializer(type: KClass<T>, serializer: OperationSerializer.Serializer<T>)","org.modelix.model.persistent.OperationSerializer.registerSerializer"]},{"name":"fun <T> add(array: Array<T>, value: T): Array<T>","description":"org.modelix.model.lazy.COWArrays.add","location":"model-datastructure/org.modelix.model.lazy/-c-o-w-arrays/add.html","searchKeys":["add","fun <T> add(array: Array<T>, value: T): Array<T>","org.modelix.model.lazy.COWArrays.add"]},{"name":"fun <T> addIfAbsent(array: Array<T>, value: T): Array<T>","description":"org.modelix.model.lazy.COWArrays.addIfAbsent","location":"model-datastructure/org.modelix.model.lazy/-c-o-w-arrays/add-if-absent.html","searchKeys":["addIfAbsent","fun <T> addIfAbsent(array: Array<T>, value: T): Array<T>","org.modelix.model.lazy.COWArrays.addIfAbsent"]},{"name":"fun <T> arraycopy(array: Array<out T>, srcPos: Int, dest: Array<in T>, destPos: Int, length: Int)","description":"org.modelix.model.lazy.COWArrays.arraycopy","location":"model-datastructure/org.modelix.model.lazy/-c-o-w-arrays/arraycopy.html","searchKeys":["arraycopy","fun <T> arraycopy(array: Array<out T>, srcPos: Int, dest: Array<in T>, destPos: Int, length: Int)","org.modelix.model.lazy.COWArrays.arraycopy"]},{"name":"fun <T> concat(array1: Array<T>, array2: Array<T>): Array<T>","description":"org.modelix.model.lazy.COWArrays.concat","location":"model-datastructure/org.modelix.model.lazy/-c-o-w-arrays/concat.html","searchKeys":["concat","fun <T> concat(array1: Array<T>, array2: Array<T>): Array<T>","org.modelix.model.lazy.COWArrays.concat"]},{"name":"fun <T> copy(array: Array<T>): Array<T>","description":"org.modelix.model.lazy.COWArrays.copy","location":"model-datastructure/org.modelix.model.lazy/-c-o-w-arrays/copy.html","searchKeys":["copy","fun <T> copy(array: Array<T>): Array<T>","org.modelix.model.lazy.COWArrays.copy"]},{"name":"fun <T> indexOf(array: Array<T>, value: T): Int","description":"org.modelix.model.lazy.COWArrays.indexOf","location":"model-datastructure/org.modelix.model.lazy/-c-o-w-arrays/index-of.html","searchKeys":["indexOf","fun <T> indexOf(array: Array<T>, value: T): Int","org.modelix.model.lazy.COWArrays.indexOf"]},{"name":"fun <T> with(store_: IDeserializingKeyValueStore, f: () -> T): T","description":"org.modelix.model.lazy.PrefetchCache.Companion.with","location":"model-datastructure/org.modelix.model.lazy/-prefetch-cache/-companion/with.html","searchKeys":["with","fun <T> with(store_: IDeserializingKeyValueStore, f: () -> T): T","org.modelix.model.lazy.PrefetchCache.Companion.with"]},{"name":"fun <T> with(tree: ITree, f: () -> T): T","description":"org.modelix.model.lazy.PrefetchCache.Companion.with","location":"model-datastructure/org.modelix.model.lazy/-prefetch-cache/-companion/with.html","searchKeys":["with","fun <T> with(tree: ITree, f: () -> T): T","org.modelix.model.lazy.PrefetchCache.Companion.with"]},{"name":"fun CLVersion.computeDelta(baseVersion: CLVersion?): Map<String, String>","description":"org.modelix.model.lazy.computeDelta","location":"model-datastructure/org.modelix.model.lazy/compute-delta.html","searchKeys":["computeDelta","fun CLVersion.computeDelta(baseVersion: CLVersion?): Map<String, String>","org.modelix.model.lazy.computeDelta"]},{"name":"fun CLVersion.runWrite(idGenerator: IIdGenerator, author: String?, body: (IWriteTransaction) -> Unit): CLVersion","description":"org.modelix.model.lazy.runWrite","location":"model-datastructure/org.modelix.model.lazy/run-write.html","searchKeys":["runWrite","fun CLVersion.runWrite(idGenerator: IIdGenerator, author: String?, body: (IWriteTransaction) -> Unit): CLVersion","org.modelix.model.lazy.runWrite"]},{"name":"fun ITransaction.unwrapAll(): List<ITransaction>","description":"org.modelix.model.unwrapAll","location":"model-datastructure/org.modelix.model/unwrap-all.html","searchKeys":["unwrapAll","fun ITransaction.unwrapAll(): List<ITransaction>","org.modelix.model.unwrapAll"]},{"name":"fun ITree.unwrap(): ITree","description":"org.modelix.model.lazy.unwrap","location":"model-datastructure/org.modelix.model.lazy/unwrap.html","searchKeys":["unwrap","fun ITree.unwrap(): ITree","org.modelix.model.lazy.unwrap"]},{"name":"fun IWriteTransaction.applyOperation(op: IOperation)","description":"org.modelix.model.operations.applyOperation","location":"model-datastructure/org.modelix.model.operations/apply-operation.html","searchKeys":["applyOperation","fun IWriteTransaction.applyOperation(op: IOperation)","org.modelix.model.operations.applyOperation"]},{"name":"fun add(array: LongArray, value: Long): LongArray","description":"org.modelix.model.lazy.COWArrays.add","location":"model-datastructure/org.modelix.model.lazy/-c-o-w-arrays/add.html","searchKeys":["add","fun add(array: LongArray, value: Long): LongArray","org.modelix.model.lazy.COWArrays.add"]},{"name":"fun add(array: LongArray, values: LongArray): LongArray","description":"org.modelix.model.lazy.COWArrays.add","location":"model-datastructure/org.modelix.model.lazy/-c-o-w-arrays/add.html","searchKeys":["add","fun add(array: LongArray, values: LongArray): LongArray","org.modelix.model.lazy.COWArrays.add"]},{"name":"fun afterApply(baseTree: CLTree): BulkUpdateOp.Applied","description":"org.modelix.model.operations.BulkUpdateOp.afterApply","location":"model-datastructure/org.modelix.model.operations/-bulk-update-op/after-apply.html","searchKeys":["afterApply","fun afterApply(baseTree: CLTree): BulkUpdateOp.Applied","org.modelix.model.operations.BulkUpdateOp.afterApply"]},{"name":"fun apply(op: IOperation)","description":"org.modelix.model.operations.OTWriteTransaction.apply","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/apply.html","searchKeys":["apply","fun apply(op: IOperation)","org.modelix.model.operations.OTWriteTransaction.apply"]},{"name":"fun arraycopy(array: LongArray, srcPos: Int, dest: LongArray, destPos: Int, length: Int)","description":"org.modelix.model.lazy.COWArrays.arraycopy","location":"model-datastructure/org.modelix.model.lazy/-c-o-w-arrays/arraycopy.html","searchKeys":["arraycopy","fun arraycopy(array: LongArray, srcPos: Int, dest: LongArray, destPos: Int, length: Int)","org.modelix.model.lazy.COWArrays.arraycopy"]},{"name":"fun build(): CLTree","description":"org.modelix.model.lazy.CLTree.Builder.build","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/-builder/build.html","searchKeys":["build","fun build(): CLTree","org.modelix.model.lazy.CLTree.Builder.build"]},{"name":"fun builder(store: IDeserializingKeyValueStore): CLTree.Builder","description":"org.modelix.model.lazy.CLTree.Companion.builder","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/-companion/builder.html","searchKeys":["builder","fun builder(store: IDeserializingKeyValueStore): CLTree.Builder","org.modelix.model.lazy.CLTree.Companion.builder"]},{"name":"fun checkObjectHashes(entries: Map<String, String?>)","description":"org.modelix.model.persistent.HashUtil.checkObjectHashes","location":"model-datastructure/org.modelix.model.persistent/-hash-util/check-object-hashes.html","searchKeys":["checkObjectHashes","fun checkObjectHashes(entries: Map<String, String?>)","org.modelix.model.persistent.HashUtil.checkObjectHashes"]},{"name":"fun checkRepositoryIds(v1: CLVersion, v2: CLVersion)","description":"org.modelix.model.VersionMerger.checkRepositoryIds","location":"model-datastructure/org.modelix.model/-version-merger/check-repository-ids.html","searchKeys":["checkRepositoryIds","fun checkRepositoryIds(v1: CLVersion, v2: CLVersion)","org.modelix.model.VersionMerger.checkRepositoryIds"]},{"name":"fun clearCache()","description":"org.modelix.model.lazy.ObjectStoreCache.clearCache","location":"model-datastructure/org.modelix.model.lazy/-object-store-cache/clear-cache.html","searchKeys":["clearCache","fun clearCache()","org.modelix.model.lazy.ObjectStoreCache.clearCache"]},{"name":"fun commonBaseVersion(leftVersion: CLVersion?, rightVersion: CLVersion?): CLVersion?","description":"org.modelix.model.VersionMerger.Companion.commonBaseVersion","location":"model-datastructure/org.modelix.model/-version-merger/-companion/common-base-version.html","searchKeys":["commonBaseVersion","fun commonBaseVersion(leftVersion: CLVersion?, rightVersion: CLVersion?): CLVersion?","org.modelix.model.VersionMerger.Companion.commonBaseVersion"]},{"name":"fun compressOperations(ops: Array<IOperation>): Array<IOperation>","description":"org.modelix.model.lazy.OperationsCompressor.compressOperations","location":"model-datastructure/org.modelix.model.lazy/-operations-compressor/compress-operations.html","searchKeys":["compressOperations","fun compressOperations(ops: Array<IOperation>): Array<IOperation>","org.modelix.model.lazy.OperationsCompressor.compressOperations"]},{"name":"fun contextIndirectCache(store: IDeserializingKeyValueStore): IDeserializingKeyValueStore","description":"org.modelix.model.lazy.PrefetchCache.Companion.contextIndirectCache","location":"model-datastructure/org.modelix.model.lazy/-prefetch-cache/-companion/context-indirect-cache.html","searchKeys":["contextIndirectCache","fun contextIndirectCache(store: IDeserializingKeyValueStore): IDeserializingKeyValueStore","org.modelix.model.lazy.PrefetchCache.Companion.contextIndirectCache"]},{"name":"fun copy(array: LongArray): LongArray","description":"org.modelix.model.lazy.COWArrays.copy","location":"model-datastructure/org.modelix.model.lazy/-c-o-w-arrays/copy.html","searchKeys":["copy","fun copy(array: LongArray): LongArray","org.modelix.model.lazy.COWArrays.copy"]},{"name":"fun create(bitmap: Int, childHashes: Array<KVEntryReference<CPHamtNode>>): CPHamtInternal","description":"org.modelix.model.persistent.CPHamtInternal.Companion.create","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-internal/-companion/create.html","searchKeys":["create","fun create(bitmap: Int, childHashes: Array<KVEntryReference<CPHamtNode>>): CPHamtInternal","org.modelix.model.persistent.CPHamtInternal.Companion.create"]},{"name":"fun create(id: Long, concept: String?, parentId: Long, roleInParent: String?, childrenIds: LongArray, propertyRoles: Array<String>, propertyValues: Array<String>, referenceRoles: Array<String>, referenceTargets: Array<CPNodeRef>): CPNode","description":"org.modelix.model.persistent.CPNode.Companion.create","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/-companion/create.html","searchKeys":["create","fun create(id: Long, concept: String?, parentId: Long, roleInParent: String?, childrenIds: LongArray, propertyRoles: Array<String>, propertyValues: Array<String>, referenceRoles: Array<String>, referenceTargets: Array<CPNodeRef>): CPNode","org.modelix.model.persistent.CPNode.Companion.create"]},{"name":"fun create(key: Long, childHash: KVEntryReference<CPNode>, shift: Int, store: IDeserializingKeyValueStore): CPHamtNode?","description":"org.modelix.model.persistent.CPHamtInternal.Companion.create","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-internal/-companion/create.html","searchKeys":["create","fun create(key: Long, childHash: KVEntryReference<CPNode>, shift: Int, store: IDeserializingKeyValueStore): CPHamtNode?","org.modelix.model.persistent.CPHamtInternal.Companion.create"]},{"name":"fun create(key: Long, value: KVEntryReference<CPNode>?): CPHamtLeaf?","description":"org.modelix.model.persistent.CPHamtLeaf.Companion.create","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-leaf/-companion/create.html","searchKeys":["create","fun create(key: Long, value: KVEntryReference<CPNode>?): CPHamtLeaf?","org.modelix.model.persistent.CPHamtLeaf.Companion.create"]},{"name":"fun create(tree: CLTree, data: CPNode?): CLNode?","description":"org.modelix.model.lazy.CLNode.Companion.create","location":"model-datastructure/org.modelix.model.lazy/-c-l-node/-companion/create.html","searchKeys":["create","fun create(tree: CLTree, data: CPNode?): CLNode?","org.modelix.model.lazy.CLNode.Companion.create"]},{"name":"fun createAutoMerge(id: Long, tree: CLTree, baseVersion: CLVersion, mergedVersion1: CLVersion, mergedVersion2: CLVersion, operations: Array<IOperation>, store: IDeserializingKeyValueStore): CLVersion","description":"org.modelix.model.lazy.CLVersion.Companion.createAutoMerge","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/-companion/create-auto-merge.html","searchKeys":["createAutoMerge","fun createAutoMerge(id: Long, tree: CLTree, baseVersion: CLVersion, mergedVersion1: CLVersion, mergedVersion2: CLVersion, operations: Array<IOperation>, store: IDeserializingKeyValueStore): CLVersion","org.modelix.model.lazy.CLVersion.Companion.createAutoMerge"]},{"name":"fun createElement(hash: KVEntryReference<CPNode>?): CPNode?","description":"org.modelix.model.lazy.CLTree.createElement","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/create-element.html","searchKeys":["createElement","fun createElement(hash: KVEntryReference<CPNode>?): CPNode?","org.modelix.model.lazy.CLTree.createElement"]},{"name":"fun createElement(hash: KVEntryReference<CPNode>?, query: IBulkQuery): IBulkQuery.Value<CPNode?>","description":"org.modelix.model.lazy.CLTree.createElement","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/create-element.html","searchKeys":["createElement","fun createElement(hash: KVEntryReference<CPNode>?, query: IBulkQuery): IBulkQuery.Value<CPNode?>","org.modelix.model.lazy.CLTree.createElement"]},{"name":"fun createElements(hashes: List<KVEntryReference<CPNode>>, bulkQuery: IBulkQuery): IBulkQuery.Value<List<CPNode>>","description":"org.modelix.model.lazy.CLTree.createElements","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/create-elements.html","searchKeys":["createElements","fun createElements(hashes: List<KVEntryReference<CPNode>>, bulkQuery: IBulkQuery): IBulkQuery.Value<List<CPNode>>","org.modelix.model.lazy.CLTree.createElements"]},{"name":"fun createEmpty(): CPHamtInternal","description":"org.modelix.model.persistent.CPHamtInternal.Companion.createEmpty","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-internal/-companion/create-empty.html","searchKeys":["createEmpty","fun createEmpty(): CPHamtInternal","org.modelix.model.persistent.CPHamtInternal.Companion.createEmpty"]},{"name":"fun createRegularVersion(id: Long, time: Instant = Clock.System.now(), author: String?, tree: CLTree, baseVersion: CLVersion?, operations: Array<IOperation>): CLVersion","description":"org.modelix.model.lazy.CLVersion.Companion.createRegularVersion","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/-companion/create-regular-version.html","searchKeys":["createRegularVersion","fun createRegularVersion(id: Long, time: Instant = Clock.System.now(), author: String?, tree: CLTree, baseVersion: CLVersion?, operations: Array<IOperation>): CLVersion","org.modelix.model.lazy.CLVersion.Companion.createRegularVersion"]},{"name":"fun createRegularVersion(id: Long, time: String?, author: String?, tree: CLTree, baseVersion: CLVersion?, operations: Array<IOperation>): CLVersion","description":"org.modelix.model.lazy.CLVersion.Companion.createRegularVersion","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/-companion/create-regular-version.html","searchKeys":["createRegularVersion","fun createRegularVersion(id: Long, time: String?, author: String?, tree: CLTree, baseVersion: CLVersion?, operations: Array<IOperation>): CLVersion","org.modelix.model.lazy.CLVersion.Companion.createRegularVersion"]},{"name":"fun decode(input: String): String","description":"org.modelix.model.persistent.Base64.decode","location":"model-datastructure/org.modelix.model.persistent/-base64/decode.html","searchKeys":["decode","fun decode(input: String): String","org.modelix.model.persistent.Base64.decode"]},{"name":"fun decompress(store: IDeserializingKeyValueStore, opsVisitor: (IOperation) -> Unit)","description":"org.modelix.model.operations.AddNewChildSubtreeOp.decompress","location":"model-datastructure/org.modelix.model.operations/-add-new-child-subtree-op/decompress.html","searchKeys":["decompress","fun decompress(store: IDeserializingKeyValueStore, opsVisitor: (IOperation) -> Unit)","org.modelix.model.operations.AddNewChildSubtreeOp.decompress"]},{"name":"fun deleteChild(logicalIndex: Int, store: IDeserializingKeyValueStore): CPHamtNode?","description":"org.modelix.model.persistent.CPHamtInternal.deleteChild","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-internal/delete-child.html","searchKeys":["deleteChild","fun deleteChild(logicalIndex: Int, store: IDeserializingKeyValueStore): CPHamtNode?","org.modelix.model.persistent.CPHamtInternal.deleteChild"]},{"name":"fun deserialize(input: String): CPHamtNode","description":"org.modelix.model.persistent.CPHamtNode.Companion.deserialize","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/-companion/deserialize.html","searchKeys":["deserialize","fun deserialize(input: String): CPHamtNode","org.modelix.model.persistent.CPHamtNode.Companion.deserialize"]},{"name":"fun deserialize(input: String): CPNode","description":"org.modelix.model.persistent.CPNode.Companion.deserialize","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/-companion/deserialize.html","searchKeys":["deserialize","fun deserialize(input: String): CPNode","org.modelix.model.persistent.CPNode.Companion.deserialize"]},{"name":"fun deserialize(input: String): CPOperationsList","description":"org.modelix.model.persistent.CPOperationsList.Companion.deserialize","location":"model-datastructure/org.modelix.model.persistent/-c-p-operations-list/-companion/deserialize.html","searchKeys":["deserialize","fun deserialize(input: String): CPOperationsList","org.modelix.model.persistent.CPOperationsList.Companion.deserialize"]},{"name":"fun deserialize(input: String): CPTree","description":"org.modelix.model.persistent.CPTree.Companion.deserialize","location":"model-datastructure/org.modelix.model.persistent/-c-p-tree/-companion/deserialize.html","searchKeys":["deserialize","fun deserialize(input: String): CPTree","org.modelix.model.persistent.CPTree.Companion.deserialize"]},{"name":"fun deserialize(input: String): CPVersion","description":"org.modelix.model.persistent.CPVersion.Companion.deserialize","location":"model-datastructure/org.modelix.model.persistent/-c-p-version/-companion/deserialize.html","searchKeys":["deserialize","fun deserialize(input: String): CPVersion","org.modelix.model.persistent.CPVersion.Companion.deserialize"]},{"name":"fun deserialize(serialized: String): INodeReference","description":"org.modelix.model.lazy.INodeReferenceSerializer.Companion.deserialize","location":"model-datastructure/org.modelix.model.lazy/-i-node-reference-serializer/-companion/deserialize.html","searchKeys":["deserialize","fun deserialize(serialized: String): INodeReference","org.modelix.model.lazy.INodeReferenceSerializer.Companion.deserialize"]},{"name":"fun deserialize(serialized: String): IOperation","description":"org.modelix.model.persistent.OperationSerializer.deserialize","location":"model-datastructure/org.modelix.model.persistent/-operation-serializer/deserialize.html","searchKeys":["deserialize","fun deserialize(serialized: String): IOperation","org.modelix.model.persistent.OperationSerializer.deserialize"]},{"name":"fun deserializeConcept(serialized: String?): IConceptReference?","description":"org.modelix.model.persistent.OperationSerializer.Companion.deserializeConcept","location":"model-datastructure/org.modelix.model.persistent/-operation-serializer/-companion/deserialize-concept.html","searchKeys":["deserializeConcept","fun deserializeConcept(serialized: String?): IConceptReference?","org.modelix.model.persistent.OperationSerializer.Companion.deserializeConcept"]},{"name":"fun deserializeReference(serialized: String?): INodeReference?","description":"org.modelix.model.persistent.OperationSerializer.Companion.deserializeReference","location":"model-datastructure/org.modelix.model.persistent/-operation-serializer/-companion/deserialize-reference.html","searchKeys":["deserializeReference","fun deserializeReference(serialized: String?): INodeReference?","org.modelix.model.persistent.OperationSerializer.Companion.deserializeReference"]},{"name":"fun digestSync(): Uint8Array","description":"Sha256.digestSync","location":"model-datastructure/[root]/-sha256/digest-sync.html","searchKeys":["digestSync","fun digestSync(): Uint8Array","Sha256.digestSync"]},{"name":"fun emptyStringAsNull(str: String): String?","description":"org.modelix.model.persistent.emptyStringAsNull","location":"model-datastructure/org.modelix.model.persistent/empty-string-as-null.html","searchKeys":["emptyStringAsNull","fun emptyStringAsNull(str: String): String?","org.modelix.model.persistent.emptyStringAsNull"]},{"name":"fun encode(input: String): String","description":"org.modelix.model.persistent.Base64.encode","location":"model-datastructure/org.modelix.model.persistent/-base64/encode.html","searchKeys":["encode","fun encode(input: String): String","org.modelix.model.persistent.Base64.encode"]},{"name":"fun encode(input: String, uriSafe: Boolean): String","description":"org.modelix.model.persistent.Base64.encode","location":"model-datastructure/org.modelix.model.persistent/-base64/encode.html","searchKeys":["encode","fun encode(input: String, uriSafe: Boolean): String","org.modelix.model.persistent.Base64.encode"]},{"name":"fun extractSha256(input: String?): Iterable<String>","description":"org.modelix.model.persistent.HashUtil.extractSha256","location":"model-datastructure/org.modelix.model.persistent/-hash-util/extract-sha256.html","searchKeys":["extractSha256","fun extractSha256(input: String?): Iterable<String>","org.modelix.model.persistent.HashUtil.extractSha256"]},{"name":"fun findIndex(children: LongArray): Int","description":"org.modelix.model.operations.CapturedInsertPosition.findIndex","location":"model-datastructure/org.modelix.model.operations/-captured-insert-position/find-index.html","searchKeys":["findIndex","fun findIndex(children: LongArray): Int","org.modelix.model.operations.CapturedInsertPosition.findIndex"]},{"name":"fun foreign(pointer: String): CPNodeRef","description":"org.modelix.model.persistent.CPNodeRef.Companion.foreign","location":"model-datastructure/org.modelix.model.persistent/-c-p-node-ref/-companion/foreign.html","searchKeys":["foreign","fun foreign(pointer: String): CPNodeRef","org.modelix.model.persistent.CPNodeRef.Companion.foreign"]},{"name":"fun fromString(str: String): CPNodeRef","description":"org.modelix.model.persistent.CPNodeRef.Companion.fromString","location":"model-datastructure/org.modelix.model.persistent/-c-p-node-ref/-companion/from-string.html","searchKeys":["fromString","fun fromString(str: String): CPNodeRef","org.modelix.model.persistent.CPNodeRef.Companion.fromString"]},{"name":"fun fromUint8Array(input: Uint8Array, uriSafe: Boolean): String","description":"org.modelix.model.persistent.Base64.fromUint8Array","location":"model-datastructure/org.modelix.model.persistent/-base64/from-uint8-array.html","searchKeys":["fromUint8Array","fun fromUint8Array(input: Uint8Array, uriSafe: Boolean): String","org.modelix.model.persistent.Base64.fromUint8Array"]},{"name":"fun get(key: Long, bulkQuery: IBulkQuery): IBulkQuery.Value<KVEntryReference<CPNode>?>","description":"org.modelix.model.persistent.CPHamtNode.get","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/get.html","searchKeys":["get","fun get(key: Long, bulkQuery: IBulkQuery): IBulkQuery.Value<KVEntryReference<CPNode>?>","org.modelix.model.persistent.CPHamtNode.get"]},{"name":"fun get(key: Long, store: IDeserializingKeyValueStore): KVEntryReference<CPNode>?","description":"org.modelix.model.persistent.CPHamtNode.get","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/get.html","searchKeys":["get","fun get(key: Long, store: IDeserializingKeyValueStore): KVEntryReference<CPNode>?","org.modelix.model.persistent.CPHamtNode.get"]},{"name":"fun getAll(keys: Iterable<Long>, bulkQuery: IBulkQuery): IBulkQuery.Value<List<KVEntryReference<CPNode>?>>","description":"org.modelix.model.persistent.CPHamtNode.getAll","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/get-all.html","searchKeys":["getAll","fun getAll(keys: Iterable<Long>, bulkQuery: IBulkQuery): IBulkQuery.Value<List<KVEntryReference<CPNode>?>>","org.modelix.model.persistent.CPHamtNode.getAll"]},{"name":"fun getAncestors(bulkQuery: IBulkQuery, includeSelf: Boolean): IBulkQuery.Value<List<CLNode>>","description":"org.modelix.model.lazy.CLNode.getAncestors","location":"model-datastructure/org.modelix.model.lazy/-c-l-node/get-ancestors.html","searchKeys":["getAncestors","fun getAncestors(bulkQuery: IBulkQuery, includeSelf: Boolean): IBulkQuery.Value<List<CLNode>>","org.modelix.model.lazy.CLNode.getAncestors"]},{"name":"fun getBranchKey(): String","description":"org.modelix.model.lazy.RepositoryId.getBranchKey","location":"model-datastructure/org.modelix.model.lazy/-repository-id/get-branch-key.html","searchKeys":["getBranchKey","fun getBranchKey(): String","org.modelix.model.lazy.RepositoryId.getBranchKey"]},{"name":"fun getBranchKey(branchName: String?): String","description":"org.modelix.model.lazy.RepositoryId.getBranchKey","location":"model-datastructure/org.modelix.model.lazy/-repository-id/get-branch-key.html","searchKeys":["getBranchKey","fun getBranchKey(branchName: String?): String","org.modelix.model.lazy.RepositoryId.getBranchKey"]},{"name":"fun getBranchReference(branchName: String? = DEFAULT_BRANCH): BranchReference","description":"org.modelix.model.lazy.RepositoryId.getBranchReference","location":"model-datastructure/org.modelix.model.lazy/-repository-id/get-branch-reference.html","searchKeys":["getBranchReference","fun getBranchReference(branchName: String? = DEFAULT_BRANCH): BranchReference","org.modelix.model.lazy.RepositoryId.getBranchReference"]},{"name":"fun getChild(bulkQuery: IBulkQuery): IBulkQuery.Value<CPHamtNode>","description":"org.modelix.model.persistent.CPHamtSingle.getChild","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-single/get-child.html","searchKeys":["getChild","fun getChild(bulkQuery: IBulkQuery): IBulkQuery.Value<CPHamtNode>","org.modelix.model.persistent.CPHamtSingle.getChild"]},{"name":"fun getChildId(index: Int): Long","description":"org.modelix.model.persistent.CPNode.getChildId","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/get-child-id.html","searchKeys":["getChildId","fun getChildId(index: Int): Long","org.modelix.model.persistent.CPNode.getChildId"]},{"name":"fun getChildren(bulkQuery: IBulkQuery): IBulkQuery.Value<Iterable<CLNode>>","description":"org.modelix.model.lazy.CLNode.getChildren","location":"model-datastructure/org.modelix.model.lazy/-c-l-node/get-children.html","searchKeys":["getChildren","fun getChildren(bulkQuery: IBulkQuery): IBulkQuery.Value<Iterable<CLNode>>","org.modelix.model.lazy.CLNode.getChildren"]},{"name":"fun getChildrenIds(): Iterable<Long>","description":"org.modelix.model.persistent.CPNode.getChildrenIds","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/get-children-ids.html","searchKeys":["getChildrenIds","fun getChildrenIds(): Iterable<Long>","org.modelix.model.persistent.CPNode.getChildrenIds"]},{"name":"fun getData(): CPNode","description":"org.modelix.model.lazy.CLNode.getData","location":"model-datastructure/org.modelix.model.lazy/-c-l-node/get-data.html","searchKeys":["getData","fun getData(): CPNode","org.modelix.model.lazy.CLNode.getData"]},{"name":"fun getDescendants(bulkQuery: IBulkQuery, includeSelf: Boolean): IBulkQuery.Value<Iterable<CLNode>>","description":"org.modelix.model.lazy.CLNode.getDescendants","location":"model-datastructure/org.modelix.model.lazy/-c-l-node/get-descendants.html","searchKeys":["getDescendants","fun getDescendants(bulkQuery: IBulkQuery, includeSelf: Boolean): IBulkQuery.Value<Iterable<CLNode>>","org.modelix.model.lazy.CLNode.getDescendants"]},{"name":"fun getDeserialized(): E","description":"org.modelix.model.lazy.NonWrittenEntry.getDeserialized","location":"model-datastructure/org.modelix.model.lazy/-non-written-entry/get-deserialized.html","searchKeys":["getDeserialized","fun getDeserialized(): E","org.modelix.model.lazy.NonWrittenEntry.getDeserialized"]},{"name":"fun getKey(): String","description":"org.modelix.model.lazy.BranchReference.getKey","location":"model-datastructure/org.modelix.model.lazy/-branch-reference/get-key.html","searchKeys":["getKey","fun getKey(): String","org.modelix.model.lazy.BranchReference.getKey"]},{"name":"fun getMergedVersion1(): CLVersion?","description":"org.modelix.model.lazy.CLVersion.getMergedVersion1","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/get-merged-version1.html","searchKeys":["getMergedVersion1","fun getMergedVersion1(): CLVersion?","org.modelix.model.lazy.CLVersion.getMergedVersion1"]},{"name":"fun getMergedVersion2(): CLVersion?","description":"org.modelix.model.lazy.CLVersion.getMergedVersion2","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/get-merged-version2.html","searchKeys":["getMergedVersion2","fun getMergedVersion2(): CLVersion?","org.modelix.model.lazy.CLVersion.getMergedVersion2"]},{"name":"fun getPendingChanges(): Pair<List<IAppliedOperation>, ITree>","description":"org.modelix.model.operations.OTBranch.getPendingChanges","location":"model-datastructure/org.modelix.model.operations/-o-t-branch/get-pending-changes.html","searchKeys":["getPendingChanges","fun getPendingChanges(): Pair<List<IAppliedOperation>, ITree>","org.modelix.model.operations.OTBranch.getPendingChanges"]},{"name":"fun getPropertyValue(role: String?): String?","description":"org.modelix.model.persistent.CPNode.getPropertyValue","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/get-property-value.html","searchKeys":["getPropertyValue","fun getPropertyValue(role: String?): String?","org.modelix.model.persistent.CPNode.getPropertyValue"]},{"name":"fun getReferenceTarget(role: String?): CPNodeRef?","description":"org.modelix.model.persistent.CPNode.getReferenceTarget","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/get-reference-target.html","searchKeys":["getReferenceTarget","fun getReferenceTarget(role: String?): CPNodeRef?","org.modelix.model.persistent.CPNode.getReferenceTarget"]},{"name":"fun getSerialized(): String","description":"org.modelix.model.lazy.NonWrittenEntry.getSerialized","location":"model-datastructure/org.modelix.model.lazy/-non-written-entry/get-serialized.html","searchKeys":["getSerialized","fun getSerialized(): String","org.modelix.model.lazy.NonWrittenEntry.getSerialized"]},{"name":"fun getSize(): Long","description":"org.modelix.model.lazy.CLTree.getSize","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/get-size.html","searchKeys":["getSize","fun getSize(): Long","org.modelix.model.lazy.CLTree.getSize"]},{"name":"fun getStore(): IDeserializingKeyValueStore","description":"org.modelix.model.operations.OTWriteTransaction.getStore","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/get-store.html","searchKeys":["getStore","fun getStore(): IDeserializingKeyValueStore","org.modelix.model.operations.OTWriteTransaction.getStore"]},{"name":"fun getTimestamp(): Instant?","description":"org.modelix.model.lazy.CLVersion.getTimestamp","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/get-timestamp.html","searchKeys":["getTimestamp","fun getTimestamp(): Instant?","org.modelix.model.lazy.CLVersion.getTimestamp"]},{"name":"fun getTree(): ITree","description":"org.modelix.model.lazy.CLNode.getTree","location":"model-datastructure/org.modelix.model.lazy/-c-l-node/get-tree.html","searchKeys":["getTree","fun getTree(): ITree","org.modelix.model.lazy.CLNode.getTree"]},{"name":"fun global(treeId: String, elementId: Long): CPNodeRef","description":"org.modelix.model.persistent.CPNodeRef.Companion.global","location":"model-datastructure/org.modelix.model.persistent/-c-p-node-ref/-companion/global.html","searchKeys":["global","fun global(treeId: String, elementId: Long): CPNodeRef","org.modelix.model.persistent.CPNodeRef.Companion.global"]},{"name":"fun indexFromKey(key: Long, shift: Int): Int","description":"org.modelix.model.persistent.CPHamtNode.Companion.indexFromKey","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/-companion/index-from-key.html","searchKeys":["indexFromKey","fun indexFromKey(key: Long, shift: Int): Int","org.modelix.model.persistent.CPHamtNode.Companion.indexFromKey"]},{"name":"fun indexOf(array: LongArray, value: Long): Int","description":"org.modelix.model.lazy.COWArrays.indexOf","location":"model-datastructure/org.modelix.model.lazy/-c-o-w-arrays/index-of.html","searchKeys":["indexOf","fun indexOf(array: LongArray, value: Long): Int","org.modelix.model.lazy.COWArrays.indexOf"]},{"name":"fun insert(array: LongArray, index: Int, element: Long): LongArray","description":"org.modelix.model.lazy.COWArrays.insert","location":"model-datastructure/org.modelix.model.lazy/-c-o-w-arrays/insert.html","searchKeys":["insert","fun insert(array: LongArray, index: Int, element: Long): LongArray","org.modelix.model.lazy.COWArrays.insert"]},{"name":"fun insert(array: LongArray, index: Int, elements: LongArray): LongArray","description":"org.modelix.model.lazy.COWArrays.insert","location":"model-datastructure/org.modelix.model.lazy/-c-o-w-arrays/insert.html","searchKeys":["insert","fun insert(array: LongArray, index: Int, elements: LongArray): LongArray","org.modelix.model.lazy.COWArrays.insert"]},{"name":"fun isInBulkMode(): Boolean","description":"org.modelix.model.operations.OTBranch.isInBulkMode","location":"model-datastructure/org.modelix.model.operations/-o-t-branch/is-in-bulk-mode.html","searchKeys":["isInBulkMode","fun isInBulkMode(): Boolean","org.modelix.model.operations.OTBranch.isInBulkMode"]},{"name":"fun isMerge(): Boolean","description":"org.modelix.model.lazy.CLVersion.isMerge","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/is-merge.html","searchKeys":["isMerge","fun isMerge(): Boolean","org.modelix.model.lazy.CLVersion.isMerge"]},{"name":"fun isSha256(value: String?): Boolean","description":"org.modelix.model.persistent.HashUtil.isSha256","location":"model-datastructure/org.modelix.model.persistent/-hash-util/is-sha256.html","searchKeys":["isSha256","fun isSha256(value: String?): Boolean","org.modelix.model.persistent.HashUtil.isSha256"]},{"name":"fun isWritten(): Boolean","description":"org.modelix.model.lazy.KVEntryReference.isWritten","location":"model-datastructure/org.modelix.model.lazy/-k-v-entry-reference/is-written.html","searchKeys":["isWritten","fun isWritten(): Boolean","org.modelix.model.lazy.KVEntryReference.isWritten"]},{"name":"fun isWritten(): Boolean","description":"org.modelix.model.lazy.NonWrittenEntry.isWritten","location":"model-datastructure/org.modelix.model.lazy/-non-written-entry/is-written.html","searchKeys":["isWritten","fun isWritten(): Boolean","org.modelix.model.lazy.NonWrittenEntry.isWritten"]},{"name":"fun levelBits(key: Long, shift: Int): Int","description":"org.modelix.model.persistent.CPHamtNode.Companion.levelBits","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/-companion/level-bits.html","searchKeys":["levelBits","fun levelBits(key: Long, shift: Int): Int","org.modelix.model.persistent.CPHamtNode.Companion.levelBits"]},{"name":"fun load(vararg fromVersions: CLVersion): List<CLVersion>","description":"org.modelix.model.LinearHistory.load","location":"model-datastructure/org.modelix.model/-linear-history/load.html","searchKeys":["load","fun load(vararg fromVersions: CLVersion): List<CLVersion>","org.modelix.model.LinearHistory.load"]},{"name":"fun loadFromHash(hash: String, store: IDeserializingKeyValueStore): CLVersion","description":"org.modelix.model.lazy.CLVersion.Companion.loadFromHash","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/-companion/load-from-hash.html","searchKeys":["loadFromHash","fun loadFromHash(hash: String, store: IDeserializingKeyValueStore): CLVersion","org.modelix.model.lazy.CLVersion.Companion.loadFromHash"]},{"name":"fun local(elementId: Long): CPNodeRef","description":"org.modelix.model.persistent.CPNodeRef.Companion.local","location":"model-datastructure/org.modelix.model.persistent/-c-p-node-ref/-companion/local.html","searchKeys":["local","fun local(elementId: Long): CPNodeRef","org.modelix.model.persistent.CPNodeRef.Companion.local"]},{"name":"fun maskForLevels(numLevels: Int): Long","description":"org.modelix.model.persistent.CPHamtSingle.Companion.maskForLevels","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-single/-companion/mask-for-levels.html","searchKeys":["maskForLevels","fun maskForLevels(numLevels: Int): Long","org.modelix.model.persistent.CPHamtSingle.Companion.maskForLevels"]},{"name":"fun mergeChange(lastMergedVersion: CLVersion, newVersion: CLVersion): CLVersion","description":"org.modelix.model.VersionMerger.mergeChange","location":"model-datastructure/org.modelix.model/-version-merger/merge-change.html","searchKeys":["mergeChange","fun mergeChange(lastMergedVersion: CLVersion, newVersion: CLVersion): CLVersion","org.modelix.model.VersionMerger.mergeChange"]},{"name":"fun nullAsEmptyString(str: String?): String","description":"org.modelix.model.persistent.nullAsEmptyString","location":"model-datastructure/org.modelix.model.persistent/null-as-empty-string.html","searchKeys":["nullAsEmptyString","fun nullAsEmptyString(str: String?): String","org.modelix.model.persistent.nullAsEmptyString"]},{"name":"fun operationApplied(op: IAppliedOperation)","description":"org.modelix.model.operations.OTBranch.operationApplied","location":"model-datastructure/org.modelix.model.operations/-o-t-branch/operation-applied.html","searchKeys":["operationApplied","fun operationApplied(op: IAppliedOperation)","org.modelix.model.operations.OTBranch.operationApplied"]},{"name":"fun operationsInlined(): Boolean","description":"org.modelix.model.lazy.CLVersion.operationsInlined","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/operations-inlined.html","searchKeys":["operationsInlined","fun operationsInlined(): Boolean","org.modelix.model.lazy.CLVersion.operationsInlined"]},{"name":"fun prefetchAll()","description":"org.modelix.model.lazy.CLTree.prefetchAll","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/prefetch-all.html","searchKeys":["prefetchAll","fun prefetchAll()","org.modelix.model.lazy.CLTree.prefetchAll"]},{"name":"fun process()","description":"org.modelix.model.lazy.BulkQuery.process","location":"model-datastructure/org.modelix.model.lazy/-bulk-query/process.html","searchKeys":["process","fun process()","org.modelix.model.lazy.BulkQuery.process"]},{"name":"fun put(data: CPNode, store: IDeserializingKeyValueStore): CPHamtNode?","description":"org.modelix.model.persistent.CPHamtNode.put","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/put.html","searchKeys":["put","fun put(data: CPNode, store: IDeserializingKeyValueStore): CPHamtNode?","org.modelix.model.persistent.CPHamtNode.put"]},{"name":"fun put(key: Long, value: KVEntryReference<CPNode>?, store: IDeserializingKeyValueStore): CPHamtNode?","description":"org.modelix.model.persistent.CPHamtNode.put","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/put.html","searchKeys":["put","fun put(key: Long, value: KVEntryReference<CPNode>?, store: IDeserializingKeyValueStore): CPHamtNode?","org.modelix.model.persistent.CPHamtNode.put"]},{"name":"fun random(): RepositoryId","description":"org.modelix.model.lazy.RepositoryId.Companion.random","location":"model-datastructure/org.modelix.model.lazy/-repository-id/-companion/random.html","searchKeys":["random","fun random(): RepositoryId","org.modelix.model.lazy.RepositoryId.Companion.random"]},{"name":"fun register(serializer: INodeReferenceSerializer)","description":"org.modelix.model.lazy.INodeReferenceSerializer.Companion.register","location":"model-datastructure/org.modelix.model.lazy/-i-node-reference-serializer/-companion/register.html","searchKeys":["register","fun register(serializer: INodeReferenceSerializer)","org.modelix.model.lazy.INodeReferenceSerializer.Companion.register"]},{"name":"fun remove(array: LongArray, value: Long): LongArray","description":"org.modelix.model.lazy.COWArrays.remove","location":"model-datastructure/org.modelix.model.lazy/-c-o-w-arrays/remove.html","searchKeys":["remove","fun remove(array: LongArray, value: Long): LongArray","org.modelix.model.lazy.COWArrays.remove"]},{"name":"fun remove(element: CPNode, store: IDeserializingKeyValueStore): CPHamtNode?","description":"org.modelix.model.persistent.CPHamtNode.remove","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/remove.html","searchKeys":["remove","fun remove(element: CPNode, store: IDeserializingKeyValueStore): CPHamtNode?","org.modelix.model.persistent.CPHamtNode.remove"]},{"name":"fun remove(key: Long, store: IDeserializingKeyValueStore): CPHamtNode?","description":"org.modelix.model.persistent.CPHamtNode.remove","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/remove.html","searchKeys":["remove","fun remove(key: Long, store: IDeserializingKeyValueStore): CPHamtNode?","org.modelix.model.persistent.CPHamtNode.remove"]},{"name":"fun removeAll(array: LongArray, valuesToRemove_: LongArray): LongArray","description":"org.modelix.model.lazy.COWArrays.removeAll","location":"model-datastructure/org.modelix.model.lazy/-c-o-w-arrays/remove-all.html","searchKeys":["removeAll","fun removeAll(array: LongArray, valuesToRemove_: LongArray): LongArray","org.modelix.model.lazy.COWArrays.removeAll"]},{"name":"fun removeAt(array: LongArray, index: Int): LongArray","description":"org.modelix.model.lazy.COWArrays.removeAt","location":"model-datastructure/org.modelix.model.lazy/-c-o-w-arrays/remove-at.html","searchKeys":["removeAt","fun removeAt(array: LongArray, index: Int): LongArray","org.modelix.model.lazy.COWArrays.removeAt"]},{"name":"fun replace(node: CPHamtInternal, store: IDeserializingKeyValueStore): CPHamtSingle","description":"org.modelix.model.persistent.CPHamtSingle.Companion.replace","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-single/-companion/replace.html","searchKeys":["replace","fun replace(node: CPHamtInternal, store: IDeserializingKeyValueStore): CPHamtSingle","org.modelix.model.persistent.CPHamtSingle.Companion.replace"]},{"name":"fun replace(single: CPHamtSingle): CPHamtInternal","description":"org.modelix.model.persistent.CPHamtInternal.Companion.replace","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-internal/-companion/replace.html","searchKeys":["replace","fun replace(single: CPHamtSingle): CPHamtInternal","org.modelix.model.persistent.CPHamtInternal.Companion.replace"]},{"name":"fun replaceIfSingleChild(node: CPHamtInternal, store: IDeserializingKeyValueStore): CPHamtNode","description":"org.modelix.model.persistent.CPHamtSingle.Companion.replaceIfSingleChild","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-single/-companion/replace-if-single-child.html","searchKeys":["replaceIfSingleChild","fun replaceIfSingleChild(node: CPHamtInternal, store: IDeserializingKeyValueStore): CPHamtNode","org.modelix.model.persistent.CPHamtSingle.Companion.replaceIfSingleChild"]},{"name":"fun repositoryId(id: RepositoryId): CLTree.Builder","description":"org.modelix.model.lazy.CLTree.Builder.repositoryId","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/-builder/repository-id.html","searchKeys":["repositoryId","fun repositoryId(id: RepositoryId): CLTree.Builder","org.modelix.model.lazy.CLTree.Builder.repositoryId"]},{"name":"fun repositoryId(id: String): CLTree.Builder","description":"org.modelix.model.lazy.CLTree.Builder.repositoryId","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/-builder/repository-id.html","searchKeys":["repositoryId","fun repositoryId(id: String): CLTree.Builder","org.modelix.model.lazy.CLTree.Builder.repositoryId"]},{"name":"fun resolveElement(id: Long): CPNode?","description":"org.modelix.model.lazy.CLTree.resolveElement","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/resolve-element.html","searchKeys":["resolveElement","fun resolveElement(id: Long): CPNode?","org.modelix.model.lazy.CLTree.resolveElement"]},{"name":"fun resolveElement(id: Long, bulkQuery: IBulkQuery): IBulkQuery.Value<CPNode?>","description":"org.modelix.model.lazy.CLTree.resolveElement","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/resolve-element.html","searchKeys":["resolveElement","fun resolveElement(id: Long, bulkQuery: IBulkQuery): IBulkQuery.Value<CPNode?>","org.modelix.model.lazy.CLTree.resolveElement"]},{"name":"fun resolveElement(ref: CPNodeRef?): CPNode?","description":"org.modelix.model.lazy.CLTree.resolveElement","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/resolve-element.html","searchKeys":["resolveElement","fun resolveElement(ref: CPNodeRef?): CPNode?","org.modelix.model.lazy.CLTree.resolveElement"]},{"name":"fun resolveElements(ids_: Iterable<Long>, bulkQuery: IBulkQuery): IBulkQuery.Value<List<CPNode>>","description":"org.modelix.model.lazy.CLTree.resolveElements","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/resolve-elements.html","searchKeys":["resolveElements","fun resolveElements(ids_: Iterable<Long>, bulkQuery: IBulkQuery): IBulkQuery.Value<List<CPNode>>","org.modelix.model.lazy.CLTree.resolveElements"]},{"name":"fun runBulkUpdate(subtreeRootNodeId: Long = ITree.ROOT_ID, body: () -> Unit)","description":"org.modelix.model.operations.OTBranch.runBulkUpdate","location":"model-datastructure/org.modelix.model.operations/-o-t-branch/run-bulk-update.html","searchKeys":["runBulkUpdate","fun runBulkUpdate(subtreeRootNodeId: Long = ITree.ROOT_ID, body: () -> Unit)","org.modelix.model.operations.OTBranch.runBulkUpdate"]},{"name":"fun serialize(op: IOperation): String","description":"org.modelix.model.persistent.OperationSerializer.serialize","location":"model-datastructure/org.modelix.model.persistent/-operation-serializer/serialize.html","searchKeys":["serialize","fun serialize(op: IOperation): String","org.modelix.model.persistent.OperationSerializer.serialize"]},{"name":"fun serialize(ref: INodeReference): String","description":"org.modelix.model.lazy.INodeReferenceSerializer.Companion.serialize","location":"model-datastructure/org.modelix.model.lazy/-i-node-reference-serializer/-companion/serialize.html","searchKeys":["serialize","fun serialize(ref: INodeReference): String","org.modelix.model.lazy.INodeReferenceSerializer.Companion.serialize"]},{"name":"fun serializeConcept(concept: IConceptReference?): String","description":"org.modelix.model.persistent.OperationSerializer.Companion.serializeConcept","location":"model-datastructure/org.modelix.model.persistent/-operation-serializer/-companion/serialize-concept.html","searchKeys":["serializeConcept","fun serializeConcept(concept: IConceptReference?): String","org.modelix.model.persistent.OperationSerializer.Companion.serializeConcept"]},{"name":"fun serializeReference(obj: INodeReference?): String","description":"org.modelix.model.persistent.OperationSerializer.Companion.serializeReference","location":"model-datastructure/org.modelix.model.persistent/-operation-serializer/-companion/serialize-reference.html","searchKeys":["serializeReference","fun serializeReference(obj: INodeReference?): String","org.modelix.model.persistent.OperationSerializer.Companion.serializeReference"]},{"name":"fun setChild(logicalIndex: Int, child: CPHamtNode?, shift: Int, store: IDeserializingKeyValueStore): CPHamtNode?","description":"org.modelix.model.persistent.CPHamtInternal.setChild","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-internal/set-child.html","searchKeys":["setChild","fun setChild(logicalIndex: Int, child: CPHamtNode?, shift: Int, store: IDeserializingKeyValueStore): CPHamtNode?","org.modelix.model.persistent.CPHamtInternal.setChild"]},{"name":"fun sha256(input: String): String","description":"org.modelix.model.persistent.HashUtil.sha256","location":"model-datastructure/org.modelix.model.persistent/-hash-util/sha256.html","searchKeys":["sha256","fun sha256(input: String): String","org.modelix.model.persistent.HashUtil.sha256"]},{"name":"fun sha256asByteArray(input: String): ByteArray","description":"org.modelix.model.persistent.HashUtil.sha256asByteArray","location":"model-datastructure/org.modelix.model.persistent/-hash-util/sha256as-byte-array.html","searchKeys":["sha256asByteArray","fun sha256asByteArray(input: String): ByteArray","org.modelix.model.persistent.HashUtil.sha256asByteArray"]},{"name":"fun splitOneLevel(): CPHamtSingle","description":"org.modelix.model.persistent.CPHamtSingle.splitOneLevel","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-single/split-one-level.html","searchKeys":["splitOneLevel","fun splitOneLevel(): CPHamtSingle","org.modelix.model.persistent.CPHamtSingle.splitOneLevel"]},{"name":"fun success(value: T)","description":"org.modelix.model.lazy.BulkQuery.Value.success","location":"model-datastructure/org.modelix.model.lazy/-bulk-query/-value/success.html","searchKeys":["success","fun success(value: T)","org.modelix.model.lazy.BulkQuery.Value.success"]},{"name":"fun tryParseBranch(key: String): BranchReference?","description":"org.modelix.model.lazy.BranchReference.Companion.tryParseBranch","location":"model-datastructure/org.modelix.model.lazy/-branch-reference/-companion/try-parse-branch.html","searchKeys":["tryParseBranch","fun tryParseBranch(key: String): BranchReference?","org.modelix.model.lazy.BranchReference.Companion.tryParseBranch"]},{"name":"fun unregister(serializer: INodeReferenceSerializer)","description":"org.modelix.model.lazy.INodeReferenceSerializer.Companion.unregister","location":"model-datastructure/org.modelix.model.lazy/-i-node-reference-serializer/-companion/unregister.html","searchKeys":["unregister","fun unregister(serializer: INodeReferenceSerializer)","org.modelix.model.lazy.INodeReferenceSerializer.Companion.unregister"]},{"name":"fun unwrap(store: IDeserializingKeyValueStore): IDeserializingKeyValueStore","description":"org.modelix.model.lazy.PrefetchCache.Companion.unwrap","location":"model-datastructure/org.modelix.model.lazy/-prefetch-cache/-companion/unwrap.html","searchKeys":["unwrap","fun unwrap(store: IDeserializingKeyValueStore): IDeserializingKeyValueStore","org.modelix.model.lazy.PrefetchCache.Companion.unwrap"]},{"name":"fun update(input: String)","description":"Sha256.update","location":"model-datastructure/[root]/-sha256/update.html","searchKeys":["update","fun update(input: String)","Sha256.update"]},{"name":"fun useRoleIds(value: Boolean = true): CLTree.Builder","description":"org.modelix.model.lazy.CLTree.Builder.useRoleIds","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/-builder/use-role-ids.html","searchKeys":["useRoleIds","fun useRoleIds(value: Boolean = true): CLTree.Builder","org.modelix.model.lazy.CLTree.Builder.useRoleIds"]},{"name":"fun v4(): String","description":"org.modelix.model.uuid.v4","location":"model-datastructure/org.modelix.model/uuid/v4.html","searchKeys":["v4","fun v4(): String","org.modelix.model.uuid.v4"]},{"name":"fun visitChanges(oldNode: CPHamtNode?, visitor: CPHamtNode.IChangeVisitor, bulkQuery: IBulkQuery)","description":"org.modelix.model.persistent.CPHamtNode.visitChanges","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/visit-changes.html","searchKeys":["visitChanges","fun visitChanges(oldNode: CPHamtNode?, visitor: CPHamtNode.IChangeVisitor, bulkQuery: IBulkQuery)","org.modelix.model.persistent.CPHamtNode.visitChanges"]},{"name":"fun visitChanges(oldVersion: ITree, visitor: ITreeChangeVisitor, bulkQuery: IBulkQuery)","description":"org.modelix.model.lazy.CLTree.visitChanges","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/visit-changes.html","searchKeys":["visitChanges","fun visitChanges(oldVersion: ITree, visitor: ITreeChangeVisitor, bulkQuery: IBulkQuery)","org.modelix.model.lazy.CLTree.visitChanges"]},{"name":"fun withConcept(newConcept: IConceptReference?): AddNewChildOp","description":"org.modelix.model.operations.AddNewChildOp.withConcept","location":"model-datastructure/org.modelix.model.operations/-add-new-child-op/with-concept.html","searchKeys":["withConcept","fun withConcept(newConcept: IConceptReference?): AddNewChildOp","org.modelix.model.operations.AddNewChildOp.withConcept"]},{"name":"fun withIndex(newIndex: Int): PositionInRole","description":"org.modelix.model.operations.PositionInRole.withIndex","location":"model-datastructure/org.modelix.model.operations/-position-in-role/with-index.html","searchKeys":["withIndex","fun withIndex(newIndex: Int): PositionInRole","org.modelix.model.operations.PositionInRole.withIndex"]},{"name":"fun withNewChild(newChild: CPHamtNode?): CPHamtSingle?","description":"org.modelix.model.persistent.CPHamtSingle.withNewChild","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-single/with-new-child.html","searchKeys":["withNewChild","fun withNewChild(newChild: CPHamtNode?): CPHamtSingle?","org.modelix.model.persistent.CPHamtSingle.withNewChild"]},{"name":"fun withPos(newTarget: PositionInRole): MoveNodeOp","description":"org.modelix.model.operations.MoveNodeOp.withPos","location":"model-datastructure/org.modelix.model.operations/-move-node-op/with-pos.html","searchKeys":["withPos","fun withPos(newTarget: PositionInRole): MoveNodeOp","org.modelix.model.operations.MoveNodeOp.withPos"]},{"name":"fun withPosition(newPos: PositionInRole): AddNewChildSubtreeOp","description":"org.modelix.model.operations.AddNewChildSubtreeOp.withPosition","location":"model-datastructure/org.modelix.model.operations/-add-new-child-subtree-op/with-position.html","searchKeys":["withPosition","fun withPosition(newPos: PositionInRole): AddNewChildSubtreeOp","org.modelix.model.operations.AddNewChildSubtreeOp.withPosition"]},{"name":"fun withPropertyValue(role: String, value: String?): CPNode","description":"org.modelix.model.persistent.CPNode.withPropertyValue","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/with-property-value.html","searchKeys":["withPropertyValue","fun withPropertyValue(role: String, value: String?): CPNode","org.modelix.model.persistent.CPNode.withPropertyValue"]},{"name":"fun withReferenceTarget(role: String, target: CPNodeRef?): CPNode","description":"org.modelix.model.persistent.CPNode.withReferenceTarget","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/with-reference-target.html","searchKeys":["withReferenceTarget","fun withReferenceTarget(role: String, target: CPNodeRef?): CPNode","org.modelix.model.persistent.CPNode.withReferenceTarget"]},{"name":"fun withTarget(newTarget: INodeReference?): SetReferenceOp","description":"org.modelix.model.operations.SetReferenceOp.withTarget","location":"model-datastructure/org.modelix.model.operations/-set-reference-op/with-target.html","searchKeys":["withTarget","fun withTarget(newTarget: INodeReference?): SetReferenceOp","org.modelix.model.operations.SetReferenceOp.withTarget"]},{"name":"fun wrap(t: ITransaction): ITransaction","description":"org.modelix.model.operations.OTBranch.wrap","location":"model-datastructure/org.modelix.model.operations/-o-t-branch/wrap.html","searchKeys":["wrap","fun wrap(t: ITransaction): ITransaction","org.modelix.model.operations.OTBranch.wrap"]},{"name":"fun wrap(t: IWriteTransaction): IWriteTransaction","description":"org.modelix.model.operations.OTBranch.wrap","location":"model-datastructure/org.modelix.model.operations/-o-t-branch/wrap.html","searchKeys":["wrap","fun wrap(t: IWriteTransaction): IWriteTransaction","org.modelix.model.operations.OTBranch.wrap"]},{"name":"fun write(): String","description":"org.modelix.model.lazy.CLVersion.write","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/write.html","searchKeys":["write","fun write(): String","org.modelix.model.lazy.CLVersion.write"]},{"name":"inline fun <T> insert(array: Array<T>, index: Int, element: T): Array<T>","description":"org.modelix.model.lazy.COWArrays.insert","location":"model-datastructure/org.modelix.model.lazy/-c-o-w-arrays/insert.html","searchKeys":["insert","inline fun <T> insert(array: Array<T>, index: Int, element: T): Array<T>","org.modelix.model.lazy.COWArrays.insert"]},{"name":"inline fun <T> remove(array: Array<T>, value: T): Array<T>","description":"org.modelix.model.lazy.COWArrays.remove","location":"model-datastructure/org.modelix.model.lazy/-c-o-w-arrays/remove.html","searchKeys":["remove","inline fun <T> remove(array: Array<T>, value: T): Array<T>","org.modelix.model.lazy.COWArrays.remove"]},{"name":"inline fun <T> removeAt(array: Array<T>, index: Int): Array<T>","description":"org.modelix.model.lazy.COWArrays.removeAt","location":"model-datastructure/org.modelix.model.lazy/-c-o-w-arrays/remove-at.html","searchKeys":["removeAt","inline fun <T> removeAt(array: Array<T>, index: Int): Array<T>","org.modelix.model.lazy.COWArrays.removeAt"]},{"name":"inner class Applied : AbstractOperation.Applied, IAppliedOperation","description":"org.modelix.model.operations.AddNewChildrenOp.Applied","location":"model-datastructure/org.modelix.model.operations/-add-new-children-op/-applied/index.html","searchKeys":["Applied","inner class Applied : AbstractOperation.Applied, IAppliedOperation","org.modelix.model.operations.AddNewChildrenOp.Applied"]},{"name":"inner class Applied(oldValue: INodeReference?) : AbstractOperation.Applied, IAppliedOperation","description":"org.modelix.model.operations.SetReferenceOp.Applied","location":"model-datastructure/org.modelix.model.operations/-set-reference-op/-applied/index.html","searchKeys":["Applied","inner class Applied(oldValue: INodeReference?) : AbstractOperation.Applied, IAppliedOperation","org.modelix.model.operations.SetReferenceOp.Applied"]},{"name":"inner class Applied(oldValue: String?) : AbstractOperation.Applied, IAppliedOperation","description":"org.modelix.model.operations.SetPropertyOp.Applied","location":"model-datastructure/org.modelix.model.operations/-set-property-op/-applied/index.html","searchKeys":["Applied","inner class Applied(oldValue: String?) : AbstractOperation.Applied, IAppliedOperation","org.modelix.model.operations.SetPropertyOp.Applied"]},{"name":"inner class Applied(val appliedOps: List<IAppliedOperation>) : IAppliedOperation","description":"org.modelix.model.operations.RevertToOp.Applied","location":"model-datastructure/org.modelix.model.operations/-revert-to-op/-applied/index.html","searchKeys":["Applied","inner class Applied(val appliedOps: List<IAppliedOperation>) : IAppliedOperation","org.modelix.model.operations.RevertToOp.Applied"]},{"name":"inner class Applied(val appliedOps: List<IAppliedOperation>) : IAppliedOperation","description":"org.modelix.model.operations.UndoOp.Applied","location":"model-datastructure/org.modelix.model.operations/-undo-op/-applied/index.html","searchKeys":["Applied","inner class Applied(val appliedOps: List<IAppliedOperation>) : IAppliedOperation","org.modelix.model.operations.UndoOp.Applied"]},{"name":"inner class Applied(val baseTree: CLTree) : AbstractOperation.Applied, IAppliedOperation","description":"org.modelix.model.operations.BulkUpdateOp.Applied","location":"model-datastructure/org.modelix.model.operations/-bulk-update-op/-applied/index.html","searchKeys":["Applied","inner class Applied(val baseTree: CLTree) : AbstractOperation.Applied, IAppliedOperation","org.modelix.model.operations.BulkUpdateOp.Applied"]},{"name":"inner class Applied(val position: PositionInRole, val concept: IConceptReference?, val properties: Map<String, String?>, val references: Map<String, INodeReference?>) : AbstractOperation.Applied, IAppliedOperation","description":"org.modelix.model.operations.DeleteNodeOp.Applied","location":"model-datastructure/org.modelix.model.operations/-delete-node-op/-applied/index.html","searchKeys":["Applied","inner class Applied(val position: PositionInRole, val concept: IConceptReference?, val properties: Map<String, String?>, val references: Map<String, INodeReference?>) : AbstractOperation.Applied, IAppliedOperation","org.modelix.model.operations.DeleteNodeOp.Applied"]},{"name":"inner class Applied(val sourcePosition: PositionInRole) : AbstractOperation.Applied, IAppliedOperation","description":"org.modelix.model.operations.MoveNodeOp.Applied","location":"model-datastructure/org.modelix.model.operations/-move-node-op/-applied/index.html","searchKeys":["Applied","inner class Applied(val sourcePosition: PositionInRole) : AbstractOperation.Applied, IAppliedOperation","org.modelix.model.operations.MoveNodeOp.Applied"]},{"name":"inner class Applied(val store: IDeserializingKeyValueStore) : AbstractOperation.Applied, IAppliedOperation","description":"org.modelix.model.operations.AddNewChildSubtreeOp.Applied","location":"model-datastructure/org.modelix.model.operations/-add-new-child-subtree-op/-applied/index.html","searchKeys":["Applied","inner class Applied(val store: IDeserializingKeyValueStore) : AbstractOperation.Applied, IAppliedOperation","org.modelix.model.operations.AddNewChildSubtreeOp.Applied"]},{"name":"inner class Intend : IOperationIntend","description":"org.modelix.model.operations.BulkUpdateOp.Intend","location":"model-datastructure/org.modelix.model.operations/-bulk-update-op/-intend/index.html","searchKeys":["Intend","inner class Intend : IOperationIntend","org.modelix.model.operations.BulkUpdateOp.Intend"]},{"name":"inner class Intend(val capturedPosition: CapturedInsertPosition) : IOperationIntend","description":"org.modelix.model.operations.AddNewChildSubtreeOp.Intend","location":"model-datastructure/org.modelix.model.operations/-add-new-child-subtree-op/-intend/index.html","searchKeys":["Intend","inner class Intend(val capturedPosition: CapturedInsertPosition) : IOperationIntend","org.modelix.model.operations.AddNewChildSubtreeOp.Intend"]},{"name":"inner class Intend(val capturedPosition: CapturedInsertPosition) : IOperationIntend","description":"org.modelix.model.operations.AddNewChildrenOp.Intend","location":"model-datastructure/org.modelix.model.operations/-add-new-children-op/-intend/index.html","searchKeys":["Intend","inner class Intend(val capturedPosition: CapturedInsertPosition) : IOperationIntend","org.modelix.model.operations.AddNewChildrenOp.Intend"]},{"name":"inner class Intend(val capturedTargetPosition: CapturedInsertPosition) : IOperationIntend","description":"org.modelix.model.operations.MoveNodeOp.Intend","location":"model-datastructure/org.modelix.model.operations/-move-node-op/-intend/index.html","searchKeys":["Intend","inner class Intend(val capturedTargetPosition: CapturedInsertPosition) : IOperationIntend","org.modelix.model.operations.MoveNodeOp.Intend"]},{"name":"inner class Intend(val intends: List<IOperationIntend>, val store: IDeserializingKeyValueStore) : IOperationIntend","description":"org.modelix.model.operations.RevertToOp.Intend","location":"model-datastructure/org.modelix.model.operations/-revert-to-op/-intend/index.html","searchKeys":["Intend","inner class Intend(val intends: List<IOperationIntend>, val store: IDeserializingKeyValueStore) : IOperationIntend","org.modelix.model.operations.RevertToOp.Intend"]},{"name":"inner class Intend(val intends: List<IOperationIntend>, val store: IDeserializingKeyValueStore) : IOperationIntend","description":"org.modelix.model.operations.UndoOp.Intend","location":"model-datastructure/org.modelix.model.operations/-undo-op/-intend/index.html","searchKeys":["Intend","inner class Intend(val intends: List<IOperationIntend>, val store: IDeserializingKeyValueStore) : IOperationIntend","org.modelix.model.operations.UndoOp.Intend"]},{"name":"inner class Value<T> : IBulkQuery.Value<T> ","description":"org.modelix.model.lazy.BulkQuery.Value","location":"model-datastructure/org.modelix.model.lazy/-bulk-query/-value/index.html","searchKeys":["Value","inner class Value<T> : IBulkQuery.Value<T> ","org.modelix.model.lazy.BulkQuery.Value"]},{"name":"interface IAppliedOperation","description":"org.modelix.model.operations.IAppliedOperation","location":"model-datastructure/org.modelix.model.operations/-i-applied-operation/index.html","searchKeys":["IAppliedOperation","interface IAppliedOperation","org.modelix.model.operations.IAppliedOperation"]},{"name":"interface IBulkQuery","description":"org.modelix.model.lazy.IBulkQuery","location":"model-datastructure/org.modelix.model.lazy/-i-bulk-query/index.html","searchKeys":["IBulkQuery","interface IBulkQuery","org.modelix.model.lazy.IBulkQuery"]},{"name":"interface IBulkTree : ITree","description":"org.modelix.model.lazy.IBulkTree","location":"model-datastructure/org.modelix.model.lazy/-i-bulk-tree/index.html","searchKeys":["IBulkTree","interface IBulkTree : ITree","org.modelix.model.lazy.IBulkTree"]},{"name":"interface IChangeVisitor","description":"org.modelix.model.persistent.CPHamtNode.IChangeVisitor","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/-i-change-visitor/index.html","searchKeys":["IChangeVisitor","interface IChangeVisitor","org.modelix.model.persistent.CPHamtNode.IChangeVisitor"]},{"name":"interface IDeserializingKeyValueStore","description":"org.modelix.model.lazy.IDeserializingKeyValueStore","location":"model-datastructure/org.modelix.model.lazy/-i-deserializing-key-value-store/index.html","searchKeys":["IDeserializingKeyValueStore","interface IDeserializingKeyValueStore","org.modelix.model.lazy.IDeserializingKeyValueStore"]},{"name":"interface IKVEntryReference<out E : IKVValue>","description":"org.modelix.model.lazy.IKVEntryReference","location":"model-datastructure/org.modelix.model.lazy/-i-k-v-entry-reference/index.html","searchKeys":["IKVEntryReference","interface IKVEntryReference<out E : IKVValue>","org.modelix.model.lazy.IKVEntryReference"]},{"name":"interface IKVValue","description":"org.modelix.model.persistent.IKVValue","location":"model-datastructure/org.modelix.model.persistent/-i-k-v-value/index.html","searchKeys":["IKVValue","interface IKVValue","org.modelix.model.persistent.IKVValue"]},{"name":"interface IKeyListener","description":"org.modelix.model.IKeyListener","location":"model-datastructure/org.modelix.model/-i-key-listener/index.html","searchKeys":["IKeyListener","interface IKeyListener","org.modelix.model.IKeyListener"]},{"name":"interface IKeyValueStore","description":"org.modelix.model.IKeyValueStore","location":"model-datastructure/org.modelix.model/-i-key-value-store/index.html","searchKeys":["IKeyValueStore","interface IKeyValueStore","org.modelix.model.IKeyValueStore"]},{"name":"interface INodeReferenceSerializer : INodeReferenceSerializer","description":"org.modelix.model.lazy.INodeReferenceSerializer","location":"model-datastructure/org.modelix.model.lazy/-i-node-reference-serializer/index.html","searchKeys":["INodeReferenceSerializer","interface INodeReferenceSerializer : INodeReferenceSerializer","org.modelix.model.lazy.INodeReferenceSerializer"]},{"name":"interface IOperation","description":"org.modelix.model.operations.IOperation","location":"model-datastructure/org.modelix.model.operations/-i-operation/index.html","searchKeys":["IOperation","interface IOperation","org.modelix.model.operations.IOperation"]},{"name":"interface IOperationIntend","description":"org.modelix.model.operations.IOperationIntend","location":"model-datastructure/org.modelix.model.operations/-i-operation-intend/index.html","searchKeys":["IOperationIntend","interface IOperationIntend","org.modelix.model.operations.IOperationIntend"]},{"name":"interface ITransactionWrapper : ITransaction","description":"org.modelix.model.ITransactionWrapper","location":"model-datastructure/org.modelix.model/-i-transaction-wrapper/index.html","searchKeys":["ITransactionWrapper","interface ITransactionWrapper : ITransaction","org.modelix.model.ITransactionWrapper"]},{"name":"interface ITreeWrapper : ITree","description":"org.modelix.model.lazy.ITreeWrapper","location":"model-datastructure/org.modelix.model.lazy/-i-tree-wrapper/index.html","searchKeys":["ITreeWrapper","interface ITreeWrapper : ITree","org.modelix.model.lazy.ITreeWrapper"]},{"name":"interface IVersion","description":"org.modelix.model.IVersion","location":"model-datastructure/org.modelix.model/-i-version/index.html","searchKeys":["IVersion","interface IVersion","org.modelix.model.IVersion"]},{"name":"interface Serializer<E : IOperation?>","description":"org.modelix.model.persistent.OperationSerializer.Serializer","location":"model-datastructure/org.modelix.model.persistent/-operation-serializer/-serializer/index.html","searchKeys":["Serializer","interface Serializer<E : IOperation?>","org.modelix.model.persistent.OperationSerializer.Serializer"]},{"name":"interface Value<out T>","description":"org.modelix.model.lazy.IBulkQuery.Value","location":"model-datastructure/org.modelix.model.lazy/-i-bulk-query/-value/index.html","searchKeys":["Value","interface Value<out T>","org.modelix.model.lazy.IBulkQuery.Value"]},{"name":"object COWArrays","description":"org.modelix.model.lazy.COWArrays","location":"model-datastructure/org.modelix.model.lazy/-c-o-w-arrays/index.html","searchKeys":["COWArrays","object COWArrays","org.modelix.model.lazy.COWArrays"]},{"name":"object Companion","description":"org.modelix.model.IKeyListener.Companion","location":"model-datastructure/org.modelix.model/-i-key-listener/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.IKeyListener.Companion"]},{"name":"object Companion","description":"org.modelix.model.VersionMerger.Companion","location":"model-datastructure/org.modelix.model/-version-merger/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.VersionMerger.Companion"]},{"name":"object Companion","description":"org.modelix.model.lazy.BranchReference.Companion","location":"model-datastructure/org.modelix.model.lazy/-branch-reference/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.lazy.BranchReference.Companion"]},{"name":"object Companion","description":"org.modelix.model.lazy.BulkQuery.Companion","location":"model-datastructure/org.modelix.model.lazy/-bulk-query/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.lazy.BulkQuery.Companion"]},{"name":"object Companion","description":"org.modelix.model.lazy.CLNode.Companion","location":"model-datastructure/org.modelix.model.lazy/-c-l-node/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.lazy.CLNode.Companion"]},{"name":"object Companion","description":"org.modelix.model.lazy.CLTree.Companion","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.lazy.CLTree.Companion"]},{"name":"object Companion","description":"org.modelix.model.lazy.CLVersion.Companion","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.lazy.CLVersion.Companion"]},{"name":"object Companion","description":"org.modelix.model.lazy.INodeReferenceSerializer.Companion","location":"model-datastructure/org.modelix.model.lazy/-i-node-reference-serializer/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.lazy.INodeReferenceSerializer.Companion"]},{"name":"object Companion","description":"org.modelix.model.lazy.ObjectStoreCache.Companion","location":"model-datastructure/org.modelix.model.lazy/-object-store-cache/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.lazy.ObjectStoreCache.Companion"]},{"name":"object Companion","description":"org.modelix.model.lazy.PrefetchCache.Companion","location":"model-datastructure/org.modelix.model.lazy/-prefetch-cache/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.lazy.PrefetchCache.Companion"]},{"name":"object Companion","description":"org.modelix.model.lazy.RepositoryId.Companion","location":"model-datastructure/org.modelix.model.lazy/-repository-id/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.lazy.RepositoryId.Companion"]},{"name":"object Companion","description":"org.modelix.model.operations.AbstractOperation.Companion","location":"model-datastructure/org.modelix.model.operations/-abstract-operation/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.operations.AbstractOperation.Companion"]},{"name":"object Companion","description":"org.modelix.model.persistent.CPHamtInternal.Companion","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-internal/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.persistent.CPHamtInternal.Companion"]},{"name":"object Companion","description":"org.modelix.model.persistent.CPHamtLeaf.Companion","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-leaf/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.persistent.CPHamtLeaf.Companion"]},{"name":"object Companion","description":"org.modelix.model.persistent.CPHamtNode.Companion","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.persistent.CPHamtNode.Companion"]},{"name":"object Companion","description":"org.modelix.model.persistent.CPHamtSingle.Companion","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-single/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.persistent.CPHamtSingle.Companion"]},{"name":"object Companion","description":"org.modelix.model.persistent.CPNode.Companion","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.persistent.CPNode.Companion"]},{"name":"object Companion","description":"org.modelix.model.persistent.CPNodeRef.Companion","location":"model-datastructure/org.modelix.model.persistent/-c-p-node-ref/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.persistent.CPNodeRef.Companion"]},{"name":"object Companion","description":"org.modelix.model.persistent.CPOperationsList.Companion","location":"model-datastructure/org.modelix.model.persistent/-c-p-operations-list/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.persistent.CPOperationsList.Companion"]},{"name":"object Companion","description":"org.modelix.model.persistent.CPTree.Companion","location":"model-datastructure/org.modelix.model.persistent/-c-p-tree/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.persistent.CPTree.Companion"]},{"name":"object Companion","description":"org.modelix.model.persistent.CPVersion.Companion","location":"model-datastructure/org.modelix.model.persistent/-c-p-version/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.persistent.CPVersion.Companion"]},{"name":"object Companion","description":"org.modelix.model.persistent.OperationSerializer.Companion","location":"model-datastructure/org.modelix.model.persistent/-operation-serializer/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.model.persistent.OperationSerializer.Companion"]},{"name":"object HashUtil","description":"org.modelix.model.persistent.HashUtil","location":"model-datastructure/org.modelix.model.persistent/-hash-util/index.html","searchKeys":["HashUtil","object HashUtil","org.modelix.model.persistent.HashUtil"]},{"name":"object Separators","description":"org.modelix.model.persistent.Separators","location":"model-datastructure/org.modelix.model.persistent/-separators/index.html","searchKeys":["Separators","object Separators","org.modelix.model.persistent.Separators"]},{"name":"open class AddNewChildrenOp(val position: PositionInRole, val childIds: LongArray, val concepts: Array<IConceptReference?>) : AbstractOperation","description":"org.modelix.model.operations.AddNewChildrenOp","location":"model-datastructure/org.modelix.model.operations/-add-new-children-op/index.html","searchKeys":["AddNewChildrenOp","open class AddNewChildrenOp(val position: PositionInRole, val childIds: LongArray, val concepts: Array<IConceptReference?>) : AbstractOperation","org.modelix.model.operations.AddNewChildrenOp"]},{"name":"open class MapBaseStore : MapBasedStore","description":"org.modelix.model.persistent.MapBaseStore","location":"model-datastructure/org.modelix.model.persistent/-map-base-store/index.html","searchKeys":["MapBaseStore","open class MapBaseStore : MapBasedStore","org.modelix.model.persistent.MapBaseStore"]},{"name":"open class MapBasedStore : IKeyValueStore","description":"org.modelix.model.persistent.MapBasedStore","location":"model-datastructure/org.modelix.model.persistent/-map-based-store/index.html","searchKeys":["MapBasedStore","open class MapBasedStore : IKeyValueStore","org.modelix.model.persistent.MapBasedStore"]},{"name":"open fun genericSerialize(op: Any): String","description":"org.modelix.model.persistent.OperationSerializer.Serializer.genericSerialize","location":"model-datastructure/org.modelix.model.persistent/-operation-serializer/-serializer/generic-serialize.html","searchKeys":["genericSerialize","open fun genericSerialize(op: Any): String","org.modelix.model.persistent.OperationSerializer.Serializer.genericSerialize"]},{"name":"open fun newBulkQuery(): IBulkQuery","description":"org.modelix.model.lazy.IDeserializingKeyValueStore.newBulkQuery","location":"model-datastructure/org.modelix.model.lazy/-i-deserializing-key-value-store/new-bulk-query.html","searchKeys":["newBulkQuery","open fun newBulkQuery(): IBulkQuery","org.modelix.model.lazy.IDeserializingKeyValueStore.newBulkQuery"]},{"name":"open fun newBulkQuery(deserializingCache: IDeserializingKeyValueStore): IBulkQuery","description":"org.modelix.model.IKeyValueStore.newBulkQuery","location":"model-datastructure/org.modelix.model/-i-key-value-store/new-bulk-query.html","searchKeys":["newBulkQuery","open fun newBulkQuery(deserializingCache: IDeserializingKeyValueStore): IBulkQuery","org.modelix.model.IKeyValueStore.newBulkQuery"]},{"name":"open fun newBulkQuery(wrapper: IDeserializingKeyValueStore): IBulkQuery","description":"org.modelix.model.lazy.IDeserializingKeyValueStore.newBulkQuery","location":"model-datastructure/org.modelix.model.lazy/-i-deserializing-key-value-store/new-bulk-query.html","searchKeys":["newBulkQuery","open fun newBulkQuery(wrapper: IDeserializingKeyValueStore): IBulkQuery","org.modelix.model.lazy.IDeserializingKeyValueStore.newBulkQuery"]},{"name":"open fun withPosition(newPos: PositionInRole): AddNewChildrenOp","description":"org.modelix.model.operations.AddNewChildrenOp.withPosition","location":"model-datastructure/org.modelix.model.operations/-add-new-children-op/with-position.html","searchKeys":["withPosition","open fun withPosition(newPos: PositionInRole): AddNewChildrenOp","org.modelix.model.operations.AddNewChildrenOp.withPosition"]},{"name":"open operator override fun <T : IKVValue> get(hash: KVEntryReference<T>): IBulkQuery.Value<T?>","description":"org.modelix.model.lazy.BulkQuery.get","location":"model-datastructure/org.modelix.model.lazy/-bulk-query/get.html","searchKeys":["get","open operator override fun <T : IKVValue> get(hash: KVEntryReference<T>): IBulkQuery.Value<T?>","org.modelix.model.lazy.BulkQuery.get"]},{"name":"open operator override fun <T : IKVValue> get(hash: KVEntryReference<T>): IBulkQuery.Value<T?>","description":"org.modelix.model.lazy.NonBulkQuery.get","location":"model-datastructure/org.modelix.model.lazy/-non-bulk-query/get.html","searchKeys":["get","open operator override fun <T : IKVValue> get(hash: KVEntryReference<T>): IBulkQuery.Value<T?>","org.modelix.model.lazy.NonBulkQuery.get"]},{"name":"open operator override fun <T> get(hash: String, deserializer: (String) -> T): T?","description":"org.modelix.model.lazy.IndirectObjectStore.get","location":"model-datastructure/org.modelix.model.lazy/-indirect-object-store/get.html","searchKeys":["get","open operator override fun <T> get(hash: String, deserializer: (String) -> T): T?","org.modelix.model.lazy.IndirectObjectStore.get"]},{"name":"open operator override fun <T> get(hash: String, deserializer: (String) -> T): T?","description":"org.modelix.model.lazy.ObjectStoreCache.get","location":"model-datastructure/org.modelix.model.lazy/-object-store-cache/get.html","searchKeys":["get","open operator override fun <T> get(hash: String, deserializer: (String) -> T): T?","org.modelix.model.lazy.ObjectStoreCache.get"]},{"name":"open operator override fun <T> get(hash: String, deserializer: (String) -> T): T?","description":"org.modelix.model.lazy.PrefetchCache.get","location":"model-datastructure/org.modelix.model.lazy/-prefetch-cache/get.html","searchKeys":["get","open operator override fun <T> get(hash: String, deserializer: (String) -> T): T?","org.modelix.model.lazy.PrefetchCache.get"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.modelix.model.lazy.CLVersion.equals","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.modelix.model.lazy.CLVersion.equals"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.modelix.model.lazy.KVEntryReference.equals","location":"model-datastructure/org.modelix.model.lazy/-k-v-entry-reference/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.modelix.model.lazy.KVEntryReference.equals"]},{"name":"open operator override fun get(key: String): String?","description":"org.modelix.model.persistent.MapBasedStore.get","location":"model-datastructure/org.modelix.model.persistent/-map-based-store/get.html","searchKeys":["get","open operator override fun get(key: String): String?","org.modelix.model.persistent.MapBasedStore.get"]},{"name":"open override fun <I, O> map(input_: Iterable<I>, f: (I) -> IBulkQuery.Value<O>): IBulkQuery.Value<List<O>>","description":"org.modelix.model.lazy.BulkQuery.map","location":"model-datastructure/org.modelix.model.lazy/-bulk-query/map.html","searchKeys":["map","open override fun <I, O> map(input_: Iterable<I>, f: (I) -> IBulkQuery.Value<O>): IBulkQuery.Value<List<O>>","org.modelix.model.lazy.BulkQuery.map"]},{"name":"open override fun <I, O> map(input_: Iterable<I>, f: (I) -> IBulkQuery.Value<O>): IBulkQuery.Value<List<O>>","description":"org.modelix.model.lazy.NonBulkQuery.map","location":"model-datastructure/org.modelix.model.lazy/-non-bulk-query/map.html","searchKeys":["map","open override fun <I, O> map(input_: Iterable<I>, f: (I) -> IBulkQuery.Value<O>): IBulkQuery.Value<List<O>>","org.modelix.model.lazy.NonBulkQuery.map"]},{"name":"open override fun <R> map(handler: (T) -> R): IBulkQuery.Value<R>","description":"org.modelix.model.lazy.BulkQuery.Value.map","location":"model-datastructure/org.modelix.model.lazy/-bulk-query/-value/map.html","searchKeys":["map","open override fun <R> map(handler: (T) -> R): IBulkQuery.Value<R>","org.modelix.model.lazy.BulkQuery.Value.map"]},{"name":"open override fun <R> map(handler: (T) -> R): IBulkQuery.Value<R>","description":"org.modelix.model.lazy.NonBulkQuery.Value.map","location":"model-datastructure/org.modelix.model.lazy/-non-bulk-query/-value/map.html","searchKeys":["map","open override fun <R> map(handler: (T) -> R): IBulkQuery.Value<R>","org.modelix.model.lazy.NonBulkQuery.Value.map"]},{"name":"open override fun <R> mapBulk(handler: (T) -> IBulkQuery.Value<R>): IBulkQuery.Value<R>","description":"org.modelix.model.lazy.BulkQuery.Value.mapBulk","location":"model-datastructure/org.modelix.model.lazy/-bulk-query/-value/map-bulk.html","searchKeys":["mapBulk","open override fun <R> mapBulk(handler: (T) -> IBulkQuery.Value<R>): IBulkQuery.Value<R>","org.modelix.model.lazy.BulkQuery.Value.mapBulk"]},{"name":"open override fun <R> mapBulk(handler: (T) -> IBulkQuery.Value<R>): IBulkQuery.Value<R>","description":"org.modelix.model.lazy.NonBulkQuery.Value.mapBulk","location":"model-datastructure/org.modelix.model.lazy/-non-bulk-query/-value/map-bulk.html","searchKeys":["mapBulk","open override fun <R> mapBulk(handler: (T) -> IBulkQuery.Value<R>): IBulkQuery.Value<R>","org.modelix.model.lazy.NonBulkQuery.Value.mapBulk"]},{"name":"open override fun <T> computeRead(computable: () -> T): T","description":"org.modelix.model.operations.OTBranch.computeRead","location":"model-datastructure/org.modelix.model.operations/-o-t-branch/compute-read.html","searchKeys":["computeRead","open override fun <T> computeRead(computable: () -> T): T","org.modelix.model.operations.OTBranch.computeRead"]},{"name":"open override fun <T> computeWrite(computable: () -> T): T","description":"org.modelix.model.operations.OTBranch.computeWrite","location":"model-datastructure/org.modelix.model.operations/-o-t-branch/compute-write.html","searchKeys":["computeWrite","open override fun <T> computeWrite(computable: () -> T): T","org.modelix.model.operations.OTBranch.computeWrite"]},{"name":"open override fun <T> constant(value: T): IBulkQuery.Value<T>","description":"org.modelix.model.lazy.BulkQuery.constant","location":"model-datastructure/org.modelix.model.lazy/-bulk-query/constant.html","searchKeys":["constant","open override fun <T> constant(value: T): IBulkQuery.Value<T>","org.modelix.model.lazy.BulkQuery.constant"]},{"name":"open override fun <T> constant(value: T): IBulkQuery.Value<T>","description":"org.modelix.model.lazy.NonBulkQuery.constant","location":"model-datastructure/org.modelix.model.lazy/-non-bulk-query/constant.html","searchKeys":["constant","open override fun <T> constant(value: T): IBulkQuery.Value<T>","org.modelix.model.lazy.NonBulkQuery.constant"]},{"name":"open override fun <T> getAll(hash: Iterable<String>, deserializer: (String, String) -> T): Iterable<T>","description":"org.modelix.model.lazy.IndirectObjectStore.getAll","location":"model-datastructure/org.modelix.model.lazy/-indirect-object-store/get-all.html","searchKeys":["getAll","open override fun <T> getAll(hash: Iterable<String>, deserializer: (String, String) -> T): Iterable<T>","org.modelix.model.lazy.IndirectObjectStore.getAll"]},{"name":"open override fun <T> getAll(hashes: Iterable<String>, deserializer: (String, String) -> T): Iterable<T>","description":"org.modelix.model.lazy.PrefetchCache.getAll","location":"model-datastructure/org.modelix.model.lazy/-prefetch-cache/get-all.html","searchKeys":["getAll","open override fun <T> getAll(hashes: Iterable<String>, deserializer: (String, String) -> T): Iterable<T>","org.modelix.model.lazy.PrefetchCache.getAll"]},{"name":"open override fun <T> getAll(hashes_: Iterable<String>, deserializer: (String, String) -> T): Iterable<T>","description":"org.modelix.model.lazy.ObjectStoreCache.getAll","location":"model-datastructure/org.modelix.model.lazy/-object-store-cache/get-all.html","searchKeys":["getAll","open override fun <T> getAll(hashes_: Iterable<String>, deserializer: (String, String) -> T): Iterable<T>","org.modelix.model.lazy.ObjectStoreCache.getAll"]},{"name":"open override fun addListener(l: IBranchListener)","description":"org.modelix.model.operations.OTBranch.addListener","location":"model-datastructure/org.modelix.model.operations/-o-t-branch/add-listener.html","searchKeys":["addListener","open override fun addListener(l: IBranchListener)","org.modelix.model.operations.OTBranch.addListener"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConcept?)","description":"org.modelix.model.operations.OTWriteTransaction.addNewChild","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConcept?)","org.modelix.model.operations.OTWriteTransaction.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConcept?): ITree","description":"org.modelix.model.lazy.CLTree.addNewChild","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConcept?): ITree","org.modelix.model.lazy.CLTree.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConceptReference?)","description":"org.modelix.model.operations.OTWriteTransaction.addNewChild","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConceptReference?)","org.modelix.model.operations.OTWriteTransaction.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConceptReference?): ITree","description":"org.modelix.model.lazy.CLTree.addNewChild","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, childId: Long, concept: IConceptReference?): ITree","org.modelix.model.lazy.CLTree.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConcept?): Long","description":"org.modelix.model.operations.OTWriteTransaction.addNewChild","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConcept?): Long","org.modelix.model.operations.OTWriteTransaction.addNewChild"]},{"name":"open override fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConceptReference?): Long","description":"org.modelix.model.operations.OTWriteTransaction.addNewChild","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(parentId: Long, role: String?, index: Int, concept: IConceptReference?): Long","org.modelix.model.operations.OTWriteTransaction.addNewChild"]},{"name":"open override fun addNewChildren(parentId: Long, role: String?, index: Int, childIds: LongArray, concepts: Array<IConceptReference?>)","description":"org.modelix.model.operations.OTWriteTransaction.addNewChildren","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/add-new-children.html","searchKeys":["addNewChildren","open override fun addNewChildren(parentId: Long, role: String?, index: Int, childIds: LongArray, concepts: Array<IConceptReference?>)","org.modelix.model.operations.OTWriteTransaction.addNewChildren"]},{"name":"open override fun addNewChildren(parentId: Long, role: String?, index: Int, concepts: Array<IConceptReference?>): LongArray","description":"org.modelix.model.operations.OTWriteTransaction.addNewChildren","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/add-new-children.html","searchKeys":["addNewChildren","open override fun addNewChildren(parentId: Long, role: String?, index: Int, concepts: Array<IConceptReference?>): LongArray","org.modelix.model.operations.OTWriteTransaction.addNewChildren"]},{"name":"open override fun addNewChildren(parentId: Long, role: String?, index: Int, newIds: LongArray, concepts: Array<IConcept?>): ITree","description":"org.modelix.model.lazy.CLTree.addNewChildren","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/add-new-children.html","searchKeys":["addNewChildren","open override fun addNewChildren(parentId: Long, role: String?, index: Int, newIds: LongArray, concepts: Array<IConcept?>): ITree","org.modelix.model.lazy.CLTree.addNewChildren"]},{"name":"open override fun addNewChildren(parentId: Long, role: String?, index: Int, newIds: LongArray, concepts: Array<IConceptReference?>): ITree","description":"org.modelix.model.lazy.CLTree.addNewChildren","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/add-new-children.html","searchKeys":["addNewChildren","open override fun addNewChildren(parentId: Long, role: String?, index: Int, newIds: LongArray, concepts: Array<IConceptReference?>): ITree","org.modelix.model.lazy.CLTree.addNewChildren"]},{"name":"open override fun apply(t: IWriteTransaction, store: IDeserializingKeyValueStore): IAppliedOperation","description":"org.modelix.model.operations.DeleteNodeOp.apply","location":"model-datastructure/org.modelix.model.operations/-delete-node-op/apply.html","searchKeys":["apply","open override fun apply(t: IWriteTransaction, store: IDeserializingKeyValueStore): IAppliedOperation","org.modelix.model.operations.DeleteNodeOp.apply"]},{"name":"open override fun apply(transaction: IWriteTransaction, store: IDeserializingKeyValueStore): IAppliedOperation","description":"org.modelix.model.operations.AddNewChildSubtreeOp.apply","location":"model-datastructure/org.modelix.model.operations/-add-new-child-subtree-op/apply.html","searchKeys":["apply","open override fun apply(transaction: IWriteTransaction, store: IDeserializingKeyValueStore): IAppliedOperation","org.modelix.model.operations.AddNewChildSubtreeOp.apply"]},{"name":"open override fun apply(transaction: IWriteTransaction, store: IDeserializingKeyValueStore): IAppliedOperation","description":"org.modelix.model.operations.AddNewChildrenOp.apply","location":"model-datastructure/org.modelix.model.operations/-add-new-children-op/apply.html","searchKeys":["apply","open override fun apply(transaction: IWriteTransaction, store: IDeserializingKeyValueStore): IAppliedOperation","org.modelix.model.operations.AddNewChildrenOp.apply"]},{"name":"open override fun apply(transaction: IWriteTransaction, store: IDeserializingKeyValueStore): IAppliedOperation","description":"org.modelix.model.operations.BulkUpdateOp.apply","location":"model-datastructure/org.modelix.model.operations/-bulk-update-op/apply.html","searchKeys":["apply","open override fun apply(transaction: IWriteTransaction, store: IDeserializingKeyValueStore): IAppliedOperation","org.modelix.model.operations.BulkUpdateOp.apply"]},{"name":"open override fun apply(transaction: IWriteTransaction, store: IDeserializingKeyValueStore): IAppliedOperation","description":"org.modelix.model.operations.MoveNodeOp.apply","location":"model-datastructure/org.modelix.model.operations/-move-node-op/apply.html","searchKeys":["apply","open override fun apply(transaction: IWriteTransaction, store: IDeserializingKeyValueStore): IAppliedOperation","org.modelix.model.operations.MoveNodeOp.apply"]},{"name":"open override fun apply(transaction: IWriteTransaction, store: IDeserializingKeyValueStore): IAppliedOperation","description":"org.modelix.model.operations.NoOp.apply","location":"model-datastructure/org.modelix.model.operations/-no-op/apply.html","searchKeys":["apply","open override fun apply(transaction: IWriteTransaction, store: IDeserializingKeyValueStore): IAppliedOperation","org.modelix.model.operations.NoOp.apply"]},{"name":"open override fun apply(transaction: IWriteTransaction, store: IDeserializingKeyValueStore): IAppliedOperation","description":"org.modelix.model.operations.RevertToOp.apply","location":"model-datastructure/org.modelix.model.operations/-revert-to-op/apply.html","searchKeys":["apply","open override fun apply(transaction: IWriteTransaction, store: IDeserializingKeyValueStore): IAppliedOperation","org.modelix.model.operations.RevertToOp.apply"]},{"name":"open override fun apply(transaction: IWriteTransaction, store: IDeserializingKeyValueStore): IAppliedOperation","description":"org.modelix.model.operations.SetPropertyOp.apply","location":"model-datastructure/org.modelix.model.operations/-set-property-op/apply.html","searchKeys":["apply","open override fun apply(transaction: IWriteTransaction, store: IDeserializingKeyValueStore): IAppliedOperation","org.modelix.model.operations.SetPropertyOp.apply"]},{"name":"open override fun apply(transaction: IWriteTransaction, store: IDeserializingKeyValueStore): IAppliedOperation","description":"org.modelix.model.operations.SetReferenceOp.apply","location":"model-datastructure/org.modelix.model.operations/-set-reference-op/apply.html","searchKeys":["apply","open override fun apply(transaction: IWriteTransaction, store: IDeserializingKeyValueStore): IAppliedOperation","org.modelix.model.operations.SetReferenceOp.apply"]},{"name":"open override fun apply(transaction: IWriteTransaction, store: IDeserializingKeyValueStore): IAppliedOperation","description":"org.modelix.model.operations.UndoOp.apply","location":"model-datastructure/org.modelix.model.operations/-undo-op/apply.html","searchKeys":["apply","open override fun apply(transaction: IWriteTransaction, store: IDeserializingKeyValueStore): IAppliedOperation","org.modelix.model.operations.UndoOp.apply"]},{"name":"open override fun calculateSize(bulkQuery: IBulkQuery): IBulkQuery.Value<Long>","description":"org.modelix.model.persistent.CPHamtInternal.calculateSize","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-internal/calculate-size.html","searchKeys":["calculateSize","open override fun calculateSize(bulkQuery: IBulkQuery): IBulkQuery.Value<Long>","org.modelix.model.persistent.CPHamtInternal.calculateSize"]},{"name":"open override fun calculateSize(bulkQuery: IBulkQuery): IBulkQuery.Value<Long>","description":"org.modelix.model.persistent.CPHamtLeaf.calculateSize","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-leaf/calculate-size.html","searchKeys":["calculateSize","open override fun calculateSize(bulkQuery: IBulkQuery): IBulkQuery.Value<Long>","org.modelix.model.persistent.CPHamtLeaf.calculateSize"]},{"name":"open override fun calculateSize(bulkQuery: IBulkQuery): IBulkQuery.Value<Long>","description":"org.modelix.model.persistent.CPHamtSingle.calculateSize","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-single/calculate-size.html","searchKeys":["calculateSize","open override fun calculateSize(bulkQuery: IBulkQuery): IBulkQuery.Value<Long>","org.modelix.model.persistent.CPHamtSingle.calculateSize"]},{"name":"open override fun canRead(): Boolean","description":"org.modelix.model.operations.OTBranch.canRead","location":"model-datastructure/org.modelix.model.operations/-o-t-branch/can-read.html","searchKeys":["canRead","open override fun canRead(): Boolean","org.modelix.model.operations.OTBranch.canRead"]},{"name":"open override fun canWrite(): Boolean","description":"org.modelix.model.operations.OTBranch.canWrite","location":"model-datastructure/org.modelix.model.operations/-o-t-branch/can-write.html","searchKeys":["canWrite","open override fun canWrite(): Boolean","org.modelix.model.operations.OTBranch.canWrite"]},{"name":"open override fun captureIntend(tree: ITree, store: IDeserializingKeyValueStore): IOperationIntend","description":"org.modelix.model.operations.AddNewChildSubtreeOp.captureIntend","location":"model-datastructure/org.modelix.model.operations/-add-new-child-subtree-op/capture-intend.html","searchKeys":["captureIntend","open override fun captureIntend(tree: ITree, store: IDeserializingKeyValueStore): IOperationIntend","org.modelix.model.operations.AddNewChildSubtreeOp.captureIntend"]},{"name":"open override fun captureIntend(tree: ITree, store: IDeserializingKeyValueStore): IOperationIntend","description":"org.modelix.model.operations.AddNewChildrenOp.captureIntend","location":"model-datastructure/org.modelix.model.operations/-add-new-children-op/capture-intend.html","searchKeys":["captureIntend","open override fun captureIntend(tree: ITree, store: IDeserializingKeyValueStore): IOperationIntend","org.modelix.model.operations.AddNewChildrenOp.captureIntend"]},{"name":"open override fun captureIntend(tree: ITree, store: IDeserializingKeyValueStore): IOperationIntend","description":"org.modelix.model.operations.BulkUpdateOp.captureIntend","location":"model-datastructure/org.modelix.model.operations/-bulk-update-op/capture-intend.html","searchKeys":["captureIntend","open override fun captureIntend(tree: ITree, store: IDeserializingKeyValueStore): IOperationIntend","org.modelix.model.operations.BulkUpdateOp.captureIntend"]},{"name":"open override fun captureIntend(tree: ITree, store: IDeserializingKeyValueStore): IOperationIntend","description":"org.modelix.model.operations.DeleteNodeOp.captureIntend","location":"model-datastructure/org.modelix.model.operations/-delete-node-op/capture-intend.html","searchKeys":["captureIntend","open override fun captureIntend(tree: ITree, store: IDeserializingKeyValueStore): IOperationIntend","org.modelix.model.operations.DeleteNodeOp.captureIntend"]},{"name":"open override fun captureIntend(tree: ITree, store: IDeserializingKeyValueStore): IOperationIntend","description":"org.modelix.model.operations.MoveNodeOp.captureIntend","location":"model-datastructure/org.modelix.model.operations/-move-node-op/capture-intend.html","searchKeys":["captureIntend","open override fun captureIntend(tree: ITree, store: IDeserializingKeyValueStore): IOperationIntend","org.modelix.model.operations.MoveNodeOp.captureIntend"]},{"name":"open override fun captureIntend(tree: ITree, store: IDeserializingKeyValueStore): NoOp","description":"org.modelix.model.operations.NoOp.captureIntend","location":"model-datastructure/org.modelix.model.operations/-no-op/capture-intend.html","searchKeys":["captureIntend","open override fun captureIntend(tree: ITree, store: IDeserializingKeyValueStore): NoOp","org.modelix.model.operations.NoOp.captureIntend"]},{"name":"open override fun captureIntend(tree: ITree, store: IDeserializingKeyValueStore): SetPropertyOp","description":"org.modelix.model.operations.SetPropertyOp.captureIntend","location":"model-datastructure/org.modelix.model.operations/-set-property-op/capture-intend.html","searchKeys":["captureIntend","open override fun captureIntend(tree: ITree, store: IDeserializingKeyValueStore): SetPropertyOp","org.modelix.model.operations.SetPropertyOp.captureIntend"]},{"name":"open override fun captureIntend(tree: ITree, store: IDeserializingKeyValueStore): SetReferenceOp","description":"org.modelix.model.operations.SetReferenceOp.captureIntend","location":"model-datastructure/org.modelix.model.operations/-set-reference-op/capture-intend.html","searchKeys":["captureIntend","open override fun captureIntend(tree: ITree, store: IDeserializingKeyValueStore): SetReferenceOp","org.modelix.model.operations.SetReferenceOp.captureIntend"]},{"name":"open override fun captureIntend(tree: ITree, store_: IDeserializingKeyValueStore): IOperationIntend","description":"org.modelix.model.operations.RevertToOp.captureIntend","location":"model-datastructure/org.modelix.model.operations/-revert-to-op/capture-intend.html","searchKeys":["captureIntend","open override fun captureIntend(tree: ITree, store_: IDeserializingKeyValueStore): IOperationIntend","org.modelix.model.operations.RevertToOp.captureIntend"]},{"name":"open override fun captureIntend(tree: ITree, store_: IDeserializingKeyValueStore): IOperationIntend","description":"org.modelix.model.operations.UndoOp.captureIntend","location":"model-datastructure/org.modelix.model.operations/-undo-op/capture-intend.html","searchKeys":["captureIntend","open override fun captureIntend(tree: ITree, store_: IDeserializingKeyValueStore): IOperationIntend","org.modelix.model.operations.UndoOp.captureIntend"]},{"name":"open override fun containsNode(nodeId: Long): Boolean","description":"org.modelix.model.lazy.CLTree.containsNode","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/contains-node.html","searchKeys":["containsNode","open override fun containsNode(nodeId: Long): Boolean","org.modelix.model.lazy.CLTree.containsNode"]},{"name":"open override fun containsNode(nodeId: Long): Boolean","description":"org.modelix.model.operations.OTWriteTransaction.containsNode","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/contains-node.html","searchKeys":["containsNode","open override fun containsNode(nodeId: Long): Boolean","org.modelix.model.operations.OTWriteTransaction.containsNode"]},{"name":"open override fun deleteNode(nodeId: Long)","description":"org.modelix.model.operations.OTWriteTransaction.deleteNode","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/delete-node.html","searchKeys":["deleteNode","open override fun deleteNode(nodeId: Long)","org.modelix.model.operations.OTWriteTransaction.deleteNode"]},{"name":"open override fun deleteNode(nodeId: Long): ITree","description":"org.modelix.model.lazy.CLTree.deleteNode","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/delete-node.html","searchKeys":["deleteNode","open override fun deleteNode(nodeId: Long): ITree","org.modelix.model.lazy.CLTree.deleteNode"]},{"name":"open override fun deleteNodes(nodeIds: LongArray): ITree","description":"org.modelix.model.lazy.CLTree.deleteNodes","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/delete-nodes.html","searchKeys":["deleteNodes","open override fun deleteNodes(nodeIds: LongArray): ITree","org.modelix.model.lazy.CLTree.deleteNodes"]},{"name":"open override fun execute(): T","description":"org.modelix.model.lazy.BulkQuery.Value.execute","location":"model-datastructure/org.modelix.model.lazy/-bulk-query/-value/execute.html","searchKeys":["execute","open override fun execute(): T","org.modelix.model.lazy.BulkQuery.Value.execute"]},{"name":"open override fun execute(): T","description":"org.modelix.model.lazy.NonBulkQuery.Value.execute","location":"model-datastructure/org.modelix.model.lazy/-non-bulk-query/-value/execute.html","searchKeys":["execute","open override fun execute(): T","org.modelix.model.lazy.NonBulkQuery.Value.execute"]},{"name":"open override fun get(key: Long, shift: Int, bulkQuery: IBulkQuery): IBulkQuery.Value<KVEntryReference<CPNode>?>","description":"org.modelix.model.persistent.CPHamtInternal.get","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-internal/get.html","searchKeys":["get","open override fun get(key: Long, shift: Int, bulkQuery: IBulkQuery): IBulkQuery.Value<KVEntryReference<CPNode>?>","org.modelix.model.persistent.CPHamtInternal.get"]},{"name":"open override fun get(key: Long, shift: Int, bulkQuery: IBulkQuery): IBulkQuery.Value<KVEntryReference<CPNode>?>","description":"org.modelix.model.persistent.CPHamtLeaf.get","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-leaf/get.html","searchKeys":["get","open override fun get(key: Long, shift: Int, bulkQuery: IBulkQuery): IBulkQuery.Value<KVEntryReference<CPNode>?>","org.modelix.model.persistent.CPHamtLeaf.get"]},{"name":"open override fun get(key: Long, shift: Int, bulkQuery: IBulkQuery): IBulkQuery.Value<KVEntryReference<CPNode>?>","description":"org.modelix.model.persistent.CPHamtSingle.get","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-single/get.html","searchKeys":["get","open override fun get(key: Long, shift: Int, bulkQuery: IBulkQuery): IBulkQuery.Value<KVEntryReference<CPNode>?>","org.modelix.model.persistent.CPHamtSingle.get"]},{"name":"open override fun getAll(keys: Iterable<String>): Map<String, String?>","description":"org.modelix.model.persistent.MapBasedStore.getAll","location":"model-datastructure/org.modelix.model.persistent/-map-based-store/get-all.html","searchKeys":["getAll","open override fun getAll(keys: Iterable<String>): Map<String, String?>","org.modelix.model.persistent.MapBasedStore.getAll"]},{"name":"open override fun getAllChildren(parentId: Long): Iterable<Long>","description":"org.modelix.model.lazy.CLTree.getAllChildren","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/get-all-children.html","searchKeys":["getAllChildren","open override fun getAllChildren(parentId: Long): Iterable<Long>","org.modelix.model.lazy.CLTree.getAllChildren"]},{"name":"open override fun getAllChildren(parentId: Long): Iterable<Long>","description":"org.modelix.model.operations.OTWriteTransaction.getAllChildren","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/get-all-children.html","searchKeys":["getAllChildren","open override fun getAllChildren(parentId: Long): Iterable<Long>","org.modelix.model.operations.OTWriteTransaction.getAllChildren"]},{"name":"open override fun getAncestors(nodeIds: Iterable<Long>, includeSelf: Boolean): Set<Long>","description":"org.modelix.model.lazy.CLTree.getAncestors","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/get-ancestors.html","searchKeys":["getAncestors","open override fun getAncestors(nodeIds: Iterable<Long>, includeSelf: Boolean): Set<Long>","org.modelix.model.lazy.CLTree.getAncestors"]},{"name":"open override fun getChildRoles(sourceId: Long): Iterable<String?>","description":"org.modelix.model.lazy.CLTree.getChildRoles","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/get-child-roles.html","searchKeys":["getChildRoles","open override fun getChildRoles(sourceId: Long): Iterable<String?>","org.modelix.model.lazy.CLTree.getChildRoles"]},{"name":"open override fun getChildren(parentId: Long, role: String?): Iterable<Long>","description":"org.modelix.model.lazy.CLTree.getChildren","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/get-children.html","searchKeys":["getChildren","open override fun getChildren(parentId: Long, role: String?): Iterable<Long>","org.modelix.model.lazy.CLTree.getChildren"]},{"name":"open override fun getChildren(parentId: Long, role: String?): Iterable<Long>","description":"org.modelix.model.operations.OTWriteTransaction.getChildren","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/get-children.html","searchKeys":["getChildren","open override fun getChildren(parentId: Long, role: String?): Iterable<Long>","org.modelix.model.operations.OTWriteTransaction.getChildren"]},{"name":"open override fun getConcept(nodeId: Long): IConcept?","description":"org.modelix.model.lazy.CLTree.getConcept","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/get-concept.html","searchKeys":["getConcept","open override fun getConcept(nodeId: Long): IConcept?","org.modelix.model.lazy.CLTree.getConcept"]},{"name":"open override fun getConcept(nodeId: Long): IConcept?","description":"org.modelix.model.operations.OTWriteTransaction.getConcept","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/get-concept.html","searchKeys":["getConcept","open override fun getConcept(nodeId: Long): IConcept?","org.modelix.model.operations.OTWriteTransaction.getConcept"]},{"name":"open override fun getConceptReference(nodeId: Long): IConceptReference?","description":"org.modelix.model.lazy.CLTree.getConceptReference","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/get-concept-reference.html","searchKeys":["getConceptReference","open override fun getConceptReference(nodeId: Long): IConceptReference?","org.modelix.model.lazy.CLTree.getConceptReference"]},{"name":"open override fun getConceptReference(nodeId: Long): IConceptReference?","description":"org.modelix.model.operations.OTWriteTransaction.getConceptReference","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/get-concept-reference.html","searchKeys":["getConceptReference","open override fun getConceptReference(nodeId: Long): IConceptReference?","org.modelix.model.operations.OTWriteTransaction.getConceptReference"]},{"name":"open override fun getContentHash(): String","description":"org.modelix.model.lazy.CLVersion.getContentHash","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/get-content-hash.html","searchKeys":["getContentHash","open override fun getContentHash(): String","org.modelix.model.lazy.CLVersion.getContentHash"]},{"name":"open override fun getDescendants(root: Long, includeSelf: Boolean): Iterable<CLNode>","description":"org.modelix.model.lazy.CLTree.getDescendants","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/get-descendants.html","searchKeys":["getDescendants","open override fun getDescendants(root: Long, includeSelf: Boolean): Iterable<CLNode>","org.modelix.model.lazy.CLTree.getDescendants"]},{"name":"open override fun getDescendants(rootIds: Iterable<Long>, includeSelf: Boolean): Iterable<CLNode>","description":"org.modelix.model.lazy.CLTree.getDescendants","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/get-descendants.html","searchKeys":["getDescendants","open override fun getDescendants(rootIds: Iterable<Long>, includeSelf: Boolean): Iterable<CLNode>","org.modelix.model.lazy.CLTree.getDescendants"]},{"name":"open override fun getDeserializer(): (String) -> E","description":"org.modelix.model.lazy.KVEntryReference.getDeserializer","location":"model-datastructure/org.modelix.model.lazy/-k-v-entry-reference/get-deserializer.html","searchKeys":["getDeserializer","open override fun getDeserializer(): (String) -> E","org.modelix.model.lazy.KVEntryReference.getDeserializer"]},{"name":"open override fun getDeserializer(): (String) -> E","description":"org.modelix.model.lazy.NonWrittenEntry.getDeserializer","location":"model-datastructure/org.modelix.model.lazy/-non-written-entry/get-deserializer.html","searchKeys":["getDeserializer","open override fun getDeserializer(): (String) -> E","org.modelix.model.lazy.NonWrittenEntry.getDeserializer"]},{"name":"open override fun getDeserializer(): (String) -> E","description":"org.modelix.model.lazy.WrittenEntry.getDeserializer","location":"model-datastructure/org.modelix.model.lazy/-written-entry/get-deserializer.html","searchKeys":["getDeserializer","open override fun getDeserializer(): (String) -> E","org.modelix.model.lazy.WrittenEntry.getDeserializer"]},{"name":"open override fun getDeserializer(): (String) -> IKVValue","description":"org.modelix.model.persistent.CPHamtNode.getDeserializer","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/get-deserializer.html","searchKeys":["getDeserializer","open override fun getDeserializer(): (String) -> IKVValue","org.modelix.model.persistent.CPHamtNode.getDeserializer"]},{"name":"open override fun getDeserializer(): (String) -> IKVValue","description":"org.modelix.model.persistent.CPNode.getDeserializer","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/get-deserializer.html","searchKeys":["getDeserializer","open override fun getDeserializer(): (String) -> IKVValue","org.modelix.model.persistent.CPNode.getDeserializer"]},{"name":"open override fun getDeserializer(): (String) -> IKVValue","description":"org.modelix.model.persistent.CPOperationsList.getDeserializer","location":"model-datastructure/org.modelix.model.persistent/-c-p-operations-list/get-deserializer.html","searchKeys":["getDeserializer","open override fun getDeserializer(): (String) -> IKVValue","org.modelix.model.persistent.CPOperationsList.getDeserializer"]},{"name":"open override fun getDeserializer(): (String) -> IKVValue","description":"org.modelix.model.persistent.CPTree.getDeserializer","location":"model-datastructure/org.modelix.model.persistent/-c-p-tree/get-deserializer.html","searchKeys":["getDeserializer","open override fun getDeserializer(): (String) -> IKVValue","org.modelix.model.persistent.CPTree.getDeserializer"]},{"name":"open override fun getDeserializer(): (String) -> IKVValue","description":"org.modelix.model.persistent.CPVersion.getDeserializer","location":"model-datastructure/org.modelix.model.persistent/-c-p-version/get-deserializer.html","searchKeys":["getDeserializer","open override fun getDeserializer(): (String) -> IKVValue","org.modelix.model.persistent.CPVersion.getDeserializer"]},{"name":"open override fun getHash(): String","description":"org.modelix.model.lazy.KVEntryReference.getHash","location":"model-datastructure/org.modelix.model.lazy/-k-v-entry-reference/get-hash.html","searchKeys":["getHash","open override fun getHash(): String","org.modelix.model.lazy.KVEntryReference.getHash"]},{"name":"open override fun getHash(): String","description":"org.modelix.model.lazy.NonWrittenEntry.getHash","location":"model-datastructure/org.modelix.model.lazy/-non-written-entry/get-hash.html","searchKeys":["getHash","open override fun getHash(): String","org.modelix.model.lazy.NonWrittenEntry.getHash"]},{"name":"open override fun getHash(): String","description":"org.modelix.model.lazy.WrittenEntry.getHash","location":"model-datastructure/org.modelix.model.lazy/-written-entry/get-hash.html","searchKeys":["getHash","open override fun getHash(): String","org.modelix.model.lazy.WrittenEntry.getHash"]},{"name":"open override fun getId(): String","description":"org.modelix.model.lazy.CLTree.getId","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/get-id.html","searchKeys":["getId","open override fun getId(): String","org.modelix.model.lazy.CLTree.getId"]},{"name":"open override fun getId(): String","description":"org.modelix.model.operations.OTBranch.getId","location":"model-datastructure/org.modelix.model.operations/-o-t-branch/get-id.html","searchKeys":["getId","open override fun getId(): String","org.modelix.model.operations.OTBranch.getId"]},{"name":"open override fun getOriginalOp(): AddNewChildSubtreeOp","description":"org.modelix.model.operations.AddNewChildSubtreeOp.Applied.getOriginalOp","location":"model-datastructure/org.modelix.model.operations/-add-new-child-subtree-op/-applied/get-original-op.html","searchKeys":["getOriginalOp","open override fun getOriginalOp(): AddNewChildSubtreeOp","org.modelix.model.operations.AddNewChildSubtreeOp.Applied.getOriginalOp"]},{"name":"open override fun getOriginalOp(): AddNewChildSubtreeOp","description":"org.modelix.model.operations.AddNewChildSubtreeOp.Intend.getOriginalOp","location":"model-datastructure/org.modelix.model.operations/-add-new-child-subtree-op/-intend/get-original-op.html","searchKeys":["getOriginalOp","open override fun getOriginalOp(): AddNewChildSubtreeOp","org.modelix.model.operations.AddNewChildSubtreeOp.Intend.getOriginalOp"]},{"name":"open override fun getOriginalOp(): AddNewChildrenOp","description":"org.modelix.model.operations.AddNewChildrenOp.Applied.getOriginalOp","location":"model-datastructure/org.modelix.model.operations/-add-new-children-op/-applied/get-original-op.html","searchKeys":["getOriginalOp","open override fun getOriginalOp(): AddNewChildrenOp","org.modelix.model.operations.AddNewChildrenOp.Applied.getOriginalOp"]},{"name":"open override fun getOriginalOp(): AddNewChildrenOp","description":"org.modelix.model.operations.AddNewChildrenOp.Intend.getOriginalOp","location":"model-datastructure/org.modelix.model.operations/-add-new-children-op/-intend/get-original-op.html","searchKeys":["getOriginalOp","open override fun getOriginalOp(): AddNewChildrenOp","org.modelix.model.operations.AddNewChildrenOp.Intend.getOriginalOp"]},{"name":"open override fun getOriginalOp(): BulkUpdateOp","description":"org.modelix.model.operations.BulkUpdateOp.Applied.getOriginalOp","location":"model-datastructure/org.modelix.model.operations/-bulk-update-op/-applied/get-original-op.html","searchKeys":["getOriginalOp","open override fun getOriginalOp(): BulkUpdateOp","org.modelix.model.operations.BulkUpdateOp.Applied.getOriginalOp"]},{"name":"open override fun getOriginalOp(): BulkUpdateOp","description":"org.modelix.model.operations.BulkUpdateOp.Intend.getOriginalOp","location":"model-datastructure/org.modelix.model.operations/-bulk-update-op/-intend/get-original-op.html","searchKeys":["getOriginalOp","open override fun getOriginalOp(): BulkUpdateOp","org.modelix.model.operations.BulkUpdateOp.Intend.getOriginalOp"]},{"name":"open override fun getOriginalOp(): DeleteNodeOp","description":"org.modelix.model.operations.DeleteNodeOp.Applied.getOriginalOp","location":"model-datastructure/org.modelix.model.operations/-delete-node-op/-applied/get-original-op.html","searchKeys":["getOriginalOp","open override fun getOriginalOp(): DeleteNodeOp","org.modelix.model.operations.DeleteNodeOp.Applied.getOriginalOp"]},{"name":"open override fun getOriginalOp(): DeleteNodeOp","description":"org.modelix.model.operations.DeleteNodeOp.getOriginalOp","location":"model-datastructure/org.modelix.model.operations/-delete-node-op/get-original-op.html","searchKeys":["getOriginalOp","open override fun getOriginalOp(): DeleteNodeOp","org.modelix.model.operations.DeleteNodeOp.getOriginalOp"]},{"name":"open override fun getOriginalOp(): IOperation","description":"org.modelix.model.operations.RevertToOp.Applied.getOriginalOp","location":"model-datastructure/org.modelix.model.operations/-revert-to-op/-applied/get-original-op.html","searchKeys":["getOriginalOp","open override fun getOriginalOp(): IOperation","org.modelix.model.operations.RevertToOp.Applied.getOriginalOp"]},{"name":"open override fun getOriginalOp(): IOperation","description":"org.modelix.model.operations.RevertToOp.Intend.getOriginalOp","location":"model-datastructure/org.modelix.model.operations/-revert-to-op/-intend/get-original-op.html","searchKeys":["getOriginalOp","open override fun getOriginalOp(): IOperation","org.modelix.model.operations.RevertToOp.Intend.getOriginalOp"]},{"name":"open override fun getOriginalOp(): IOperation","description":"org.modelix.model.operations.UndoOp.Applied.getOriginalOp","location":"model-datastructure/org.modelix.model.operations/-undo-op/-applied/get-original-op.html","searchKeys":["getOriginalOp","open override fun getOriginalOp(): IOperation","org.modelix.model.operations.UndoOp.Applied.getOriginalOp"]},{"name":"open override fun getOriginalOp(): IOperation","description":"org.modelix.model.operations.UndoOp.Intend.getOriginalOp","location":"model-datastructure/org.modelix.model.operations/-undo-op/-intend/get-original-op.html","searchKeys":["getOriginalOp","open override fun getOriginalOp(): IOperation","org.modelix.model.operations.UndoOp.Intend.getOriginalOp"]},{"name":"open override fun getOriginalOp(): MoveNodeOp","description":"org.modelix.model.operations.MoveNodeOp.Applied.getOriginalOp","location":"model-datastructure/org.modelix.model.operations/-move-node-op/-applied/get-original-op.html","searchKeys":["getOriginalOp","open override fun getOriginalOp(): MoveNodeOp","org.modelix.model.operations.MoveNodeOp.Applied.getOriginalOp"]},{"name":"open override fun getOriginalOp(): MoveNodeOp","description":"org.modelix.model.operations.MoveNodeOp.Intend.getOriginalOp","location":"model-datastructure/org.modelix.model.operations/-move-node-op/-intend/get-original-op.html","searchKeys":["getOriginalOp","open override fun getOriginalOp(): MoveNodeOp","org.modelix.model.operations.MoveNodeOp.Intend.getOriginalOp"]},{"name":"open override fun getOriginalOp(): NoOp","description":"org.modelix.model.operations.NoOp.getOriginalOp","location":"model-datastructure/org.modelix.model.operations/-no-op/get-original-op.html","searchKeys":["getOriginalOp","open override fun getOriginalOp(): NoOp","org.modelix.model.operations.NoOp.getOriginalOp"]},{"name":"open override fun getOriginalOp(): SetPropertyOp","description":"org.modelix.model.operations.SetPropertyOp.Applied.getOriginalOp","location":"model-datastructure/org.modelix.model.operations/-set-property-op/-applied/get-original-op.html","searchKeys":["getOriginalOp","open override fun getOriginalOp(): SetPropertyOp","org.modelix.model.operations.SetPropertyOp.Applied.getOriginalOp"]},{"name":"open override fun getOriginalOp(): SetPropertyOp","description":"org.modelix.model.operations.SetPropertyOp.getOriginalOp","location":"model-datastructure/org.modelix.model.operations/-set-property-op/get-original-op.html","searchKeys":["getOriginalOp","open override fun getOriginalOp(): SetPropertyOp","org.modelix.model.operations.SetPropertyOp.getOriginalOp"]},{"name":"open override fun getOriginalOp(): SetReferenceOp","description":"org.modelix.model.operations.SetReferenceOp.Applied.getOriginalOp","location":"model-datastructure/org.modelix.model.operations/-set-reference-op/-applied/get-original-op.html","searchKeys":["getOriginalOp","open override fun getOriginalOp(): SetReferenceOp","org.modelix.model.operations.SetReferenceOp.Applied.getOriginalOp"]},{"name":"open override fun getOriginalOp(): SetReferenceOp","description":"org.modelix.model.operations.SetReferenceOp.getOriginalOp","location":"model-datastructure/org.modelix.model.operations/-set-reference-op/get-original-op.html","searchKeys":["getOriginalOp","open override fun getOriginalOp(): SetReferenceOp","org.modelix.model.operations.SetReferenceOp.getOriginalOp"]},{"name":"open override fun getParent(nodeId: Long): Long","description":"org.modelix.model.lazy.CLTree.getParent","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/get-parent.html","searchKeys":["getParent","open override fun getParent(nodeId: Long): Long","org.modelix.model.lazy.CLTree.getParent"]},{"name":"open override fun getParent(nodeId: Long): Long","description":"org.modelix.model.operations.OTWriteTransaction.getParent","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/get-parent.html","searchKeys":["getParent","open override fun getParent(nodeId: Long): Long","org.modelix.model.operations.OTWriteTransaction.getParent"]},{"name":"open override fun getPendingSize(): Int","description":"org.modelix.model.persistent.MapBasedStore.getPendingSize","location":"model-datastructure/org.modelix.model.persistent/-map-based-store/get-pending-size.html","searchKeys":["getPendingSize","open override fun getPendingSize(): Int","org.modelix.model.persistent.MapBasedStore.getPendingSize"]},{"name":"open override fun getProperty(nodeId: Long, role: String): String?","description":"org.modelix.model.lazy.CLTree.getProperty","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/get-property.html","searchKeys":["getProperty","open override fun getProperty(nodeId: Long, role: String): String?","org.modelix.model.lazy.CLTree.getProperty"]},{"name":"open override fun getProperty(nodeId: Long, role: String): String?","description":"org.modelix.model.operations.OTWriteTransaction.getProperty","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/get-property.html","searchKeys":["getProperty","open override fun getProperty(nodeId: Long, role: String): String?","org.modelix.model.operations.OTWriteTransaction.getProperty"]},{"name":"open override fun getPropertyRoles(sourceId: Long): Iterable<String>","description":"org.modelix.model.lazy.CLTree.getPropertyRoles","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/get-property-roles.html","searchKeys":["getPropertyRoles","open override fun getPropertyRoles(sourceId: Long): Iterable<String>","org.modelix.model.lazy.CLTree.getPropertyRoles"]},{"name":"open override fun getPropertyRoles(sourceId: Long): Iterable<String>","description":"org.modelix.model.operations.OTWriteTransaction.getPropertyRoles","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/get-property-roles.html","searchKeys":["getPropertyRoles","open override fun getPropertyRoles(sourceId: Long): Iterable<String>","org.modelix.model.operations.OTWriteTransaction.getPropertyRoles"]},{"name":"open override fun getReferenceRoles(sourceId: Long): Iterable<String>","description":"org.modelix.model.lazy.CLTree.getReferenceRoles","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/get-reference-roles.html","searchKeys":["getReferenceRoles","open override fun getReferenceRoles(sourceId: Long): Iterable<String>","org.modelix.model.lazy.CLTree.getReferenceRoles"]},{"name":"open override fun getReferenceRoles(sourceId: Long): Iterable<String>","description":"org.modelix.model.operations.OTWriteTransaction.getReferenceRoles","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/get-reference-roles.html","searchKeys":["getReferenceRoles","open override fun getReferenceRoles(sourceId: Long): Iterable<String>","org.modelix.model.operations.OTWriteTransaction.getReferenceRoles"]},{"name":"open override fun getReferenceTarget(sourceId: Long, role: String): INodeReference?","description":"org.modelix.model.lazy.CLTree.getReferenceTarget","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/get-reference-target.html","searchKeys":["getReferenceTarget","open override fun getReferenceTarget(sourceId: Long, role: String): INodeReference?","org.modelix.model.lazy.CLTree.getReferenceTarget"]},{"name":"open override fun getReferenceTarget(sourceId: Long, role: String): INodeReference?","description":"org.modelix.model.operations.OTWriteTransaction.getReferenceTarget","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/get-reference-target.html","searchKeys":["getReferenceTarget","open override fun getReferenceTarget(sourceId: Long, role: String): INodeReference?","org.modelix.model.operations.OTWriteTransaction.getReferenceTarget"]},{"name":"open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","description":"org.modelix.model.operations.AbstractOperation.getReferencedEntries","location":"model-datastructure/org.modelix.model.operations/-abstract-operation/get-referenced-entries.html","searchKeys":["getReferencedEntries","open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","org.modelix.model.operations.AbstractOperation.getReferencedEntries"]},{"name":"open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","description":"org.modelix.model.operations.AddNewChildSubtreeOp.getReferencedEntries","location":"model-datastructure/org.modelix.model.operations/-add-new-child-subtree-op/get-referenced-entries.html","searchKeys":["getReferencedEntries","open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","org.modelix.model.operations.AddNewChildSubtreeOp.getReferencedEntries"]},{"name":"open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","description":"org.modelix.model.operations.BulkUpdateOp.getReferencedEntries","location":"model-datastructure/org.modelix.model.operations/-bulk-update-op/get-referenced-entries.html","searchKeys":["getReferencedEntries","open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","org.modelix.model.operations.BulkUpdateOp.getReferencedEntries"]},{"name":"open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","description":"org.modelix.model.operations.RevertToOp.getReferencedEntries","location":"model-datastructure/org.modelix.model.operations/-revert-to-op/get-referenced-entries.html","searchKeys":["getReferencedEntries","open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","org.modelix.model.operations.RevertToOp.getReferencedEntries"]},{"name":"open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","description":"org.modelix.model.operations.UndoOp.getReferencedEntries","location":"model-datastructure/org.modelix.model.operations/-undo-op/get-referenced-entries.html","searchKeys":["getReferencedEntries","open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","org.modelix.model.operations.UndoOp.getReferencedEntries"]},{"name":"open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","description":"org.modelix.model.persistent.CPHamtInternal.getReferencedEntries","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-internal/get-referenced-entries.html","searchKeys":["getReferencedEntries","open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","org.modelix.model.persistent.CPHamtInternal.getReferencedEntries"]},{"name":"open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","description":"org.modelix.model.persistent.CPHamtLeaf.getReferencedEntries","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-leaf/get-referenced-entries.html","searchKeys":["getReferencedEntries","open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","org.modelix.model.persistent.CPHamtLeaf.getReferencedEntries"]},{"name":"open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","description":"org.modelix.model.persistent.CPHamtSingle.getReferencedEntries","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-single/get-referenced-entries.html","searchKeys":["getReferencedEntries","open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","org.modelix.model.persistent.CPHamtSingle.getReferencedEntries"]},{"name":"open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","description":"org.modelix.model.persistent.CPNode.getReferencedEntries","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/get-referenced-entries.html","searchKeys":["getReferencedEntries","open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","org.modelix.model.persistent.CPNode.getReferencedEntries"]},{"name":"open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","description":"org.modelix.model.persistent.CPOperationsList.getReferencedEntries","location":"model-datastructure/org.modelix.model.persistent/-c-p-operations-list/get-referenced-entries.html","searchKeys":["getReferencedEntries","open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","org.modelix.model.persistent.CPOperationsList.getReferencedEntries"]},{"name":"open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","description":"org.modelix.model.persistent.CPTree.getReferencedEntries","location":"model-datastructure/org.modelix.model.persistent/-c-p-tree/get-referenced-entries.html","searchKeys":["getReferencedEntries","open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","org.modelix.model.persistent.CPTree.getReferencedEntries"]},{"name":"open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","description":"org.modelix.model.persistent.CPVersion.getReferencedEntries","location":"model-datastructure/org.modelix.model.persistent/-c-p-version/get-referenced-entries.html","searchKeys":["getReferencedEntries","open override fun getReferencedEntries(): List<KVEntryReference<IKVValue>>","org.modelix.model.persistent.CPVersion.getReferencedEntries"]},{"name":"open override fun getRole(nodeId: Long): String?","description":"org.modelix.model.lazy.CLTree.getRole","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/get-role.html","searchKeys":["getRole","open override fun getRole(nodeId: Long): String?","org.modelix.model.lazy.CLTree.getRole"]},{"name":"open override fun getRole(nodeId: Long): String?","description":"org.modelix.model.operations.OTWriteTransaction.getRole","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/get-role.html","searchKeys":["getRole","open override fun getRole(nodeId: Long): String?","org.modelix.model.operations.OTWriteTransaction.getRole"]},{"name":"open override fun getStore(): IDeserializingKeyValueStore","description":"org.modelix.model.lazy.PrefetchCache.Companion.ContextIndirectCache.getStore","location":"model-datastructure/org.modelix.model.lazy/-prefetch-cache/-companion/-context-indirect-cache/get-store.html","searchKeys":["getStore","open override fun getStore(): IDeserializingKeyValueStore","org.modelix.model.lazy.PrefetchCache.Companion.ContextIndirectCache.getStore"]},{"name":"open override fun getTree(): CLTree","description":"org.modelix.model.lazy.CLVersion.getTree","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/get-tree.html","searchKeys":["getTree","open override fun getTree(): CLTree","org.modelix.model.lazy.CLVersion.getTree"]},{"name":"open override fun getUserObject(key: Any): Any?","description":"org.modelix.model.operations.OTWriteTransaction.getUserObject","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/get-user-object.html","searchKeys":["getUserObject","open override fun getUserObject(key: Any): Any?","org.modelix.model.operations.OTWriteTransaction.getUserObject"]},{"name":"open override fun getValue(store: IDeserializingKeyValueStore): E","description":"org.modelix.model.lazy.KVEntryReference.getValue","location":"model-datastructure/org.modelix.model.lazy/-k-v-entry-reference/get-value.html","searchKeys":["getValue","open override fun getValue(store: IDeserializingKeyValueStore): E","org.modelix.model.lazy.KVEntryReference.getValue"]},{"name":"open override fun getValue(store: IDeserializingKeyValueStore): E","description":"org.modelix.model.lazy.NonWrittenEntry.getValue","location":"model-datastructure/org.modelix.model.lazy/-non-written-entry/get-value.html","searchKeys":["getValue","open override fun getValue(store: IDeserializingKeyValueStore): E","org.modelix.model.lazy.NonWrittenEntry.getValue"]},{"name":"open override fun getValue(store: IDeserializingKeyValueStore): E","description":"org.modelix.model.lazy.WrittenEntry.getValue","location":"model-datastructure/org.modelix.model.lazy/-written-entry/get-value.html","searchKeys":["getValue","open override fun getValue(store: IDeserializingKeyValueStore): E","org.modelix.model.lazy.WrittenEntry.getValue"]},{"name":"open override fun hashCode(): Int","description":"org.modelix.model.lazy.CLVersion.hashCode","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.modelix.model.lazy.CLVersion.hashCode"]},{"name":"open override fun hashCode(): Int","description":"org.modelix.model.lazy.KVEntryReference.hashCode","location":"model-datastructure/org.modelix.model.lazy/-k-v-entry-reference/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.modelix.model.lazy.KVEntryReference.hashCode"]},{"name":"open override fun invert(): List<IOperation>","description":"org.modelix.model.operations.AddNewChildSubtreeOp.Applied.invert","location":"model-datastructure/org.modelix.model.operations/-add-new-child-subtree-op/-applied/invert.html","searchKeys":["invert","open override fun invert(): List<IOperation>","org.modelix.model.operations.AddNewChildSubtreeOp.Applied.invert"]},{"name":"open override fun invert(): List<IOperation>","description":"org.modelix.model.operations.AddNewChildrenOp.Applied.invert","location":"model-datastructure/org.modelix.model.operations/-add-new-children-op/-applied/invert.html","searchKeys":["invert","open override fun invert(): List<IOperation>","org.modelix.model.operations.AddNewChildrenOp.Applied.invert"]},{"name":"open override fun invert(): List<IOperation>","description":"org.modelix.model.operations.BulkUpdateOp.Applied.invert","location":"model-datastructure/org.modelix.model.operations/-bulk-update-op/-applied/invert.html","searchKeys":["invert","open override fun invert(): List<IOperation>","org.modelix.model.operations.BulkUpdateOp.Applied.invert"]},{"name":"open override fun invert(): List<IOperation>","description":"org.modelix.model.operations.DeleteNodeOp.Applied.invert","location":"model-datastructure/org.modelix.model.operations/-delete-node-op/-applied/invert.html","searchKeys":["invert","open override fun invert(): List<IOperation>","org.modelix.model.operations.DeleteNodeOp.Applied.invert"]},{"name":"open override fun invert(): List<IOperation>","description":"org.modelix.model.operations.MoveNodeOp.Applied.invert","location":"model-datastructure/org.modelix.model.operations/-move-node-op/-applied/invert.html","searchKeys":["invert","open override fun invert(): List<IOperation>","org.modelix.model.operations.MoveNodeOp.Applied.invert"]},{"name":"open override fun invert(): List<IOperation>","description":"org.modelix.model.operations.NoOp.invert","location":"model-datastructure/org.modelix.model.operations/-no-op/invert.html","searchKeys":["invert","open override fun invert(): List<IOperation>","org.modelix.model.operations.NoOp.invert"]},{"name":"open override fun invert(): List<IOperation>","description":"org.modelix.model.operations.RevertToOp.Applied.invert","location":"model-datastructure/org.modelix.model.operations/-revert-to-op/-applied/invert.html","searchKeys":["invert","open override fun invert(): List<IOperation>","org.modelix.model.operations.RevertToOp.Applied.invert"]},{"name":"open override fun invert(): List<IOperation>","description":"org.modelix.model.operations.SetPropertyOp.Applied.invert","location":"model-datastructure/org.modelix.model.operations/-set-property-op/-applied/invert.html","searchKeys":["invert","open override fun invert(): List<IOperation>","org.modelix.model.operations.SetPropertyOp.Applied.invert"]},{"name":"open override fun invert(): List<IOperation>","description":"org.modelix.model.operations.SetReferenceOp.Applied.invert","location":"model-datastructure/org.modelix.model.operations/-set-reference-op/-applied/invert.html","searchKeys":["invert","open override fun invert(): List<IOperation>","org.modelix.model.operations.SetReferenceOp.Applied.invert"]},{"name":"open override fun invert(): List<IOperation>","description":"org.modelix.model.operations.UndoOp.Applied.invert","location":"model-datastructure/org.modelix.model.operations/-undo-op/-applied/invert.html","searchKeys":["invert","open override fun invert(): List<IOperation>","org.modelix.model.operations.UndoOp.Applied.invert"]},{"name":"open override fun listen(key: String, listener: IKeyListener)","description":"org.modelix.model.persistent.MapBasedStore.listen","location":"model-datastructure/org.modelix.model.persistent/-map-based-store/listen.html","searchKeys":["listen","open override fun listen(key: String, listener: IKeyListener)","org.modelix.model.persistent.MapBasedStore.listen"]},{"name":"open override fun moveChild(newParentId: Long, newRole: String?, newIndex_: Int, childId: Long)","description":"org.modelix.model.operations.OTWriteTransaction.moveChild","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/move-child.html","searchKeys":["moveChild","open override fun moveChild(newParentId: Long, newRole: String?, newIndex_: Int, childId: Long)","org.modelix.model.operations.OTWriteTransaction.moveChild"]},{"name":"open override fun moveChild(targetParentId: Long, targetRole: String?, targetIndex_: Int, childId: Long): ITree","description":"org.modelix.model.lazy.CLTree.moveChild","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/move-child.html","searchKeys":["moveChild","open override fun moveChild(targetParentId: Long, targetRole: String?, targetIndex_: Int, childId: Long): ITree","org.modelix.model.lazy.CLTree.moveChild"]},{"name":"open override fun newBulkQuery(deserializingCache: IDeserializingKeyValueStore): IBulkQuery","description":"org.modelix.model.persistent.MapBasedStore.newBulkQuery","location":"model-datastructure/org.modelix.model.persistent/-map-based-store/new-bulk-query.html","searchKeys":["newBulkQuery","open override fun newBulkQuery(deserializingCache: IDeserializingKeyValueStore): IBulkQuery","org.modelix.model.persistent.MapBasedStore.newBulkQuery"]},{"name":"open override fun onSuccess(handler: (T) -> Unit)","description":"org.modelix.model.lazy.BulkQuery.Value.onSuccess","location":"model-datastructure/org.modelix.model.lazy/-bulk-query/-value/on-success.html","searchKeys":["onSuccess","open override fun onSuccess(handler: (T) -> Unit)","org.modelix.model.lazy.BulkQuery.Value.onSuccess"]},{"name":"open override fun onSuccess(handler: (T) -> Unit)","description":"org.modelix.model.lazy.NonBulkQuery.Value.onSuccess","location":"model-datastructure/org.modelix.model.lazy/-non-bulk-query/-value/on-success.html","searchKeys":["onSuccess","open override fun onSuccess(handler: (T) -> Unit)","org.modelix.model.lazy.NonBulkQuery.Value.onSuccess"]},{"name":"open override fun prefetch(hash: String)","description":"org.modelix.model.lazy.IndirectObjectStore.prefetch","location":"model-datastructure/org.modelix.model.lazy/-indirect-object-store/prefetch.html","searchKeys":["prefetch","open override fun prefetch(hash: String)","org.modelix.model.lazy.IndirectObjectStore.prefetch"]},{"name":"open override fun prefetch(hash: String)","description":"org.modelix.model.lazy.ObjectStoreCache.prefetch","location":"model-datastructure/org.modelix.model.lazy/-object-store-cache/prefetch.html","searchKeys":["prefetch","open override fun prefetch(hash: String)","org.modelix.model.lazy.ObjectStoreCache.prefetch"]},{"name":"open override fun prefetch(hash: String)","description":"org.modelix.model.lazy.PrefetchCache.prefetch","location":"model-datastructure/org.modelix.model.lazy/-prefetch-cache/prefetch.html","searchKeys":["prefetch","open override fun prefetch(hash: String)","org.modelix.model.lazy.PrefetchCache.prefetch"]},{"name":"open override fun prefetch(key: String)","description":"org.modelix.model.persistent.MapBasedStore.prefetch","location":"model-datastructure/org.modelix.model.persistent/-map-based-store/prefetch.html","searchKeys":["prefetch","open override fun prefetch(key: String)","org.modelix.model.persistent.MapBasedStore.prefetch"]},{"name":"open override fun put(hash: String, deserialized: Any, serialized: String)","description":"org.modelix.model.lazy.IndirectObjectStore.put","location":"model-datastructure/org.modelix.model.lazy/-indirect-object-store/put.html","searchKeys":["put","open override fun put(hash: String, deserialized: Any, serialized: String)","org.modelix.model.lazy.IndirectObjectStore.put"]},{"name":"open override fun put(hash: String, deserialized: Any, serialized: String)","description":"org.modelix.model.lazy.ObjectStoreCache.put","location":"model-datastructure/org.modelix.model.lazy/-object-store-cache/put.html","searchKeys":["put","open override fun put(hash: String, deserialized: Any, serialized: String)","org.modelix.model.lazy.ObjectStoreCache.put"]},{"name":"open override fun put(hash: String, deserialized: Any, serialized: String)","description":"org.modelix.model.lazy.PrefetchCache.put","location":"model-datastructure/org.modelix.model.lazy/-prefetch-cache/put.html","searchKeys":["put","open override fun put(hash: String, deserialized: Any, serialized: String)","org.modelix.model.lazy.PrefetchCache.put"]},{"name":"open override fun put(key: Long, value: KVEntryReference<CPNode>?, shift: Int, store: IDeserializingKeyValueStore): CPHamtNode?","description":"org.modelix.model.persistent.CPHamtInternal.put","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-internal/put.html","searchKeys":["put","open override fun put(key: Long, value: KVEntryReference<CPNode>?, shift: Int, store: IDeserializingKeyValueStore): CPHamtNode?","org.modelix.model.persistent.CPHamtInternal.put"]},{"name":"open override fun put(key: Long, value: KVEntryReference<CPNode>?, shift: Int, store: IDeserializingKeyValueStore): CPHamtNode?","description":"org.modelix.model.persistent.CPHamtLeaf.put","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-leaf/put.html","searchKeys":["put","open override fun put(key: Long, value: KVEntryReference<CPNode>?, shift: Int, store: IDeserializingKeyValueStore): CPHamtNode?","org.modelix.model.persistent.CPHamtLeaf.put"]},{"name":"open override fun put(key: Long, value: KVEntryReference<CPNode>?, shift: Int, store: IDeserializingKeyValueStore): CPHamtNode?","description":"org.modelix.model.persistent.CPHamtSingle.put","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-single/put.html","searchKeys":["put","open override fun put(key: Long, value: KVEntryReference<CPNode>?, shift: Int, store: IDeserializingKeyValueStore): CPHamtNode?","org.modelix.model.persistent.CPHamtSingle.put"]},{"name":"open override fun put(key: String, value: String?)","description":"org.modelix.model.persistent.MapBasedStore.put","location":"model-datastructure/org.modelix.model.persistent/-map-based-store/put.html","searchKeys":["put","open override fun put(key: String, value: String?)","org.modelix.model.persistent.MapBasedStore.put"]},{"name":"open override fun putAll(entries: Map<String, String?>)","description":"org.modelix.model.persistent.MapBasedStore.putAll","location":"model-datastructure/org.modelix.model.persistent/-map-based-store/put-all.html","searchKeys":["putAll","open override fun putAll(entries: Map<String, String?>)","org.modelix.model.persistent.MapBasedStore.putAll"]},{"name":"open override fun putUserObject(key: Any, value: Any?)","description":"org.modelix.model.operations.OTWriteTransaction.putUserObject","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/put-user-object.html","searchKeys":["putUserObject","open override fun putUserObject(key: Any, value: Any?)","org.modelix.model.operations.OTWriteTransaction.putUserObject"]},{"name":"open override fun remove(key: Long, shift: Int, store: IDeserializingKeyValueStore): CPHamtNode?","description":"org.modelix.model.persistent.CPHamtInternal.remove","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-internal/remove.html","searchKeys":["remove","open override fun remove(key: Long, shift: Int, store: IDeserializingKeyValueStore): CPHamtNode?","org.modelix.model.persistent.CPHamtInternal.remove"]},{"name":"open override fun remove(key: Long, shift: Int, store: IDeserializingKeyValueStore): CPHamtNode?","description":"org.modelix.model.persistent.CPHamtLeaf.remove","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-leaf/remove.html","searchKeys":["remove","open override fun remove(key: Long, shift: Int, store: IDeserializingKeyValueStore): CPHamtNode?","org.modelix.model.persistent.CPHamtLeaf.remove"]},{"name":"open override fun remove(key: Long, shift: Int, store: IDeserializingKeyValueStore): CPHamtNode?","description":"org.modelix.model.persistent.CPHamtSingle.remove","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-single/remove.html","searchKeys":["remove","open override fun remove(key: Long, shift: Int, store: IDeserializingKeyValueStore): CPHamtNode?","org.modelix.model.persistent.CPHamtSingle.remove"]},{"name":"open override fun removeListener(key: String, listener: IKeyListener)","description":"org.modelix.model.persistent.MapBasedStore.removeListener","location":"model-datastructure/org.modelix.model.persistent/-map-based-store/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(key: String, listener: IKeyListener)","org.modelix.model.persistent.MapBasedStore.removeListener"]},{"name":"open override fun removeListener(l: IBranchListener)","description":"org.modelix.model.operations.OTBranch.removeListener","location":"model-datastructure/org.modelix.model.operations/-o-t-branch/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(l: IBranchListener)","org.modelix.model.operations.OTBranch.removeListener"]},{"name":"open override fun restoreIntend(tree: ITree): List<IOperation>","description":"org.modelix.model.operations.AddNewChildSubtreeOp.Intend.restoreIntend","location":"model-datastructure/org.modelix.model.operations/-add-new-child-subtree-op/-intend/restore-intend.html","searchKeys":["restoreIntend","open override fun restoreIntend(tree: ITree): List<IOperation>","org.modelix.model.operations.AddNewChildSubtreeOp.Intend.restoreIntend"]},{"name":"open override fun restoreIntend(tree: ITree): List<IOperation>","description":"org.modelix.model.operations.AddNewChildrenOp.Intend.restoreIntend","location":"model-datastructure/org.modelix.model.operations/-add-new-children-op/-intend/restore-intend.html","searchKeys":["restoreIntend","open override fun restoreIntend(tree: ITree): List<IOperation>","org.modelix.model.operations.AddNewChildrenOp.Intend.restoreIntend"]},{"name":"open override fun restoreIntend(tree: ITree): List<IOperation>","description":"org.modelix.model.operations.BulkUpdateOp.Intend.restoreIntend","location":"model-datastructure/org.modelix.model.operations/-bulk-update-op/-intend/restore-intend.html","searchKeys":["restoreIntend","open override fun restoreIntend(tree: ITree): List<IOperation>","org.modelix.model.operations.BulkUpdateOp.Intend.restoreIntend"]},{"name":"open override fun restoreIntend(tree: ITree): List<IOperation>","description":"org.modelix.model.operations.DeleteNodeOp.restoreIntend","location":"model-datastructure/org.modelix.model.operations/-delete-node-op/restore-intend.html","searchKeys":["restoreIntend","open override fun restoreIntend(tree: ITree): List<IOperation>","org.modelix.model.operations.DeleteNodeOp.restoreIntend"]},{"name":"open override fun restoreIntend(tree: ITree): List<IOperation>","description":"org.modelix.model.operations.MoveNodeOp.Intend.restoreIntend","location":"model-datastructure/org.modelix.model.operations/-move-node-op/-intend/restore-intend.html","searchKeys":["restoreIntend","open override fun restoreIntend(tree: ITree): List<IOperation>","org.modelix.model.operations.MoveNodeOp.Intend.restoreIntend"]},{"name":"open override fun restoreIntend(tree: ITree): List<IOperation>","description":"org.modelix.model.operations.RevertToOp.Intend.restoreIntend","location":"model-datastructure/org.modelix.model.operations/-revert-to-op/-intend/restore-intend.html","searchKeys":["restoreIntend","open override fun restoreIntend(tree: ITree): List<IOperation>","org.modelix.model.operations.RevertToOp.Intend.restoreIntend"]},{"name":"open override fun restoreIntend(tree: ITree): List<IOperation>","description":"org.modelix.model.operations.SetPropertyOp.restoreIntend","location":"model-datastructure/org.modelix.model.operations/-set-property-op/restore-intend.html","searchKeys":["restoreIntend","open override fun restoreIntend(tree: ITree): List<IOperation>","org.modelix.model.operations.SetPropertyOp.restoreIntend"]},{"name":"open override fun restoreIntend(tree: ITree): List<IOperation>","description":"org.modelix.model.operations.SetReferenceOp.restoreIntend","location":"model-datastructure/org.modelix.model.operations/-set-reference-op/restore-intend.html","searchKeys":["restoreIntend","open override fun restoreIntend(tree: ITree): List<IOperation>","org.modelix.model.operations.SetReferenceOp.restoreIntend"]},{"name":"open override fun restoreIntend(tree: ITree): List<IOperation>","description":"org.modelix.model.operations.UndoOp.Intend.restoreIntend","location":"model-datastructure/org.modelix.model.operations/-undo-op/-intend/restore-intend.html","searchKeys":["restoreIntend","open override fun restoreIntend(tree: ITree): List<IOperation>","org.modelix.model.operations.UndoOp.Intend.restoreIntend"]},{"name":"open override fun restoreIntend(tree: ITree): List<NoOp>","description":"org.modelix.model.operations.NoOp.restoreIntend","location":"model-datastructure/org.modelix.model.operations/-no-op/restore-intend.html","searchKeys":["restoreIntend","open override fun restoreIntend(tree: ITree): List<NoOp>","org.modelix.model.operations.NoOp.restoreIntend"]},{"name":"open override fun runRead(runnable: () -> Unit)","description":"org.modelix.model.operations.OTBranch.runRead","location":"model-datastructure/org.modelix.model.operations/-o-t-branch/run-read.html","searchKeys":["runRead","open override fun runRead(runnable: () -> Unit)","org.modelix.model.operations.OTBranch.runRead"]},{"name":"open override fun runWrite(runnable: () -> Unit)","description":"org.modelix.model.operations.OTBranch.runWrite","location":"model-datastructure/org.modelix.model.operations/-o-t-branch/run-write.html","searchKeys":["runWrite","open override fun runWrite(runnable: () -> Unit)","org.modelix.model.operations.OTBranch.runWrite"]},{"name":"open override fun serialize(): String","description":"org.modelix.model.persistent.CPHamtInternal.serialize","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-internal/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.model.persistent.CPHamtInternal.serialize"]},{"name":"open override fun serialize(): String","description":"org.modelix.model.persistent.CPHamtLeaf.serialize","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-leaf/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.model.persistent.CPHamtLeaf.serialize"]},{"name":"open override fun serialize(): String","description":"org.modelix.model.persistent.CPHamtSingle.serialize","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-single/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.model.persistent.CPHamtSingle.serialize"]},{"name":"open override fun serialize(): String","description":"org.modelix.model.persistent.CPNode.serialize","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.model.persistent.CPNode.serialize"]},{"name":"open override fun serialize(): String","description":"org.modelix.model.persistent.CPOperationsList.serialize","location":"model-datastructure/org.modelix.model.persistent/-c-p-operations-list/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.model.persistent.CPOperationsList.serialize"]},{"name":"open override fun serialize(): String","description":"org.modelix.model.persistent.CPTree.serialize","location":"model-datastructure/org.modelix.model.persistent/-c-p-tree/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.model.persistent.CPTree.serialize"]},{"name":"open override fun serialize(): String","description":"org.modelix.model.persistent.CPVersion.serialize","location":"model-datastructure/org.modelix.model.persistent/-c-p-version/serialize.html","searchKeys":["serialize","open override fun serialize(): String","org.modelix.model.persistent.CPVersion.serialize"]},{"name":"open override fun setProperty(nodeId: Long, role: String, value: String?)","description":"org.modelix.model.operations.OTWriteTransaction.setProperty","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/set-property.html","searchKeys":["setProperty","open override fun setProperty(nodeId: Long, role: String, value: String?)","org.modelix.model.operations.OTWriteTransaction.setProperty"]},{"name":"open override fun setProperty(nodeId: Long, role: String, value: String?): ITree","description":"org.modelix.model.lazy.CLTree.setProperty","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/set-property.html","searchKeys":["setProperty","open override fun setProperty(nodeId: Long, role: String, value: String?): ITree","org.modelix.model.lazy.CLTree.setProperty"]},{"name":"open override fun setReferenceTarget(sourceId: Long, role: String, target: INodeReference?)","description":"org.modelix.model.operations.OTWriteTransaction.setReferenceTarget","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(sourceId: Long, role: String, target: INodeReference?)","org.modelix.model.operations.OTWriteTransaction.setReferenceTarget"]},{"name":"open override fun setReferenceTarget(sourceId: Long, role: String, target: INodeReference?): ITree","description":"org.modelix.model.lazy.CLTree.setReferenceTarget","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(sourceId: Long, role: String, target: INodeReference?): ITree","org.modelix.model.lazy.CLTree.setReferenceTarget"]},{"name":"open override fun toString(): String","description":"org.modelix.model.lazy.BranchReference.toString","location":"model-datastructure/org.modelix.model.lazy/-branch-reference/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.lazy.BranchReference.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.lazy.CLTree.toString","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.lazy.CLTree.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.lazy.CLVersion.toString","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.lazy.CLVersion.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.lazy.KVEntryReference.toString","location":"model-datastructure/org.modelix.model.lazy/-k-v-entry-reference/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.lazy.KVEntryReference.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.lazy.RepositoryId.toString","location":"model-datastructure/org.modelix.model.lazy/-repository-id/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.lazy.RepositoryId.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.operations.AbstractOperation.Applied.toString","location":"model-datastructure/org.modelix.model.operations/-abstract-operation/-applied/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.operations.AbstractOperation.Applied.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.operations.AddNewChildOp.toString","location":"model-datastructure/org.modelix.model.operations/-add-new-child-op/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.operations.AddNewChildOp.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.operations.AddNewChildSubtreeOp.toString","location":"model-datastructure/org.modelix.model.operations/-add-new-child-subtree-op/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.operations.AddNewChildSubtreeOp.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.operations.AddNewChildrenOp.toString","location":"model-datastructure/org.modelix.model.operations/-add-new-children-op/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.operations.AddNewChildrenOp.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.operations.BulkUpdateOp.toString","location":"model-datastructure/org.modelix.model.operations/-bulk-update-op/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.operations.BulkUpdateOp.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.operations.DeleteNodeOp.Applied.toString","location":"model-datastructure/org.modelix.model.operations/-delete-node-op/-applied/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.operations.DeleteNodeOp.Applied.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.operations.DeleteNodeOp.toString","location":"model-datastructure/org.modelix.model.operations/-delete-node-op/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.operations.DeleteNodeOp.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.operations.MoveNodeOp.Applied.toString","location":"model-datastructure/org.modelix.model.operations/-move-node-op/-applied/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.operations.MoveNodeOp.Applied.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.operations.MoveNodeOp.toString","location":"model-datastructure/org.modelix.model.operations/-move-node-op/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.operations.MoveNodeOp.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.operations.NoOp.toString","location":"model-datastructure/org.modelix.model.operations/-no-op/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.operations.NoOp.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.operations.PositionInRole.toString","location":"model-datastructure/org.modelix.model.operations/-position-in-role/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.operations.PositionInRole.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.operations.RevertToOp.toString","location":"model-datastructure/org.modelix.model.operations/-revert-to-op/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.operations.RevertToOp.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.operations.RoleInNode.toString","location":"model-datastructure/org.modelix.model.operations/-role-in-node/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.operations.RoleInNode.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.operations.SetPropertyOp.Applied.toString","location":"model-datastructure/org.modelix.model.operations/-set-property-op/-applied/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.operations.SetPropertyOp.Applied.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.operations.SetPropertyOp.toString","location":"model-datastructure/org.modelix.model.operations/-set-property-op/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.operations.SetPropertyOp.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.operations.SetReferenceOp.Applied.toString","location":"model-datastructure/org.modelix.model.operations/-set-reference-op/-applied/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.operations.SetReferenceOp.Applied.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.operations.SetReferenceOp.toString","location":"model-datastructure/org.modelix.model.operations/-set-reference-op/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.operations.SetReferenceOp.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.operations.UndoOp.toString","location":"model-datastructure/org.modelix.model.operations/-undo-op/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.operations.UndoOp.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.model.persistent.CPNodeRef.ForeignRef.toString","location":"model-datastructure/org.modelix.model.persistent/-c-p-node-ref/-foreign-ref/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.model.persistent.CPNodeRef.ForeignRef.toString"]},{"name":"open override fun unwrap(): ITransaction","description":"org.modelix.model.operations.OTWriteTransaction.unwrap","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/unwrap.html","searchKeys":["unwrap","open override fun unwrap(): ITransaction","org.modelix.model.operations.OTWriteTransaction.unwrap"]},{"name":"open override fun usesRoleIds(): Boolean","description":"org.modelix.model.lazy.CLTree.usesRoleIds","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/uses-role-ids.html","searchKeys":["usesRoleIds","open override fun usesRoleIds(): Boolean","org.modelix.model.lazy.CLTree.usesRoleIds"]},{"name":"open override fun visitChanges(oldNode: CPHamtNode?, shift: Int, visitor: CPHamtNode.IChangeVisitor, bulkQuery: IBulkQuery)","description":"org.modelix.model.persistent.CPHamtInternal.visitChanges","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-internal/visit-changes.html","searchKeys":["visitChanges","open override fun visitChanges(oldNode: CPHamtNode?, shift: Int, visitor: CPHamtNode.IChangeVisitor, bulkQuery: IBulkQuery)","org.modelix.model.persistent.CPHamtInternal.visitChanges"]},{"name":"open override fun visitChanges(oldNode: CPHamtNode?, shift: Int, visitor: CPHamtNode.IChangeVisitor, bulkQuery: IBulkQuery)","description":"org.modelix.model.persistent.CPHamtLeaf.visitChanges","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-leaf/visit-changes.html","searchKeys":["visitChanges","open override fun visitChanges(oldNode: CPHamtNode?, shift: Int, visitor: CPHamtNode.IChangeVisitor, bulkQuery: IBulkQuery)","org.modelix.model.persistent.CPHamtLeaf.visitChanges"]},{"name":"open override fun visitChanges(oldNode: CPHamtNode?, shift: Int, visitor: CPHamtNode.IChangeVisitor, bulkQuery: IBulkQuery)","description":"org.modelix.model.persistent.CPHamtSingle.visitChanges","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-single/visit-changes.html","searchKeys":["visitChanges","open override fun visitChanges(oldNode: CPHamtNode?, shift: Int, visitor: CPHamtNode.IChangeVisitor, bulkQuery: IBulkQuery)","org.modelix.model.persistent.CPHamtSingle.visitChanges"]},{"name":"open override fun visitChanges(oldVersion: ITree, visitor: ITreeChangeVisitor)","description":"org.modelix.model.lazy.CLTree.visitChanges","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/visit-changes.html","searchKeys":["visitChanges","open override fun visitChanges(oldVersion: ITree, visitor: ITreeChangeVisitor)","org.modelix.model.lazy.CLTree.visitChanges"]},{"name":"open override fun visitEntries(bulkQuery: IBulkQuery, visitor: (Long, KVEntryReference<CPNode>?) -> Unit): IBulkQuery.Value<Unit>","description":"org.modelix.model.persistent.CPHamtInternal.visitEntries","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-internal/visit-entries.html","searchKeys":["visitEntries","open override fun visitEntries(bulkQuery: IBulkQuery, visitor: (Long, KVEntryReference<CPNode>?) -> Unit): IBulkQuery.Value<Unit>","org.modelix.model.persistent.CPHamtInternal.visitEntries"]},{"name":"open override fun visitEntries(bulkQuery: IBulkQuery, visitor: (Long, KVEntryReference<CPNode>?) -> Unit): IBulkQuery.Value<Unit>","description":"org.modelix.model.persistent.CPHamtLeaf.visitEntries","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-leaf/visit-entries.html","searchKeys":["visitEntries","open override fun visitEntries(bulkQuery: IBulkQuery, visitor: (Long, KVEntryReference<CPNode>?) -> Unit): IBulkQuery.Value<Unit>","org.modelix.model.persistent.CPHamtLeaf.visitEntries"]},{"name":"open override fun visitEntries(bulkQuery: IBulkQuery, visitor: (Long, KVEntryReference<CPNode>?) -> Unit): IBulkQuery.Value<Unit>","description":"org.modelix.model.persistent.CPHamtSingle.visitEntries","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-single/visit-entries.html","searchKeys":["visitEntries","open override fun visitEntries(bulkQuery: IBulkQuery, visitor: (Long, KVEntryReference<CPNode>?) -> Unit): IBulkQuery.Value<Unit>","org.modelix.model.persistent.CPHamtSingle.visitEntries"]},{"name":"open override fun withPosition(newPos: PositionInRole): AddNewChildOp","description":"org.modelix.model.operations.AddNewChildOp.withPosition","location":"model-datastructure/org.modelix.model.operations/-add-new-child-op/with-position.html","searchKeys":["withPosition","open override fun withPosition(newPos: PositionInRole): AddNewChildOp","org.modelix.model.operations.AddNewChildOp.withPosition"]},{"name":"open override fun write(store: IDeserializingKeyValueStore)","description":"org.modelix.model.lazy.KVEntryReference.write","location":"model-datastructure/org.modelix.model.lazy/-k-v-entry-reference/write.html","searchKeys":["write","open override fun write(store: IDeserializingKeyValueStore)","org.modelix.model.lazy.KVEntryReference.write"]},{"name":"open override fun write(store: IDeserializingKeyValueStore)","description":"org.modelix.model.lazy.NonWrittenEntry.write","location":"model-datastructure/org.modelix.model.lazy/-non-written-entry/write.html","searchKeys":["write","open override fun write(store: IDeserializingKeyValueStore)","org.modelix.model.lazy.NonWrittenEntry.write"]},{"name":"open override fun write(store: IDeserializingKeyValueStore)","description":"org.modelix.model.lazy.WrittenEntry.write","location":"model-datastructure/org.modelix.model.lazy/-written-entry/write.html","searchKeys":["write","open override fun write(store: IDeserializingKeyValueStore)","org.modelix.model.lazy.WrittenEntry.write"]},{"name":"open override val branch: IBranch","description":"org.modelix.model.operations.OTWriteTransaction.branch","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/branch.html","searchKeys":["branch","open override val branch: IBranch","org.modelix.model.operations.OTWriteTransaction.branch"]},{"name":"open override val elementId: Long","description":"org.modelix.model.persistent.CPNodeRef.ForeignRef.elementId","location":"model-datastructure/org.modelix.model.persistent/-c-p-node-ref/-foreign-ref/element-id.html","searchKeys":["elementId","open override val elementId: Long","org.modelix.model.persistent.CPNodeRef.ForeignRef.elementId"]},{"name":"open override val hash: String","description":"org.modelix.model.persistent.CPHamtNode.hash","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/hash.html","searchKeys":["hash","open override val hash: String","org.modelix.model.persistent.CPHamtNode.hash"]},{"name":"open override val hash: String","description":"org.modelix.model.persistent.CPNode.hash","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/hash.html","searchKeys":["hash","open override val hash: String","org.modelix.model.persistent.CPNode.hash"]},{"name":"open override val hash: String","description":"org.modelix.model.persistent.CPOperationsList.hash","location":"model-datastructure/org.modelix.model.persistent/-c-p-operations-list/hash.html","searchKeys":["hash","open override val hash: String","org.modelix.model.persistent.CPOperationsList.hash"]},{"name":"open override val hash: String","description":"org.modelix.model.persistent.CPTree.hash","location":"model-datastructure/org.modelix.model.persistent/-c-p-tree/hash.html","searchKeys":["hash","open override val hash: String","org.modelix.model.persistent.CPTree.hash"]},{"name":"open override val hash: String","description":"org.modelix.model.persistent.CPVersion.hash","location":"model-datastructure/org.modelix.model.persistent/-c-p-version/hash.html","searchKeys":["hash","open override val hash: String","org.modelix.model.persistent.CPVersion.hash"]},{"name":"open override val isGlobal: Boolean","description":"org.modelix.model.persistent.CPNodeRef.ForeignRef.isGlobal","location":"model-datastructure/org.modelix.model.persistent/-c-p-node-ref/-foreign-ref/is-global.html","searchKeys":["isGlobal","open override val isGlobal: Boolean","org.modelix.model.persistent.CPNodeRef.ForeignRef.isGlobal"]},{"name":"open override val isLocal: Boolean","description":"org.modelix.model.persistent.CPNodeRef.ForeignRef.isLocal","location":"model-datastructure/org.modelix.model.persistent/-c-p-node-ref/-foreign-ref/is-local.html","searchKeys":["isLocal","open override val isLocal: Boolean","org.modelix.model.persistent.CPNodeRef.ForeignRef.isLocal"]},{"name":"open override val keyValueStore: IKeyValueStore","description":"org.modelix.model.lazy.IndirectObjectStore.keyValueStore","location":"model-datastructure/org.modelix.model.lazy/-indirect-object-store/key-value-store.html","searchKeys":["keyValueStore","open override val keyValueStore: IKeyValueStore","org.modelix.model.lazy.IndirectObjectStore.keyValueStore"]},{"name":"open override val keyValueStore: IKeyValueStore","description":"org.modelix.model.lazy.ObjectStoreCache.keyValueStore","location":"model-datastructure/org.modelix.model.lazy/-object-store-cache/key-value-store.html","searchKeys":["keyValueStore","open override val keyValueStore: IKeyValueStore","org.modelix.model.lazy.ObjectStoreCache.keyValueStore"]},{"name":"open override val keyValueStore: IKeyValueStore","description":"org.modelix.model.lazy.PrefetchCache.keyValueStore","location":"model-datastructure/org.modelix.model.lazy/-prefetch-cache/key-value-store.html","searchKeys":["keyValueStore","open override val keyValueStore: IKeyValueStore","org.modelix.model.lazy.PrefetchCache.keyValueStore"]},{"name":"open override val readTransaction: IReadTransaction","description":"org.modelix.model.operations.OTBranch.readTransaction","location":"model-datastructure/org.modelix.model.operations/-o-t-branch/read-transaction.html","searchKeys":["readTransaction","open override val readTransaction: IReadTransaction","org.modelix.model.operations.OTBranch.readTransaction"]},{"name":"open override val transaction: ITransaction","description":"org.modelix.model.operations.OTBranch.transaction","location":"model-datastructure/org.modelix.model.operations/-o-t-branch/transaction.html","searchKeys":["transaction","open override val transaction: ITransaction","org.modelix.model.operations.OTBranch.transaction"]},{"name":"open override val treeId: String?","description":"org.modelix.model.persistent.CPNodeRef.ForeignRef.treeId","location":"model-datastructure/org.modelix.model.persistent/-c-p-node-ref/-foreign-ref/tree-id.html","searchKeys":["treeId","open override val treeId: String?","org.modelix.model.persistent.CPNodeRef.ForeignRef.treeId"]},{"name":"open override val writeTransaction: IWriteTransaction","description":"org.modelix.model.operations.OTBranch.writeTransaction","location":"model-datastructure/org.modelix.model.operations/-o-t-branch/write-transaction.html","searchKeys":["writeTransaction","open override val writeTransaction: IWriteTransaction","org.modelix.model.operations.OTBranch.writeTransaction"]},{"name":"open override var isWritten: Boolean","description":"org.modelix.model.persistent.CPHamtNode.isWritten","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/is-written.html","searchKeys":["isWritten","open override var isWritten: Boolean","org.modelix.model.persistent.CPHamtNode.isWritten"]},{"name":"open override var isWritten: Boolean","description":"org.modelix.model.persistent.CPNode.isWritten","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/is-written.html","searchKeys":["isWritten","open override var isWritten: Boolean","org.modelix.model.persistent.CPNode.isWritten"]},{"name":"open override var isWritten: Boolean","description":"org.modelix.model.persistent.CPOperationsList.isWritten","location":"model-datastructure/org.modelix.model.persistent/-c-p-operations-list/is-written.html","searchKeys":["isWritten","open override var isWritten: Boolean","org.modelix.model.persistent.CPOperationsList.isWritten"]},{"name":"open override var isWritten: Boolean","description":"org.modelix.model.persistent.CPTree.isWritten","location":"model-datastructure/org.modelix.model.persistent/-c-p-tree/is-written.html","searchKeys":["isWritten","open override var isWritten: Boolean","org.modelix.model.persistent.CPTree.isWritten"]},{"name":"open override var isWritten: Boolean","description":"org.modelix.model.persistent.CPVersion.isWritten","location":"model-datastructure/org.modelix.model.persistent/-c-p-version/is-written.html","searchKeys":["isWritten","open override var isWritten: Boolean","org.modelix.model.persistent.CPVersion.isWritten"]},{"name":"open override var tree: ITree","description":"org.modelix.model.operations.OTWriteTransaction.tree","location":"model-datastructure/org.modelix.model.operations/-o-t-write-transaction/tree.html","searchKeys":["tree","open override var tree: ITree","org.modelix.model.operations.OTWriteTransaction.tree"]},{"name":"open suspend fun getA(key: String): String?","description":"org.modelix.model.IKeyValueStore.getA","location":"model-datastructure/org.modelix.model/-i-key-value-store/get-a.html","searchKeys":["getA","open suspend fun getA(key: String): String?","org.modelix.model.IKeyValueStore.getA"]},{"name":"operator fun <T> set(array: Array<T>, index: Int, value: T): Array<T>","description":"org.modelix.model.lazy.COWArrays.set","location":"model-datastructure/org.modelix.model.lazy/-c-o-w-arrays/set.html","searchKeys":["set","operator fun <T> set(array: Array<T>, index: Int, value: T): Array<T>","org.modelix.model.lazy.COWArrays.set"]},{"name":"operator fun set(array: LongArray, index: Int, value: Long): LongArray","description":"org.modelix.model.lazy.COWArrays.set","location":"model-datastructure/org.modelix.model.lazy/-c-o-w-arrays/set.html","searchKeys":["set","operator fun set(array: LongArray, index: Int, value: Long): LongArray","org.modelix.model.lazy.COWArrays.set"]},{"name":"val BATCH_SIZE: Int = 5000","description":"org.modelix.model.lazy.BulkQuery.Companion.BATCH_SIZE","location":"model-datastructure/org.modelix.model.lazy/-bulk-query/-companion/-b-a-t-c-h_-s-i-z-e.html","searchKeys":["BATCH_SIZE","val BATCH_SIZE: Int = 5000","org.modelix.model.lazy.BulkQuery.Companion.BATCH_SIZE"]},{"name":"val DESERIALIZER: (String) -> CPHamtNode","description":"org.modelix.model.persistent.CPHamtNode.Companion.DESERIALIZER","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-node/-companion/-d-e-s-e-r-i-a-l-i-z-e-r.html","searchKeys":["DESERIALIZER","val DESERIALIZER: (String) -> CPHamtNode","org.modelix.model.persistent.CPHamtNode.Companion.DESERIALIZER"]},{"name":"val DESERIALIZER: (String) -> CPNode","description":"org.modelix.model.persistent.CPNode.Companion.DESERIALIZER","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/-companion/-d-e-s-e-r-i-a-l-i-z-e-r.html","searchKeys":["DESERIALIZER","val DESERIALIZER: (String) -> CPNode","org.modelix.model.persistent.CPNode.Companion.DESERIALIZER"]},{"name":"val DESERIALIZER: (String) -> CPOperationsList","description":"org.modelix.model.persistent.CPOperationsList.Companion.DESERIALIZER","location":"model-datastructure/org.modelix.model.persistent/-c-p-operations-list/-companion/-d-e-s-e-r-i-a-l-i-z-e-r.html","searchKeys":["DESERIALIZER","val DESERIALIZER: (String) -> CPOperationsList","org.modelix.model.persistent.CPOperationsList.Companion.DESERIALIZER"]},{"name":"val DESERIALIZER: (String) -> CPTree","description":"org.modelix.model.persistent.CPTree.Companion.DESERIALIZER","location":"model-datastructure/org.modelix.model.persistent/-c-p-tree/-companion/-d-e-s-e-r-i-a-l-i-z-e-r.html","searchKeys":["DESERIALIZER","val DESERIALIZER: (String) -> CPTree","org.modelix.model.persistent.CPTree.Companion.DESERIALIZER"]},{"name":"val DESERIALIZER: (String) -> CPVersion","description":"org.modelix.model.persistent.CPVersion.Companion.DESERIALIZER","location":"model-datastructure/org.modelix.model.persistent/-c-p-version/-companion/-d-e-s-e-r-i-a-l-i-z-e-r.html","searchKeys":["DESERIALIZER","val DESERIALIZER: (String) -> CPVersion","org.modelix.model.persistent.CPVersion.Companion.DESERIALIZER"]},{"name":"val HASH_PATTERN: Regex","description":"org.modelix.model.persistent.HashUtil.HASH_PATTERN","location":"model-datastructure/org.modelix.model.persistent/-hash-util/-h-a-s-h_-p-a-t-t-e-r-n.html","searchKeys":["HASH_PATTERN","val HASH_PATTERN: Regex","org.modelix.model.persistent.HashUtil.HASH_PATTERN"]},{"name":"val INLINED_OPS_LIMIT: Int = 10","description":"org.modelix.model.lazy.CLVersion.Companion.INLINED_OPS_LIMIT","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/-companion/-i-n-l-i-n-e-d_-o-p-s_-l-i-m-i-t.html","searchKeys":["INLINED_OPS_LIMIT","val INLINED_OPS_LIMIT: Int = 10","org.modelix.model.lazy.CLVersion.Companion.INLINED_OPS_LIMIT"]},{"name":"val INSTANCE: OperationSerializer","description":"org.modelix.model.persistent.OperationSerializer.Companion.INSTANCE","location":"model-datastructure/org.modelix.model.persistent/-operation-serializer/-companion/-i-n-s-t-a-n-c-e.html","searchKeys":["INSTANCE","val INSTANCE: OperationSerializer","org.modelix.model.persistent.OperationSerializer.Companion.INSTANCE"]},{"name":"val NAMED_BASED_PERSISTENCE_VERSION: Int = 2","description":"org.modelix.model.persistent.CPTree.Companion.NAMED_BASED_PERSISTENCE_VERSION","location":"model-datastructure/org.modelix.model.persistent/-c-p-tree/-companion/-n-a-m-e-d_-b-a-s-e-d_-p-e-r-s-i-s-t-e-n-c-e_-v-e-r-s-i-o-n.html","searchKeys":["NAMED_BASED_PERSISTENCE_VERSION","val NAMED_BASED_PERSISTENCE_VERSION: Int = 2","org.modelix.model.persistent.CPTree.Companion.NAMED_BASED_PERSISTENCE_VERSION"]},{"name":"val PERSISTENCE_VERSION: Int = 3","description":"org.modelix.model.persistent.CPTree.Companion.PERSISTENCE_VERSION","location":"model-datastructure/org.modelix.model.persistent/-c-p-tree/-companion/-p-e-r-s-i-s-t-e-n-c-e_-v-e-r-s-i-o-n.html","searchKeys":["PERSISTENCE_VERSION","val PERSISTENCE_VERSION: Int = 3","org.modelix.model.persistent.CPTree.Companion.PERSISTENCE_VERSION"]},{"name":"val VALID_ID_PATTERN: Regex","description":"org.modelix.model.lazy.RepositoryId.Companion.VALID_ID_PATTERN","location":"model-datastructure/org.modelix.model.lazy/-repository-id/-companion/-v-a-l-i-d_-i-d_-p-a-t-t-e-r-n.html","searchKeys":["VALID_ID_PATTERN","val VALID_ID_PATTERN: Regex","org.modelix.model.lazy.RepositoryId.Companion.VALID_ID_PATTERN"]},{"name":"val appliedOps: List<IAppliedOperation>","description":"org.modelix.model.operations.RevertToOp.Applied.appliedOps","location":"model-datastructure/org.modelix.model.operations/-revert-to-op/-applied/applied-ops.html","searchKeys":["appliedOps","val appliedOps: List<IAppliedOperation>","org.modelix.model.operations.RevertToOp.Applied.appliedOps"]},{"name":"val appliedOps: List<IAppliedOperation>","description":"org.modelix.model.operations.UndoOp.Applied.appliedOps","location":"model-datastructure/org.modelix.model.operations/-undo-op/-applied/applied-ops.html","searchKeys":["appliedOps","val appliedOps: List<IAppliedOperation>","org.modelix.model.operations.UndoOp.Applied.appliedOps"]},{"name":"val author: String?","description":"org.modelix.model.lazy.CLVersion.author","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/author.html","searchKeys":["author","val author: String?","org.modelix.model.lazy.CLVersion.author"]},{"name":"val author: String?","description":"org.modelix.model.persistent.CPVersion.author","location":"model-datastructure/org.modelix.model.persistent/-c-p-version/author.html","searchKeys":["author","val author: String?","org.modelix.model.persistent.CPVersion.author"]},{"name":"val baseTree: CLTree","description":"org.modelix.model.operations.BulkUpdateOp.Applied.baseTree","location":"model-datastructure/org.modelix.model.operations/-bulk-update-op/-applied/base-tree.html","searchKeys":["baseTree","val baseTree: CLTree","org.modelix.model.operations.BulkUpdateOp.Applied.baseTree"]},{"name":"val baseVersion: CLVersion?","description":"org.modelix.model.lazy.CLVersion.baseVersion","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/base-version.html","searchKeys":["baseVersion","val baseVersion: CLVersion?","org.modelix.model.lazy.CLVersion.baseVersion"]},{"name":"val baseVersion: KVEntryReference<CPVersion>?","description":"org.modelix.model.persistent.CPVersion.baseVersion","location":"model-datastructure/org.modelix.model.persistent/-c-p-version/base-version.html","searchKeys":["baseVersion","val baseVersion: KVEntryReference<CPVersion>?","org.modelix.model.persistent.CPVersion.baseVersion"]},{"name":"val bitmap: Int","description":"org.modelix.model.persistent.CPHamtInternal.bitmap","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-internal/bitmap.html","searchKeys":["bitmap","val bitmap: Int","org.modelix.model.persistent.CPHamtInternal.bitmap"]},{"name":"val bits: Long","description":"org.modelix.model.persistent.CPHamtSingle.bits","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-single/bits.html","searchKeys":["bits","val bits: Long","org.modelix.model.persistent.CPHamtSingle.bits"]},{"name":"val branchName: String","description":"org.modelix.model.lazy.BranchReference.branchName","location":"model-datastructure/org.modelix.model.lazy/-branch-reference/branch-name.html","searchKeys":["branchName","val branchName: String","org.modelix.model.lazy.BranchReference.branchName"]},{"name":"val capturedPosition: CapturedInsertPosition","description":"org.modelix.model.operations.AddNewChildSubtreeOp.Intend.capturedPosition","location":"model-datastructure/org.modelix.model.operations/-add-new-child-subtree-op/-intend/captured-position.html","searchKeys":["capturedPosition","val capturedPosition: CapturedInsertPosition","org.modelix.model.operations.AddNewChildSubtreeOp.Intend.capturedPosition"]},{"name":"val capturedPosition: CapturedInsertPosition","description":"org.modelix.model.operations.AddNewChildrenOp.Intend.capturedPosition","location":"model-datastructure/org.modelix.model.operations/-add-new-children-op/-intend/captured-position.html","searchKeys":["capturedPosition","val capturedPosition: CapturedInsertPosition","org.modelix.model.operations.AddNewChildrenOp.Intend.capturedPosition"]},{"name":"val capturedTargetPosition: CapturedInsertPosition","description":"org.modelix.model.operations.MoveNodeOp.Intend.capturedTargetPosition","location":"model-datastructure/org.modelix.model.operations/-move-node-op/-intend/captured-target-position.html","searchKeys":["capturedTargetPosition","val capturedTargetPosition: CapturedInsertPosition","org.modelix.model.operations.MoveNodeOp.Intend.capturedTargetPosition"]},{"name":"val child: KVEntryReference<CPHamtNode>","description":"org.modelix.model.persistent.CPHamtSingle.child","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-single/child.html","searchKeys":["child","val child: KVEntryReference<CPHamtNode>","org.modelix.model.persistent.CPHamtSingle.child"]},{"name":"val childId: Long","description":"org.modelix.model.operations.AddNewChildOp.childId","location":"model-datastructure/org.modelix.model.operations/-add-new-child-op/child-id.html","searchKeys":["childId","val childId: Long","org.modelix.model.operations.AddNewChildOp.childId"]},{"name":"val childId: Long","description":"org.modelix.model.operations.AddNewChildSubtreeOp.childId","location":"model-datastructure/org.modelix.model.operations/-add-new-child-subtree-op/child-id.html","searchKeys":["childId","val childId: Long","org.modelix.model.operations.AddNewChildSubtreeOp.childId"]},{"name":"val childId: Long","description":"org.modelix.model.operations.DeleteNodeOp.childId","location":"model-datastructure/org.modelix.model.operations/-delete-node-op/child-id.html","searchKeys":["childId","val childId: Long","org.modelix.model.operations.DeleteNodeOp.childId"]},{"name":"val childId: Long","description":"org.modelix.model.operations.MoveNodeOp.childId","location":"model-datastructure/org.modelix.model.operations/-move-node-op/child-id.html","searchKeys":["childId","val childId: Long","org.modelix.model.operations.MoveNodeOp.childId"]},{"name":"val childIds: LongArray","description":"org.modelix.model.operations.AddNewChildrenOp.childIds","location":"model-datastructure/org.modelix.model.operations/-add-new-children-op/child-ids.html","searchKeys":["childIds","val childIds: LongArray","org.modelix.model.operations.AddNewChildrenOp.childIds"]},{"name":"val children: Array<KVEntryReference<CPHamtNode>>","description":"org.modelix.model.persistent.CPHamtInternal.children","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-internal/children.html","searchKeys":["children","val children: Array<KVEntryReference<CPHamtNode>>","org.modelix.model.persistent.CPHamtInternal.children"]},{"name":"val childrenIdArray: LongArray","description":"org.modelix.model.persistent.CPNode.childrenIdArray","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/children-id-array.html","searchKeys":["childrenIdArray","val childrenIdArray: LongArray","org.modelix.model.persistent.CPNode.childrenIdArray"]},{"name":"val childrenSize: Int","description":"org.modelix.model.persistent.CPNode.childrenSize","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/children-size.html","searchKeys":["childrenSize","val childrenSize: Int","org.modelix.model.persistent.CPNode.childrenSize"]},{"name":"val concept: IConceptReference?","description":"org.modelix.model.operations.AddNewChildOp.concept","location":"model-datastructure/org.modelix.model.operations/-add-new-child-op/concept.html","searchKeys":["concept","val concept: IConceptReference?","org.modelix.model.operations.AddNewChildOp.concept"]},{"name":"val concept: IConceptReference?","description":"org.modelix.model.operations.AddNewChildSubtreeOp.concept","location":"model-datastructure/org.modelix.model.operations/-add-new-child-subtree-op/concept.html","searchKeys":["concept","val concept: IConceptReference?","org.modelix.model.operations.AddNewChildSubtreeOp.concept"]},{"name":"val concept: IConceptReference?","description":"org.modelix.model.operations.DeleteNodeOp.Applied.concept","location":"model-datastructure/org.modelix.model.operations/-delete-node-op/-applied/concept.html","searchKeys":["concept","val concept: IConceptReference?","org.modelix.model.operations.DeleteNodeOp.Applied.concept"]},{"name":"val concept: String?","description":"org.modelix.model.lazy.CLNode.concept","location":"model-datastructure/org.modelix.model.lazy/-c-l-node/concept.html","searchKeys":["concept","val concept: String?","org.modelix.model.lazy.CLNode.concept"]},{"name":"val concept: String?","description":"org.modelix.model.persistent.CPNode.concept","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/concept.html","searchKeys":["concept","val concept: String?","org.modelix.model.persistent.CPNode.concept"]},{"name":"val concepts: Array<IConceptReference?>","description":"org.modelix.model.operations.AddNewChildrenOp.concepts","location":"model-datastructure/org.modelix.model.operations/-add-new-children-op/concepts.html","searchKeys":["concepts","val concepts: Array<IConceptReference?>","org.modelix.model.operations.AddNewChildrenOp.concepts"]},{"name":"val data: CPHamtInternal","description":"org.modelix.model.persistent.CPHamtInternal.data","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-internal/data.html","searchKeys":["data","val data: CPHamtInternal","org.modelix.model.persistent.CPHamtInternal.data"]},{"name":"val data: CPTree","description":"org.modelix.model.lazy.CLTree.data","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/data.html","searchKeys":["data","val data: CPTree","org.modelix.model.lazy.CLTree.data"]},{"name":"val directStore: IDeserializingKeyValueStore","description":"org.modelix.model.lazy.PrefetchCache.Companion.ContextIndirectCache.directStore","location":"model-datastructure/org.modelix.model.lazy/-prefetch-cache/-companion/-context-indirect-cache/direct-store.html","searchKeys":["directStore","val directStore: IDeserializingKeyValueStore","org.modelix.model.lazy.PrefetchCache.Companion.ContextIndirectCache.directStore"]},{"name":"val entries: Iterable<Map.Entry<String?, String?>>","description":"org.modelix.model.persistent.MapBasedStore.entries","location":"model-datastructure/org.modelix.model.persistent/-map-based-store/entries.html","searchKeys":["entries","val entries: Iterable<Map.Entry<String?, String?>>","org.modelix.model.persistent.MapBasedStore.entries"]},{"name":"val hash: String","description":"org.modelix.model.lazy.CLTree.hash","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/hash.html","searchKeys":["hash","val hash: String","org.modelix.model.lazy.CLTree.hash"]},{"name":"val hash: String","description":"org.modelix.model.lazy.CLVersion.hash","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/hash.html","searchKeys":["hash","val hash: String","org.modelix.model.lazy.CLVersion.hash"]},{"name":"val id: Long","description":"org.modelix.model.lazy.CLNode.id","location":"model-datastructure/org.modelix.model.lazy/-c-l-node/id.html","searchKeys":["id","val id: Long","org.modelix.model.lazy.CLNode.id"]},{"name":"val id: Long","description":"org.modelix.model.lazy.CLNodeRef.id","location":"model-datastructure/org.modelix.model.lazy/-c-l-node-ref/id.html","searchKeys":["id","val id: Long","org.modelix.model.lazy.CLNodeRef.id"]},{"name":"val id: Long","description":"org.modelix.model.lazy.CLVersion.id","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/id.html","searchKeys":["id","val id: Long","org.modelix.model.lazy.CLVersion.id"]},{"name":"val id: Long","description":"org.modelix.model.persistent.CPNode.id","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/id.html","searchKeys":["id","val id: Long","org.modelix.model.persistent.CPNode.id"]},{"name":"val id: Long","description":"org.modelix.model.persistent.CPVersion.id","location":"model-datastructure/org.modelix.model.persistent/-c-p-version/id.html","searchKeys":["id","val id: Long","org.modelix.model.persistent.CPVersion.id"]},{"name":"val id: String","description":"org.modelix.model.lazy.RepositoryId.id","location":"model-datastructure/org.modelix.model.lazy/-repository-id/id.html","searchKeys":["id","val id: String","org.modelix.model.lazy.RepositoryId.id"]},{"name":"val id: String","description":"org.modelix.model.persistent.CPTree.id","location":"model-datastructure/org.modelix.model.persistent/-c-p-tree/id.html","searchKeys":["id","val id: String","org.modelix.model.persistent.CPTree.id"]},{"name":"val index: Int","description":"org.modelix.model.operations.PositionInRole.index","location":"model-datastructure/org.modelix.model.operations/-position-in-role/--index--.html","searchKeys":["index","val index: Int","org.modelix.model.operations.PositionInRole.index"]},{"name":"val intends: List<IOperationIntend>","description":"org.modelix.model.operations.RevertToOp.Intend.intends","location":"model-datastructure/org.modelix.model.operations/-revert-to-op/-intend/intends.html","searchKeys":["intends","val intends: List<IOperationIntend>","org.modelix.model.operations.RevertToOp.Intend.intends"]},{"name":"val intends: List<IOperationIntend>","description":"org.modelix.model.operations.UndoOp.Intend.intends","location":"model-datastructure/org.modelix.model.operations/-undo-op/-intend/intends.html","searchKeys":["intends","val intends: List<IOperationIntend>","org.modelix.model.operations.UndoOp.Intend.intends"]},{"name":"val key: Long","description":"org.modelix.model.persistent.CPHamtLeaf.key","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-leaf/key.html","searchKeys":["key","val key: Long","org.modelix.model.persistent.CPHamtLeaf.key"]},{"name":"val latestKnownVersionRef: KVEntryReference<CPVersion>","description":"org.modelix.model.operations.RevertToOp.latestKnownVersionRef","location":"model-datastructure/org.modelix.model.operations/-revert-to-op/latest-known-version-ref.html","searchKeys":["latestKnownVersionRef","val latestKnownVersionRef: KVEntryReference<CPVersion>","org.modelix.model.operations.RevertToOp.latestKnownVersionRef"]},{"name":"val mergedVersion1: KVEntryReference<CPVersion>?","description":"org.modelix.model.persistent.CPVersion.mergedVersion1","location":"model-datastructure/org.modelix.model.persistent/-c-p-version/merged-version1.html","searchKeys":["mergedVersion1","val mergedVersion1: KVEntryReference<CPVersion>?","org.modelix.model.persistent.CPVersion.mergedVersion1"]},{"name":"val mergedVersion2: KVEntryReference<CPVersion>?","description":"org.modelix.model.persistent.CPVersion.mergedVersion2","location":"model-datastructure/org.modelix.model.persistent/-c-p-version/merged-version2.html","searchKeys":["mergedVersion2","val mergedVersion2: KVEntryReference<CPVersion>?","org.modelix.model.persistent.CPVersion.mergedVersion2"]},{"name":"val nodeId: Long","description":"org.modelix.model.operations.PositionInRole.nodeId","location":"model-datastructure/org.modelix.model.operations/-position-in-role/node-id.html","searchKeys":["nodeId","val nodeId: Long","org.modelix.model.operations.PositionInRole.nodeId"]},{"name":"val nodeId: Long","description":"org.modelix.model.operations.RoleInNode.nodeId","location":"model-datastructure/org.modelix.model.operations/-role-in-node/node-id.html","searchKeys":["nodeId","val nodeId: Long","org.modelix.model.operations.RoleInNode.nodeId"]},{"name":"val nodeId: Long","description":"org.modelix.model.operations.SetPropertyOp.nodeId","location":"model-datastructure/org.modelix.model.operations/-set-property-op/node-id.html","searchKeys":["nodeId","val nodeId: Long","org.modelix.model.operations.SetPropertyOp.nodeId"]},{"name":"val nodesMap: CPHamtNode?","description":"org.modelix.model.lazy.CLTree.nodesMap","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/nodes-map.html","searchKeys":["nodesMap","val nodesMap: CPHamtNode?","org.modelix.model.lazy.CLTree.nodesMap"]},{"name":"val numLevels: Int","description":"org.modelix.model.persistent.CPHamtSingle.numLevels","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-single/num-levels.html","searchKeys":["numLevels","val numLevels: Int","org.modelix.model.persistent.CPHamtSingle.numLevels"]},{"name":"val numberOfOperations: Int","description":"org.modelix.model.lazy.CLVersion.numberOfOperations","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/number-of-operations.html","searchKeys":["numberOfOperations","val numberOfOperations: Int","org.modelix.model.lazy.CLVersion.numberOfOperations"]},{"name":"val numberOfOperations: Int","description":"org.modelix.model.persistent.CPVersion.numberOfOperations","location":"model-datastructure/org.modelix.model.persistent/-c-p-version/number-of-operations.html","searchKeys":["numberOfOperations","val numberOfOperations: Int","org.modelix.model.persistent.CPVersion.numberOfOperations"]},{"name":"val operations: Array<IOperation>","description":"org.modelix.model.persistent.CPOperationsList.operations","location":"model-datastructure/org.modelix.model.persistent/-c-p-operations-list/operations.html","searchKeys":["operations","val operations: Array<IOperation>","org.modelix.model.persistent.CPOperationsList.operations"]},{"name":"val operations: Array<IOperation>?","description":"org.modelix.model.persistent.CPVersion.operations","location":"model-datastructure/org.modelix.model.persistent/-c-p-version/operations.html","searchKeys":["operations","val operations: Array<IOperation>?","org.modelix.model.persistent.CPVersion.operations"]},{"name":"val operations: Iterable<IOperation>","description":"org.modelix.model.lazy.CLVersion.operations","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/operations.html","searchKeys":["operations","val operations: Iterable<IOperation>","org.modelix.model.lazy.CLVersion.operations"]},{"name":"val operationsAndTree: Pair<List<IAppliedOperation>, ITree>","description":"org.modelix.model.operations.OTBranch.operationsAndTree","location":"model-datastructure/org.modelix.model.operations/-o-t-branch/operations-and-tree.html","searchKeys":["operationsAndTree","val operationsAndTree: Pair<List<IAppliedOperation>, ITree>","org.modelix.model.operations.OTBranch.operationsAndTree"]},{"name":"val operationsHash: KVEntryReference<CPOperationsList>?","description":"org.modelix.model.persistent.CPVersion.operationsHash","location":"model-datastructure/org.modelix.model.persistent/-c-p-version/operations-hash.html","searchKeys":["operationsHash","val operationsHash: KVEntryReference<CPOperationsList>?","org.modelix.model.persistent.CPVersion.operationsHash"]},{"name":"val originalVersion: KVEntryReference<CPVersion>?","description":"org.modelix.model.persistent.CPVersion.originalVersion","location":"model-datastructure/org.modelix.model.persistent/-c-p-version/original-version.html","searchKeys":["originalVersion","val originalVersion: KVEntryReference<CPVersion>?","org.modelix.model.persistent.CPVersion.originalVersion"]},{"name":"val parent: CLNode?","description":"org.modelix.model.lazy.CLNode.parent","location":"model-datastructure/org.modelix.model.lazy/-c-l-node/parent.html","searchKeys":["parent","val parent: CLNode?","org.modelix.model.lazy.CLNode.parent"]},{"name":"val parentId: Long","description":"org.modelix.model.lazy.CLNode.parentId","location":"model-datastructure/org.modelix.model.lazy/-c-l-node/parent-id.html","searchKeys":["parentId","val parentId: Long","org.modelix.model.lazy.CLNode.parentId"]},{"name":"val parentId: Long","description":"org.modelix.model.persistent.CPNode.parentId","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/parent-id.html","searchKeys":["parentId","val parentId: Long","org.modelix.model.persistent.CPNode.parentId"]},{"name":"val position: PositionInRole","description":"org.modelix.model.operations.AddNewChildSubtreeOp.position","location":"model-datastructure/org.modelix.model.operations/-add-new-child-subtree-op/position.html","searchKeys":["position","val position: PositionInRole","org.modelix.model.operations.AddNewChildSubtreeOp.position"]},{"name":"val position: PositionInRole","description":"org.modelix.model.operations.AddNewChildrenOp.position","location":"model-datastructure/org.modelix.model.operations/-add-new-children-op/position.html","searchKeys":["position","val position: PositionInRole","org.modelix.model.operations.AddNewChildrenOp.position"]},{"name":"val position: PositionInRole","description":"org.modelix.model.operations.DeleteNodeOp.Applied.position","location":"model-datastructure/org.modelix.model.operations/-delete-node-op/-applied/position.html","searchKeys":["position","val position: PositionInRole","org.modelix.model.operations.DeleteNodeOp.Applied.position"]},{"name":"val previousVersion: KVEntryReference<CPVersion>?","description":"org.modelix.model.persistent.CPVersion.previousVersion","location":"model-datastructure/org.modelix.model.persistent/-c-p-version/previous-version.html","searchKeys":["previousVersion","val previousVersion: KVEntryReference<CPVersion>?","org.modelix.model.persistent.CPVersion.previousVersion"]},{"name":"val properties: Map<String, String?>","description":"org.modelix.model.operations.DeleteNodeOp.Applied.properties","location":"model-datastructure/org.modelix.model.operations/-delete-node-op/-applied/properties.html","searchKeys":["properties","val properties: Map<String, String?>","org.modelix.model.operations.DeleteNodeOp.Applied.properties"]},{"name":"val propertyRoles: Array<String>","description":"org.modelix.model.persistent.CPNode.propertyRoles","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/property-roles.html","searchKeys":["propertyRoles","val propertyRoles: Array<String>","org.modelix.model.persistent.CPNode.propertyRoles"]},{"name":"val propertyValues: Array<String>","description":"org.modelix.model.persistent.CPNode.propertyValues","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/property-values.html","searchKeys":["propertyValues","val propertyValues: Array<String>","org.modelix.model.persistent.CPNode.propertyValues"]},{"name":"val ref: CLNodeRef","description":"org.modelix.model.lazy.CLNode.ref","location":"model-datastructure/org.modelix.model.lazy/-c-l-node/ref.html","searchKeys":["ref","val ref: CLNodeRef","org.modelix.model.lazy.CLNode.ref"]},{"name":"val referenceRoles: Array<String>","description":"org.modelix.model.persistent.CPNode.referenceRoles","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/reference-roles.html","searchKeys":["referenceRoles","val referenceRoles: Array<String>","org.modelix.model.persistent.CPNode.referenceRoles"]},{"name":"val referenceTargets: Array<CPNodeRef>","description":"org.modelix.model.persistent.CPNode.referenceTargets","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/reference-targets.html","searchKeys":["referenceTargets","val referenceTargets: Array<CPNodeRef>","org.modelix.model.persistent.CPNode.referenceTargets"]},{"name":"val references: Map<String, INodeReference?>","description":"org.modelix.model.operations.DeleteNodeOp.Applied.references","location":"model-datastructure/org.modelix.model.operations/-delete-node-op/-applied/references.html","searchKeys":["references","val references: Map<String, INodeReference?>","org.modelix.model.operations.DeleteNodeOp.Applied.references"]},{"name":"val repositoryId: RepositoryId","description":"org.modelix.model.lazy.BranchReference.repositoryId","location":"model-datastructure/org.modelix.model.lazy/-branch-reference/repository-id.html","searchKeys":["repositoryId","val repositoryId: RepositoryId","org.modelix.model.lazy.BranchReference.repositoryId"]},{"name":"val resultTree: CLTree","description":"org.modelix.model.lazy.OperationsCompressor.resultTree","location":"model-datastructure/org.modelix.model.lazy/-operations-compressor/result-tree.html","searchKeys":["resultTree","val resultTree: CLTree","org.modelix.model.lazy.OperationsCompressor.resultTree"]},{"name":"val resultTreeHash: KVEntryReference<CPTree>","description":"org.modelix.model.operations.AddNewChildSubtreeOp.resultTreeHash","location":"model-datastructure/org.modelix.model.operations/-add-new-child-subtree-op/result-tree-hash.html","searchKeys":["resultTreeHash","val resultTreeHash: KVEntryReference<CPTree>","org.modelix.model.operations.AddNewChildSubtreeOp.resultTreeHash"]},{"name":"val resultTreeHash: KVEntryReference<CPTree>","description":"org.modelix.model.operations.BulkUpdateOp.resultTreeHash","location":"model-datastructure/org.modelix.model.operations/-bulk-update-op/result-tree-hash.html","searchKeys":["resultTreeHash","val resultTreeHash: KVEntryReference<CPTree>","org.modelix.model.operations.BulkUpdateOp.resultTreeHash"]},{"name":"val role: String","description":"org.modelix.model.operations.SetPropertyOp.role","location":"model-datastructure/org.modelix.model.operations/-set-property-op/role.html","searchKeys":["role","val role: String","org.modelix.model.operations.SetPropertyOp.role"]},{"name":"val role: String","description":"org.modelix.model.operations.SetReferenceOp.role","location":"model-datastructure/org.modelix.model.operations/-set-reference-op/role.html","searchKeys":["role","val role: String","org.modelix.model.operations.SetReferenceOp.role"]},{"name":"val role: String?","description":"org.modelix.model.operations.PositionInRole.role","location":"model-datastructure/org.modelix.model.operations/-position-in-role/role.html","searchKeys":["role","val role: String?","org.modelix.model.operations.PositionInRole.role"]},{"name":"val role: String?","description":"org.modelix.model.operations.RoleInNode.role","location":"model-datastructure/org.modelix.model.operations/-role-in-node/role.html","searchKeys":["role","val role: String?","org.modelix.model.operations.RoleInNode.role"]},{"name":"val roleInNode: RoleInNode","description":"org.modelix.model.operations.PositionInRole.roleInNode","location":"model-datastructure/org.modelix.model.operations/-position-in-role/role-in-node.html","searchKeys":["roleInNode","val roleInNode: RoleInNode","org.modelix.model.operations.PositionInRole.roleInNode"]},{"name":"val roleInParent: String?","description":"org.modelix.model.lazy.CLNode.roleInParent","location":"model-datastructure/org.modelix.model.lazy/-c-l-node/role-in-parent.html","searchKeys":["roleInParent","val roleInParent: String?","org.modelix.model.lazy.CLNode.roleInParent"]},{"name":"val roleInParent: String?","description":"org.modelix.model.persistent.CPNode.roleInParent","location":"model-datastructure/org.modelix.model.persistent/-c-p-node/role-in-parent.html","searchKeys":["roleInParent","val roleInParent: String?","org.modelix.model.persistent.CPNode.roleInParent"]},{"name":"val root: CPNode?","description":"org.modelix.model.lazy.CLTree.root","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/root.html","searchKeys":["root","val root: CPNode?","org.modelix.model.lazy.CLTree.root"]},{"name":"val serializedRef: String","description":"org.modelix.model.persistent.CPNodeRef.ForeignRef.serializedRef","location":"model-datastructure/org.modelix.model.persistent/-c-p-node-ref/-foreign-ref/serialized-ref.html","searchKeys":["serializedRef","val serializedRef: String","org.modelix.model.persistent.CPNodeRef.ForeignRef.serializedRef"]},{"name":"val siblingsAfter: LongArray","description":"org.modelix.model.operations.CapturedInsertPosition.siblingsAfter","location":"model-datastructure/org.modelix.model.operations/-captured-insert-position/siblings-after.html","searchKeys":["siblingsAfter","val siblingsAfter: LongArray","org.modelix.model.operations.CapturedInsertPosition.siblingsAfter"]},{"name":"val siblingsBefore: LongArray","description":"org.modelix.model.operations.CapturedInsertPosition.siblingsBefore","location":"model-datastructure/org.modelix.model.operations/-captured-insert-position/siblings-before.html","searchKeys":["siblingsBefore","val siblingsBefore: LongArray","org.modelix.model.operations.CapturedInsertPosition.siblingsBefore"]},{"name":"val sourceId: Long","description":"org.modelix.model.operations.SetReferenceOp.sourceId","location":"model-datastructure/org.modelix.model.operations/-set-reference-op/source-id.html","searchKeys":["sourceId","val sourceId: Long","org.modelix.model.operations.SetReferenceOp.sourceId"]},{"name":"val sourcePosition: PositionInRole","description":"org.modelix.model.operations.MoveNodeOp.Applied.sourcePosition","location":"model-datastructure/org.modelix.model.operations/-move-node-op/-applied/source-position.html","searchKeys":["sourcePosition","val sourcePosition: PositionInRole","org.modelix.model.operations.MoveNodeOp.Applied.sourcePosition"]},{"name":"val store: IDeserializingKeyValueStore","description":"org.modelix.model.lazy.CLTree.store","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/store.html","searchKeys":["store","val store: IDeserializingKeyValueStore","org.modelix.model.lazy.CLTree.store"]},{"name":"val store: IDeserializingKeyValueStore","description":"org.modelix.model.operations.AddNewChildSubtreeOp.Applied.store","location":"model-datastructure/org.modelix.model.operations/-add-new-child-subtree-op/-applied/store.html","searchKeys":["store","val store: IDeserializingKeyValueStore","org.modelix.model.operations.AddNewChildSubtreeOp.Applied.store"]},{"name":"val store: IDeserializingKeyValueStore","description":"org.modelix.model.operations.RevertToOp.Intend.store","location":"model-datastructure/org.modelix.model.operations/-revert-to-op/-intend/store.html","searchKeys":["store","val store: IDeserializingKeyValueStore","org.modelix.model.operations.RevertToOp.Intend.store"]},{"name":"val store: IDeserializingKeyValueStore","description":"org.modelix.model.operations.UndoOp.Intend.store","location":"model-datastructure/org.modelix.model.operations/-undo-op/-intend/store.html","searchKeys":["store","val store: IDeserializingKeyValueStore","org.modelix.model.operations.UndoOp.Intend.store"]},{"name":"val subtreeRootId: Long","description":"org.modelix.model.operations.BulkUpdateOp.subtreeRootId","location":"model-datastructure/org.modelix.model.operations/-bulk-update-op/subtree-root-id.html","searchKeys":["subtreeRootId","val subtreeRootId: Long","org.modelix.model.operations.BulkUpdateOp.subtreeRootId"]},{"name":"val target: INodeReference?","description":"org.modelix.model.operations.SetReferenceOp.target","location":"model-datastructure/org.modelix.model.operations/-set-reference-op/target.html","searchKeys":["target","val target: INodeReference?","org.modelix.model.operations.SetReferenceOp.target"]},{"name":"val targetPosition: PositionInRole","description":"org.modelix.model.operations.MoveNodeOp.targetPosition","location":"model-datastructure/org.modelix.model.operations/-move-node-op/target-position.html","searchKeys":["targetPosition","val targetPosition: PositionInRole","org.modelix.model.operations.MoveNodeOp.targetPosition"]},{"name":"val time: String?","description":"org.modelix.model.lazy.CLVersion.time","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/time.html","searchKeys":["time","val time: String?","org.modelix.model.lazy.CLVersion.time"]},{"name":"val time: String?","description":"org.modelix.model.persistent.CPVersion.time","location":"model-datastructure/org.modelix.model.persistent/-c-p-version/time.html","searchKeys":["time","val time: String?","org.modelix.model.persistent.CPVersion.time"]},{"name":"val tree: CLTree","description":"org.modelix.model.lazy.CLVersion.tree","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/tree.html","searchKeys":["tree","val tree: CLTree","org.modelix.model.lazy.CLVersion.tree"]},{"name":"val treeHash: KVEntryReference<CPTree>?","description":"org.modelix.model.lazy.CLVersion.treeHash","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/tree-hash.html","searchKeys":["treeHash","val treeHash: KVEntryReference<CPTree>?","org.modelix.model.lazy.CLVersion.treeHash"]},{"name":"val treeHash: KVEntryReference<CPTree>?","description":"org.modelix.model.persistent.CPVersion.treeHash","location":"model-datastructure/org.modelix.model.persistent/-c-p-version/tree-hash.html","searchKeys":["treeHash","val treeHash: KVEntryReference<CPTree>?","org.modelix.model.persistent.CPVersion.treeHash"]},{"name":"val usesRoleIds: Boolean","description":"org.modelix.model.persistent.CPTree.usesRoleIds","location":"model-datastructure/org.modelix.model.persistent/-c-p-tree/uses-role-ids.html","searchKeys":["usesRoleIds","val usesRoleIds: Boolean","org.modelix.model.persistent.CPTree.usesRoleIds"]},{"name":"val value: KVEntryReference<CPNode>","description":"org.modelix.model.persistent.CPHamtLeaf.value","location":"model-datastructure/org.modelix.model.persistent/-c-p-hamt-leaf/value.html","searchKeys":["value","val value: KVEntryReference<CPNode>","org.modelix.model.persistent.CPHamtLeaf.value"]},{"name":"val value: String?","description":"org.modelix.model.operations.SetPropertyOp.value","location":"model-datastructure/org.modelix.model.operations/-set-property-op/value.html","searchKeys":["value","val value: String?","org.modelix.model.operations.SetPropertyOp.value"]},{"name":"val versionHash: KVEntryReference<CPVersion>","description":"org.modelix.model.operations.UndoOp.versionHash","location":"model-datastructure/org.modelix.model.operations/-undo-op/version-hash.html","searchKeys":["versionHash","val versionHash: KVEntryReference<CPVersion>","org.modelix.model.operations.UndoOp.versionHash"]},{"name":"val versionToRevertToRef: KVEntryReference<CPVersion>","description":"org.modelix.model.operations.RevertToOp.versionToRevertToRef","location":"model-datastructure/org.modelix.model.operations/-revert-to-op/version-to-revert-to-ref.html","searchKeys":["versionToRevertToRef","val versionToRevertToRef: KVEntryReference<CPVersion>","org.modelix.model.operations.RevertToOp.versionToRevertToRef"]},{"name":"var data: CPVersion?","description":"org.modelix.model.lazy.CLVersion.data","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/data.html","searchKeys":["data","var data: CPVersion?","org.modelix.model.lazy.CLVersion.data"]},{"name":"var idToHash: KVEntryReference<CPHamtNode>","description":"org.modelix.model.persistent.CPTree.idToHash","location":"model-datastructure/org.modelix.model.persistent/-c-p-tree/id-to-hash.html","searchKeys":["idToHash","var idToHash: KVEntryReference<CPHamtNode>","org.modelix.model.persistent.CPTree.idToHash"]},{"name":"var store: IDeserializingKeyValueStore","description":"org.modelix.model.lazy.CLTree.Builder.store","location":"model-datastructure/org.modelix.model.lazy/-c-l-tree/-builder/store.html","searchKeys":["store","var store: IDeserializingKeyValueStore","org.modelix.model.lazy.CLTree.Builder.store"]},{"name":"var store: IDeserializingKeyValueStore","description":"org.modelix.model.lazy.CLVersion.store","location":"model-datastructure/org.modelix.model.lazy/-c-l-version/store.html","searchKeys":["store","var store: IDeserializingKeyValueStore","org.modelix.model.lazy.CLVersion.store"]},{"name":"BOOLEAN","description":"org.modelix.metamodel.generator.PropertyType.BOOLEAN","location":"model-api-gen/org.modelix.metamodel.generator/-property-type/-b-o-o-l-e-a-n/index.html","searchKeys":["BOOLEAN","BOOLEAN","org.modelix.metamodel.generator.PropertyType.BOOLEAN"]},{"name":"INT","description":"org.modelix.metamodel.generator.PropertyType.INT","location":"model-api-gen/org.modelix.metamodel.generator/-property-type/-i-n-t/index.html","searchKeys":["INT","INT","org.modelix.metamodel.generator.PropertyType.INT"]},{"name":"STRING","description":"org.modelix.metamodel.generator.PropertyType.STRING","location":"model-api-gen/org.modelix.metamodel.generator/-property-type/-s-t-r-i-n-g/index.html","searchKeys":["STRING","STRING","org.modelix.metamodel.generator.PropertyType.STRING"]},{"name":"abstract val name: String","description":"org.modelix.metamodel.generator.IConceptFeatureData.name","location":"model-api-gen/org.modelix.metamodel.generator/-i-concept-feature-data/name.html","searchKeys":["name","abstract val name: String","org.modelix.metamodel.generator.IConceptFeatureData.name"]},{"name":"abstract val uid: String?","description":"org.modelix.metamodel.generator.IConceptFeatureData.uid","location":"model-api-gen/org.modelix.metamodel.generator/-i-concept-feature-data/uid.html","searchKeys":["uid","abstract val uid: String?","org.modelix.metamodel.generator.IConceptFeatureData.uid"]},{"name":"class ConceptBuilder(val conceptName: String, val languageBuilder: LanguageBuilder)","description":"org.modelix.metamodel.generator.ConceptBuilder","location":"model-api-gen/org.modelix.metamodel.generator/-concept-builder/index.html","searchKeys":["ConceptBuilder","class ConceptBuilder(val conceptName: String, val languageBuilder: LanguageBuilder)","org.modelix.metamodel.generator.ConceptBuilder"]},{"name":"class ConceptRef(val languageName: String, val conceptName: String)","description":"org.modelix.metamodel.generator.ConceptRef","location":"model-api-gen/org.modelix.metamodel.generator/-concept-ref/index.html","searchKeys":["ConceptRef","class ConceptRef(val languageName: String, val conceptName: String)","org.modelix.metamodel.generator.ConceptRef"]},{"name":"class ConceptsFilter(val languageSet: LanguageSet)","description":"org.modelix.metamodel.generator.ConceptsFilter","location":"model-api-gen/org.modelix.metamodel.generator/-concepts-filter/index.html","searchKeys":["ConceptsFilter","class ConceptsFilter(val languageSet: LanguageSet)","org.modelix.metamodel.generator.ConceptsFilter"]},{"name":"class ConfigurableName(var prefix: String = \"\", var suffix: String = \"\", var baseNameConversion: (String) -> String = UNMODIFIED_SIMPLE_NAME) : Serializable","description":"org.modelix.metamodel.generator.ConfigurableName","location":"model-api-gen/org.modelix.metamodel.generator/-configurable-name/index.html","searchKeys":["ConfigurableName","class ConfigurableName(var prefix: String = \"\", var suffix: String = \"\", var baseNameConversion: (String) -> String = UNMODIFIED_SIMPLE_NAME) : Serializable","org.modelix.metamodel.generator.ConfigurableName"]},{"name":"class LanguageBuilder(val name: String)","description":"org.modelix.metamodel.generator.LanguageBuilder","location":"model-api-gen/org.modelix.metamodel.generator/-language-builder/index.html","searchKeys":["LanguageBuilder","class LanguageBuilder(val name: String)","org.modelix.metamodel.generator.LanguageBuilder"]},{"name":"class LanguageSet(languages: List<LanguageData>)","description":"org.modelix.metamodel.generator.LanguageSet","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/index.html","searchKeys":["LanguageSet","class LanguageSet(languages: List<LanguageData>)","org.modelix.metamodel.generator.LanguageSet"]},{"name":"class MetaModelGenerator(val outputDir: Path, val nameConfig: NameConfig = NameConfig(), val modelqlOutputDir: Path? = null, val conceptPropertiesInterfaceName: String? = null)","description":"org.modelix.metamodel.generator.MetaModelGenerator","location":"model-api-gen/org.modelix.metamodel.generator/-meta-model-generator/index.html","searchKeys":["MetaModelGenerator","class MetaModelGenerator(val outputDir: Path, val nameConfig: NameConfig = NameConfig(), val modelqlOutputDir: Path? = null, val conceptPropertiesInterfaceName: String? = null)","org.modelix.metamodel.generator.MetaModelGenerator"]},{"name":"class NameConfig : Serializable","description":"org.modelix.metamodel.generator.NameConfig","location":"model-api-gen/org.modelix.metamodel.generator/-name-config/index.html","searchKeys":["NameConfig","class NameConfig : Serializable","org.modelix.metamodel.generator.NameConfig"]},{"name":"class TypescriptMMGenerator(val outputDir: Path, val nameConfig: NameConfig = NameConfig())","description":"org.modelix.metamodel.generator.TypescriptMMGenerator","location":"model-api-gen/org.modelix.metamodel.generator/-typescript-m-m-generator/index.html","searchKeys":["TypescriptMMGenerator","class TypescriptMMGenerator(val outputDir: Path, val nameConfig: NameConfig = NameConfig())","org.modelix.metamodel.generator.TypescriptMMGenerator"]},{"name":"constructor()","description":"org.modelix.metamodel.generator.NameConfig.NameConfig","location":"model-api-gen/org.modelix.metamodel.generator/-name-config/-name-config.html","searchKeys":["NameConfig","constructor()","org.modelix.metamodel.generator.NameConfig.NameConfig"]},{"name":"constructor(concept: ConceptData, language: LanguageData)","description":"org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.ConceptInLanguage","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-concept-in-language/-concept-in-language.html","searchKeys":["ConceptInLanguage","constructor(concept: ConceptData, language: LanguageData)","org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.ConceptInLanguage"]},{"name":"constructor(concept: LanguageSet.ConceptInLanguage, data: IConceptFeatureData)","description":"org.modelix.metamodel.generator.FeatureInConcept.FeatureInConcept","location":"model-api-gen/org.modelix.metamodel.generator/-feature-in-concept/-feature-in-concept.html","searchKeys":["FeatureInConcept","constructor(concept: LanguageSet.ConceptInLanguage, data: IConceptFeatureData)","org.modelix.metamodel.generator.FeatureInConcept.FeatureInConcept"]},{"name":"constructor(conceptName: String, languageBuilder: LanguageBuilder)","description":"org.modelix.metamodel.generator.ConceptBuilder.ConceptBuilder","location":"model-api-gen/org.modelix.metamodel.generator/-concept-builder/-concept-builder.html","searchKeys":["ConceptBuilder","constructor(conceptName: String, languageBuilder: LanguageBuilder)","org.modelix.metamodel.generator.ConceptBuilder.ConceptBuilder"]},{"name":"constructor(language: LanguageData)","description":"org.modelix.metamodel.generator.LanguageSet.LanguageInSet.LanguageInSet","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-language-in-set/-language-in-set.html","searchKeys":["LanguageInSet","constructor(language: LanguageData)","org.modelix.metamodel.generator.LanguageSet.LanguageInSet.LanguageInSet"]},{"name":"constructor(languageName: String, conceptName: String)","description":"org.modelix.metamodel.generator.ConceptRef.ConceptRef","location":"model-api-gen/org.modelix.metamodel.generator/-concept-ref/-concept-ref.html","searchKeys":["ConceptRef","constructor(languageName: String, conceptName: String)","org.modelix.metamodel.generator.ConceptRef.ConceptRef"]},{"name":"constructor(languageSet: LanguageSet)","description":"org.modelix.metamodel.generator.ConceptsFilter.ConceptsFilter","location":"model-api-gen/org.modelix.metamodel.generator/-concepts-filter/-concepts-filter.html","searchKeys":["ConceptsFilter","constructor(languageSet: LanguageSet)","org.modelix.metamodel.generator.ConceptsFilter.ConceptsFilter"]},{"name":"constructor(languages: List<LanguageData>)","description":"org.modelix.metamodel.generator.LanguageSet.LanguageSet","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-language-set.html","searchKeys":["LanguageSet","constructor(languages: List<LanguageData>)","org.modelix.metamodel.generator.LanguageSet.LanguageSet"]},{"name":"constructor(name: String)","description":"org.modelix.metamodel.generator.LanguageBuilder.LanguageBuilder","location":"model-api-gen/org.modelix.metamodel.generator/-language-builder/-language-builder.html","searchKeys":["LanguageBuilder","constructor(name: String)","org.modelix.metamodel.generator.LanguageBuilder.LanguageBuilder"]},{"name":"constructor(outputDir: Path, nameConfig: NameConfig = NameConfig())","description":"org.modelix.metamodel.generator.TypescriptMMGenerator.TypescriptMMGenerator","location":"model-api-gen/org.modelix.metamodel.generator/-typescript-m-m-generator/-typescript-m-m-generator.html","searchKeys":["TypescriptMMGenerator","constructor(outputDir: Path, nameConfig: NameConfig = NameConfig())","org.modelix.metamodel.generator.TypescriptMMGenerator.TypescriptMMGenerator"]},{"name":"constructor(outputDir: Path, nameConfig: NameConfig = NameConfig(), modelqlOutputDir: Path? = null, conceptPropertiesInterfaceName: String? = null)","description":"org.modelix.metamodel.generator.MetaModelGenerator.MetaModelGenerator","location":"model-api-gen/org.modelix.metamodel.generator/-meta-model-generator/-meta-model-generator.html","searchKeys":["MetaModelGenerator","constructor(outputDir: Path, nameConfig: NameConfig = NameConfig(), modelqlOutputDir: Path? = null, conceptPropertiesInterfaceName: String? = null)","org.modelix.metamodel.generator.MetaModelGenerator.MetaModelGenerator"]},{"name":"constructor(prefix: String = \"\", suffix: String = \"\", baseNameConversion: (String) -> String = UNMODIFIED_SIMPLE_NAME)","description":"org.modelix.metamodel.generator.ConfigurableName.ConfigurableName","location":"model-api-gen/org.modelix.metamodel.generator/-configurable-name/-configurable-name.html","searchKeys":["ConfigurableName","constructor(prefix: String = \"\", suffix: String = \"\", baseNameConversion: (String) -> String = UNMODIFIED_SIMPLE_NAME)","org.modelix.metamodel.generator.ConfigurableName.ConfigurableName"]},{"name":"constructor(uid: String? = null, name: String, abstract: Boolean = false, properties: List<PropertyData> = emptyList(), children: List<ChildLinkData> = emptyList(), references: List<ReferenceLinkData> = emptyList(), extends: List<String> = emptyList())","description":"org.modelix.metamodel.generator.ConceptData.ConceptData","location":"model-api-gen/org.modelix.metamodel.generator/-concept-data/-concept-data.html","searchKeys":["ConceptData","constructor(uid: String? = null, name: String, abstract: Boolean = false, properties: List<PropertyData> = emptyList(), children: List<ChildLinkData> = emptyList(), references: List<ReferenceLinkData> = emptyList(), extends: List<String> = emptyList())","org.modelix.metamodel.generator.ConceptData.ConceptData"]},{"name":"constructor(uid: String? = null, name: String, concepts: List<ConceptData>)","description":"org.modelix.metamodel.generator.LanguageData.LanguageData","location":"model-api-gen/org.modelix.metamodel.generator/-language-data/-language-data.html","searchKeys":["LanguageData","constructor(uid: String? = null, name: String, concepts: List<ConceptData>)","org.modelix.metamodel.generator.LanguageData.LanguageData"]},{"name":"constructor(uid: String? = null, name: String, type: PropertyType = PropertyType.STRING)","description":"org.modelix.metamodel.generator.PropertyData.PropertyData","location":"model-api-gen/org.modelix.metamodel.generator/-property-data/-property-data.html","searchKeys":["PropertyData","constructor(uid: String? = null, name: String, type: PropertyType = PropertyType.STRING)","org.modelix.metamodel.generator.PropertyData.PropertyData"]},{"name":"constructor(uid: String? = null, name: String, type: String, multiple: Boolean = false, optional: Boolean = true)","description":"org.modelix.metamodel.generator.ChildLinkData.ChildLinkData","location":"model-api-gen/org.modelix.metamodel.generator/-child-link-data/-child-link-data.html","searchKeys":["ChildLinkData","constructor(uid: String? = null, name: String, type: String, multiple: Boolean = false, optional: Boolean = true)","org.modelix.metamodel.generator.ChildLinkData.ChildLinkData"]},{"name":"constructor(uid: String? = null, name: String, type: String, optional: Boolean = true)","description":"org.modelix.metamodel.generator.ReferenceLinkData.ReferenceLinkData","location":"model-api-gen/org.modelix.metamodel.generator/-reference-link-data/-reference-link-data.html","searchKeys":["ReferenceLinkData","constructor(uid: String? = null, name: String, type: String, optional: Boolean = true)","org.modelix.metamodel.generator.ReferenceLinkData.ReferenceLinkData"]},{"name":"data class ChildLinkData(val uid: String? = null, val name: String, val type: String, val multiple: Boolean = false, val optional: Boolean = true) : IConceptFeatureData","description":"org.modelix.metamodel.generator.ChildLinkData","location":"model-api-gen/org.modelix.metamodel.generator/-child-link-data/index.html","searchKeys":["ChildLinkData","data class ChildLinkData(val uid: String? = null, val name: String, val type: String, val multiple: Boolean = false, val optional: Boolean = true) : IConceptFeatureData","org.modelix.metamodel.generator.ChildLinkData"]},{"name":"data class ConceptData(val uid: String? = null, val name: String, val abstract: Boolean = false, val properties: List<PropertyData> = emptyList(), val children: List<ChildLinkData> = emptyList(), val references: List<ReferenceLinkData> = emptyList(), val extends: List<String> = emptyList())","description":"org.modelix.metamodel.generator.ConceptData","location":"model-api-gen/org.modelix.metamodel.generator/-concept-data/index.html","searchKeys":["ConceptData","data class ConceptData(val uid: String? = null, val name: String, val abstract: Boolean = false, val properties: List<PropertyData> = emptyList(), val children: List<ChildLinkData> = emptyList(), val references: List<ReferenceLinkData> = emptyList(), val extends: List<String> = emptyList())","org.modelix.metamodel.generator.ConceptData"]},{"name":"data class FeatureInConcept(val concept: LanguageSet.ConceptInLanguage, val data: IConceptFeatureData)","description":"org.modelix.metamodel.generator.FeatureInConcept","location":"model-api-gen/org.modelix.metamodel.generator/-feature-in-concept/index.html","searchKeys":["FeatureInConcept","data class FeatureInConcept(val concept: LanguageSet.ConceptInLanguage, val data: IConceptFeatureData)","org.modelix.metamodel.generator.FeatureInConcept"]},{"name":"data class LanguageData(val uid: String? = null, val name: String, val concepts: List<ConceptData>)","description":"org.modelix.metamodel.generator.LanguageData","location":"model-api-gen/org.modelix.metamodel.generator/-language-data/index.html","searchKeys":["LanguageData","data class LanguageData(val uid: String? = null, val name: String, val concepts: List<ConceptData>)","org.modelix.metamodel.generator.LanguageData"]},{"name":"data class PropertyData(val uid: String? = null, val name: String, val type: PropertyType = PropertyType.STRING) : IConceptFeatureData","description":"org.modelix.metamodel.generator.PropertyData","location":"model-api-gen/org.modelix.metamodel.generator/-property-data/index.html","searchKeys":["PropertyData","data class PropertyData(val uid: String? = null, val name: String, val type: PropertyType = PropertyType.STRING) : IConceptFeatureData","org.modelix.metamodel.generator.PropertyData"]},{"name":"data class ReferenceLinkData(val uid: String? = null, val name: String, val type: String, val optional: Boolean = true) : IConceptFeatureData","description":"org.modelix.metamodel.generator.ReferenceLinkData","location":"model-api-gen/org.modelix.metamodel.generator/-reference-link-data/index.html","searchKeys":["ReferenceLinkData","data class ReferenceLinkData(val uid: String? = null, val name: String, val type: String, val optional: Boolean = true) : IConceptFeatureData","org.modelix.metamodel.generator.ReferenceLinkData"]},{"name":"enum PropertyType : Enum<PropertyType> ","description":"org.modelix.metamodel.generator.PropertyType","location":"model-api-gen/org.modelix.metamodel.generator/-property-type/index.html","searchKeys":["PropertyType","enum PropertyType : Enum<PropertyType> ","org.modelix.metamodel.generator.PropertyType"]},{"name":"fun LanguageSet.process(): IProcessedLanguageSet","description":"org.modelix.metamodel.generator.process","location":"model-api-gen/org.modelix.metamodel.generator/process.html","searchKeys":["process","fun LanguageSet.process(): IProcessedLanguageSet","org.modelix.metamodel.generator.process"]},{"name":"fun String.parseConceptRef(contextLanguage: LanguageData): ConceptRef","description":"org.modelix.metamodel.generator.parseConceptRef","location":"model-api-gen/org.modelix.metamodel.generator/parse-concept-ref.html","searchKeys":["parseConceptRef","fun String.parseConceptRef(contextLanguage: LanguageData): ConceptRef","org.modelix.metamodel.generator.parseConceptRef"]},{"name":"fun abstract(value: Boolean = true)","description":"org.modelix.metamodel.generator.ConceptBuilder.abstract","location":"model-api-gen/org.modelix.metamodel.generator/-concept-builder/abstract.html","searchKeys":["abstract","fun abstract(value: Boolean = true)","org.modelix.metamodel.generator.ConceptBuilder.abstract"]},{"name":"fun allFeatures(): List<FeatureInConcept>","description":"org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.allFeatures","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-concept-in-language/all-features.html","searchKeys":["allFeatures","fun allFeatures(): List<FeatureInConcept>","org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.allFeatures"]},{"name":"fun allSuperConcepts(): List<LanguageSet.ConceptInLanguage>","description":"org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.allSuperConcepts","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-concept-in-language/all-super-concepts.html","searchKeys":["allSuperConcepts","fun allSuperConcepts(): List<LanguageSet.ConceptInLanguage>","org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.allSuperConcepts"]},{"name":"fun allSuperConceptsAndSelf(): List<LanguageSet.ConceptInLanguage>","description":"org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.allSuperConceptsAndSelf","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-concept-in-language/all-super-concepts-and-self.html","searchKeys":["allSuperConceptsAndSelf","fun allSuperConceptsAndSelf(): List<LanguageSet.ConceptInLanguage>","org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.allSuperConceptsAndSelf"]},{"name":"fun apply(): LanguageSet","description":"org.modelix.metamodel.generator.ConceptsFilter.apply","location":"model-api-gen/org.modelix.metamodel.generator/-concepts-filter/apply.html","searchKeys":["apply","fun apply(): LanguageSet","org.modelix.metamodel.generator.ConceptsFilter.apply"]},{"name":"fun build(): ConceptData","description":"org.modelix.metamodel.generator.ConceptBuilder.build","location":"model-api-gen/org.modelix.metamodel.generator/-concept-builder/build.html","searchKeys":["build","fun build(): ConceptData","org.modelix.metamodel.generator.ConceptBuilder.build"]},{"name":"fun build(): LanguageData","description":"org.modelix.metamodel.generator.LanguageBuilder.build","location":"model-api-gen/org.modelix.metamodel.generator/-language-builder/build.html","searchKeys":["build","fun build(): LanguageData","org.modelix.metamodel.generator.LanguageBuilder.build"]},{"name":"fun child(name: String, type: String, optional: Boolean, multiple: Boolean)","description":"org.modelix.metamodel.generator.ConceptBuilder.child","location":"model-api-gen/org.modelix.metamodel.generator/-concept-builder/child.html","searchKeys":["child","fun child(name: String, type: String, optional: Boolean, multiple: Boolean)","org.modelix.metamodel.generator.ConceptBuilder.child"]},{"name":"fun child0(name: String, type: String)","description":"org.modelix.metamodel.generator.ConceptBuilder.child0","location":"model-api-gen/org.modelix.metamodel.generator/-concept-builder/child0.html","searchKeys":["child0","fun child0(name: String, type: String)","org.modelix.metamodel.generator.ConceptBuilder.child0"]},{"name":"fun child0n(name: String, type: String)","description":"org.modelix.metamodel.generator.ConceptBuilder.child0n","location":"model-api-gen/org.modelix.metamodel.generator/-concept-builder/child0n.html","searchKeys":["child0n","fun child0n(name: String, type: String)","org.modelix.metamodel.generator.ConceptBuilder.child0n"]},{"name":"fun child1(name: String, type: String)","description":"org.modelix.metamodel.generator.ConceptBuilder.child1","location":"model-api-gen/org.modelix.metamodel.generator/-concept-builder/child1.html","searchKeys":["child1","fun child1(name: String, type: String)","org.modelix.metamodel.generator.ConceptBuilder.child1"]},{"name":"fun child1n(name: String, type: String)","description":"org.modelix.metamodel.generator.ConceptBuilder.child1n","location":"model-api-gen/org.modelix.metamodel.generator/-concept-builder/child1n.html","searchKeys":["child1n","fun child1n(name: String, type: String)","org.modelix.metamodel.generator.ConceptBuilder.child1n"]},{"name":"fun concept(name: String, body: ConceptBuilder.() -> Unit = {})","description":"org.modelix.metamodel.generator.LanguageBuilder.concept","location":"model-api-gen/org.modelix.metamodel.generator/-language-builder/concept.html","searchKeys":["concept","fun concept(name: String, body: ConceptBuilder.() -> Unit = {})","org.modelix.metamodel.generator.LanguageBuilder.concept"]},{"name":"fun concept(subConceptName: String, body: ConceptBuilder.() -> Unit = {})","description":"org.modelix.metamodel.generator.ConceptBuilder.concept","location":"model-api-gen/org.modelix.metamodel.generator/-concept-builder/concept.html","searchKeys":["concept","fun concept(subConceptName: String, body: ConceptBuilder.() -> Unit = {})","org.modelix.metamodel.generator.ConceptBuilder.concept"]},{"name":"fun directFeatures(): List<FeatureInConcept>","description":"org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.directFeatures","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-concept-in-language/direct-features.html","searchKeys":["directFeatures","fun directFeatures(): List<FeatureInConcept>","org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.directFeatures"]},{"name":"fun directFeaturesAndConflicts(): List<FeatureInConcept>","description":"org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.directFeaturesAndConflicts","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-concept-in-language/direct-features-and-conflicts.html","searchKeys":["directFeaturesAndConflicts","fun directFeaturesAndConflicts(): List<FeatureInConcept>","org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.directFeaturesAndConflicts"]},{"name":"fun directSuperConcepts(): List<LanguageSet.ConceptInLanguage>","description":"org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.directSuperConcepts","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-concept-in-language/direct-super-concepts.html","searchKeys":["directSuperConcepts","fun directSuperConcepts(): List<LanguageSet.ConceptInLanguage>","org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.directSuperConcepts"]},{"name":"fun extended(): List<ConceptRef>","description":"org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.extended","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-concept-in-language/extended.html","searchKeys":["extended","fun extended(): List<ConceptRef>","org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.extended"]},{"name":"fun extends(): List<ConceptRef>","description":"org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.extends","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-concept-in-language/extends.html","searchKeys":["extends","fun extends(): List<ConceptRef>","org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.extends"]},{"name":"fun extends(type: String)","description":"org.modelix.metamodel.generator.ConceptBuilder.extends","location":"model-api-gen/org.modelix.metamodel.generator/-concept-builder/extends.html","searchKeys":["extends","fun extends(type: String)","org.modelix.metamodel.generator.ConceptBuilder.extends"]},{"name":"fun filter(body: ConceptsFilter.() -> Unit): LanguageSet","description":"org.modelix.metamodel.generator.LanguageSet.filter","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/filter.html","searchKeys":["filter","fun filter(body: ConceptsFilter.() -> Unit): LanguageSet","org.modelix.metamodel.generator.LanguageSet.filter"]},{"name":"fun fromFile(file: File): LanguageData","description":"org.modelix.metamodel.generator.LanguageData.Companion.fromFile","location":"model-api-gen/org.modelix.metamodel.generator/-language-data/-companion/from-file.html","searchKeys":["fromFile","fun fromFile(file: File): LanguageData","org.modelix.metamodel.generator.LanguageData.Companion.fromFile"]},{"name":"fun generate(languages: IProcessedLanguageSet)","description":"org.modelix.metamodel.generator.MetaModelGenerator.generate","location":"model-api-gen/org.modelix.metamodel.generator/-meta-model-generator/generate.html","searchKeys":["generate","fun generate(languages: IProcessedLanguageSet)","org.modelix.metamodel.generator.MetaModelGenerator.generate"]},{"name":"fun generate(languages: IProcessedLanguageSet)","description":"org.modelix.metamodel.generator.TypescriptMMGenerator.generate","location":"model-api-gen/org.modelix.metamodel.generator/-typescript-m-m-generator/generate.html","searchKeys":["generate","fun generate(languages: IProcessedLanguageSet)","org.modelix.metamodel.generator.TypescriptMMGenerator.generate"]},{"name":"fun generateRegistrationHelper(classFqName: String, languages: IProcessedLanguageSet)","description":"org.modelix.metamodel.generator.MetaModelGenerator.generateRegistrationHelper","location":"model-api-gen/org.modelix.metamodel.generator/-meta-model-generator/generate-registration-helper.html","searchKeys":["generateRegistrationHelper","fun generateRegistrationHelper(classFqName: String, languages: IProcessedLanguageSet)","org.modelix.metamodel.generator.MetaModelGenerator.generateRegistrationHelper"]},{"name":"fun getConceptFqName(): String","description":"org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.getConceptFqName","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-concept-in-language/get-concept-fq-name.html","searchKeys":["getConceptFqName","fun getConceptFqName(): String","org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.getConceptFqName"]},{"name":"fun getConceptsInLanguage(): List<LanguageSet.ConceptInLanguage>","description":"org.modelix.metamodel.generator.LanguageSet.LanguageInSet.getConceptsInLanguage","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-language-in-set/get-concepts-in-language.html","searchKeys":["getConceptsInLanguage","fun getConceptsInLanguage(): List<LanguageSet.ConceptInLanguage>","org.modelix.metamodel.generator.LanguageSet.LanguageInSet.getConceptsInLanguage"]},{"name":"fun getLanguageSet(): LanguageSet","description":"org.modelix.metamodel.generator.LanguageSet.LanguageInSet.getLanguageSet","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-language-in-set/get-language-set.html","searchKeys":["getLanguageSet","fun getLanguageSet(): LanguageSet","org.modelix.metamodel.generator.LanguageSet.LanguageInSet.getLanguageSet"]},{"name":"fun getLanguages(): List<LanguageSet.LanguageInSet>","description":"org.modelix.metamodel.generator.LanguageSet.getLanguages","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/get-languages.html","searchKeys":["getLanguages","fun getLanguages(): List<LanguageSet.LanguageInSet>","org.modelix.metamodel.generator.LanguageSet.getLanguages"]},{"name":"fun includeConcept(fqName: String)","description":"org.modelix.metamodel.generator.ConceptsFilter.includeConcept","location":"model-api-gen/org.modelix.metamodel.generator/-concepts-filter/include-concept.html","searchKeys":["includeConcept","fun includeConcept(fqName: String)","org.modelix.metamodel.generator.ConceptsFilter.includeConcept"]},{"name":"fun isConceptIncluded(conceptFqName: String): Boolean","description":"org.modelix.metamodel.generator.ConceptsFilter.isConceptIncluded","location":"model-api-gen/org.modelix.metamodel.generator/-concepts-filter/is-concept-included.html","searchKeys":["isConceptIncluded","fun isConceptIncluded(conceptFqName: String): Boolean","org.modelix.metamodel.generator.ConceptsFilter.isConceptIncluded"]},{"name":"fun isLanguageIncluded(langName: String): Boolean","description":"org.modelix.metamodel.generator.ConceptsFilter.isLanguageIncluded","location":"model-api-gen/org.modelix.metamodel.generator/-concepts-filter/is-language-included.html","searchKeys":["isLanguageIncluded","fun isLanguageIncluded(langName: String): Boolean","org.modelix.metamodel.generator.ConceptsFilter.isLanguageIncluded"]},{"name":"fun loadInheritance(directSuperConcept: LanguageSet.ConceptInLanguage, inheritedFrom: MutableMap<LanguageSet.ConceptInLanguage, MutableSet<LanguageSet.ConceptInLanguage>>)","description":"org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.loadInheritance","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-concept-in-language/load-inheritance.html","searchKeys":["loadInheritance","fun loadInheritance(directSuperConcept: LanguageSet.ConceptInLanguage, inheritedFrom: MutableMap<LanguageSet.ConceptInLanguage, MutableSet<LanguageSet.ConceptInLanguage>>)","org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.loadInheritance"]},{"name":"fun newLanguage(name: String, body: LanguageBuilder.() -> Unit): LanguageData","description":"org.modelix.metamodel.generator.newLanguage","location":"model-api-gen/org.modelix.metamodel.generator/new-language.html","searchKeys":["newLanguage","fun newLanguage(name: String, body: LanguageBuilder.() -> Unit): LanguageData","org.modelix.metamodel.generator.newLanguage"]},{"name":"fun optionalReference(name: String, type: String)","description":"org.modelix.metamodel.generator.ConceptBuilder.optionalReference","location":"model-api-gen/org.modelix.metamodel.generator/-concept-builder/optional-reference.html","searchKeys":["optionalReference","fun optionalReference(name: String, type: String)","org.modelix.metamodel.generator.ConceptBuilder.optionalReference"]},{"name":"fun property(name: String)","description":"org.modelix.metamodel.generator.ConceptBuilder.property","location":"model-api-gen/org.modelix.metamodel.generator/-concept-builder/property.html","searchKeys":["property","fun property(name: String)","org.modelix.metamodel.generator.ConceptBuilder.property"]},{"name":"fun ref(): ConceptRef","description":"org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.ref","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-concept-in-language/ref.html","searchKeys":["ref","fun ref(): ConceptRef","org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.ref"]},{"name":"fun reference(name: String, type: String, optional: Boolean = false)","description":"org.modelix.metamodel.generator.ConceptBuilder.reference","location":"model-api-gen/org.modelix.metamodel.generator/-concept-builder/reference.html","searchKeys":["reference","fun reference(name: String, type: String, optional: Boolean = false)","org.modelix.metamodel.generator.ConceptBuilder.reference"]},{"name":"fun resolveConcept(fqName: String): LanguageSet.ConceptInLanguage?","description":"org.modelix.metamodel.generator.LanguageSet.resolveConcept","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/resolve-concept.html","searchKeys":["resolveConcept","fun resolveConcept(fqName: String): LanguageSet.ConceptInLanguage?","org.modelix.metamodel.generator.LanguageSet.resolveConcept"]},{"name":"fun resolveMultipleInheritanceConflicts(): Map<LanguageSet.ConceptInLanguage, LanguageSet.ConceptInLanguage>","description":"org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.resolveMultipleInheritanceConflicts","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-concept-in-language/resolve-multiple-inheritance-conflicts.html","searchKeys":["resolveMultipleInheritanceConflicts","fun resolveMultipleInheritanceConflicts(): Map<LanguageSet.ConceptInLanguage, LanguageSet.ConceptInLanguage>","org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.resolveMultipleInheritanceConflicts"]},{"name":"fun toCompactJson(): String","description":"org.modelix.metamodel.generator.LanguageData.toCompactJson","location":"model-api-gen/org.modelix.metamodel.generator/-language-data/to-compact-json.html","searchKeys":["toCompactJson","fun toCompactJson(): String","org.modelix.metamodel.generator.LanguageData.toCompactJson"]},{"name":"fun toJson(): String","description":"org.modelix.metamodel.generator.LanguageData.toJson","location":"model-api-gen/org.modelix.metamodel.generator/-language-data/to-json.html","searchKeys":["toJson","fun toJson(): String","org.modelix.metamodel.generator.LanguageData.toJson"]},{"name":"fun toYaml(): String","description":"org.modelix.metamodel.generator.LanguageData.toYaml","location":"model-api-gen/org.modelix.metamodel.generator/-language-data/to-yaml.html","searchKeys":["toYaml","fun toYaml(): String","org.modelix.metamodel.generator.LanguageData.toYaml"]},{"name":"fun valueOf(value: String): PropertyType","description":"org.modelix.metamodel.generator.PropertyType.valueOf","location":"model-api-gen/org.modelix.metamodel.generator/-property-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PropertyType","org.modelix.metamodel.generator.PropertyType.valueOf"]},{"name":"fun values(): Array<PropertyType>","description":"org.modelix.metamodel.generator.PropertyType.values","location":"model-api-gen/org.modelix.metamodel.generator/-property-type/values.html","searchKeys":["values","fun values(): Array<PropertyType>","org.modelix.metamodel.generator.PropertyType.values"]},{"name":"inner class ConceptInLanguage(val concept: ConceptData, val language: LanguageData)","description":"org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-concept-in-language/index.html","searchKeys":["ConceptInLanguage","inner class ConceptInLanguage(val concept: ConceptData, val language: LanguageData)","org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage"]},{"name":"inner class LanguageInSet(val language: LanguageData)","description":"org.modelix.metamodel.generator.LanguageSet.LanguageInSet","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-language-in-set/index.html","searchKeys":["LanguageInSet","inner class LanguageInSet(val language: LanguageData)","org.modelix.metamodel.generator.LanguageSet.LanguageInSet"]},{"name":"interface IConceptFeatureData","description":"org.modelix.metamodel.generator.IConceptFeatureData","location":"model-api-gen/org.modelix.metamodel.generator/-i-concept-feature-data/index.html","searchKeys":["IConceptFeatureData","interface IConceptFeatureData","org.modelix.metamodel.generator.IConceptFeatureData"]},{"name":"interface IProcessedLanguageSet","description":"org.modelix.metamodel.generator.IProcessedLanguageSet","location":"model-api-gen/org.modelix.metamodel.generator/-i-processed-language-set/index.html","searchKeys":["IProcessedLanguageSet","interface IProcessedLanguageSet","org.modelix.metamodel.generator.IProcessedLanguageSet"]},{"name":"object Companion","description":"org.modelix.metamodel.generator.LanguageData.Companion","location":"model-api-gen/org.modelix.metamodel.generator/-language-data/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.metamodel.generator.LanguageData.Companion"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.equals","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-concept-in-language/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.equals"]},{"name":"open override fun hashCode(): Int","description":"org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.hashCode","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-concept-in-language/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.hashCode"]},{"name":"open override fun toString(): String","description":"org.modelix.metamodel.generator.ConceptRef.toString","location":"model-api-gen/org.modelix.metamodel.generator/-concept-ref/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.metamodel.generator.ConceptRef.toString"]},{"name":"open override val name: String","description":"org.modelix.metamodel.generator.ChildLinkData.name","location":"model-api-gen/org.modelix.metamodel.generator/-child-link-data/name.html","searchKeys":["name","open override val name: String","org.modelix.metamodel.generator.ChildLinkData.name"]},{"name":"open override val name: String","description":"org.modelix.metamodel.generator.PropertyData.name","location":"model-api-gen/org.modelix.metamodel.generator/-property-data/name.html","searchKeys":["name","open override val name: String","org.modelix.metamodel.generator.PropertyData.name"]},{"name":"open override val name: String","description":"org.modelix.metamodel.generator.ReferenceLinkData.name","location":"model-api-gen/org.modelix.metamodel.generator/-reference-link-data/name.html","searchKeys":["name","open override val name: String","org.modelix.metamodel.generator.ReferenceLinkData.name"]},{"name":"open override val uid: String? = null","description":"org.modelix.metamodel.generator.ChildLinkData.uid","location":"model-api-gen/org.modelix.metamodel.generator/-child-link-data/uid.html","searchKeys":["uid","open override val uid: String? = null","org.modelix.metamodel.generator.ChildLinkData.uid"]},{"name":"open override val uid: String? = null","description":"org.modelix.metamodel.generator.PropertyData.uid","location":"model-api-gen/org.modelix.metamodel.generator/-property-data/uid.html","searchKeys":["uid","open override val uid: String? = null","org.modelix.metamodel.generator.PropertyData.uid"]},{"name":"open override val uid: String? = null","description":"org.modelix.metamodel.generator.ReferenceLinkData.uid","location":"model-api-gen/org.modelix.metamodel.generator/-reference-link-data/uid.html","searchKeys":["uid","open override val uid: String? = null","org.modelix.metamodel.generator.ReferenceLinkData.uid"]},{"name":"operator fun invoke(baseName: String): String","description":"org.modelix.metamodel.generator.ConfigurableName.invoke","location":"model-api-gen/org.modelix.metamodel.generator/-configurable-name/invoke.html","searchKeys":["invoke","operator fun invoke(baseName: String): String","org.modelix.metamodel.generator.ConfigurableName.invoke"]},{"name":"val abstract: Boolean = false","description":"org.modelix.metamodel.generator.ConceptData.abstract","location":"model-api-gen/org.modelix.metamodel.generator/-concept-data/abstract.html","searchKeys":["abstract","val abstract: Boolean = false","org.modelix.metamodel.generator.ConceptData.abstract"]},{"name":"val children: List<ChildLinkData>","description":"org.modelix.metamodel.generator.ConceptData.children","location":"model-api-gen/org.modelix.metamodel.generator/-concept-data/children.html","searchKeys":["children","val children: List<ChildLinkData>","org.modelix.metamodel.generator.ConceptData.children"]},{"name":"val concept: ConceptData","description":"org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.concept","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-concept-in-language/concept.html","searchKeys":["concept","val concept: ConceptData","org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.concept"]},{"name":"val concept: LanguageSet.ConceptInLanguage","description":"org.modelix.metamodel.generator.FeatureInConcept.concept","location":"model-api-gen/org.modelix.metamodel.generator/-feature-in-concept/concept.html","searchKeys":["concept","val concept: LanguageSet.ConceptInLanguage","org.modelix.metamodel.generator.FeatureInConcept.concept"]},{"name":"val conceptName: String","description":"org.modelix.metamodel.generator.ConceptBuilder.conceptName","location":"model-api-gen/org.modelix.metamodel.generator/-concept-builder/concept-name.html","searchKeys":["conceptName","val conceptName: String","org.modelix.metamodel.generator.ConceptBuilder.conceptName"]},{"name":"val conceptName: String","description":"org.modelix.metamodel.generator.ConceptRef.conceptName","location":"model-api-gen/org.modelix.metamodel.generator/-concept-ref/concept-name.html","searchKeys":["conceptName","val conceptName: String","org.modelix.metamodel.generator.ConceptRef.conceptName"]},{"name":"val conceptPropertiesInterfaceName: String? = null","description":"org.modelix.metamodel.generator.MetaModelGenerator.conceptPropertiesInterfaceName","location":"model-api-gen/org.modelix.metamodel.generator/-meta-model-generator/concept-properties-interface-name.html","searchKeys":["conceptPropertiesInterfaceName","val conceptPropertiesInterfaceName: String? = null","org.modelix.metamodel.generator.MetaModelGenerator.conceptPropertiesInterfaceName"]},{"name":"val conceptTypeAlias: ConfigurableName","description":"org.modelix.metamodel.generator.NameConfig.conceptTypeAlias","location":"model-api-gen/org.modelix.metamodel.generator/-name-config/concept-type-alias.html","searchKeys":["conceptTypeAlias","val conceptTypeAlias: ConfigurableName","org.modelix.metamodel.generator.NameConfig.conceptTypeAlias"]},{"name":"val concepts: List<ConceptData>","description":"org.modelix.metamodel.generator.LanguageData.concepts","location":"model-api-gen/org.modelix.metamodel.generator/-language-data/concepts.html","searchKeys":["concepts","val concepts: List<ConceptData>","org.modelix.metamodel.generator.LanguageData.concepts"]},{"name":"val data: IConceptFeatureData","description":"org.modelix.metamodel.generator.FeatureInConcept.data","location":"model-api-gen/org.modelix.metamodel.generator/-feature-in-concept/data.html","searchKeys":["data","val data: IConceptFeatureData","org.modelix.metamodel.generator.FeatureInConcept.data"]},{"name":"val entries: EnumEntries<PropertyType>","description":"org.modelix.metamodel.generator.PropertyType.entries","location":"model-api-gen/org.modelix.metamodel.generator/-property-type/entries.html","searchKeys":["entries","val entries: EnumEntries<PropertyType>","org.modelix.metamodel.generator.PropertyType.entries"]},{"name":"val extends: List<String>","description":"org.modelix.metamodel.generator.ConceptData.extends","location":"model-api-gen/org.modelix.metamodel.generator/-concept-data/extends.html","searchKeys":["extends","val extends: List<String>","org.modelix.metamodel.generator.ConceptData.extends"]},{"name":"val fqName: String","description":"org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.fqName","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-concept-in-language/fq-name.html","searchKeys":["fqName","val fqName: String","org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.fqName"]},{"name":"val language: LanguageData","description":"org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.language","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-concept-in-language/language.html","searchKeys":["language","val language: LanguageData","org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.language"]},{"name":"val language: LanguageData","description":"org.modelix.metamodel.generator.LanguageSet.LanguageInSet.language","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-language-in-set/language.html","searchKeys":["language","val language: LanguageData","org.modelix.metamodel.generator.LanguageSet.LanguageInSet.language"]},{"name":"val languageBuilder: LanguageBuilder","description":"org.modelix.metamodel.generator.ConceptBuilder.languageBuilder","location":"model-api-gen/org.modelix.metamodel.generator/-concept-builder/language-builder.html","searchKeys":["languageBuilder","val languageBuilder: LanguageBuilder","org.modelix.metamodel.generator.ConceptBuilder.languageBuilder"]},{"name":"val languageClass: ConfigurableName","description":"org.modelix.metamodel.generator.NameConfig.languageClass","location":"model-api-gen/org.modelix.metamodel.generator/-name-config/language-class.html","searchKeys":["languageClass","val languageClass: ConfigurableName","org.modelix.metamodel.generator.NameConfig.languageClass"]},{"name":"val languageName: String","description":"org.modelix.metamodel.generator.ConceptRef.languageName","location":"model-api-gen/org.modelix.metamodel.generator/-concept-ref/language-name.html","searchKeys":["languageName","val languageName: String","org.modelix.metamodel.generator.ConceptRef.languageName"]},{"name":"val languageSet: LanguageSet","description":"org.modelix.metamodel.generator.ConceptsFilter.languageSet","location":"model-api-gen/org.modelix.metamodel.generator/-concepts-filter/language-set.html","searchKeys":["languageSet","val languageSet: LanguageSet","org.modelix.metamodel.generator.ConceptsFilter.languageSet"]},{"name":"val modelqlOutputDir: Path? = null","description":"org.modelix.metamodel.generator.MetaModelGenerator.modelqlOutputDir","location":"model-api-gen/org.modelix.metamodel.generator/-meta-model-generator/modelql-output-dir.html","searchKeys":["modelqlOutputDir","val modelqlOutputDir: Path? = null","org.modelix.metamodel.generator.MetaModelGenerator.modelqlOutputDir"]},{"name":"val multiple: Boolean = false","description":"org.modelix.metamodel.generator.ChildLinkData.multiple","location":"model-api-gen/org.modelix.metamodel.generator/-child-link-data/multiple.html","searchKeys":["multiple","val multiple: Boolean = false","org.modelix.metamodel.generator.ChildLinkData.multiple"]},{"name":"val name: String","description":"org.modelix.metamodel.generator.ConceptData.name","location":"model-api-gen/org.modelix.metamodel.generator/-concept-data/name.html","searchKeys":["name","val name: String","org.modelix.metamodel.generator.ConceptData.name"]},{"name":"val name: String","description":"org.modelix.metamodel.generator.LanguageBuilder.name","location":"model-api-gen/org.modelix.metamodel.generator/-language-builder/name.html","searchKeys":["name","val name: String","org.modelix.metamodel.generator.LanguageBuilder.name"]},{"name":"val name: String","description":"org.modelix.metamodel.generator.LanguageData.name","location":"model-api-gen/org.modelix.metamodel.generator/-language-data/name.html","searchKeys":["name","val name: String","org.modelix.metamodel.generator.LanguageData.name"]},{"name":"val name: String","description":"org.modelix.metamodel.generator.LanguageSet.LanguageInSet.name","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-language-in-set/name.html","searchKeys":["name","val name: String","org.modelix.metamodel.generator.LanguageSet.LanguageInSet.name"]},{"name":"val nameConfig: NameConfig","description":"org.modelix.metamodel.generator.MetaModelGenerator.nameConfig","location":"model-api-gen/org.modelix.metamodel.generator/-meta-model-generator/name-config.html","searchKeys":["nameConfig","val nameConfig: NameConfig","org.modelix.metamodel.generator.MetaModelGenerator.nameConfig"]},{"name":"val nameConfig: NameConfig","description":"org.modelix.metamodel.generator.TypescriptMMGenerator.nameConfig","location":"model-api-gen/org.modelix.metamodel.generator/-typescript-m-m-generator/name-config.html","searchKeys":["nameConfig","val nameConfig: NameConfig","org.modelix.metamodel.generator.TypescriptMMGenerator.nameConfig"]},{"name":"val optional: Boolean = true","description":"org.modelix.metamodel.generator.ChildLinkData.optional","location":"model-api-gen/org.modelix.metamodel.generator/-child-link-data/optional.html","searchKeys":["optional","val optional: Boolean = true","org.modelix.metamodel.generator.ChildLinkData.optional"]},{"name":"val optional: Boolean = true","description":"org.modelix.metamodel.generator.ReferenceLinkData.optional","location":"model-api-gen/org.modelix.metamodel.generator/-reference-link-data/optional.html","searchKeys":["optional","val optional: Boolean = true","org.modelix.metamodel.generator.ReferenceLinkData.optional"]},{"name":"val originalName: String","description":"org.modelix.metamodel.generator.FeatureInConcept.originalName","location":"model-api-gen/org.modelix.metamodel.generator/-feature-in-concept/original-name.html","searchKeys":["originalName","val originalName: String","org.modelix.metamodel.generator.FeatureInConcept.originalName"]},{"name":"val outputDir: Path","description":"org.modelix.metamodel.generator.MetaModelGenerator.outputDir","location":"model-api-gen/org.modelix.metamodel.generator/-meta-model-generator/output-dir.html","searchKeys":["outputDir","val outputDir: Path","org.modelix.metamodel.generator.MetaModelGenerator.outputDir"]},{"name":"val outputDir: Path","description":"org.modelix.metamodel.generator.TypescriptMMGenerator.outputDir","location":"model-api-gen/org.modelix.metamodel.generator/-typescript-m-m-generator/output-dir.html","searchKeys":["outputDir","val outputDir: Path","org.modelix.metamodel.generator.TypescriptMMGenerator.outputDir"]},{"name":"val properties: List<PropertyData>","description":"org.modelix.metamodel.generator.ConceptData.properties","location":"model-api-gen/org.modelix.metamodel.generator/-concept-data/properties.html","searchKeys":["properties","val properties: List<PropertyData>","org.modelix.metamodel.generator.ConceptData.properties"]},{"name":"val references: List<ReferenceLinkData>","description":"org.modelix.metamodel.generator.ConceptData.references","location":"model-api-gen/org.modelix.metamodel.generator/-concept-data/references.html","searchKeys":["references","val references: List<ReferenceLinkData>","org.modelix.metamodel.generator.ConceptData.references"]},{"name":"val reservedPropertyNames: Set<String>","description":"org.modelix.metamodel.generator.reservedPropertyNames","location":"model-api-gen/org.modelix.metamodel.generator/reserved-property-names.html","searchKeys":["reservedPropertyNames","val reservedPropertyNames: Set<String>","org.modelix.metamodel.generator.reservedPropertyNames"]},{"name":"val simpleName: String","description":"org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.simpleName","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-concept-in-language/simple-name.html","searchKeys":["simpleName","val simpleName: String","org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.simpleName"]},{"name":"val type: PropertyType","description":"org.modelix.metamodel.generator.PropertyData.type","location":"model-api-gen/org.modelix.metamodel.generator/-property-data/type.html","searchKeys":["type","val type: PropertyType","org.modelix.metamodel.generator.PropertyData.type"]},{"name":"val type: String","description":"org.modelix.metamodel.generator.ChildLinkData.type","location":"model-api-gen/org.modelix.metamodel.generator/-child-link-data/type.html","searchKeys":["type","val type: String","org.modelix.metamodel.generator.ChildLinkData.type"]},{"name":"val type: String","description":"org.modelix.metamodel.generator.ReferenceLinkData.type","location":"model-api-gen/org.modelix.metamodel.generator/-reference-link-data/type.html","searchKeys":["type","val type: String","org.modelix.metamodel.generator.ReferenceLinkData.type"]},{"name":"val typedConcept: ConfigurableName","description":"org.modelix.metamodel.generator.NameConfig.typedConcept","location":"model-api-gen/org.modelix.metamodel.generator/-name-config/typed-concept.html","searchKeys":["typedConcept","val typedConcept: ConfigurableName","org.modelix.metamodel.generator.NameConfig.typedConcept"]},{"name":"val typedConceptImpl: ConfigurableName","description":"org.modelix.metamodel.generator.NameConfig.typedConceptImpl","location":"model-api-gen/org.modelix.metamodel.generator/-name-config/typed-concept-impl.html","searchKeys":["typedConceptImpl","val typedConceptImpl: ConfigurableName","org.modelix.metamodel.generator.NameConfig.typedConceptImpl"]},{"name":"val typedNode: ConfigurableName","description":"org.modelix.metamodel.generator.NameConfig.typedNode","location":"model-api-gen/org.modelix.metamodel.generator/-name-config/typed-node.html","searchKeys":["typedNode","val typedNode: ConfigurableName","org.modelix.metamodel.generator.NameConfig.typedNode"]},{"name":"val typedNodeImpl: ConfigurableName","description":"org.modelix.metamodel.generator.NameConfig.typedNodeImpl","location":"model-api-gen/org.modelix.metamodel.generator/-name-config/typed-node-impl.html","searchKeys":["typedNodeImpl","val typedNodeImpl: ConfigurableName","org.modelix.metamodel.generator.NameConfig.typedNodeImpl"]},{"name":"val uid: String","description":"org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.uid","location":"model-api-gen/org.modelix.metamodel.generator/-language-set/-concept-in-language/uid.html","searchKeys":["uid","val uid: String","org.modelix.metamodel.generator.LanguageSet.ConceptInLanguage.uid"]},{"name":"val uid: String? = null","description":"org.modelix.metamodel.generator.ConceptData.uid","location":"model-api-gen/org.modelix.metamodel.generator/-concept-data/uid.html","searchKeys":["uid","val uid: String? = null","org.modelix.metamodel.generator.ConceptData.uid"]},{"name":"val uid: String? = null","description":"org.modelix.metamodel.generator.LanguageData.uid","location":"model-api-gen/org.modelix.metamodel.generator/-language-data/uid.html","searchKeys":["uid","val uid: String? = null","org.modelix.metamodel.generator.LanguageData.uid"]},{"name":"val untypedConcept: ConfigurableName","description":"org.modelix.metamodel.generator.NameConfig.untypedConcept","location":"model-api-gen/org.modelix.metamodel.generator/-name-config/untyped-concept.html","searchKeys":["untypedConcept","val untypedConcept: ConfigurableName","org.modelix.metamodel.generator.NameConfig.untypedConcept"]},{"name":"val validName: String","description":"org.modelix.metamodel.generator.FeatureInConcept.validName","location":"model-api-gen/org.modelix.metamodel.generator/-feature-in-concept/valid-name.html","searchKeys":["validName","val validName: String","org.modelix.metamodel.generator.FeatureInConcept.validName"]},{"name":"var alwaysUseNonNullableProperties: Boolean","description":"org.modelix.metamodel.generator.MetaModelGenerator.alwaysUseNonNullableProperties","location":"model-api-gen/org.modelix.metamodel.generator/-meta-model-generator/always-use-non-nullable-properties.html","searchKeys":["alwaysUseNonNullableProperties","var alwaysUseNonNullableProperties: Boolean","org.modelix.metamodel.generator.MetaModelGenerator.alwaysUseNonNullableProperties"]},{"name":"var baseNameConversion: (String) -> String","description":"org.modelix.metamodel.generator.ConfigurableName.baseNameConversion","location":"model-api-gen/org.modelix.metamodel.generator/-configurable-name/base-name-conversion.html","searchKeys":["baseNameConversion","var baseNameConversion: (String) -> String","org.modelix.metamodel.generator.ConfigurableName.baseNameConversion"]},{"name":"var prefix: String","description":"org.modelix.metamodel.generator.ConfigurableName.prefix","location":"model-api-gen/org.modelix.metamodel.generator/-configurable-name/prefix.html","searchKeys":["prefix","var prefix: String","org.modelix.metamodel.generator.ConfigurableName.prefix"]},{"name":"var suffix: String","description":"org.modelix.metamodel.generator.ConfigurableName.suffix","location":"model-api-gen/org.modelix.metamodel.generator/-configurable-name/suffix.html","searchKeys":["suffix","var suffix: String","org.modelix.metamodel.generator.ConfigurableName.suffix"]},{"name":"abstract class GenerateAntScriptForMpsMetaModelExport constructor(of: ObjectFactory) : DefaultTask","description":"org.modelix.metamodel.gradle.GenerateAntScriptForMpsMetaModelExport","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-generate-ant-script-for-mps-meta-model-export/index.html","searchKeys":["GenerateAntScriptForMpsMetaModelExport","abstract class GenerateAntScriptForMpsMetaModelExport constructor(of: ObjectFactory) : DefaultTask","org.modelix.metamodel.gradle.GenerateAntScriptForMpsMetaModelExport"]},{"name":"abstract class GenerateMetaModelSources constructor(of: ObjectFactory) : DefaultTask","description":"org.modelix.metamodel.gradle.GenerateMetaModelSources","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-generate-meta-model-sources/index.html","searchKeys":["GenerateMetaModelSources","abstract class GenerateMetaModelSources constructor(of: ObjectFactory) : DefaultTask","org.modelix.metamodel.gradle.GenerateMetaModelSources"]},{"name":"class MetaModelGradlePlugin : Plugin<Project> ","description":"org.modelix.metamodel.gradle.MetaModelGradlePlugin","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-plugin/index.html","searchKeys":["MetaModelGradlePlugin","class MetaModelGradlePlugin : Plugin<Project> ","org.modelix.metamodel.gradle.MetaModelGradlePlugin"]},{"name":"constructor()","description":"org.modelix.metamodel.gradle.MetaModelGradlePlugin.MetaModelGradlePlugin","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-plugin/-meta-model-gradle-plugin.html","searchKeys":["MetaModelGradlePlugin","constructor()","org.modelix.metamodel.gradle.MetaModelGradlePlugin.MetaModelGradlePlugin"]},{"name":"constructor()","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.MetaModelGradleSettings","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/-meta-model-gradle-settings.html","searchKeys":["MetaModelGradleSettings","constructor()","org.modelix.metamodel.gradle.MetaModelGradleSettings.MetaModelGradleSettings"]},{"name":"constructor(of: ObjectFactory)","description":"org.modelix.metamodel.gradle.GenerateAntScriptForMpsMetaModelExport.GenerateAntScriptForMpsMetaModelExport","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-generate-ant-script-for-mps-meta-model-export/-generate-ant-script-for-mps-meta-model-export.html","searchKeys":["GenerateAntScriptForMpsMetaModelExport","constructor(of: ObjectFactory)","org.modelix.metamodel.gradle.GenerateAntScriptForMpsMetaModelExport.GenerateAntScriptForMpsMetaModelExport"]},{"name":"constructor(of: ObjectFactory)","description":"org.modelix.metamodel.gradle.GenerateMetaModelSources.GenerateMetaModelSources","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-generate-meta-model-sources/-generate-meta-model-sources.html","searchKeys":["GenerateMetaModelSources","constructor(of: ObjectFactory)","org.modelix.metamodel.gradle.GenerateMetaModelSources.GenerateMetaModelSources"]},{"name":"fun dependsOn(vararg dependency: Any)","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.dependsOn","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/depends-on.html","searchKeys":["dependsOn","fun dependsOn(vararg dependency: Any)","org.modelix.metamodel.gradle.MetaModelGradleSettings.dependsOn"]},{"name":"fun exportModules(namePrefix: String)","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.exportModules","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/export-modules.html","searchKeys":["exportModules","fun exportModules(namePrefix: String)","org.modelix.metamodel.gradle.MetaModelGradleSettings.exportModules"]},{"name":"fun generate()","description":"org.modelix.metamodel.gradle.GenerateAntScriptForMpsMetaModelExport.generate","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-generate-ant-script-for-mps-meta-model-export/generate.html","searchKeys":["generate","fun generate()","org.modelix.metamodel.gradle.GenerateAntScriptForMpsMetaModelExport.generate"]},{"name":"fun generate()","description":"org.modelix.metamodel.gradle.GenerateMetaModelSources.generate","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-generate-meta-model-sources/generate.html","searchKeys":["generate","fun generate()","org.modelix.metamodel.gradle.GenerateMetaModelSources.generate"]},{"name":"fun includeConcept(fqName: String)","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.includeConcept","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/include-concept.html","searchKeys":["includeConcept","fun includeConcept(fqName: String)","org.modelix.metamodel.gradle.MetaModelGradleSettings.includeConcept"]},{"name":"fun includeLanguage(fqName: String)","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.includeLanguage","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/include-language.html","searchKeys":["includeLanguage","fun includeLanguage(fqName: String)","org.modelix.metamodel.gradle.MetaModelGradleSettings.includeLanguage"]},{"name":"fun includeNamespace(languagePrefix: String)","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.includeNamespace","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/include-namespace.html","searchKeys":["includeNamespace","fun includeNamespace(languagePrefix: String)","org.modelix.metamodel.gradle.MetaModelGradleSettings.includeNamespace"]},{"name":"fun javaExecutable(file: File)","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.javaExecutable","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/java-executable.html","searchKeys":["javaExecutable","fun javaExecutable(file: File)","org.modelix.metamodel.gradle.MetaModelGradleSettings.javaExecutable"]},{"name":"fun javaExecutable(provider: () -> File)","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.javaExecutable","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/java-executable.html","searchKeys":["javaExecutable","fun javaExecutable(provider: () -> File)","org.modelix.metamodel.gradle.MetaModelGradleSettings.javaExecutable"]},{"name":"fun modulesFrom(dir: File)","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.modulesFrom","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/modules-from.html","searchKeys":["modulesFrom","fun modulesFrom(dir: File)","org.modelix.metamodel.gradle.MetaModelGradleSettings.modulesFrom"]},{"name":"fun names(action: Action<NameConfig>)","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.names","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/names.html","searchKeys":["names","fun names(action: Action<NameConfig>)","org.modelix.metamodel.gradle.MetaModelGradleSettings.names"]},{"name":"open class MetaModelGradleSettings","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/index.html","searchKeys":["MetaModelGradleSettings","open class MetaModelGradleSettings","org.modelix.metamodel.gradle.MetaModelGradleSettings"]},{"name":"open override fun apply(project: Project)","description":"org.modelix.metamodel.gradle.MetaModelGradlePlugin.apply","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-plugin/apply.html","searchKeys":["apply","open override fun apply(project: Project)","org.modelix.metamodel.gradle.MetaModelGradlePlugin.apply"]},{"name":"val antScriptFile: RegularFileProperty","description":"org.modelix.metamodel.gradle.GenerateAntScriptForMpsMetaModelExport.antScriptFile","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-generate-ant-script-for-mps-meta-model-export/ant-script-file.html","searchKeys":["antScriptFile","val antScriptFile: RegularFileProperty","org.modelix.metamodel.gradle.GenerateAntScriptForMpsMetaModelExport.antScriptFile"]},{"name":"val conceptPropertiesInterfaceName: Property<String>","description":"org.modelix.metamodel.gradle.GenerateMetaModelSources.conceptPropertiesInterfaceName","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-generate-meta-model-sources/concept-properties-interface-name.html","searchKeys":["conceptPropertiesInterfaceName","val conceptPropertiesInterfaceName: Property<String>","org.modelix.metamodel.gradle.GenerateMetaModelSources.conceptPropertiesInterfaceName"]},{"name":"val exportModulesFilter: Property<String>","description":"org.modelix.metamodel.gradle.GenerateAntScriptForMpsMetaModelExport.exportModulesFilter","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-generate-ant-script-for-mps-meta-model-export/export-modules-filter.html","searchKeys":["exportModulesFilter","val exportModulesFilter: Property<String>","org.modelix.metamodel.gradle.GenerateAntScriptForMpsMetaModelExport.exportModulesFilter"]},{"name":"val exportedLanguagesDir: DirectoryProperty","description":"org.modelix.metamodel.gradle.GenerateMetaModelSources.exportedLanguagesDir","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-generate-meta-model-sources/exported-languages-dir.html","searchKeys":["exportedLanguagesDir","val exportedLanguagesDir: DirectoryProperty","org.modelix.metamodel.gradle.GenerateMetaModelSources.exportedLanguagesDir"]},{"name":"val exporterDir: Property<String>","description":"org.modelix.metamodel.gradle.GenerateAntScriptForMpsMetaModelExport.exporterDir","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-generate-ant-script-for-mps-meta-model-export/exporter-dir.html","searchKeys":["exporterDir","val exporterDir: Property<String>","org.modelix.metamodel.gradle.GenerateAntScriptForMpsMetaModelExport.exporterDir"]},{"name":"val heapSize: Property<String>","description":"org.modelix.metamodel.gradle.GenerateAntScriptForMpsMetaModelExport.heapSize","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-generate-ant-script-for-mps-meta-model-export/heap-size.html","searchKeys":["heapSize","val heapSize: Property<String>","org.modelix.metamodel.gradle.GenerateAntScriptForMpsMetaModelExport.heapSize"]},{"name":"val includedConcepts: ListProperty<String>","description":"org.modelix.metamodel.gradle.GenerateMetaModelSources.includedConcepts","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-generate-meta-model-sources/included-concepts.html","searchKeys":["includedConcepts","val includedConcepts: ListProperty<String>","org.modelix.metamodel.gradle.GenerateMetaModelSources.includedConcepts"]},{"name":"val includedConcepts: MutableSet<String>","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.includedConcepts","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/included-concepts.html","searchKeys":["includedConcepts","val includedConcepts: MutableSet<String>","org.modelix.metamodel.gradle.MetaModelGradleSettings.includedConcepts"]},{"name":"val includedLanguageNamespaces: MutableSet<String>","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.includedLanguageNamespaces","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/included-language-namespaces.html","searchKeys":["includedLanguageNamespaces","val includedLanguageNamespaces: MutableSet<String>","org.modelix.metamodel.gradle.MetaModelGradleSettings.includedLanguageNamespaces"]},{"name":"val includedLanguages: ListProperty<String>","description":"org.modelix.metamodel.gradle.GenerateMetaModelSources.includedLanguages","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-generate-meta-model-sources/included-languages.html","searchKeys":["includedLanguages","val includedLanguages: ListProperty<String>","org.modelix.metamodel.gradle.GenerateMetaModelSources.includedLanguages"]},{"name":"val includedLanguages: MutableSet<String>","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.includedLanguages","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/included-languages.html","searchKeys":["includedLanguages","val includedLanguages: MutableSet<String>","org.modelix.metamodel.gradle.MetaModelGradleSettings.includedLanguages"]},{"name":"val includedModules: MutableSet<String>","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.includedModules","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/included-modules.html","searchKeys":["includedModules","val includedModules: MutableSet<String>","org.modelix.metamodel.gradle.MetaModelGradleSettings.includedModules"]},{"name":"val includedNamespaces: ListProperty<String>","description":"org.modelix.metamodel.gradle.GenerateMetaModelSources.includedNamespaces","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-generate-meta-model-sources/included-namespaces.html","searchKeys":["includedNamespaces","val includedNamespaces: ListProperty<String>","org.modelix.metamodel.gradle.GenerateMetaModelSources.includedNamespaces"]},{"name":"val kotlinOutputDir: DirectoryProperty","description":"org.modelix.metamodel.gradle.GenerateMetaModelSources.kotlinOutputDir","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-generate-meta-model-sources/kotlin-output-dir.html","searchKeys":["kotlinOutputDir","val kotlinOutputDir: DirectoryProperty","org.modelix.metamodel.gradle.GenerateMetaModelSources.kotlinOutputDir"]},{"name":"val modelqlKotlinOutputDir: DirectoryProperty","description":"org.modelix.metamodel.gradle.GenerateMetaModelSources.modelqlKotlinOutputDir","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-generate-meta-model-sources/modelql-kotlin-output-dir.html","searchKeys":["modelqlKotlinOutputDir","val modelqlKotlinOutputDir: DirectoryProperty","org.modelix.metamodel.gradle.GenerateMetaModelSources.modelqlKotlinOutputDir"]},{"name":"val moduleFolders: ArrayList<File>","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.moduleFolders","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/module-folders.html","searchKeys":["moduleFolders","val moduleFolders: ArrayList<File>","org.modelix.metamodel.gradle.MetaModelGradleSettings.moduleFolders"]},{"name":"val moduleFolders: ListProperty<String>","description":"org.modelix.metamodel.gradle.GenerateAntScriptForMpsMetaModelExport.moduleFolders","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-generate-ant-script-for-mps-meta-model-export/module-folders.html","searchKeys":["moduleFolders","val moduleFolders: ListProperty<String>","org.modelix.metamodel.gradle.GenerateAntScriptForMpsMetaModelExport.moduleFolders"]},{"name":"val mpsHome: Property<String>","description":"org.modelix.metamodel.gradle.GenerateAntScriptForMpsMetaModelExport.mpsHome","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-generate-ant-script-for-mps-meta-model-export/mps-home.html","searchKeys":["mpsHome","val mpsHome: Property<String>","org.modelix.metamodel.gradle.GenerateAntScriptForMpsMetaModelExport.mpsHome"]},{"name":"val nameConfig: Property<NameConfig>","description":"org.modelix.metamodel.gradle.GenerateMetaModelSources.nameConfig","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-generate-meta-model-sources/name-config.html","searchKeys":["nameConfig","val nameConfig: Property<NameConfig>","org.modelix.metamodel.gradle.GenerateMetaModelSources.nameConfig"]},{"name":"val registrationHelperName: Property<String>","description":"org.modelix.metamodel.gradle.GenerateMetaModelSources.registrationHelperName","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-generate-meta-model-sources/registration-helper-name.html","searchKeys":["registrationHelperName","val registrationHelperName: Property<String>","org.modelix.metamodel.gradle.GenerateMetaModelSources.registrationHelperName"]},{"name":"val taskDependencies: MutableList<Any>","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.taskDependencies","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/task-dependencies.html","searchKeys":["taskDependencies","val taskDependencies: MutableList<Any>","org.modelix.metamodel.gradle.MetaModelGradleSettings.taskDependencies"]},{"name":"val typescriptOutputDir: DirectoryProperty","description":"org.modelix.metamodel.gradle.GenerateMetaModelSources.typescriptOutputDir","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-generate-meta-model-sources/typescript-output-dir.html","searchKeys":["typescriptOutputDir","val typescriptOutputDir: DirectoryProperty","org.modelix.metamodel.gradle.GenerateMetaModelSources.typescriptOutputDir"]},{"name":"var conceptPropertiesInterfaceName: String?","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.conceptPropertiesInterfaceName","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/concept-properties-interface-name.html","searchKeys":["conceptPropertiesInterfaceName","var conceptPropertiesInterfaceName: String?","org.modelix.metamodel.gradle.MetaModelGradleSettings.conceptPropertiesInterfaceName"]},{"name":"var javaExecutable: File?","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.javaExecutable","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/java-executable.html","searchKeys":["javaExecutable","var javaExecutable: File?","org.modelix.metamodel.gradle.MetaModelGradleSettings.javaExecutable"]},{"name":"var jsonDir: File?","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.jsonDir","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/json-dir.html","searchKeys":["jsonDir","var jsonDir: File?","org.modelix.metamodel.gradle.MetaModelGradleSettings.jsonDir"]},{"name":"var kotlinDir: File?","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.kotlinDir","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/kotlin-dir.html","searchKeys":["kotlinDir","var kotlinDir: File?","org.modelix.metamodel.gradle.MetaModelGradleSettings.kotlinDir"]},{"name":"var kotlinProject: Project?","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.kotlinProject","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/kotlin-project.html","searchKeys":["kotlinProject","var kotlinProject: Project?","org.modelix.metamodel.gradle.MetaModelGradleSettings.kotlinProject"]},{"name":"var modelqlKotlinDir: File?","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.modelqlKotlinDir","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/modelql-kotlin-dir.html","searchKeys":["modelqlKotlinDir","var modelqlKotlinDir: File?","org.modelix.metamodel.gradle.MetaModelGradleSettings.modelqlKotlinDir"]},{"name":"var mpsHeapSize: String","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.mpsHeapSize","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/mps-heap-size.html","searchKeys":["mpsHeapSize","var mpsHeapSize: String","org.modelix.metamodel.gradle.MetaModelGradleSettings.mpsHeapSize"]},{"name":"var mpsHome: File?","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.mpsHome","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/mps-home.html","searchKeys":["mpsHome","var mpsHome: File?","org.modelix.metamodel.gradle.MetaModelGradleSettings.mpsHome"]},{"name":"var registrationHelperName: String?","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.registrationHelperName","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/registration-helper-name.html","searchKeys":["registrationHelperName","var registrationHelperName: String?","org.modelix.metamodel.gradle.MetaModelGradleSettings.registrationHelperName"]},{"name":"var typescriptDir: File?","description":"org.modelix.metamodel.gradle.MetaModelGradleSettings.typescriptDir","location":"model-api-gen-gradle/org.modelix.metamodel.gradle/-meta-model-gradle-settings/typescript-dir.html","searchKeys":["typescriptDir","var typescriptDir: File?","org.modelix.metamodel.gradle.MetaModelGradleSettings.typescriptDir"]},{"name":"abstract fun createQueryExecutor(): IQueryExecutor<INode>","description":"org.modelix.modelql.untyped.ISupportsModelQL.createQueryExecutor","location":"modelql-untyped/org.modelix.modelql.untyped/-i-supports-model-q-l/create-query-executor.html","searchKeys":["createQueryExecutor","abstract fun createQueryExecutor(): IQueryExecutor<INode>","org.modelix.modelql.untyped.ISupportsModelQL.createQueryExecutor"]},{"name":"class AddNewChildNodeStep(val role: String?, val index: Int, val concept: ConceptReference?) : SimpleMonoTransformingStep<INode, INode> ","description":"org.modelix.modelql.untyped.AddNewChildNodeStep","location":"modelql-untyped/org.modelix.modelql.untyped/-add-new-child-node-step/index.html","searchKeys":["AddNewChildNodeStep","class AddNewChildNodeStep(val role: String?, val index: Int, val concept: ConceptReference?) : SimpleMonoTransformingStep<INode, INode> ","org.modelix.modelql.untyped.AddNewChildNodeStep"]},{"name":"class AllChildrenStepDescriptor : StepDescriptor","description":"org.modelix.modelql.untyped.AllChildrenTraversalStep.AllChildrenStepDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-all-children-traversal-step/-all-children-step-descriptor/index.html","searchKeys":["AllChildrenStepDescriptor","class AllChildrenStepDescriptor : StepDescriptor","org.modelix.modelql.untyped.AllChildrenTraversalStep.AllChildrenStepDescriptor"]},{"name":"class AllChildrenTraversalStep : FluxTransformingStep<INode, INode> ","description":"org.modelix.modelql.untyped.AllChildrenTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-all-children-traversal-step/index.html","searchKeys":["AllChildrenTraversalStep","class AllChildrenTraversalStep : FluxTransformingStep<INode, INode> ","org.modelix.modelql.untyped.AllChildrenTraversalStep"]},{"name":"class AllReferencesTraversalStep : FluxTransformingStep<INode, INode> , IMonoStep<INode> ","description":"org.modelix.modelql.untyped.AllReferencesTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-all-references-traversal-step/index.html","searchKeys":["AllReferencesTraversalStep","class AllReferencesTraversalStep : FluxTransformingStep<INode, INode> , IMonoStep<INode> ","org.modelix.modelql.untyped.AllReferencesTraversalStep"]},{"name":"class ChildrenStepDescriptor(val role: String?) : StepDescriptor","description":"org.modelix.modelql.untyped.ChildrenTraversalStep.ChildrenStepDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-children-traversal-step/-children-step-descriptor/index.html","searchKeys":["ChildrenStepDescriptor","class ChildrenStepDescriptor(val role: String?) : StepDescriptor","org.modelix.modelql.untyped.ChildrenTraversalStep.ChildrenStepDescriptor"]},{"name":"class ChildrenTraversalStep(val role: String?) : FluxTransformingStep<INode, INode> , IFluxStep<INode> ","description":"org.modelix.modelql.untyped.ChildrenTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-children-traversal-step/index.html","searchKeys":["ChildrenTraversalStep","class ChildrenTraversalStep(val role: String?) : FluxTransformingStep<INode, INode> , IFluxStep<INode> ","org.modelix.modelql.untyped.ChildrenTraversalStep"]},{"name":"class ConceptReferenceTraversalStep : SimpleMonoTransformingStep<INode?, ConceptReference?> ","description":"org.modelix.modelql.untyped.ConceptReferenceTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-concept-reference-traversal-step/index.html","searchKeys":["ConceptReferenceTraversalStep","class ConceptReferenceTraversalStep : SimpleMonoTransformingStep<INode?, ConceptReference?> ","org.modelix.modelql.untyped.ConceptReferenceTraversalStep"]},{"name":"class ConceptReferenceUIDTraversalStep : SimpleMonoTransformingStep<ConceptReference, String> ","description":"org.modelix.modelql.untyped.ConceptReferenceUIDTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-concept-reference-u-i-d-traversal-step/index.html","searchKeys":["ConceptReferenceUIDTraversalStep","class ConceptReferenceUIDTraversalStep : SimpleMonoTransformingStep<ConceptReference, String> ","org.modelix.modelql.untyped.ConceptReferenceUIDTraversalStep"]},{"name":"class DescendantsTraversalStep(val includeSelf: Boolean) : FluxTransformingStep<INode, INode> , IFluxStep<INode> ","description":"org.modelix.modelql.untyped.DescendantsTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-descendants-traversal-step/index.html","searchKeys":["DescendantsTraversalStep","class DescendantsTraversalStep(val includeSelf: Boolean) : FluxTransformingStep<INode, INode> , IFluxStep<INode> ","org.modelix.modelql.untyped.DescendantsTraversalStep"]},{"name":"class Descriptor : StepDescriptor","description":"org.modelix.modelql.untyped.AllReferencesTraversalStep.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-all-references-traversal-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : StepDescriptor","org.modelix.modelql.untyped.AllReferencesTraversalStep.Descriptor"]},{"name":"class Descriptor : StepDescriptor","description":"org.modelix.modelql.untyped.ConceptReferenceTraversalStep.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-concept-reference-traversal-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : StepDescriptor","org.modelix.modelql.untyped.ConceptReferenceTraversalStep.Descriptor"]},{"name":"class Descriptor : StepDescriptor","description":"org.modelix.modelql.untyped.ConceptReferenceUIDTraversalStep.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-concept-reference-u-i-d-traversal-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : StepDescriptor","org.modelix.modelql.untyped.ConceptReferenceUIDTraversalStep.Descriptor"]},{"name":"class Descriptor : StepDescriptor","description":"org.modelix.modelql.untyped.NodeReferenceAsStringTraversalStep.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-as-string-traversal-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : StepDescriptor","org.modelix.modelql.untyped.NodeReferenceAsStringTraversalStep.Descriptor"]},{"name":"class Descriptor : StepDescriptor","description":"org.modelix.modelql.untyped.NodeReferenceTraversalStep.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-traversal-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : StepDescriptor","org.modelix.modelql.untyped.NodeReferenceTraversalStep.Descriptor"]},{"name":"class Descriptor : StepDescriptor","description":"org.modelix.modelql.untyped.ParentTraversalStep.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-parent-traversal-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : StepDescriptor","org.modelix.modelql.untyped.ParentTraversalStep.Descriptor"]},{"name":"class Descriptor : StepDescriptor","description":"org.modelix.modelql.untyped.RemoveNodeStep.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-remove-node-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : StepDescriptor","org.modelix.modelql.untyped.RemoveNodeStep.Descriptor"]},{"name":"class Descriptor : StepDescriptor","description":"org.modelix.modelql.untyped.ResolveNodeStep.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-resolve-node-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : StepDescriptor","org.modelix.modelql.untyped.ResolveNodeStep.Descriptor"]},{"name":"class Descriptor : StepDescriptor","description":"org.modelix.modelql.untyped.RoleInParentTraversalStep.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-role-in-parent-traversal-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : StepDescriptor","org.modelix.modelql.untyped.RoleInParentTraversalStep.Descriptor"]},{"name":"class Descriptor(val conceptUIDs: Set<String>) : StepDescriptor","description":"org.modelix.modelql.untyped.OfConceptStep.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-of-concept-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor(val conceptUIDs: Set<String>) : StepDescriptor","org.modelix.modelql.untyped.OfConceptStep.Descriptor"]},{"name":"class Descriptor(val element: INodeReference?) : StepDescriptor","description":"org.modelix.modelql.untyped.NodeReferenceSourceStep.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-source-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor(val element: INodeReference?) : StepDescriptor","org.modelix.modelql.untyped.NodeReferenceSourceStep.Descriptor"]},{"name":"class Descriptor(val role: String) : StepDescriptor","description":"org.modelix.modelql.untyped.ReferenceTraversalStep.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-reference-traversal-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor(val role: String) : StepDescriptor","org.modelix.modelql.untyped.ReferenceTraversalStep.Descriptor"]},{"name":"class Descriptor(val role: String) : StepDescriptor","description":"org.modelix.modelql.untyped.SetPropertyStep.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-set-property-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor(val role: String) : StepDescriptor","org.modelix.modelql.untyped.SetPropertyStep.Descriptor"]},{"name":"class Descriptor(val role: String) : StepDescriptor","description":"org.modelix.modelql.untyped.SetReferenceStep.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-set-reference-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor(val role: String) : StepDescriptor","org.modelix.modelql.untyped.SetReferenceStep.Descriptor"]},{"name":"class Descriptor(val role: String?, val index: Int) : StepDescriptor","description":"org.modelix.modelql.untyped.MoveNodeStep.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-move-node-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor(val role: String?, val index: Int) : StepDescriptor","org.modelix.modelql.untyped.MoveNodeStep.Descriptor"]},{"name":"class Descriptor(val role: String?, val index: Int, val concept: ConceptReference?) : StepDescriptor","description":"org.modelix.modelql.untyped.AddNewChildNodeStep.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-add-new-child-node-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor(val role: String?, val index: Int, val concept: ConceptReference?) : StepDescriptor","org.modelix.modelql.untyped.AddNewChildNodeStep.Descriptor"]},{"name":"class MoveNodeStep(val role: String?, val index: Int) : TransformingStepWithParameter<INode, INode, INode, INode> ","description":"org.modelix.modelql.untyped.MoveNodeStep","location":"modelql-untyped/org.modelix.modelql.untyped/-move-node-step/index.html","searchKeys":["MoveNodeStep","class MoveNodeStep(val role: String?, val index: Int) : TransformingStepWithParameter<INode, INode, INode, INode> ","org.modelix.modelql.untyped.MoveNodeStep"]},{"name":"class NodeReferenceAsStringTraversalStep : SimpleMonoTransformingStep<INodeReference, String> ","description":"org.modelix.modelql.untyped.NodeReferenceAsStringTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-as-string-traversal-step/index.html","searchKeys":["NodeReferenceAsStringTraversalStep","class NodeReferenceAsStringTraversalStep : SimpleMonoTransformingStep<INodeReference, String> ","org.modelix.modelql.untyped.NodeReferenceAsStringTraversalStep"]},{"name":"class NodeReferenceSourceStep(element: INodeReference?) : ConstantSourceStep<INodeReference?> ","description":"org.modelix.modelql.untyped.NodeReferenceSourceStep","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-source-step/index.html","searchKeys":["NodeReferenceSourceStep","class NodeReferenceSourceStep(element: INodeReference?) : ConstantSourceStep<INodeReference?> ","org.modelix.modelql.untyped.NodeReferenceSourceStep"]},{"name":"class NodeReferenceTraversalStep : SimpleMonoTransformingStep<INode, INodeReference> ","description":"org.modelix.modelql.untyped.NodeReferenceTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-traversal-step/index.html","searchKeys":["NodeReferenceTraversalStep","class NodeReferenceTraversalStep : SimpleMonoTransformingStep<INode, INodeReference> ","org.modelix.modelql.untyped.NodeReferenceTraversalStep"]},{"name":"class OfConceptStep(val conceptUIDs: Set<String>) : MonoTransformingStep<INode?, INode> ","description":"org.modelix.modelql.untyped.OfConceptStep","location":"modelql-untyped/org.modelix.modelql.untyped/-of-concept-step/index.html","searchKeys":["OfConceptStep","class OfConceptStep(val conceptUIDs: Set<String>) : MonoTransformingStep<INode?, INode> ","org.modelix.modelql.untyped.OfConceptStep"]},{"name":"class ParentTraversalStep : MonoTransformingStep<INode, INode> , IMonoStep<INode> ","description":"org.modelix.modelql.untyped.ParentTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-parent-traversal-step/index.html","searchKeys":["ParentTraversalStep","class ParentTraversalStep : MonoTransformingStep<INode, INode> , IMonoStep<INode> ","org.modelix.modelql.untyped.ParentTraversalStep"]},{"name":"class PropertyStepDescriptor(val role: String) : StepDescriptor","description":"org.modelix.modelql.untyped.PropertyTraversalStep.PropertyStepDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-property-traversal-step/-property-step-descriptor/index.html","searchKeys":["PropertyStepDescriptor","class PropertyStepDescriptor(val role: String) : StepDescriptor","org.modelix.modelql.untyped.PropertyTraversalStep.PropertyStepDescriptor"]},{"name":"class PropertyTraversalStep(val role: String) : SimpleMonoTransformingStep<INode, String?> , IMonoStep<String?> ","description":"org.modelix.modelql.untyped.PropertyTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-property-traversal-step/index.html","searchKeys":["PropertyTraversalStep","class PropertyTraversalStep(val role: String) : SimpleMonoTransformingStep<INode, String?> , IMonoStep<String?> ","org.modelix.modelql.untyped.PropertyTraversalStep"]},{"name":"class ReferenceTraversalStep(val role: String) : MonoTransformingStep<INode, INode> , IMonoStep<INode> ","description":"org.modelix.modelql.untyped.ReferenceTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-reference-traversal-step/index.html","searchKeys":["ReferenceTraversalStep","class ReferenceTraversalStep(val role: String) : MonoTransformingStep<INode, INode> , IMonoStep<INode> ","org.modelix.modelql.untyped.ReferenceTraversalStep"]},{"name":"class RemoveNodeStep : AggregationStep<INode, Int> ","description":"org.modelix.modelql.untyped.RemoveNodeStep","location":"modelql-untyped/org.modelix.modelql.untyped/-remove-node-step/index.html","searchKeys":["RemoveNodeStep","class RemoveNodeStep : AggregationStep<INode, Int> ","org.modelix.modelql.untyped.RemoveNodeStep"]},{"name":"class ResolveNodeStep : MonoTransformingStep<INodeReference, INode> ","description":"org.modelix.modelql.untyped.ResolveNodeStep","location":"modelql-untyped/org.modelix.modelql.untyped/-resolve-node-step/index.html","searchKeys":["ResolveNodeStep","class ResolveNodeStep : MonoTransformingStep<INodeReference, INode> ","org.modelix.modelql.untyped.ResolveNodeStep"]},{"name":"class RoleInParentTraversalStep : SimpleMonoTransformingStep<INode, String?> ","description":"org.modelix.modelql.untyped.RoleInParentTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-role-in-parent-traversal-step/index.html","searchKeys":["RoleInParentTraversalStep","class RoleInParentTraversalStep : SimpleMonoTransformingStep<INode, String?> ","org.modelix.modelql.untyped.RoleInParentTraversalStep"]},{"name":"class SetPropertyStep(val role: String) : TransformingStepWithParameter<INode, String?, Any?, INode> ","description":"org.modelix.modelql.untyped.SetPropertyStep","location":"modelql-untyped/org.modelix.modelql.untyped/-set-property-step/index.html","searchKeys":["SetPropertyStep","class SetPropertyStep(val role: String) : TransformingStepWithParameter<INode, String?, Any?, INode> ","org.modelix.modelql.untyped.SetPropertyStep"]},{"name":"class SetReferenceStep(val role: String) : TransformingStepWithParameter<INode, INode?, INode?, INode> ","description":"org.modelix.modelql.untyped.SetReferenceStep","location":"modelql-untyped/org.modelix.modelql.untyped/-set-reference-step/index.html","searchKeys":["SetReferenceStep","class SetReferenceStep(val role: String) : TransformingStepWithParameter<INode, INode?, INode?, INode> ","org.modelix.modelql.untyped.SetReferenceStep"]},{"name":"class WithSelfDescriptor : StepDescriptor","description":"org.modelix.modelql.untyped.DescendantsTraversalStep.WithSelfDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-descendants-traversal-step/-with-self-descriptor/index.html","searchKeys":["WithSelfDescriptor","class WithSelfDescriptor : StepDescriptor","org.modelix.modelql.untyped.DescendantsTraversalStep.WithSelfDescriptor"]},{"name":"class WithoutSelfDescriptor : StepDescriptor","description":"org.modelix.modelql.untyped.DescendantsTraversalStep.WithoutSelfDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-descendants-traversal-step/-without-self-descriptor/index.html","searchKeys":["WithoutSelfDescriptor","class WithoutSelfDescriptor : StepDescriptor","org.modelix.modelql.untyped.DescendantsTraversalStep.WithoutSelfDescriptor"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.AllChildrenTraversalStep.AllChildrenStepDescriptor.AllChildrenStepDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-all-children-traversal-step/-all-children-step-descriptor/-all-children-step-descriptor.html","searchKeys":["AllChildrenStepDescriptor","constructor()","org.modelix.modelql.untyped.AllChildrenTraversalStep.AllChildrenStepDescriptor.AllChildrenStepDescriptor"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.AllChildrenTraversalStep.AllChildrenTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-all-children-traversal-step/-all-children-traversal-step.html","searchKeys":["AllChildrenTraversalStep","constructor()","org.modelix.modelql.untyped.AllChildrenTraversalStep.AllChildrenTraversalStep"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.AllReferencesTraversalStep.AllReferencesTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-all-references-traversal-step/-all-references-traversal-step.html","searchKeys":["AllReferencesTraversalStep","constructor()","org.modelix.modelql.untyped.AllReferencesTraversalStep.AllReferencesTraversalStep"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.AllReferencesTraversalStep.Descriptor.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-all-references-traversal-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.untyped.AllReferencesTraversalStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.ConceptReferenceTraversalStep.ConceptReferenceTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-concept-reference-traversal-step/-concept-reference-traversal-step.html","searchKeys":["ConceptReferenceTraversalStep","constructor()","org.modelix.modelql.untyped.ConceptReferenceTraversalStep.ConceptReferenceTraversalStep"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.ConceptReferenceTraversalStep.Descriptor.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-concept-reference-traversal-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.untyped.ConceptReferenceTraversalStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.ConceptReferenceUIDTraversalStep.ConceptReferenceUIDTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-concept-reference-u-i-d-traversal-step/-concept-reference-u-i-d-traversal-step.html","searchKeys":["ConceptReferenceUIDTraversalStep","constructor()","org.modelix.modelql.untyped.ConceptReferenceUIDTraversalStep.ConceptReferenceUIDTraversalStep"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.ConceptReferenceUIDTraversalStep.Descriptor.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-concept-reference-u-i-d-traversal-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.untyped.ConceptReferenceUIDTraversalStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.DescendantsTraversalStep.WithSelfDescriptor.WithSelfDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-descendants-traversal-step/-with-self-descriptor/-with-self-descriptor.html","searchKeys":["WithSelfDescriptor","constructor()","org.modelix.modelql.untyped.DescendantsTraversalStep.WithSelfDescriptor.WithSelfDescriptor"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.DescendantsTraversalStep.WithoutSelfDescriptor.WithoutSelfDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-descendants-traversal-step/-without-self-descriptor/-without-self-descriptor.html","searchKeys":["WithoutSelfDescriptor","constructor()","org.modelix.modelql.untyped.DescendantsTraversalStep.WithoutSelfDescriptor.WithoutSelfDescriptor"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.NodeKSerializer.NodeKSerializer","location":"modelql-untyped/org.modelix.modelql.untyped/-node-k-serializer/-node-k-serializer.html","searchKeys":["NodeKSerializer","constructor()","org.modelix.modelql.untyped.NodeKSerializer.NodeKSerializer"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.NodeReferenceAsStringTraversalStep.Descriptor.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-as-string-traversal-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.untyped.NodeReferenceAsStringTraversalStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.NodeReferenceAsStringTraversalStep.NodeReferenceAsStringTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-as-string-traversal-step/-node-reference-as-string-traversal-step.html","searchKeys":["NodeReferenceAsStringTraversalStep","constructor()","org.modelix.modelql.untyped.NodeReferenceAsStringTraversalStep.NodeReferenceAsStringTraversalStep"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.NodeReferenceTraversalStep.Descriptor.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-traversal-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.untyped.NodeReferenceTraversalStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.NodeReferenceTraversalStep.NodeReferenceTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-traversal-step/-node-reference-traversal-step.html","searchKeys":["NodeReferenceTraversalStep","constructor()","org.modelix.modelql.untyped.NodeReferenceTraversalStep.NodeReferenceTraversalStep"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.ParentTraversalStep.Descriptor.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-parent-traversal-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.untyped.ParentTraversalStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.ParentTraversalStep.ParentTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-parent-traversal-step/-parent-traversal-step.html","searchKeys":["ParentTraversalStep","constructor()","org.modelix.modelql.untyped.ParentTraversalStep.ParentTraversalStep"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.RemoveNodeStep.Descriptor.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-remove-node-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.untyped.RemoveNodeStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.RemoveNodeStep.RemoveNodeStep","location":"modelql-untyped/org.modelix.modelql.untyped/-remove-node-step/-remove-node-step.html","searchKeys":["RemoveNodeStep","constructor()","org.modelix.modelql.untyped.RemoveNodeStep.RemoveNodeStep"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.ResolveNodeStep.Descriptor.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-resolve-node-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.untyped.ResolveNodeStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.ResolveNodeStep.ResolveNodeStep","location":"modelql-untyped/org.modelix.modelql.untyped/-resolve-node-step/-resolve-node-step.html","searchKeys":["ResolveNodeStep","constructor()","org.modelix.modelql.untyped.ResolveNodeStep.ResolveNodeStep"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.RoleInParentTraversalStep.Descriptor.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-role-in-parent-traversal-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.untyped.RoleInParentTraversalStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.untyped.RoleInParentTraversalStep.RoleInParentTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-role-in-parent-traversal-step/-role-in-parent-traversal-step.html","searchKeys":["RoleInParentTraversalStep","constructor()","org.modelix.modelql.untyped.RoleInParentTraversalStep.RoleInParentTraversalStep"]},{"name":"constructor(conceptUIDs: Set<String>)","description":"org.modelix.modelql.untyped.OfConceptStep.Descriptor.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-of-concept-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor(conceptUIDs: Set<String>)","org.modelix.modelql.untyped.OfConceptStep.Descriptor.Descriptor"]},{"name":"constructor(conceptUIDs: Set<String>)","description":"org.modelix.modelql.untyped.OfConceptStep.OfConceptStep","location":"modelql-untyped/org.modelix.modelql.untyped/-of-concept-step/-of-concept-step.html","searchKeys":["OfConceptStep","constructor(conceptUIDs: Set<String>)","org.modelix.modelql.untyped.OfConceptStep.OfConceptStep"]},{"name":"constructor(element: INodeReference?)","description":"org.modelix.modelql.untyped.NodeReferenceSourceStep.Descriptor.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-source-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor(element: INodeReference?)","org.modelix.modelql.untyped.NodeReferenceSourceStep.Descriptor.Descriptor"]},{"name":"constructor(element: INodeReference?)","description":"org.modelix.modelql.untyped.NodeReferenceSourceStep.NodeReferenceSourceStep","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-source-step/-node-reference-source-step.html","searchKeys":["NodeReferenceSourceStep","constructor(element: INodeReference?)","org.modelix.modelql.untyped.NodeReferenceSourceStep.NodeReferenceSourceStep"]},{"name":"constructor(includeSelf: Boolean)","description":"org.modelix.modelql.untyped.DescendantsTraversalStep.DescendantsTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-descendants-traversal-step/-descendants-traversal-step.html","searchKeys":["DescendantsTraversalStep","constructor(includeSelf: Boolean)","org.modelix.modelql.untyped.DescendantsTraversalStep.DescendantsTraversalStep"]},{"name":"constructor(role: String)","description":"org.modelix.modelql.untyped.PropertyTraversalStep.PropertyStepDescriptor.PropertyStepDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-property-traversal-step/-property-step-descriptor/-property-step-descriptor.html","searchKeys":["PropertyStepDescriptor","constructor(role: String)","org.modelix.modelql.untyped.PropertyTraversalStep.PropertyStepDescriptor.PropertyStepDescriptor"]},{"name":"constructor(role: String)","description":"org.modelix.modelql.untyped.PropertyTraversalStep.PropertyTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-property-traversal-step/-property-traversal-step.html","searchKeys":["PropertyTraversalStep","constructor(role: String)","org.modelix.modelql.untyped.PropertyTraversalStep.PropertyTraversalStep"]},{"name":"constructor(role: String)","description":"org.modelix.modelql.untyped.ReferenceTraversalStep.Descriptor.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-reference-traversal-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor(role: String)","org.modelix.modelql.untyped.ReferenceTraversalStep.Descriptor.Descriptor"]},{"name":"constructor(role: String)","description":"org.modelix.modelql.untyped.ReferenceTraversalStep.ReferenceTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-reference-traversal-step/-reference-traversal-step.html","searchKeys":["ReferenceTraversalStep","constructor(role: String)","org.modelix.modelql.untyped.ReferenceTraversalStep.ReferenceTraversalStep"]},{"name":"constructor(role: String)","description":"org.modelix.modelql.untyped.SetPropertyStep.Descriptor.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-set-property-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor(role: String)","org.modelix.modelql.untyped.SetPropertyStep.Descriptor.Descriptor"]},{"name":"constructor(role: String)","description":"org.modelix.modelql.untyped.SetPropertyStep.SetPropertyStep","location":"modelql-untyped/org.modelix.modelql.untyped/-set-property-step/-set-property-step.html","searchKeys":["SetPropertyStep","constructor(role: String)","org.modelix.modelql.untyped.SetPropertyStep.SetPropertyStep"]},{"name":"constructor(role: String)","description":"org.modelix.modelql.untyped.SetReferenceStep.Descriptor.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-set-reference-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor(role: String)","org.modelix.modelql.untyped.SetReferenceStep.Descriptor.Descriptor"]},{"name":"constructor(role: String)","description":"org.modelix.modelql.untyped.SetReferenceStep.SetReferenceStep","location":"modelql-untyped/org.modelix.modelql.untyped/-set-reference-step/-set-reference-step.html","searchKeys":["SetReferenceStep","constructor(role: String)","org.modelix.modelql.untyped.SetReferenceStep.SetReferenceStep"]},{"name":"constructor(role: String?)","description":"org.modelix.modelql.untyped.ChildrenTraversalStep.ChildrenStepDescriptor.ChildrenStepDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-children-traversal-step/-children-step-descriptor/-children-step-descriptor.html","searchKeys":["ChildrenStepDescriptor","constructor(role: String?)","org.modelix.modelql.untyped.ChildrenTraversalStep.ChildrenStepDescriptor.ChildrenStepDescriptor"]},{"name":"constructor(role: String?)","description":"org.modelix.modelql.untyped.ChildrenTraversalStep.ChildrenTraversalStep","location":"modelql-untyped/org.modelix.modelql.untyped/-children-traversal-step/-children-traversal-step.html","searchKeys":["ChildrenTraversalStep","constructor(role: String?)","org.modelix.modelql.untyped.ChildrenTraversalStep.ChildrenTraversalStep"]},{"name":"constructor(role: String?, index: Int)","description":"org.modelix.modelql.untyped.MoveNodeStep.Descriptor.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-move-node-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor(role: String?, index: Int)","org.modelix.modelql.untyped.MoveNodeStep.Descriptor.Descriptor"]},{"name":"constructor(role: String?, index: Int)","description":"org.modelix.modelql.untyped.MoveNodeStep.MoveNodeStep","location":"modelql-untyped/org.modelix.modelql.untyped/-move-node-step/-move-node-step.html","searchKeys":["MoveNodeStep","constructor(role: String?, index: Int)","org.modelix.modelql.untyped.MoveNodeStep.MoveNodeStep"]},{"name":"constructor(role: String?, index: Int, concept: ConceptReference?)","description":"org.modelix.modelql.untyped.AddNewChildNodeStep.AddNewChildNodeStep","location":"modelql-untyped/org.modelix.modelql.untyped/-add-new-child-node-step/-add-new-child-node-step.html","searchKeys":["AddNewChildNodeStep","constructor(role: String?, index: Int, concept: ConceptReference?)","org.modelix.modelql.untyped.AddNewChildNodeStep.AddNewChildNodeStep"]},{"name":"constructor(role: String?, index: Int, concept: ConceptReference?)","description":"org.modelix.modelql.untyped.AddNewChildNodeStep.Descriptor.Descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-add-new-child-node-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor(role: String?, index: Int, concept: ConceptReference?)","org.modelix.modelql.untyped.AddNewChildNodeStep.Descriptor.Descriptor"]},{"name":"fun <R> INode.buildFluxQuery(body: (IMonoStep<INode>) -> IFluxStep<R>): IFluxQuery<R>","description":"org.modelix.modelql.untyped.buildFluxQuery","location":"modelql-untyped/org.modelix.modelql.untyped/build-flux-query.html","searchKeys":["buildFluxQuery","fun <R> INode.buildFluxQuery(body: (IMonoStep<INode>) -> IFluxStep<R>): IFluxQuery<R>","org.modelix.modelql.untyped.buildFluxQuery"]},{"name":"fun <R> INode.buildQuery(body: (IMonoStep<INode>) -> IMonoStep<R>): IMonoQuery<R>","description":"org.modelix.modelql.untyped.buildQuery","location":"modelql-untyped/org.modelix.modelql.untyped/build-query.html","searchKeys":["buildQuery","fun <R> INode.buildQuery(body: (IMonoStep<INode>) -> IMonoStep<R>): IMonoQuery<R>","org.modelix.modelql.untyped.buildQuery"]},{"name":"fun IFluxStep<ConceptReference>.getUID(): IFluxStep<String>","description":"org.modelix.modelql.untyped.getUID","location":"modelql-untyped/org.modelix.modelql.untyped/get-u-i-d.html","searchKeys":["getUID","fun IFluxStep<ConceptReference>.getUID(): IFluxStep<String>","org.modelix.modelql.untyped.getUID"]},{"name":"fun IFluxStep<ConceptReference?>.getUID(): IFluxStep<String?>","description":"org.modelix.modelql.untyped.getUID","location":"modelql-untyped/org.modelix.modelql.untyped/get-u-i-d.html","searchKeys":["getUID","fun IFluxStep<ConceptReference?>.getUID(): IFluxStep<String?>","org.modelix.modelql.untyped.getUID"]},{"name":"fun IFluxStep<INode>.nodeReference(): IFluxStep<INodeReference>","description":"org.modelix.modelql.untyped.nodeReference","location":"modelql-untyped/org.modelix.modelql.untyped/node-reference.html","searchKeys":["nodeReference","fun IFluxStep<INode>.nodeReference(): IFluxStep<INodeReference>","org.modelix.modelql.untyped.nodeReference"]},{"name":"fun IFluxStep<INode>.nodeReferenceAsString(): IFluxStep<String>","description":"org.modelix.modelql.untyped.nodeReferenceAsString","location":"modelql-untyped/org.modelix.modelql.untyped/node-reference-as-string.html","searchKeys":["nodeReferenceAsString","fun IFluxStep<INode>.nodeReferenceAsString(): IFluxStep<String>","org.modelix.modelql.untyped.nodeReferenceAsString"]},{"name":"fun IFluxStep<INode>.parent(): IFluxStep<INode>","description":"org.modelix.modelql.untyped.parent","location":"modelql-untyped/org.modelix.modelql.untyped/parent.html","searchKeys":["parent","fun IFluxStep<INode>.parent(): IFluxStep<INode>","org.modelix.modelql.untyped.parent"]},{"name":"fun IFluxStep<INode>.property(role: String): IFluxStep<String?>","description":"org.modelix.modelql.untyped.property","location":"modelql-untyped/org.modelix.modelql.untyped/property.html","searchKeys":["property","fun IFluxStep<INode>.property(role: String): IFluxStep<String?>","org.modelix.modelql.untyped.property"]},{"name":"fun IFluxStep<INode>.reference(role: String): IFluxStep<INode>","description":"org.modelix.modelql.untyped.reference","location":"modelql-untyped/org.modelix.modelql.untyped/reference.html","searchKeys":["reference","fun IFluxStep<INode>.reference(role: String): IFluxStep<INode>","org.modelix.modelql.untyped.reference"]},{"name":"fun IFluxStep<INode>.referenceOrNull(role: String): IFluxStep<INode?>","description":"org.modelix.modelql.untyped.referenceOrNull","location":"modelql-untyped/org.modelix.modelql.untyped/reference-or-null.html","searchKeys":["referenceOrNull","fun IFluxStep<INode>.referenceOrNull(role: String): IFluxStep<INode?>","org.modelix.modelql.untyped.referenceOrNull"]},{"name":"fun IFluxStep<INode>.roleInParent(): IFluxStep<String?>","description":"org.modelix.modelql.untyped.roleInParent","location":"modelql-untyped/org.modelix.modelql.untyped/role-in-parent.html","searchKeys":["roleInParent","fun IFluxStep<INode>.roleInParent(): IFluxStep<String?>","org.modelix.modelql.untyped.roleInParent"]},{"name":"fun IFluxStep<INode?>.conceptReference(): IFluxStep<ConceptReference?>","description":"org.modelix.modelql.untyped.conceptReference","location":"modelql-untyped/org.modelix.modelql.untyped/concept-reference.html","searchKeys":["conceptReference","fun IFluxStep<INode?>.conceptReference(): IFluxStep<ConceptReference?>","org.modelix.modelql.untyped.conceptReference"]},{"name":"fun IFluxStep<INode?>.ofConcept(concept: IConcept): IFluxStep<INode>","description":"org.modelix.modelql.untyped.ofConcept","location":"modelql-untyped/org.modelix.modelql.untyped/of-concept.html","searchKeys":["ofConcept","fun IFluxStep<INode?>.ofConcept(concept: IConcept): IFluxStep<INode>","org.modelix.modelql.untyped.ofConcept"]},{"name":"fun IFluxStep<INodeReference>.resolve(): IFluxStep<INode>","description":"org.modelix.modelql.untyped.resolve","location":"modelql-untyped/org.modelix.modelql.untyped/resolve.html","searchKeys":["resolve","fun IFluxStep<INodeReference>.resolve(): IFluxStep<INode>","org.modelix.modelql.untyped.resolve"]},{"name":"fun IFluxStep<INodeReference>.serialize(): IFluxStep<String>","description":"org.modelix.modelql.untyped.serialize","location":"modelql-untyped/org.modelix.modelql.untyped/serialize.html","searchKeys":["serialize","fun IFluxStep<INodeReference>.serialize(): IFluxStep<String>","org.modelix.modelql.untyped.serialize"]},{"name":"fun IMonoStep<ConceptReference>.getUID(): IMonoStep<String>","description":"org.modelix.modelql.untyped.getUID","location":"modelql-untyped/org.modelix.modelql.untyped/get-u-i-d.html","searchKeys":["getUID","fun IMonoStep<ConceptReference>.getUID(): IMonoStep<String>","org.modelix.modelql.untyped.getUID"]},{"name":"fun IMonoStep<ConceptReference?>.getUID(): IMonoStep<String?>","description":"org.modelix.modelql.untyped.getUID","location":"modelql-untyped/org.modelix.modelql.untyped/get-u-i-d.html","searchKeys":["getUID","fun IMonoStep<ConceptReference?>.getUID(): IMonoStep<String?>","org.modelix.modelql.untyped.getUID"]},{"name":"fun IMonoStep<INode>.addNewChild(role: IChildLink): IMonoStep<INode>","description":"org.modelix.modelql.untyped.addNewChild","location":"modelql-untyped/org.modelix.modelql.untyped/add-new-child.html","searchKeys":["addNewChild","fun IMonoStep<INode>.addNewChild(role: IChildLink): IMonoStep<INode>","org.modelix.modelql.untyped.addNewChild"]},{"name":"fun IMonoStep<INode>.addNewChild(role: IChildLink, concept: ConceptReference?): IMonoStep<INode>","description":"org.modelix.modelql.untyped.addNewChild","location":"modelql-untyped/org.modelix.modelql.untyped/add-new-child.html","searchKeys":["addNewChild","fun IMonoStep<INode>.addNewChild(role: IChildLink, concept: ConceptReference?): IMonoStep<INode>","org.modelix.modelql.untyped.addNewChild"]},{"name":"fun IMonoStep<INode>.addNewChild(role: IChildLink, index: Int): IMonoStep<INode>","description":"org.modelix.modelql.untyped.addNewChild","location":"modelql-untyped/org.modelix.modelql.untyped/add-new-child.html","searchKeys":["addNewChild","fun IMonoStep<INode>.addNewChild(role: IChildLink, index: Int): IMonoStep<INode>","org.modelix.modelql.untyped.addNewChild"]},{"name":"fun IMonoStep<INode>.addNewChild(role: IChildLink, index: Int, concept: ConceptReference?): IMonoStep<INode>","description":"org.modelix.modelql.untyped.addNewChild","location":"modelql-untyped/org.modelix.modelql.untyped/add-new-child.html","searchKeys":["addNewChild","fun IMonoStep<INode>.addNewChild(role: IChildLink, index: Int, concept: ConceptReference?): IMonoStep<INode>","org.modelix.modelql.untyped.addNewChild"]},{"name":"fun IMonoStep<INode>.addNewChild(role: String): IMonoStep<INode>","description":"org.modelix.modelql.untyped.addNewChild","location":"modelql-untyped/org.modelix.modelql.untyped/add-new-child.html","searchKeys":["addNewChild","fun IMonoStep<INode>.addNewChild(role: String): IMonoStep<INode>","org.modelix.modelql.untyped.addNewChild"]},{"name":"fun IMonoStep<INode>.addNewChild(role: String, concept: ConceptReference?): IMonoStep<INode>","description":"org.modelix.modelql.untyped.addNewChild","location":"modelql-untyped/org.modelix.modelql.untyped/add-new-child.html","searchKeys":["addNewChild","fun IMonoStep<INode>.addNewChild(role: String, concept: ConceptReference?): IMonoStep<INode>","org.modelix.modelql.untyped.addNewChild"]},{"name":"fun IMonoStep<INode>.addNewChild(role: String, index: Int): IMonoStep<INode>","description":"org.modelix.modelql.untyped.addNewChild","location":"modelql-untyped/org.modelix.modelql.untyped/add-new-child.html","searchKeys":["addNewChild","fun IMonoStep<INode>.addNewChild(role: String, index: Int): IMonoStep<INode>","org.modelix.modelql.untyped.addNewChild"]},{"name":"fun IMonoStep<INode>.addNewChild(role: String, index: Int, concept: ConceptReference?): IMonoStep<INode>","description":"org.modelix.modelql.untyped.addNewChild","location":"modelql-untyped/org.modelix.modelql.untyped/add-new-child.html","searchKeys":["addNewChild","fun IMonoStep<INode>.addNewChild(role: String, index: Int, concept: ConceptReference?): IMonoStep<INode>","org.modelix.modelql.untyped.addNewChild"]},{"name":"fun IMonoStep<INode>.moveChild(link: IChildLink, index: Int = -1, child: IMonoStep<INode>): IMonoStep<INode>","description":"org.modelix.modelql.untyped.moveChild","location":"modelql-untyped/org.modelix.modelql.untyped/move-child.html","searchKeys":["moveChild","fun IMonoStep<INode>.moveChild(link: IChildLink, index: Int = -1, child: IMonoStep<INode>): IMonoStep<INode>","org.modelix.modelql.untyped.moveChild"]},{"name":"fun IMonoStep<INode>.moveChild(link: String?, index: Int = -1, child: IMonoStep<INode>): IMonoStep<INode>","description":"org.modelix.modelql.untyped.moveChild","location":"modelql-untyped/org.modelix.modelql.untyped/move-child.html","searchKeys":["moveChild","fun IMonoStep<INode>.moveChild(link: String?, index: Int = -1, child: IMonoStep<INode>): IMonoStep<INode>","org.modelix.modelql.untyped.moveChild"]},{"name":"fun IMonoStep<INode>.nodeReference(): IMonoStep<INodeReference>","description":"org.modelix.modelql.untyped.nodeReference","location":"modelql-untyped/org.modelix.modelql.untyped/node-reference.html","searchKeys":["nodeReference","fun IMonoStep<INode>.nodeReference(): IMonoStep<INodeReference>","org.modelix.modelql.untyped.nodeReference"]},{"name":"fun IMonoStep<INode>.nodeReferenceAsString(): IMonoStep<String>","description":"org.modelix.modelql.untyped.nodeReferenceAsString","location":"modelql-untyped/org.modelix.modelql.untyped/node-reference-as-string.html","searchKeys":["nodeReferenceAsString","fun IMonoStep<INode>.nodeReferenceAsString(): IMonoStep<String>","org.modelix.modelql.untyped.nodeReferenceAsString"]},{"name":"fun IMonoStep<INode>.parent(): IMonoStep<INode>","description":"org.modelix.modelql.untyped.parent","location":"modelql-untyped/org.modelix.modelql.untyped/parent.html","searchKeys":["parent","fun IMonoStep<INode>.parent(): IMonoStep<INode>","org.modelix.modelql.untyped.parent"]},{"name":"fun IMonoStep<INode>.property(role: String): IMonoStep<String?>","description":"org.modelix.modelql.untyped.property","location":"modelql-untyped/org.modelix.modelql.untyped/property.html","searchKeys":["property","fun IMonoStep<INode>.property(role: String): IMonoStep<String?>","org.modelix.modelql.untyped.property"]},{"name":"fun IMonoStep<INode>.reference(role: String): IMonoStep<INode>","description":"org.modelix.modelql.untyped.reference","location":"modelql-untyped/org.modelix.modelql.untyped/reference.html","searchKeys":["reference","fun IMonoStep<INode>.reference(role: String): IMonoStep<INode>","org.modelix.modelql.untyped.reference"]},{"name":"fun IMonoStep<INode>.referenceOrNull(role: String): IMonoStep<INode?>","description":"org.modelix.modelql.untyped.referenceOrNull","location":"modelql-untyped/org.modelix.modelql.untyped/reference-or-null.html","searchKeys":["referenceOrNull","fun IMonoStep<INode>.referenceOrNull(role: String): IMonoStep<INode?>","org.modelix.modelql.untyped.referenceOrNull"]},{"name":"fun IMonoStep<INode>.roleInParent(): IMonoStep<String?>","description":"org.modelix.modelql.untyped.roleInParent","location":"modelql-untyped/org.modelix.modelql.untyped/role-in-parent.html","searchKeys":["roleInParent","fun IMonoStep<INode>.roleInParent(): IMonoStep<String?>","org.modelix.modelql.untyped.roleInParent"]},{"name":"fun IMonoStep<INode>.setProperty(role: IProperty, value: IMonoStep<String?>): IMonoStep<INode>","description":"org.modelix.modelql.untyped.setProperty","location":"modelql-untyped/org.modelix.modelql.untyped/set-property.html","searchKeys":["setProperty","fun IMonoStep<INode>.setProperty(role: IProperty, value: IMonoStep<String?>): IMonoStep<INode>","org.modelix.modelql.untyped.setProperty"]},{"name":"fun IMonoStep<INode>.setProperty(role: IProperty, value: String?): IMonoStep<INode>","description":"org.modelix.modelql.untyped.setProperty","location":"modelql-untyped/org.modelix.modelql.untyped/set-property.html","searchKeys":["setProperty","fun IMonoStep<INode>.setProperty(role: IProperty, value: String?): IMonoStep<INode>","org.modelix.modelql.untyped.setProperty"]},{"name":"fun IMonoStep<INode>.setProperty(role: String, value: IMonoStep<String?>): IMonoStep<INode>","description":"org.modelix.modelql.untyped.setProperty","location":"modelql-untyped/org.modelix.modelql.untyped/set-property.html","searchKeys":["setProperty","fun IMonoStep<INode>.setProperty(role: String, value: IMonoStep<String?>): IMonoStep<INode>","org.modelix.modelql.untyped.setProperty"]},{"name":"fun IMonoStep<INode>.setProperty(role: String, value: String?): IMonoStep<INode>","description":"org.modelix.modelql.untyped.setProperty","location":"modelql-untyped/org.modelix.modelql.untyped/set-property.html","searchKeys":["setProperty","fun IMonoStep<INode>.setProperty(role: String, value: String?): IMonoStep<INode>","org.modelix.modelql.untyped.setProperty"]},{"name":"fun IMonoStep<INode>.setReference(role: IReferenceLink, target: IMonoStep<INode?>): IMonoStep<INode>","description":"org.modelix.modelql.untyped.setReference","location":"modelql-untyped/org.modelix.modelql.untyped/set-reference.html","searchKeys":["setReference","fun IMonoStep<INode>.setReference(role: IReferenceLink, target: IMonoStep<INode?>): IMonoStep<INode>","org.modelix.modelql.untyped.setReference"]},{"name":"fun IMonoStep<INode>.setReference(role: String, target: IMonoStep<INode?>): IMonoStep<INode>","description":"org.modelix.modelql.untyped.setReference","location":"modelql-untyped/org.modelix.modelql.untyped/set-reference.html","searchKeys":["setReference","fun IMonoStep<INode>.setReference(role: String, target: IMonoStep<INode?>): IMonoStep<INode>","org.modelix.modelql.untyped.setReference"]},{"name":"fun IMonoStep<INode?>.conceptReference(): IMonoStep<ConceptReference?>","description":"org.modelix.modelql.untyped.conceptReference","location":"modelql-untyped/org.modelix.modelql.untyped/concept-reference.html","searchKeys":["conceptReference","fun IMonoStep<INode?>.conceptReference(): IMonoStep<ConceptReference?>","org.modelix.modelql.untyped.conceptReference"]},{"name":"fun IMonoStep<INode?>.ofConcept(concept: IConcept): IMonoStep<INode>","description":"org.modelix.modelql.untyped.ofConcept","location":"modelql-untyped/org.modelix.modelql.untyped/of-concept.html","searchKeys":["ofConcept","fun IMonoStep<INode?>.ofConcept(concept: IConcept): IMonoStep<INode>","org.modelix.modelql.untyped.ofConcept"]},{"name":"fun IMonoStep<INodeReference>.resolve(): IMonoStep<INode>","description":"org.modelix.modelql.untyped.resolve","location":"modelql-untyped/org.modelix.modelql.untyped/resolve.html","searchKeys":["resolve","fun IMonoStep<INodeReference>.resolve(): IMonoStep<INode>","org.modelix.modelql.untyped.resolve"]},{"name":"fun IMonoStep<INodeReference>.serialize(): IMonoStep<String>","description":"org.modelix.modelql.untyped.serialize","location":"modelql-untyped/org.modelix.modelql.untyped/serialize.html","searchKeys":["serialize","fun IMonoStep<INodeReference>.serialize(): IMonoStep<String>","org.modelix.modelql.untyped.serialize"]},{"name":"fun INode.createQueryExecutor(): IQueryExecutor<INode>","description":"org.modelix.modelql.untyped.createQueryExecutor","location":"modelql-untyped/org.modelix.modelql.untyped/create-query-executor.html","searchKeys":["createQueryExecutor","fun INode.createQueryExecutor(): IQueryExecutor<INode>","org.modelix.modelql.untyped.createQueryExecutor"]},{"name":"fun INodeReference.asMono(): IMonoStep<INodeReference>","description":"org.modelix.modelql.untyped.asMono","location":"modelql-untyped/org.modelix.modelql.untyped/as-mono.html","searchKeys":["asMono","fun INodeReference.asMono(): IMonoStep<INodeReference>","org.modelix.modelql.untyped.asMono"]},{"name":"fun INodeReference?.asMono(): IMonoStep<INodeReference?>","description":"org.modelix.modelql.untyped.asMono","location":"modelql-untyped/org.modelix.modelql.untyped/as-mono.html","searchKeys":["asMono","fun INodeReference?.asMono(): IMonoStep<INodeReference?>","org.modelix.modelql.untyped.asMono"]},{"name":"fun IProducingStep<INode>.allChildren(): IFluxStep<INode>","description":"org.modelix.modelql.untyped.allChildren","location":"modelql-untyped/org.modelix.modelql.untyped/all-children.html","searchKeys":["allChildren","fun IProducingStep<INode>.allChildren(): IFluxStep<INode>","org.modelix.modelql.untyped.allChildren"]},{"name":"fun IProducingStep<INode>.allReferences(): IFluxStep<INode>","description":"org.modelix.modelql.untyped.allReferences","location":"modelql-untyped/org.modelix.modelql.untyped/all-references.html","searchKeys":["allReferences","fun IProducingStep<INode>.allReferences(): IFluxStep<INode>","org.modelix.modelql.untyped.allReferences"]},{"name":"fun IProducingStep<INode>.children(role: String?): IFluxStep<INode>","description":"org.modelix.modelql.untyped.children","location":"modelql-untyped/org.modelix.modelql.untyped/children.html","searchKeys":["children","fun IProducingStep<INode>.children(role: String?): IFluxStep<INode>","org.modelix.modelql.untyped.children"]},{"name":"fun IProducingStep<INode>.descendants(includeSelf: Boolean = false): IFluxStep<INode>","description":"org.modelix.modelql.untyped.descendants","location":"modelql-untyped/org.modelix.modelql.untyped/descendants.html","searchKeys":["descendants","fun IProducingStep<INode>.descendants(includeSelf: Boolean = false): IFluxStep<INode>","org.modelix.modelql.untyped.descendants"]},{"name":"fun IProducingStep<INode>.remove(): IMonoStep<Int>","description":"org.modelix.modelql.untyped.remove","location":"modelql-untyped/org.modelix.modelql.untyped/remove.html","searchKeys":["remove","fun IProducingStep<INode>.remove(): IMonoStep<Int>","org.modelix.modelql.untyped.remove"]},{"name":"interface ISupportsModelQL : INode","description":"org.modelix.modelql.untyped.ISupportsModelQL","location":"modelql-untyped/org.modelix.modelql.untyped/-i-supports-model-q-l/index.html","searchKeys":["ISupportsModelQL","interface ISupportsModelQL : INode","org.modelix.modelql.untyped.ISupportsModelQL"]},{"name":"object UntypedModelQL","description":"org.modelix.modelql.untyped.UntypedModelQL","location":"modelql-untyped/org.modelix.modelql.untyped/-untyped-model-q-l/index.html","searchKeys":["UntypedModelQL","object UntypedModelQL","org.modelix.modelql.untyped.UntypedModelQL"]},{"name":"open class NodeKSerializer : KSerializer<INode> ","description":"org.modelix.modelql.untyped.NodeKSerializer","location":"modelql-untyped/org.modelix.modelql.untyped/-node-k-serializer/index.html","searchKeys":["NodeKSerializer","open class NodeKSerializer : KSerializer<INode> ","org.modelix.modelql.untyped.NodeKSerializer"]},{"name":"open override fun canBeEmpty(): Boolean","description":"org.modelix.modelql.untyped.ParentTraversalStep.canBeEmpty","location":"modelql-untyped/org.modelix.modelql.untyped/-parent-traversal-step/can-be-empty.html","searchKeys":["canBeEmpty","open override fun canBeEmpty(): Boolean","org.modelix.modelql.untyped.ParentTraversalStep.canBeEmpty"]},{"name":"open override fun canBeEmpty(): Boolean","description":"org.modelix.modelql.untyped.PropertyTraversalStep.canBeEmpty","location":"modelql-untyped/org.modelix.modelql.untyped/-property-traversal-step/can-be-empty.html","searchKeys":["canBeEmpty","open override fun canBeEmpty(): Boolean","org.modelix.modelql.untyped.PropertyTraversalStep.canBeEmpty"]},{"name":"open override fun canBeEmpty(): Boolean","description":"org.modelix.modelql.untyped.ReferenceTraversalStep.canBeEmpty","location":"modelql-untyped/org.modelix.modelql.untyped/-reference-traversal-step/can-be-empty.html","searchKeys":["canBeEmpty","open override fun canBeEmpty(): Boolean","org.modelix.modelql.untyped.ReferenceTraversalStep.canBeEmpty"]},{"name":"open override fun canBeMultiple(): Boolean","description":"org.modelix.modelql.untyped.ParentTraversalStep.canBeMultiple","location":"modelql-untyped/org.modelix.modelql.untyped/-parent-traversal-step/can-be-multiple.html","searchKeys":["canBeMultiple","open override fun canBeMultiple(): Boolean","org.modelix.modelql.untyped.ParentTraversalStep.canBeMultiple"]},{"name":"open override fun canBeMultiple(): Boolean","description":"org.modelix.modelql.untyped.PropertyTraversalStep.canBeMultiple","location":"modelql-untyped/org.modelix.modelql.untyped/-property-traversal-step/can-be-multiple.html","searchKeys":["canBeMultiple","open override fun canBeMultiple(): Boolean","org.modelix.modelql.untyped.PropertyTraversalStep.canBeMultiple"]},{"name":"open override fun canBeMultiple(): Boolean","description":"org.modelix.modelql.untyped.ReferenceTraversalStep.canBeMultiple","location":"modelql-untyped/org.modelix.modelql.untyped/-reference-traversal-step/can-be-multiple.html","searchKeys":["canBeMultiple","open override fun canBeMultiple(): Boolean","org.modelix.modelql.untyped.ReferenceTraversalStep.canBeMultiple"]},{"name":"open override fun canEvaluateStatically(): Boolean","description":"org.modelix.modelql.untyped.NodeReferenceSourceStep.canEvaluateStatically","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-source-step/can-evaluate-statically.html","searchKeys":["canEvaluateStatically","open override fun canEvaluateStatically(): Boolean","org.modelix.modelql.untyped.NodeReferenceSourceStep.canEvaluateStatically"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): AllChildrenTraversalStep.AllChildrenStepDescriptor","description":"org.modelix.modelql.untyped.AllChildrenTraversalStep.createDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-all-children-traversal-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): AllChildrenTraversalStep.AllChildrenStepDescriptor","org.modelix.modelql.untyped.AllChildrenTraversalStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): AllReferencesTraversalStep.Descriptor","description":"org.modelix.modelql.untyped.AllReferencesTraversalStep.createDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-all-references-traversal-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): AllReferencesTraversalStep.Descriptor","org.modelix.modelql.untyped.AllReferencesTraversalStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): ChildrenTraversalStep.ChildrenStepDescriptor","description":"org.modelix.modelql.untyped.ChildrenTraversalStep.createDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-children-traversal-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): ChildrenTraversalStep.ChildrenStepDescriptor","org.modelix.modelql.untyped.ChildrenTraversalStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): ConceptReferenceTraversalStep.Descriptor","description":"org.modelix.modelql.untyped.ConceptReferenceTraversalStep.createDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-concept-reference-traversal-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): ConceptReferenceTraversalStep.Descriptor","org.modelix.modelql.untyped.ConceptReferenceTraversalStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): ConceptReferenceUIDTraversalStep.Descriptor","description":"org.modelix.modelql.untyped.ConceptReferenceUIDTraversalStep.createDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-concept-reference-u-i-d-traversal-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): ConceptReferenceUIDTraversalStep.Descriptor","org.modelix.modelql.untyped.ConceptReferenceUIDTraversalStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): NodeReferenceAsStringTraversalStep.Descriptor","description":"org.modelix.modelql.untyped.NodeReferenceAsStringTraversalStep.createDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-as-string-traversal-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): NodeReferenceAsStringTraversalStep.Descriptor","org.modelix.modelql.untyped.NodeReferenceAsStringTraversalStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): NodeReferenceSourceStep.Descriptor","description":"org.modelix.modelql.untyped.NodeReferenceSourceStep.createDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-source-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): NodeReferenceSourceStep.Descriptor","org.modelix.modelql.untyped.NodeReferenceSourceStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): NodeReferenceTraversalStep.Descriptor","description":"org.modelix.modelql.untyped.NodeReferenceTraversalStep.createDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-traversal-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): NodeReferenceTraversalStep.Descriptor","org.modelix.modelql.untyped.NodeReferenceTraversalStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): OfConceptStep.Descriptor","description":"org.modelix.modelql.untyped.OfConceptStep.createDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-of-concept-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): OfConceptStep.Descriptor","org.modelix.modelql.untyped.OfConceptStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): ParentTraversalStep.Descriptor","description":"org.modelix.modelql.untyped.ParentTraversalStep.createDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-parent-traversal-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): ParentTraversalStep.Descriptor","org.modelix.modelql.untyped.ParentTraversalStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): PropertyTraversalStep.PropertyStepDescriptor","description":"org.modelix.modelql.untyped.PropertyTraversalStep.createDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-property-traversal-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): PropertyTraversalStep.PropertyStepDescriptor","org.modelix.modelql.untyped.PropertyTraversalStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): ReferenceTraversalStep.Descriptor","description":"org.modelix.modelql.untyped.ReferenceTraversalStep.createDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-reference-traversal-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): ReferenceTraversalStep.Descriptor","org.modelix.modelql.untyped.ReferenceTraversalStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): ResolveNodeStep.Descriptor","description":"org.modelix.modelql.untyped.ResolveNodeStep.createDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-resolve-node-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): ResolveNodeStep.Descriptor","org.modelix.modelql.untyped.ResolveNodeStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): RoleInParentTraversalStep.Descriptor","description":"org.modelix.modelql.untyped.RoleInParentTraversalStep.createDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-role-in-parent-traversal-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): RoleInParentTraversalStep.Descriptor","org.modelix.modelql.untyped.RoleInParentTraversalStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.untyped.AddNewChildNodeStep.createDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-add-new-child-node-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.untyped.AddNewChildNodeStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.untyped.DescendantsTraversalStep.createDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-descendants-traversal-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.untyped.DescendantsTraversalStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.untyped.MoveNodeStep.createDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-move-node-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.untyped.MoveNodeStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.untyped.RemoveNodeStep.createDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-remove-node-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.untyped.RemoveNodeStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.untyped.SetPropertyStep.createDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-set-property-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.untyped.SetPropertyStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.untyped.SetReferenceStep.createDescriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-set-reference-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.untyped.SetReferenceStep.createDescriptor"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.untyped.AddNewChildNodeStep.Descriptor.createStep","location":"modelql-untyped/org.modelix.modelql.untyped/-add-new-child-node-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.untyped.AddNewChildNodeStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.untyped.AllChildrenTraversalStep.AllChildrenStepDescriptor.createStep","location":"modelql-untyped/org.modelix.modelql.untyped/-all-children-traversal-step/-all-children-step-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.untyped.AllChildrenTraversalStep.AllChildrenStepDescriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.untyped.AllReferencesTraversalStep.Descriptor.createStep","location":"modelql-untyped/org.modelix.modelql.untyped/-all-references-traversal-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.untyped.AllReferencesTraversalStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.untyped.ChildrenTraversalStep.ChildrenStepDescriptor.createStep","location":"modelql-untyped/org.modelix.modelql.untyped/-children-traversal-step/-children-step-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.untyped.ChildrenTraversalStep.ChildrenStepDescriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.untyped.ConceptReferenceTraversalStep.Descriptor.createStep","location":"modelql-untyped/org.modelix.modelql.untyped/-concept-reference-traversal-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.untyped.ConceptReferenceTraversalStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.untyped.ConceptReferenceUIDTraversalStep.Descriptor.createStep","location":"modelql-untyped/org.modelix.modelql.untyped/-concept-reference-u-i-d-traversal-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.untyped.ConceptReferenceUIDTraversalStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.untyped.DescendantsTraversalStep.WithSelfDescriptor.createStep","location":"modelql-untyped/org.modelix.modelql.untyped/-descendants-traversal-step/-with-self-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.untyped.DescendantsTraversalStep.WithSelfDescriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.untyped.DescendantsTraversalStep.WithoutSelfDescriptor.createStep","location":"modelql-untyped/org.modelix.modelql.untyped/-descendants-traversal-step/-without-self-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.untyped.DescendantsTraversalStep.WithoutSelfDescriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.untyped.MoveNodeStep.Descriptor.createStep","location":"modelql-untyped/org.modelix.modelql.untyped/-move-node-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.untyped.MoveNodeStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.untyped.NodeReferenceAsStringTraversalStep.Descriptor.createStep","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-as-string-traversal-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.untyped.NodeReferenceAsStringTraversalStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.untyped.NodeReferenceSourceStep.Descriptor.createStep","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-source-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.untyped.NodeReferenceSourceStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.untyped.NodeReferenceTraversalStep.Descriptor.createStep","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-traversal-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.untyped.NodeReferenceTraversalStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.untyped.OfConceptStep.Descriptor.createStep","location":"modelql-untyped/org.modelix.modelql.untyped/-of-concept-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.untyped.OfConceptStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.untyped.ParentTraversalStep.Descriptor.createStep","location":"modelql-untyped/org.modelix.modelql.untyped/-parent-traversal-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.untyped.ParentTraversalStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.untyped.PropertyTraversalStep.PropertyStepDescriptor.createStep","location":"modelql-untyped/org.modelix.modelql.untyped/-property-traversal-step/-property-step-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.untyped.PropertyTraversalStep.PropertyStepDescriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.untyped.ReferenceTraversalStep.Descriptor.createStep","location":"modelql-untyped/org.modelix.modelql.untyped/-reference-traversal-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.untyped.ReferenceTraversalStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.untyped.RemoveNodeStep.Descriptor.createStep","location":"modelql-untyped/org.modelix.modelql.untyped/-remove-node-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.untyped.RemoveNodeStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.untyped.ResolveNodeStep.Descriptor.createStep","location":"modelql-untyped/org.modelix.modelql.untyped/-resolve-node-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.untyped.ResolveNodeStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.untyped.RoleInParentTraversalStep.Descriptor.createStep","location":"modelql-untyped/org.modelix.modelql.untyped/-role-in-parent-traversal-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.untyped.RoleInParentTraversalStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.untyped.SetPropertyStep.Descriptor.createStep","location":"modelql-untyped/org.modelix.modelql.untyped/-set-property-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.untyped.SetPropertyStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.untyped.SetReferenceStep.Descriptor.createStep","location":"modelql-untyped/org.modelix.modelql.untyped/-set-reference-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.untyped.SetReferenceStep.Descriptor.createStep"]},{"name":"open override fun deserialize(decoder: Decoder): INode","description":"org.modelix.modelql.untyped.NodeKSerializer.deserialize","location":"modelql-untyped/org.modelix.modelql.untyped/-node-k-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): INode","org.modelix.modelql.untyped.NodeKSerializer.deserialize"]},{"name":"open override fun evaluateStatically(): INodeReference?","description":"org.modelix.modelql.untyped.NodeReferenceSourceStep.evaluateStatically","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-source-step/evaluate-statically.html","searchKeys":["evaluateStatically","open override fun evaluateStatically(): INodeReference?","org.modelix.modelql.untyped.NodeReferenceSourceStep.evaluateStatically"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<ConceptReference?>>","description":"org.modelix.modelql.untyped.ConceptReferenceTraversalStep.getOutputSerializer","location":"modelql-untyped/org.modelix.modelql.untyped/-concept-reference-traversal-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<ConceptReference?>>","org.modelix.modelql.untyped.ConceptReferenceTraversalStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","description":"org.modelix.modelql.untyped.AddNewChildNodeStep.getOutputSerializer","location":"modelql-untyped/org.modelix.modelql.untyped/-add-new-child-node-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","org.modelix.modelql.untyped.AddNewChildNodeStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","description":"org.modelix.modelql.untyped.AllChildrenTraversalStep.getOutputSerializer","location":"modelql-untyped/org.modelix.modelql.untyped/-all-children-traversal-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","org.modelix.modelql.untyped.AllChildrenTraversalStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","description":"org.modelix.modelql.untyped.AllReferencesTraversalStep.getOutputSerializer","location":"modelql-untyped/org.modelix.modelql.untyped/-all-references-traversal-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","org.modelix.modelql.untyped.AllReferencesTraversalStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","description":"org.modelix.modelql.untyped.ChildrenTraversalStep.getOutputSerializer","location":"modelql-untyped/org.modelix.modelql.untyped/-children-traversal-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","org.modelix.modelql.untyped.ChildrenTraversalStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","description":"org.modelix.modelql.untyped.DescendantsTraversalStep.getOutputSerializer","location":"modelql-untyped/org.modelix.modelql.untyped/-descendants-traversal-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","org.modelix.modelql.untyped.DescendantsTraversalStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","description":"org.modelix.modelql.untyped.MoveNodeStep.getOutputSerializer","location":"modelql-untyped/org.modelix.modelql.untyped/-move-node-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","org.modelix.modelql.untyped.MoveNodeStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","description":"org.modelix.modelql.untyped.OfConceptStep.getOutputSerializer","location":"modelql-untyped/org.modelix.modelql.untyped/-of-concept-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","org.modelix.modelql.untyped.OfConceptStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","description":"org.modelix.modelql.untyped.ParentTraversalStep.getOutputSerializer","location":"modelql-untyped/org.modelix.modelql.untyped/-parent-traversal-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","org.modelix.modelql.untyped.ParentTraversalStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","description":"org.modelix.modelql.untyped.ReferenceTraversalStep.getOutputSerializer","location":"modelql-untyped/org.modelix.modelql.untyped/-reference-traversal-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","org.modelix.modelql.untyped.ReferenceTraversalStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","description":"org.modelix.modelql.untyped.ResolveNodeStep.getOutputSerializer","location":"modelql-untyped/org.modelix.modelql.untyped/-resolve-node-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","org.modelix.modelql.untyped.ResolveNodeStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","description":"org.modelix.modelql.untyped.SetPropertyStep.getOutputSerializer","location":"modelql-untyped/org.modelix.modelql.untyped/-set-property-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","org.modelix.modelql.untyped.SetPropertyStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","description":"org.modelix.modelql.untyped.SetReferenceStep.getOutputSerializer","location":"modelql-untyped/org.modelix.modelql.untyped/-set-reference-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INode>>","org.modelix.modelql.untyped.SetReferenceStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INodeReference>>","description":"org.modelix.modelql.untyped.NodeReferenceTraversalStep.getOutputSerializer","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-traversal-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INodeReference>>","org.modelix.modelql.untyped.NodeReferenceTraversalStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INodeReference?>>","description":"org.modelix.modelql.untyped.NodeReferenceSourceStep.getOutputSerializer","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-source-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<INodeReference?>>","org.modelix.modelql.untyped.NodeReferenceSourceStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Int>>","description":"org.modelix.modelql.untyped.RemoveNodeStep.getOutputSerializer","location":"modelql-untyped/org.modelix.modelql.untyped/-remove-node-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Int>>","org.modelix.modelql.untyped.RemoveNodeStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<String>>","description":"org.modelix.modelql.untyped.ConceptReferenceUIDTraversalStep.getOutputSerializer","location":"modelql-untyped/org.modelix.modelql.untyped/-concept-reference-u-i-d-traversal-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<String>>","org.modelix.modelql.untyped.ConceptReferenceUIDTraversalStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<String>>","description":"org.modelix.modelql.untyped.NodeReferenceAsStringTraversalStep.getOutputSerializer","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-as-string-traversal-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<String>>","org.modelix.modelql.untyped.NodeReferenceAsStringTraversalStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<String?>>","description":"org.modelix.modelql.untyped.PropertyTraversalStep.getOutputSerializer","location":"modelql-untyped/org.modelix.modelql.untyped/-property-traversal-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<String?>>","org.modelix.modelql.untyped.PropertyTraversalStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<String?>>","description":"org.modelix.modelql.untyped.RoleInParentTraversalStep.getOutputSerializer","location":"modelql-untyped/org.modelix.modelql.untyped/-role-in-parent-traversal-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<String?>>","org.modelix.modelql.untyped.RoleInParentTraversalStep.getOutputSerializer"]},{"name":"open override fun requiresWriteAccess(): Boolean","description":"org.modelix.modelql.untyped.AddNewChildNodeStep.requiresWriteAccess","location":"modelql-untyped/org.modelix.modelql.untyped/-add-new-child-node-step/requires-write-access.html","searchKeys":["requiresWriteAccess","open override fun requiresWriteAccess(): Boolean","org.modelix.modelql.untyped.AddNewChildNodeStep.requiresWriteAccess"]},{"name":"open override fun requiresWriteAccess(): Boolean","description":"org.modelix.modelql.untyped.MoveNodeStep.requiresWriteAccess","location":"modelql-untyped/org.modelix.modelql.untyped/-move-node-step/requires-write-access.html","searchKeys":["requiresWriteAccess","open override fun requiresWriteAccess(): Boolean","org.modelix.modelql.untyped.MoveNodeStep.requiresWriteAccess"]},{"name":"open override fun requiresWriteAccess(): Boolean","description":"org.modelix.modelql.untyped.RemoveNodeStep.requiresWriteAccess","location":"modelql-untyped/org.modelix.modelql.untyped/-remove-node-step/requires-write-access.html","searchKeys":["requiresWriteAccess","open override fun requiresWriteAccess(): Boolean","org.modelix.modelql.untyped.RemoveNodeStep.requiresWriteAccess"]},{"name":"open override fun requiresWriteAccess(): Boolean","description":"org.modelix.modelql.untyped.SetPropertyStep.requiresWriteAccess","location":"modelql-untyped/org.modelix.modelql.untyped/-set-property-step/requires-write-access.html","searchKeys":["requiresWriteAccess","open override fun requiresWriteAccess(): Boolean","org.modelix.modelql.untyped.SetPropertyStep.requiresWriteAccess"]},{"name":"open override fun requiresWriteAccess(): Boolean","description":"org.modelix.modelql.untyped.SetReferenceStep.requiresWriteAccess","location":"modelql-untyped/org.modelix.modelql.untyped/-set-reference-step/requires-write-access.html","searchKeys":["requiresWriteAccess","open override fun requiresWriteAccess(): Boolean","org.modelix.modelql.untyped.SetReferenceStep.requiresWriteAccess"]},{"name":"open override fun serialize(encoder: Encoder, value: INode)","description":"org.modelix.modelql.untyped.NodeKSerializer.serialize","location":"modelql-untyped/org.modelix.modelql.untyped/-node-k-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: INode)","org.modelix.modelql.untyped.NodeKSerializer.serialize"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.untyped.AddNewChildNodeStep.toString","location":"modelql-untyped/org.modelix.modelql.untyped/-add-new-child-node-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.untyped.AddNewChildNodeStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.untyped.AllChildrenTraversalStep.toString","location":"modelql-untyped/org.modelix.modelql.untyped/-all-children-traversal-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.untyped.AllChildrenTraversalStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.untyped.AllReferencesTraversalStep.toString","location":"modelql-untyped/org.modelix.modelql.untyped/-all-references-traversal-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.untyped.AllReferencesTraversalStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.untyped.ChildrenTraversalStep.toString","location":"modelql-untyped/org.modelix.modelql.untyped/-children-traversal-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.untyped.ChildrenTraversalStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.untyped.ConceptReferenceTraversalStep.toString","location":"modelql-untyped/org.modelix.modelql.untyped/-concept-reference-traversal-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.untyped.ConceptReferenceTraversalStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.untyped.ConceptReferenceUIDTraversalStep.toString","location":"modelql-untyped/org.modelix.modelql.untyped/-concept-reference-u-i-d-traversal-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.untyped.ConceptReferenceUIDTraversalStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.untyped.DescendantsTraversalStep.toString","location":"modelql-untyped/org.modelix.modelql.untyped/-descendants-traversal-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.untyped.DescendantsTraversalStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.untyped.MoveNodeStep.toString","location":"modelql-untyped/org.modelix.modelql.untyped/-move-node-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.untyped.MoveNodeStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.untyped.NodeReferenceAsStringTraversalStep.toString","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-as-string-traversal-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.untyped.NodeReferenceAsStringTraversalStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.untyped.NodeReferenceSourceStep.toString","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-source-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.untyped.NodeReferenceSourceStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.untyped.NodeReferenceTraversalStep.toString","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-traversal-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.untyped.NodeReferenceTraversalStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.untyped.OfConceptStep.toString","location":"modelql-untyped/org.modelix.modelql.untyped/-of-concept-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.untyped.OfConceptStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.untyped.ParentTraversalStep.toString","location":"modelql-untyped/org.modelix.modelql.untyped/-parent-traversal-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.untyped.ParentTraversalStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.untyped.PropertyTraversalStep.toString","location":"modelql-untyped/org.modelix.modelql.untyped/-property-traversal-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.untyped.PropertyTraversalStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.untyped.ReferenceTraversalStep.toString","location":"modelql-untyped/org.modelix.modelql.untyped/-reference-traversal-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.untyped.ReferenceTraversalStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.untyped.RemoveNodeStep.toString","location":"modelql-untyped/org.modelix.modelql.untyped/-remove-node-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.untyped.RemoveNodeStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.untyped.ResolveNodeStep.toString","location":"modelql-untyped/org.modelix.modelql.untyped/-resolve-node-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.untyped.ResolveNodeStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.untyped.RoleInParentTraversalStep.toString","location":"modelql-untyped/org.modelix.modelql.untyped/-role-in-parent-traversal-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.untyped.RoleInParentTraversalStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.untyped.SetPropertyStep.toString","location":"modelql-untyped/org.modelix.modelql.untyped/-set-property-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.untyped.SetPropertyStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.untyped.SetReferenceStep.toString","location":"modelql-untyped/org.modelix.modelql.untyped/-set-reference-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.untyped.SetReferenceStep.toString"]},{"name":"open override fun transform(evaluationContext: QueryEvaluationContext, input: ConceptReference): String","description":"org.modelix.modelql.untyped.ConceptReferenceUIDTraversalStep.transform","location":"modelql-untyped/org.modelix.modelql.untyped/-concept-reference-u-i-d-traversal-step/transform.html","searchKeys":["transform","open override fun transform(evaluationContext: QueryEvaluationContext, input: ConceptReference): String","org.modelix.modelql.untyped.ConceptReferenceUIDTraversalStep.transform"]},{"name":"open override fun transform(evaluationContext: QueryEvaluationContext, input: INode): INode","description":"org.modelix.modelql.untyped.AddNewChildNodeStep.transform","location":"modelql-untyped/org.modelix.modelql.untyped/-add-new-child-node-step/transform.html","searchKeys":["transform","open override fun transform(evaluationContext: QueryEvaluationContext, input: INode): INode","org.modelix.modelql.untyped.AddNewChildNodeStep.transform"]},{"name":"open override fun transform(evaluationContext: QueryEvaluationContext, input: INode): INodeReference","description":"org.modelix.modelql.untyped.NodeReferenceTraversalStep.transform","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-traversal-step/transform.html","searchKeys":["transform","open override fun transform(evaluationContext: QueryEvaluationContext, input: INode): INodeReference","org.modelix.modelql.untyped.NodeReferenceTraversalStep.transform"]},{"name":"open override fun transform(evaluationContext: QueryEvaluationContext, input: INode): String?","description":"org.modelix.modelql.untyped.PropertyTraversalStep.transform","location":"modelql-untyped/org.modelix.modelql.untyped/-property-traversal-step/transform.html","searchKeys":["transform","open override fun transform(evaluationContext: QueryEvaluationContext, input: INode): String?","org.modelix.modelql.untyped.PropertyTraversalStep.transform"]},{"name":"open override fun transform(evaluationContext: QueryEvaluationContext, input: INode): String?","description":"org.modelix.modelql.untyped.RoleInParentTraversalStep.transform","location":"modelql-untyped/org.modelix.modelql.untyped/-role-in-parent-traversal-step/transform.html","searchKeys":["transform","open override fun transform(evaluationContext: QueryEvaluationContext, input: INode): String?","org.modelix.modelql.untyped.RoleInParentTraversalStep.transform"]},{"name":"open override fun transform(evaluationContext: QueryEvaluationContext, input: INode?): ConceptReference?","description":"org.modelix.modelql.untyped.ConceptReferenceTraversalStep.transform","location":"modelql-untyped/org.modelix.modelql.untyped/-concept-reference-traversal-step/transform.html","searchKeys":["transform","open override fun transform(evaluationContext: QueryEvaluationContext, input: INode?): ConceptReference?","org.modelix.modelql.untyped.ConceptReferenceTraversalStep.transform"]},{"name":"open override fun transform(evaluationContext: QueryEvaluationContext, input: INodeReference): String","description":"org.modelix.modelql.untyped.NodeReferenceAsStringTraversalStep.transform","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-as-string-traversal-step/transform.html","searchKeys":["transform","open override fun transform(evaluationContext: QueryEvaluationContext, input: INodeReference): String","org.modelix.modelql.untyped.NodeReferenceAsStringTraversalStep.transform"]},{"name":"open override fun validate()","description":"org.modelix.modelql.untyped.MoveNodeStep.validate","location":"modelql-untyped/org.modelix.modelql.untyped/-move-node-step/validate.html","searchKeys":["validate","open override fun validate()","org.modelix.modelql.untyped.MoveNodeStep.validate"]},{"name":"open override val descriptor: SerialDescriptor","description":"org.modelix.modelql.untyped.NodeKSerializer.descriptor","location":"modelql-untyped/org.modelix.modelql.untyped/-node-k-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","org.modelix.modelql.untyped.NodeKSerializer.descriptor"]},{"name":"suspend fun <R> INode.query(body: (IMonoStep<INode>) -> IMonoStep<R>): R","description":"org.modelix.modelql.untyped.query","location":"modelql-untyped/org.modelix.modelql.untyped/query.html","searchKeys":["query","suspend fun <R> INode.query(body: (IMonoStep<INode>) -> IMonoStep<R>): R","org.modelix.modelql.untyped.query"]},{"name":"suspend fun <R> INode.queryFlux(body: (IMonoStep<INode>) -> IFluxStep<R>): List<R>","description":"org.modelix.modelql.untyped.queryFlux","location":"modelql-untyped/org.modelix.modelql.untyped/query-flux.html","searchKeys":["queryFlux","suspend fun <R> INode.queryFlux(body: (IMonoStep<INode>) -> IFluxStep<R>): List<R>","org.modelix.modelql.untyped.queryFlux"]},{"name":"val concept: ConceptReference?","description":"org.modelix.modelql.untyped.AddNewChildNodeStep.Descriptor.concept","location":"modelql-untyped/org.modelix.modelql.untyped/-add-new-child-node-step/-descriptor/concept.html","searchKeys":["concept","val concept: ConceptReference?","org.modelix.modelql.untyped.AddNewChildNodeStep.Descriptor.concept"]},{"name":"val concept: ConceptReference?","description":"org.modelix.modelql.untyped.AddNewChildNodeStep.concept","location":"modelql-untyped/org.modelix.modelql.untyped/-add-new-child-node-step/concept.html","searchKeys":["concept","val concept: ConceptReference?","org.modelix.modelql.untyped.AddNewChildNodeStep.concept"]},{"name":"val conceptUIDs: Set<String>","description":"org.modelix.modelql.untyped.OfConceptStep.Descriptor.conceptUIDs","location":"modelql-untyped/org.modelix.modelql.untyped/-of-concept-step/-descriptor/concept-u-i-ds.html","searchKeys":["conceptUIDs","val conceptUIDs: Set<String>","org.modelix.modelql.untyped.OfConceptStep.Descriptor.conceptUIDs"]},{"name":"val conceptUIDs: Set<String>","description":"org.modelix.modelql.untyped.OfConceptStep.conceptUIDs","location":"modelql-untyped/org.modelix.modelql.untyped/-of-concept-step/concept-u-i-ds.html","searchKeys":["conceptUIDs","val conceptUIDs: Set<String>","org.modelix.modelql.untyped.OfConceptStep.conceptUIDs"]},{"name":"val element: INodeReference?","description":"org.modelix.modelql.untyped.NodeReferenceSourceStep.Descriptor.element","location":"modelql-untyped/org.modelix.modelql.untyped/-node-reference-source-step/-descriptor/element.html","searchKeys":["element","val element: INodeReference?","org.modelix.modelql.untyped.NodeReferenceSourceStep.Descriptor.element"]},{"name":"val includeSelf: Boolean","description":"org.modelix.modelql.untyped.DescendantsTraversalStep.includeSelf","location":"modelql-untyped/org.modelix.modelql.untyped/-descendants-traversal-step/include-self.html","searchKeys":["includeSelf","val includeSelf: Boolean","org.modelix.modelql.untyped.DescendantsTraversalStep.includeSelf"]},{"name":"val index: Int","description":"org.modelix.modelql.untyped.AddNewChildNodeStep.Descriptor.index","location":"modelql-untyped/org.modelix.modelql.untyped/-add-new-child-node-step/-descriptor/--index--.html","searchKeys":["index","val index: Int","org.modelix.modelql.untyped.AddNewChildNodeStep.Descriptor.index"]},{"name":"val index: Int","description":"org.modelix.modelql.untyped.AddNewChildNodeStep.index","location":"modelql-untyped/org.modelix.modelql.untyped/-add-new-child-node-step/--index--.html","searchKeys":["index","val index: Int","org.modelix.modelql.untyped.AddNewChildNodeStep.index"]},{"name":"val index: Int","description":"org.modelix.modelql.untyped.MoveNodeStep.Descriptor.index","location":"modelql-untyped/org.modelix.modelql.untyped/-move-node-step/-descriptor/--index--.html","searchKeys":["index","val index: Int","org.modelix.modelql.untyped.MoveNodeStep.Descriptor.index"]},{"name":"val index: Int","description":"org.modelix.modelql.untyped.MoveNodeStep.index","location":"modelql-untyped/org.modelix.modelql.untyped/-move-node-step/--index--.html","searchKeys":["index","val index: Int","org.modelix.modelql.untyped.MoveNodeStep.index"]},{"name":"val json: Json","description":"org.modelix.modelql.untyped.UntypedModelQL.json","location":"modelql-untyped/org.modelix.modelql.untyped/-untyped-model-q-l/json.html","searchKeys":["json","val json: Json","org.modelix.modelql.untyped.UntypedModelQL.json"]},{"name":"val role: String","description":"org.modelix.modelql.untyped.PropertyTraversalStep.PropertyStepDescriptor.role","location":"modelql-untyped/org.modelix.modelql.untyped/-property-traversal-step/-property-step-descriptor/role.html","searchKeys":["role","val role: String","org.modelix.modelql.untyped.PropertyTraversalStep.PropertyStepDescriptor.role"]},{"name":"val role: String","description":"org.modelix.modelql.untyped.PropertyTraversalStep.role","location":"modelql-untyped/org.modelix.modelql.untyped/-property-traversal-step/role.html","searchKeys":["role","val role: String","org.modelix.modelql.untyped.PropertyTraversalStep.role"]},{"name":"val role: String","description":"org.modelix.modelql.untyped.ReferenceTraversalStep.Descriptor.role","location":"modelql-untyped/org.modelix.modelql.untyped/-reference-traversal-step/-descriptor/role.html","searchKeys":["role","val role: String","org.modelix.modelql.untyped.ReferenceTraversalStep.Descriptor.role"]},{"name":"val role: String","description":"org.modelix.modelql.untyped.ReferenceTraversalStep.role","location":"modelql-untyped/org.modelix.modelql.untyped/-reference-traversal-step/role.html","searchKeys":["role","val role: String","org.modelix.modelql.untyped.ReferenceTraversalStep.role"]},{"name":"val role: String","description":"org.modelix.modelql.untyped.SetPropertyStep.Descriptor.role","location":"modelql-untyped/org.modelix.modelql.untyped/-set-property-step/-descriptor/role.html","searchKeys":["role","val role: String","org.modelix.modelql.untyped.SetPropertyStep.Descriptor.role"]},{"name":"val role: String","description":"org.modelix.modelql.untyped.SetPropertyStep.role","location":"modelql-untyped/org.modelix.modelql.untyped/-set-property-step/role.html","searchKeys":["role","val role: String","org.modelix.modelql.untyped.SetPropertyStep.role"]},{"name":"val role: String","description":"org.modelix.modelql.untyped.SetReferenceStep.Descriptor.role","location":"modelql-untyped/org.modelix.modelql.untyped/-set-reference-step/-descriptor/role.html","searchKeys":["role","val role: String","org.modelix.modelql.untyped.SetReferenceStep.Descriptor.role"]},{"name":"val role: String","description":"org.modelix.modelql.untyped.SetReferenceStep.role","location":"modelql-untyped/org.modelix.modelql.untyped/-set-reference-step/role.html","searchKeys":["role","val role: String","org.modelix.modelql.untyped.SetReferenceStep.role"]},{"name":"val role: String?","description":"org.modelix.modelql.untyped.AddNewChildNodeStep.Descriptor.role","location":"modelql-untyped/org.modelix.modelql.untyped/-add-new-child-node-step/-descriptor/role.html","searchKeys":["role","val role: String?","org.modelix.modelql.untyped.AddNewChildNodeStep.Descriptor.role"]},{"name":"val role: String?","description":"org.modelix.modelql.untyped.AddNewChildNodeStep.role","location":"modelql-untyped/org.modelix.modelql.untyped/-add-new-child-node-step/role.html","searchKeys":["role","val role: String?","org.modelix.modelql.untyped.AddNewChildNodeStep.role"]},{"name":"val role: String?","description":"org.modelix.modelql.untyped.ChildrenTraversalStep.ChildrenStepDescriptor.role","location":"modelql-untyped/org.modelix.modelql.untyped/-children-traversal-step/-children-step-descriptor/role.html","searchKeys":["role","val role: String?","org.modelix.modelql.untyped.ChildrenTraversalStep.ChildrenStepDescriptor.role"]},{"name":"val role: String?","description":"org.modelix.modelql.untyped.ChildrenTraversalStep.role","location":"modelql-untyped/org.modelix.modelql.untyped/-children-traversal-step/role.html","searchKeys":["role","val role: String?","org.modelix.modelql.untyped.ChildrenTraversalStep.role"]},{"name":"val role: String?","description":"org.modelix.modelql.untyped.MoveNodeStep.Descriptor.role","location":"modelql-untyped/org.modelix.modelql.untyped/-move-node-step/-descriptor/role.html","searchKeys":["role","val role: String?","org.modelix.modelql.untyped.MoveNodeStep.Descriptor.role"]},{"name":"val role: String?","description":"org.modelix.modelql.untyped.MoveNodeStep.role","location":"modelql-untyped/org.modelix.modelql.untyped/-move-node-step/role.html","searchKeys":["role","val role: String?","org.modelix.modelql.untyped.MoveNodeStep.role"]},{"name":"val serializersModule: SerializersModule","description":"org.modelix.modelql.untyped.UntypedModelQL.serializersModule","location":"modelql-untyped/org.modelix.modelql.untyped/-untyped-model-q-l/serializers-module.html","searchKeys":["serializersModule","val serializersModule: SerializersModule","org.modelix.modelql.untyped.UntypedModelQL.serializersModule"]},{"name":"abstract class AggregationStep<In, Out> : MonoTransformingStep<In, Out> ","description":"org.modelix.modelql.core.AggregationStep","location":"modelql-core/org.modelix.modelql.core/-aggregation-step/index.html","searchKeys":["AggregationStep","abstract class AggregationStep<In, Out> : MonoTransformingStep<In, Out> ","org.modelix.modelql.core.AggregationStep"]},{"name":"abstract class CollectorStep<E, CollectionT> : AggregationStep<E, CollectionT> ","description":"org.modelix.modelql.core.CollectorStep","location":"modelql-core/org.modelix.modelql.core/-collector-step/index.html","searchKeys":["CollectorStep","abstract class CollectorStep<E, CollectionT> : AggregationStep<E, CollectionT> ","org.modelix.modelql.core.CollectorStep"]},{"name":"abstract class CollectorStepOutputSerializer<E, InternalCollectionT, CollectionT>(val inputElementSerializer: KSerializer<IStepOutput<E>>) : KSerializer<CollectorStepOutput<E, InternalCollectionT, CollectionT>> ","description":"org.modelix.modelql.core.CollectorStepOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-collector-step-output-serializer/index.html","searchKeys":["CollectorStepOutputSerializer","abstract class CollectorStepOutputSerializer<E, InternalCollectionT, CollectionT>(val inputElementSerializer: KSerializer<IStepOutput<E>>) : KSerializer<CollectorStepOutput<E, InternalCollectionT, CollectionT>> ","org.modelix.modelql.core.CollectorStepOutputSerializer"]},{"name":"abstract class FluxTransformingStep<In, Out> : TransformingStep<In, Out> , IFluxStep<Out> ","description":"org.modelix.modelql.core.FluxTransformingStep","location":"modelql-core/org.modelix.modelql.core/-flux-transforming-step/index.html","searchKeys":["FluxTransformingStep","abstract class FluxTransformingStep<In, Out> : TransformingStep<In, Out> , IFluxStep<Out> ","org.modelix.modelql.core.FluxTransformingStep"]},{"name":"abstract class FoldingStep<In, Out>(initial: Out) : AggregationStep<In, Out> ","description":"org.modelix.modelql.core.FoldingStep","location":"modelql-core/org.modelix.modelql.core/-folding-step/index.html","searchKeys":["FoldingStep","abstract class FoldingStep<In, Out>(initial: Out) : AggregationStep<In, Out> ","org.modelix.modelql.core.FoldingStep"]},{"name":"abstract class MonoTransformingStep<In, Out> : TransformingStep<In, Out> , IMonoStep<Out> , IFluxStep<Out> ","description":"org.modelix.modelql.core.MonoTransformingStep","location":"modelql-core/org.modelix.modelql.core/-mono-transforming-step/index.html","searchKeys":["MonoTransformingStep","abstract class MonoTransformingStep<In, Out> : TransformingStep<In, Out> , IMonoStep<Out> , IFluxStep<Out> ","org.modelix.modelql.core.MonoTransformingStep"]},{"name":"abstract class ProducingStep<E> : IProducingStep<E> ","description":"org.modelix.modelql.core.ProducingStep","location":"modelql-core/org.modelix.modelql.core/-producing-step/index.html","searchKeys":["ProducingStep","abstract class ProducingStep<E> : IProducingStep<E> ","org.modelix.modelql.core.ProducingStep"]},{"name":"abstract class SimpleMonoTransformingStep<In, Out> : MonoTransformingStep<In, Out> ","description":"org.modelix.modelql.core.SimpleMonoTransformingStep","location":"modelql-core/org.modelix.modelql.core/-simple-mono-transforming-step/index.html","searchKeys":["SimpleMonoTransformingStep","abstract class SimpleMonoTransformingStep<In, Out> : MonoTransformingStep<In, Out> ","org.modelix.modelql.core.SimpleMonoTransformingStep"]},{"name":"abstract class StepDescriptor","description":"org.modelix.modelql.core.StepDescriptor","location":"modelql-core/org.modelix.modelql.core/-step-descriptor/index.html","searchKeys":["StepDescriptor","abstract class StepDescriptor","org.modelix.modelql.core.StepDescriptor"]},{"name":"abstract class TransformingStep<In, Out> : ProducingStep<Out> , IProcessingStep<In, Out> ","description":"org.modelix.modelql.core.TransformingStep","location":"modelql-core/org.modelix.modelql.core/-transforming-step/index.html","searchKeys":["TransformingStep","abstract class TransformingStep<In, Out> : ProducingStep<Out> , IProcessingStep<In, Out> ","org.modelix.modelql.core.TransformingStep"]},{"name":"abstract class TransformingStepWithParameter<In : CommonIn, ParameterT : CommonIn, CommonIn, Out> : MonoTransformingStep<CommonIn, Out> ","description":"org.modelix.modelql.core.TransformingStepWithParameter","location":"modelql-core/org.modelix.modelql.core/-transforming-step-with-parameter/index.html","searchKeys":["TransformingStepWithParameter","abstract class TransformingStepWithParameter<In : CommonIn, ParameterT : CommonIn, CommonIn, Out> : MonoTransformingStep<CommonIn, Out> ","org.modelix.modelql.core.TransformingStepWithParameter"]},{"name":"abstract class UnboundQuery<In, AggregationOut, ElementOut>(val inputStep: QueryInput<In>, outputStep_: IProducingStep<ElementOut>, val reference: QueryReference<UnboundQuery<In, AggregationOut, ElementOut>>, val sharedSteps: List<SharedStep<*>>) : IUnboundQuery<In, AggregationOut, ElementOut> ","description":"org.modelix.modelql.core.UnboundQuery","location":"modelql-core/org.modelix.modelql.core/-unbound-query/index.html","searchKeys":["UnboundQuery","abstract class UnboundQuery<In, AggregationOut, ElementOut>(val inputStep: QueryInput<In>, outputStep_: IProducingStep<ElementOut>, val reference: QueryReference<UnboundQuery<In, AggregationOut, ElementOut>>, val sharedSteps: List<SharedStep<*>>) : IUnboundQuery<In, AggregationOut, ElementOut> ","org.modelix.modelql.core.UnboundQuery"]},{"name":"abstract fun <Out> createFlow(query: IUnboundQuery<In, *, Out>): StepFlow<Out>","description":"org.modelix.modelql.core.IQueryExecutor.createFlow","location":"modelql-core/org.modelix.modelql.core/-i-query-executor/create-flow.html","searchKeys":["createFlow","abstract fun <Out> createFlow(query: IUnboundQuery<In, *, Out>): StepFlow<Out>","org.modelix.modelql.core.IQueryExecutor.createFlow"]},{"name":"abstract fun <ParameterT, ResultT> request(type: IBulkRequestType<ParameterT, ResultT>, parameter: ParameterT, callback: (Result<ResultT>) -> Unit)","description":"org.modelix.modelql.core.IBulkQueryExecutor.request","location":"modelql-core/org.modelix.modelql.core/-i-bulk-query-executor/request.html","searchKeys":["request","abstract fun <ParameterT, ResultT> request(type: IBulkRequestType<ParameterT, ResultT>, parameter: ParameterT, callback: (Result<ResultT>) -> Unit)","org.modelix.modelql.core.IBulkQueryExecutor.request"]},{"name":"abstract fun <T> IFluxStep<T>.shared(): IFluxStep<T>","description":"org.modelix.modelql.core.IStepSharingContext.shared","location":"modelql-core/org.modelix.modelql.core/-i-step-sharing-context/shared.html","searchKeys":["shared","abstract fun <T> IFluxStep<T>.shared(): IFluxStep<T>","org.modelix.modelql.core.IStepSharingContext.shared"]},{"name":"abstract fun <T> IMonoStep<T>.request(): IValueRequest<T>","description":"org.modelix.modelql.core.IZipBuilderContext.request","location":"modelql-core/org.modelix.modelql.core/-i-zip-builder-context/request.html","searchKeys":["request","abstract fun <T> IMonoStep<T>.request(): IValueRequest<T>","org.modelix.modelql.core.IZipBuilderContext.request"]},{"name":"abstract fun <T> IMonoStep<T>.shared(): IMonoStep<T>","description":"org.modelix.modelql.core.IStepSharingContext.shared","location":"modelql-core/org.modelix.modelql.core/-i-step-sharing-context/shared.html","searchKeys":["shared","abstract fun <T> IMonoStep<T>.shared(): IMonoStep<T>","org.modelix.modelql.core.IStepSharingContext.shared"]},{"name":"abstract fun <T> flatMap(body: (IMonoStep<Out>) -> IFluxStep<T>): IFluxQuery<T>","description":"org.modelix.modelql.core.IFluxQuery.flatMap","location":"modelql-core/org.modelix.modelql.core/-i-flux-query/flat-map.html","searchKeys":["flatMap","abstract fun <T> flatMap(body: (IMonoStep<Out>) -> IFluxStep<T>): IFluxQuery<T>","org.modelix.modelql.core.IFluxQuery.flatMap"]},{"name":"abstract fun <T> flatMap(body: (IMonoStep<Out>) -> IFluxStep<T>): IFluxQuery<T>","description":"org.modelix.modelql.core.IMonoQuery.flatMap","location":"modelql-core/org.modelix.modelql.core/-i-mono-query/flat-map.html","searchKeys":["flatMap","abstract fun <T> flatMap(body: (IMonoStep<Out>) -> IFluxStep<T>): IFluxQuery<T>","org.modelix.modelql.core.IMonoQuery.flatMap"]},{"name":"abstract fun <T> flatMap(body: (IMonoStep<Out>) -> IFluxStep<T>): IFluxUnboundQuery<In, T>","description":"org.modelix.modelql.core.IFluxUnboundQuery.flatMap","location":"modelql-core/org.modelix.modelql.core/-i-flux-unbound-query/flat-map.html","searchKeys":["flatMap","abstract fun <T> flatMap(body: (IMonoStep<Out>) -> IFluxStep<T>): IFluxUnboundQuery<In, T>","org.modelix.modelql.core.IFluxUnboundQuery.flatMap"]},{"name":"abstract fun <T> getFlow(step: IProducingStep<T>): Flow<T>?","description":"org.modelix.modelql.core.IFlowInstantiationContext.getFlow","location":"modelql-core/org.modelix.modelql.core/-i-flow-instantiation-context/get-flow.html","searchKeys":["getFlow","abstract fun <T> getFlow(step: IProducingStep<T>): Flow<T>?","org.modelix.modelql.core.IFlowInstantiationContext.getFlow"]},{"name":"abstract fun <T> getOrCreateFlow(step: IProducingStep<T>): StepFlow<T>","description":"org.modelix.modelql.core.IFlowInstantiationContext.getOrCreateFlow","location":"modelql-core/org.modelix.modelql.core/-i-flow-instantiation-context/get-or-create-flow.html","searchKeys":["getOrCreateFlow","abstract fun <T> getOrCreateFlow(step: IProducingStep<T>): StepFlow<T>","org.modelix.modelql.core.IFlowInstantiationContext.getOrCreateFlow"]},{"name":"abstract fun <T> map(body: (IMonoStep<Out>) -> IMonoStep<T>): IFluxQuery<T>","description":"org.modelix.modelql.core.IFluxQuery.map","location":"modelql-core/org.modelix.modelql.core/-i-flux-query/map.html","searchKeys":["map","abstract fun <T> map(body: (IMonoStep<Out>) -> IMonoStep<T>): IFluxQuery<T>","org.modelix.modelql.core.IFluxQuery.map"]},{"name":"abstract fun <T> map(body: (IMonoStep<Out>) -> IMonoStep<T>): IFluxUnboundQuery<In, T>","description":"org.modelix.modelql.core.IFluxUnboundQuery.map","location":"modelql-core/org.modelix.modelql.core/-i-flux-unbound-query/map.html","searchKeys":["map","abstract fun <T> map(body: (IMonoStep<Out>) -> IMonoStep<T>): IFluxUnboundQuery<In, T>","org.modelix.modelql.core.IFluxUnboundQuery.map"]},{"name":"abstract fun <T> map(body: (IMonoStep<Out>) -> IMonoStep<T>): IMonoQuery<T>","description":"org.modelix.modelql.core.IMonoQuery.map","location":"modelql-core/org.modelix.modelql.core/-i-mono-query/map.html","searchKeys":["map","abstract fun <T> map(body: (IMonoStep<Out>) -> IMonoStep<T>): IMonoQuery<T>","org.modelix.modelql.core.IMonoQuery.map"]},{"name":"abstract fun <T> map(query: IFluxUnboundQuery<Out, T>): IFluxUnboundQuery<In, T>","description":"org.modelix.modelql.core.IMonoUnboundQuery.map","location":"modelql-core/org.modelix.modelql.core/-i-mono-unbound-query/map.html","searchKeys":["map","abstract fun <T> map(query: IFluxUnboundQuery<Out, T>): IFluxUnboundQuery<In, T>","org.modelix.modelql.core.IMonoUnboundQuery.map"]},{"name":"abstract fun <T> map(query: IMonoUnboundQuery<Out, T>): IMonoUnboundQuery<In, T>","description":"org.modelix.modelql.core.IMonoUnboundQuery.map","location":"modelql-core/org.modelix.modelql.core/-i-mono-unbound-query/map.html","searchKeys":["map","abstract fun <T> map(query: IMonoUnboundQuery<Out, T>): IMonoUnboundQuery<In, T>","org.modelix.modelql.core.IMonoUnboundQuery.map"]},{"name":"abstract fun IProducingStep<In>.mapRecursive(): IFluxStep<Out>","description":"org.modelix.modelql.core.IQueryBuilderContext.mapRecursive","location":"modelql-core/org.modelix.modelql.core/-i-query-builder-context/map-recursive.html","searchKeys":["mapRecursive","abstract fun IProducingStep<In>.mapRecursive(): IFluxStep<Out>","org.modelix.modelql.core.IQueryBuilderContext.mapRecursive"]},{"name":"abstract fun addConsumer(consumer: IConsumingStep<E>)","description":"org.modelix.modelql.core.IProducingStep.addConsumer","location":"modelql-core/org.modelix.modelql.core/-i-producing-step/add-consumer.html","searchKeys":["addConsumer","abstract fun addConsumer(consumer: IConsumingStep<E>)","org.modelix.modelql.core.IProducingStep.addConsumer"]},{"name":"abstract fun addProducer(producer: IProducingStep<E>)","description":"org.modelix.modelql.core.IConsumingStep.addProducer","location":"modelql-core/org.modelix.modelql.core/-i-consuming-step/add-producer.html","searchKeys":["addProducer","abstract fun addProducer(producer: IProducingStep<E>)","org.modelix.modelql.core.IConsumingStep.addProducer"]},{"name":"abstract fun asFlow(evaluationContext: QueryEvaluationContext, input: StepFlow<In>): StepFlow<ElementOut>","description":"org.modelix.modelql.core.IUnboundQuery.asFlow","location":"modelql-core/org.modelix.modelql.core/-i-unbound-query/as-flow.html","searchKeys":["asFlow","abstract fun asFlow(evaluationContext: QueryEvaluationContext, input: StepFlow<In>): StepFlow<ElementOut>","org.modelix.modelql.core.IUnboundQuery.asFlow"]},{"name":"abstract fun bind(executor: IQueryExecutor<In>): IQuery<AggregationOut, ElementOut>","description":"org.modelix.modelql.core.IUnboundQuery.bind","location":"modelql-core/org.modelix.modelql.core/-i-unbound-query/bind.html","searchKeys":["bind","abstract fun bind(executor: IQueryExecutor<In>): IQuery<AggregationOut, ElementOut>","org.modelix.modelql.core.IUnboundQuery.bind"]},{"name":"abstract fun canBeEmpty(): Boolean","description":"org.modelix.modelql.core.IUnboundQuery.canBeEmpty","location":"modelql-core/org.modelix.modelql.core/-i-unbound-query/can-be-empty.html","searchKeys":["canBeEmpty","abstract fun canBeEmpty(): Boolean","org.modelix.modelql.core.IUnboundQuery.canBeEmpty"]},{"name":"abstract fun createFlow(context: IFlowInstantiationContext): StepFlow<E>","description":"org.modelix.modelql.core.IProducingStep.createFlow","location":"modelql-core/org.modelix.modelql.core/-i-producing-step/create-flow.html","searchKeys":["createFlow","abstract fun createFlow(context: IFlowInstantiationContext): StepFlow<E>","org.modelix.modelql.core.IProducingStep.createFlow"]},{"name":"abstract fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.StepDescriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-step-descriptor/create-step.html","searchKeys":["createStep","abstract fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.StepDescriptor.createStep"]},{"name":"abstract fun executeRequest(keys: Collection<ParameterT>): Map<ParameterT, Result<ResultT>>","description":"org.modelix.modelql.core.IBulkRequestType.executeRequest","location":"modelql-core/org.modelix.modelql.core/-i-bulk-request-type/execute-request.html","searchKeys":["executeRequest","abstract fun executeRequest(keys: Collection<ParameterT>): Map<ParameterT, Result<ResultT>>","org.modelix.modelql.core.IBulkRequestType.executeRequest"]},{"name":"abstract fun flush()","description":"org.modelix.modelql.core.IBulkQueryExecutor.flush","location":"modelql-core/org.modelix.modelql.core/-i-bulk-query-executor/flush.html","searchKeys":["flush","abstract fun flush()","org.modelix.modelql.core.IBulkQueryExecutor.flush"]},{"name":"abstract fun get(): E","description":"org.modelix.modelql.core.IValueRequest.get","location":"modelql-core/org.modelix.modelql.core/-i-value-request/get.html","searchKeys":["get","abstract fun get(): E","org.modelix.modelql.core.IValueRequest.get"]},{"name":"abstract fun getAggregationOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<AggregationOut>>","description":"org.modelix.modelql.core.IUnboundQuery.getAggregationOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-i-unbound-query/get-aggregation-output-serializer.html","searchKeys":["getAggregationOutputSerializer","abstract fun getAggregationOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<AggregationOut>>","org.modelix.modelql.core.IUnboundQuery.getAggregationOutputSerializer"]},{"name":"abstract fun getConsumers(): List<IConsumingStep<*>>","description":"org.modelix.modelql.core.IProducingStep.getConsumers","location":"modelql-core/org.modelix.modelql.core/-i-producing-step/get-consumers.html","searchKeys":["getConsumers","abstract fun getConsumers(): List<IConsumingStep<*>>","org.modelix.modelql.core.IProducingStep.getConsumers"]},{"name":"abstract fun getElementOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<ElementOut>>","description":"org.modelix.modelql.core.IUnboundQuery.getElementOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-i-unbound-query/get-element-output-serializer.html","searchKeys":["getElementOutputSerializer","abstract fun getElementOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<ElementOut>>","org.modelix.modelql.core.IUnboundQuery.getElementOutputSerializer"]},{"name":"abstract fun getId(): Long","description":"org.modelix.modelql.core.IQueryReference.getId","location":"modelql-core/org.modelix.modelql.core/-i-query-reference/get-id.html","searchKeys":["getId","abstract fun getId(): Long","org.modelix.modelql.core.IQueryReference.getId"]},{"name":"abstract fun getMaxBatchSize(): Int","description":"org.modelix.modelql.core.IBulkRequestType.getMaxBatchSize","location":"modelql-core/org.modelix.modelql.core/-i-bulk-request-type/get-max-batch-size.html","searchKeys":["getMaxBatchSize","abstract fun getMaxBatchSize(): Int","org.modelix.modelql.core.IBulkRequestType.getMaxBatchSize"]},{"name":"abstract fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","description":"org.modelix.modelql.core.IProducingStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-i-producing-step/get-output-serializer.html","searchKeys":["getOutputSerializer","abstract fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","org.modelix.modelql.core.IProducingStep.getOutputSerializer"]},{"name":"abstract fun getProducers(): List<IProducingStep<*>>","description":"org.modelix.modelql.core.IConsumingStep.getProducers","location":"modelql-core/org.modelix.modelql.core/-i-consuming-step/get-producers.html","searchKeys":["getProducers","abstract fun getProducers(): List<IProducingStep<*>>","org.modelix.modelql.core.IConsumingStep.getProducers"]},{"name":"abstract fun insertInto(context: Context)","description":"org.modelix.modelql.core.IBoundFragment.insertInto","location":"modelql-core/org.modelix.modelql.core/-i-bound-fragment/insert-into.html","searchKeys":["insertInto","abstract fun insertInto(context: Context)","org.modelix.modelql.core.IBoundFragment.insertInto"]},{"name":"abstract fun onSuccess(body: () -> Out)","description":"org.modelix.modelql.core.ILocalMappingBuilder.onSuccess","location":"modelql-core/org.modelix.modelql.core/-i-local-mapping-builder/on-success.html","searchKeys":["onSuccess","abstract fun onSuccess(body: () -> Out)","org.modelix.modelql.core.ILocalMappingBuilder.onSuccess"]},{"name":"abstract fun onSuccess(body: FragmentBody<Context>)","description":"org.modelix.modelql.core.IFragmentBuilder.onSuccess","location":"modelql-core/org.modelix.modelql.core/-i-fragment-builder/on-success.html","searchKeys":["onSuccess","abstract fun onSuccess(body: FragmentBody<Context>)","org.modelix.modelql.core.IFragmentBuilder.onSuccess"]},{"name":"abstract fun requiresSingularQueryInput(): Boolean","description":"org.modelix.modelql.core.IStep.requiresSingularQueryInput","location":"modelql-core/org.modelix.modelql.core/-i-step/requires-singular-query-input.html","searchKeys":["requiresSingularQueryInput","abstract fun requiresSingularQueryInput(): Boolean","org.modelix.modelql.core.IStep.requiresSingularQueryInput"]},{"name":"abstract fun requiresWriteAccess(): Boolean","description":"org.modelix.modelql.core.IUnboundQuery.requiresWriteAccess","location":"modelql-core/org.modelix.modelql.core/-i-unbound-query/requires-write-access.html","searchKeys":["requiresWriteAccess","abstract fun requiresWriteAccess(): Boolean","org.modelix.modelql.core.IUnboundQuery.requiresWriteAccess"]},{"name":"abstract fun transform(evaluationContext: QueryEvaluationContext, input: In): Out","description":"org.modelix.modelql.core.SimpleMonoTransformingStep.transform","location":"modelql-core/org.modelix.modelql.core/-simple-mono-transforming-step/transform.html","searchKeys":["transform","abstract fun transform(evaluationContext: QueryEvaluationContext, input: In): Out","org.modelix.modelql.core.SimpleMonoTransformingStep.transform"]},{"name":"abstract override fun bind(executor: IQueryExecutor<In>): IFluxQuery<Out>","description":"org.modelix.modelql.core.IFluxUnboundQuery.bind","location":"modelql-core/org.modelix.modelql.core/-i-flux-unbound-query/bind.html","searchKeys":["bind","abstract override fun bind(executor: IQueryExecutor<In>): IFluxQuery<Out>","org.modelix.modelql.core.IFluxUnboundQuery.bind"]},{"name":"abstract override fun bind(executor: IQueryExecutor<In>): IMonoQuery<Out>","description":"org.modelix.modelql.core.IMonoUnboundQuery.bind","location":"modelql-core/org.modelix.modelql.core/-i-mono-unbound-query/bind.html","searchKeys":["bind","abstract override fun bind(executor: IQueryExecutor<In>): IMonoQuery<Out>","org.modelix.modelql.core.IMonoUnboundQuery.bind"]},{"name":"abstract suspend fun asFlow(): StepFlow<ElementOut>","description":"org.modelix.modelql.core.IQuery.asFlow","location":"modelql-core/org.modelix.modelql.core/-i-query/as-flow.html","searchKeys":["asFlow","abstract suspend fun asFlow(): StepFlow<ElementOut>","org.modelix.modelql.core.IQuery.asFlow"]},{"name":"abstract suspend fun execute(): IStepOutput<AggregationOut>","description":"org.modelix.modelql.core.IQuery.execute","location":"modelql-core/org.modelix.modelql.core/-i-query/execute.html","searchKeys":["execute","abstract suspend fun execute(): IStepOutput<AggregationOut>","org.modelix.modelql.core.IQuery.execute"]},{"name":"abstract suspend fun execute(evaluationContext: QueryEvaluationContext, input: IStepOutput<In>): IStepOutput<AggregationOut>","description":"org.modelix.modelql.core.IUnboundQuery.execute","location":"modelql-core/org.modelix.modelql.core/-i-unbound-query/execute.html","searchKeys":["execute","abstract suspend fun execute(evaluationContext: QueryEvaluationContext, input: IStepOutput<In>): IStepOutput<AggregationOut>","org.modelix.modelql.core.IUnboundQuery.execute"]},{"name":"abstract val coroutineScope: CoroutineScope?","description":"org.modelix.modelql.core.IFlowInstantiationContext.coroutineScope","location":"modelql-core/org.modelix.modelql.core/-i-flow-instantiation-context/coroutine-scope.html","searchKeys":["coroutineScope","abstract val coroutineScope: CoroutineScope?","org.modelix.modelql.core.IFlowInstantiationContext.coroutineScope"]},{"name":"abstract val eighth: E8","description":"org.modelix.modelql.core.IZip8Output.eighth","location":"modelql-core/org.modelix.modelql.core/-i-zip8-output/eighth.html","searchKeys":["eighth","abstract val eighth: E8","org.modelix.modelql.core.IZip8Output.eighth"]},{"name":"abstract val evaluationContext: QueryEvaluationContext","description":"org.modelix.modelql.core.IFlowInstantiationContext.evaluationContext","location":"modelql-core/org.modelix.modelql.core/-i-flow-instantiation-context/evaluation-context.html","searchKeys":["evaluationContext","abstract val evaluationContext: QueryEvaluationContext","org.modelix.modelql.core.IFlowInstantiationContext.evaluationContext"]},{"name":"abstract val fifth: E5","description":"org.modelix.modelql.core.IZip5Output.fifth","location":"modelql-core/org.modelix.modelql.core/-i-zip5-output/fifth.html","searchKeys":["fifth","abstract val fifth: E5","org.modelix.modelql.core.IZip5Output.fifth"]},{"name":"abstract val first: E1","description":"org.modelix.modelql.core.IZip1Output.first","location":"modelql-core/org.modelix.modelql.core/-i-zip1-output/first.html","searchKeys":["first","abstract val first: E1","org.modelix.modelql.core.IZip1Output.first"]},{"name":"abstract val fourth: E4","description":"org.modelix.modelql.core.IZip4Output.fourth","location":"modelql-core/org.modelix.modelql.core/-i-zip4-output/fourth.html","searchKeys":["fourth","abstract val fourth: E4","org.modelix.modelql.core.IZip4Output.fourth"]},{"name":"abstract val input: IMonoStep<In>","description":"org.modelix.modelql.core.IFragmentBuilder.input","location":"modelql-core/org.modelix.modelql.core/-i-fragment-builder/input.html","searchKeys":["input","abstract val input: IMonoStep<In>","org.modelix.modelql.core.IFragmentBuilder.input"]},{"name":"abstract val ninth: E9","description":"org.modelix.modelql.core.IZip9Output.ninth","location":"modelql-core/org.modelix.modelql.core/-i-zip9-output/ninth.html","searchKeys":["ninth","abstract val ninth: E9","org.modelix.modelql.core.IZip9Output.ninth"]},{"name":"abstract val owner: QueryReference<*>","description":"org.modelix.modelql.core.IStep.owner","location":"modelql-core/org.modelix.modelql.core/-i-step/owner.html","searchKeys":["owner","abstract val owner: QueryReference<*>","org.modelix.modelql.core.IStep.owner"]},{"name":"abstract val query: Q","description":"org.modelix.modelql.core.IQueryReference.query","location":"modelql-core/org.modelix.modelql.core/-i-query-reference/query.html","searchKeys":["query","abstract val query: Q","org.modelix.modelql.core.IQueryReference.query"]},{"name":"abstract val reference: IQueryReference<IUnboundQuery<In, AggregationOut, ElementOut>>","description":"org.modelix.modelql.core.IUnboundQuery.reference","location":"modelql-core/org.modelix.modelql.core/-i-unbound-query/reference.html","searchKeys":["reference","abstract val reference: IQueryReference<IUnboundQuery<In, AggregationOut, ElementOut>>","org.modelix.modelql.core.IUnboundQuery.reference"]},{"name":"abstract val second: E2","description":"org.modelix.modelql.core.IZip2Output.second","location":"modelql-core/org.modelix.modelql.core/-i-zip2-output/second.html","searchKeys":["second","abstract val second: E2","org.modelix.modelql.core.IZip2Output.second"]},{"name":"abstract val seventh: E7","description":"org.modelix.modelql.core.IZip7Output.seventh","location":"modelql-core/org.modelix.modelql.core/-i-zip7-output/seventh.html","searchKeys":["seventh","abstract val seventh: E7","org.modelix.modelql.core.IZip7Output.seventh"]},{"name":"abstract val sixth: E6","description":"org.modelix.modelql.core.IZip6Output.sixth","location":"modelql-core/org.modelix.modelql.core/-i-zip6-output/sixth.html","searchKeys":["sixth","abstract val sixth: E6","org.modelix.modelql.core.IZip6Output.sixth"]},{"name":"abstract val third: E3","description":"org.modelix.modelql.core.IZip3Output.third","location":"modelql-core/org.modelix.modelql.core/-i-zip3-output/third.html","searchKeys":["third","abstract val third: E3","org.modelix.modelql.core.IZip3Output.third"]},{"name":"abstract val value: E","description":"org.modelix.modelql.core.IStepOutput.value","location":"modelql-core/org.modelix.modelql.core/-i-step-output/value.html","searchKeys":["value","abstract val value: E","org.modelix.modelql.core.IStepOutput.value"]},{"name":"abstract val values: List<Common>","description":"org.modelix.modelql.core.IZipOutput.values","location":"modelql-core/org.modelix.modelql.core/-i-zip-output/values.html","searchKeys":["values","abstract val values: List<Common>","org.modelix.modelql.core.IZipOutput.values"]},{"name":"class AllowEmptyStep<E> : IdentityStep<E> ","description":"org.modelix.modelql.core.AllowEmptyStep","location":"modelql-core/org.modelix.modelql.core/-allow-empty-step/index.html","searchKeys":["AllowEmptyStep","class AllowEmptyStep<E> : IdentityStep<E> ","org.modelix.modelql.core.AllowEmptyStep"]},{"name":"class AndOperatorStep : SimpleMonoTransformingStep<IZipOutput<Boolean>, Boolean> ","description":"org.modelix.modelql.core.AndOperatorStep","location":"modelql-core/org.modelix.modelql.core/-and-operator-step/index.html","searchKeys":["AndOperatorStep","class AndOperatorStep : SimpleMonoTransformingStep<IZipOutput<Boolean>, Boolean> ","org.modelix.modelql.core.AndOperatorStep"]},{"name":"class AssertNotEmptyStep<E> : IdentityStep<E> ","description":"org.modelix.modelql.core.AssertNotEmptyStep","location":"modelql-core/org.modelix.modelql.core/-assert-not-empty-step/index.html","searchKeys":["AssertNotEmptyStep","class AssertNotEmptyStep<E> : IdentityStep<E> ","org.modelix.modelql.core.AssertNotEmptyStep"]},{"name":"class BulkQueryExecutor : IBulkQueryExecutor","description":"org.modelix.modelql.core.BulkQueryExecutor","location":"modelql-core/org.modelix.modelql.core/-bulk-query-executor/index.html","searchKeys":["BulkQueryExecutor","class BulkQueryExecutor : IBulkQueryExecutor","org.modelix.modelql.core.BulkQueryExecutor"]},{"name":"class CollectionSizeStep : SimpleMonoTransformingStep<Collection<*>, Int> ","description":"org.modelix.modelql.core.CollectionSizeStep","location":"modelql-core/org.modelix.modelql.core/-collection-size-step/index.html","searchKeys":["CollectionSizeStep","class CollectionSizeStep : SimpleMonoTransformingStep<Collection<*>, Int> ","org.modelix.modelql.core.CollectionSizeStep"]},{"name":"class CollectorStepOutput<E, InternalCollectionT, CollectionT>(val input: List<IStepOutput<E>>, val internalCollection: InternalCollectionT, val output: CollectionT) : IStepOutput<CollectionT> ","description":"org.modelix.modelql.core.CollectorStepOutput","location":"modelql-core/org.modelix.modelql.core/-collector-step-output/index.html","searchKeys":["CollectorStepOutput","class CollectorStepOutput<E, InternalCollectionT, CollectionT>(val input: List<IStepOutput<E>>, val internalCollection: InternalCollectionT, val output: CollectionT) : IStepOutput<CollectionT> ","org.modelix.modelql.core.CollectorStepOutput"]},{"name":"class CombiningSequence<Common>(sequences: Array<Sequence<Common>>) : Sequence<ZipNOutputC<Common>> ","description":"org.modelix.modelql.core.CombiningSequence","location":"modelql-core/org.modelix.modelql.core/-combining-sequence/index.html","searchKeys":["CombiningSequence","class CombiningSequence<Common>(sequences: Array<Sequence<Common>>) : Sequence<ZipNOutputC<Common>> ","org.modelix.modelql.core.CombiningSequence"]},{"name":"class CountDescriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.CountingStep.CountDescriptor","location":"modelql-core/org.modelix.modelql.core/-counting-step/-count-descriptor/index.html","searchKeys":["CountDescriptor","class CountDescriptor : CoreStepDescriptor","org.modelix.modelql.core.CountingStep.CountDescriptor"]},{"name":"class CountingStep : AggregationStep<Any?, Int> ","description":"org.modelix.modelql.core.CountingStep","location":"modelql-core/org.modelix.modelql.core/-counting-step/index.html","searchKeys":["CountingStep","class CountingStep : AggregationStep<Any?, Int> ","org.modelix.modelql.core.CountingStep"]},{"name":"class CrossQueryReferenceException(message: String) : Exception","description":"org.modelix.modelql.core.CrossQueryReferenceException","location":"modelql-core/org.modelix.modelql.core/-cross-query-reference-exception/index.html","searchKeys":["CrossQueryReferenceException","class CrossQueryReferenceException(message: String) : Exception","org.modelix.modelql.core.CrossQueryReferenceException"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.AllowEmptyStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-allow-empty-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.AllowEmptyStep.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.AndOperatorStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-and-operator-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.AndOperatorStep.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.AssertNotEmptyStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-assert-not-empty-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.AssertNotEmptyStep.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.CollectionSizeStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-collection-size-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.CollectionSizeStep.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.EmptyStringIfNullStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-empty-string-if-null-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.EmptyStringIfNullStep.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.EqualsOperatorStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-equals-operator-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.EqualsOperatorStep.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.FirstOrNullStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-first-or-null-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.FirstOrNullStep.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.InPredicate.Descriptor","location":"modelql-core/org.modelix.modelql.core/-in-predicate/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.InPredicate.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.IsEmptyStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-is-empty-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.IsEmptyStep.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.IsNullPredicateStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-is-null-predicate-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.IsNullPredicateStep.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.JoinStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-join-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.JoinStep.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.ListCollectorStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-list-collector-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.ListCollectorStep.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.MapAccessStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-map-access-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.MapAccessStep.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.MapCollectorStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-map-collector-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.MapCollectorStep.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.OrOperatorStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-or-operator-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.OrOperatorStep.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.QueryInput.Descriptor","location":"modelql-core/org.modelix.modelql.core/-query-input/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.QueryInput.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.SetCollectorStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-set-collector-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.SetCollectorStep.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.SharedStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-shared-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.SharedStep.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.SingleStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-single-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.SingleStep.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.StringToBooleanStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-string-to-boolean-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.StringToBooleanStep.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.StringToIntStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-string-to-int-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.StringToIntStep.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.ToStringStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-to-string-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.ToStringStep.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.WithIndexStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-with-index-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.WithIndexStep.Descriptor"]},{"name":"class Descriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.ZipStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-zip-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor : CoreStepDescriptor","org.modelix.modelql.core.ZipStep.Descriptor"]},{"name":"class Descriptor(val alternative: QueryId) : CoreStepDescriptor","description":"org.modelix.modelql.core.IfEmptyStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-if-empty-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor(val alternative: QueryId) : CoreStepDescriptor","org.modelix.modelql.core.IfEmptyStep.Descriptor"]},{"name":"class Descriptor(val cases: List<Pair<QueryId, QueryId>>, val elseCase: QueryId? = null) : StepDescriptor","description":"org.modelix.modelql.core.WhenStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-when-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor(val cases: List<Pair<QueryId, QueryId>>, val elseCase: QueryId? = null) : StepDescriptor","org.modelix.modelql.core.WhenStep.Descriptor"]},{"name":"class Descriptor(val count: Int) : CoreStepDescriptor","description":"org.modelix.modelql.core.DropStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-drop-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor(val count: Int) : CoreStepDescriptor","org.modelix.modelql.core.DropStep.Descriptor"]},{"name":"class Descriptor(val count: Int) : CoreStepDescriptor","description":"org.modelix.modelql.core.TakeStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-take-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor(val count: Int) : CoreStepDescriptor","org.modelix.modelql.core.TakeStep.Descriptor"]},{"name":"class Descriptor(val element: Any?, val elementType: String) : CoreStepDescriptor","description":"org.modelix.modelql.core.ConstantSourceStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor(val element: Any?, val elementType: String) : CoreStepDescriptor","org.modelix.modelql.core.ConstantSourceStep.Descriptor"]},{"name":"class Descriptor(val index: Int) : CoreStepDescriptor","description":"org.modelix.modelql.core.ZipElementAccessStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-zip-element-access-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor(val index: Int) : CoreStepDescriptor","org.modelix.modelql.core.ZipElementAccessStep.Descriptor"]},{"name":"class Descriptor(val pattern: String) : CoreStepDescriptor","description":"org.modelix.modelql.core.RegexPredicate.Descriptor","location":"modelql-core/org.modelix.modelql.core/-regex-predicate/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor(val pattern: String) : CoreStepDescriptor","org.modelix.modelql.core.RegexPredicate.Descriptor"]},{"name":"class Descriptor(val prefix: String = \"\") : CoreStepDescriptor","description":"org.modelix.modelql.core.PrintStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-print-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor(val prefix: String = \"\") : CoreStepDescriptor","org.modelix.modelql.core.PrintStep.Descriptor"]},{"name":"class Descriptor(val queryId: QueryId) : CoreStepDescriptor","description":"org.modelix.modelql.core.FilteringStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-filtering-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor(val queryId: QueryId) : CoreStepDescriptor","org.modelix.modelql.core.FilteringStep.Descriptor"]},{"name":"class Descriptor(val queryId: QueryId) : CoreStepDescriptor","description":"org.modelix.modelql.core.FlatMapStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-flat-map-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor(val queryId: QueryId) : CoreStepDescriptor","org.modelix.modelql.core.FlatMapStep.Descriptor"]},{"name":"class Descriptor(val queryId: QueryId) : CoreStepDescriptor","description":"org.modelix.modelql.core.MapIfNotNullStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-map-if-not-null-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor(val queryId: QueryId) : CoreStepDescriptor","org.modelix.modelql.core.MapIfNotNullStep.Descriptor"]},{"name":"class Descriptor(val queryId: QueryId) : CoreStepDescriptor","description":"org.modelix.modelql.core.MappingStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-mapping-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor(val queryId: QueryId) : CoreStepDescriptor","org.modelix.modelql.core.MappingStep.Descriptor"]},{"name":"class Descriptor(val queryId: QueryId) : StepDescriptor","description":"org.modelix.modelql.core.QueryCallStep.Descriptor","location":"modelql-core/org.modelix.modelql.core/-query-call-step/-descriptor/index.html","searchKeys":["Descriptor","class Descriptor(val queryId: QueryId) : StepDescriptor","org.modelix.modelql.core.QueryCallStep.Descriptor"]},{"name":"class DropStep<E>(val count: Int) : TransformingStep<E, E> , IMonoStep<E> , IFluxStep<E> ","description":"org.modelix.modelql.core.DropStep","location":"modelql-core/org.modelix.modelql.core/-drop-step/index.html","searchKeys":["DropStep","class DropStep<E>(val count: Int) : TransformingStep<E, E> , IMonoStep<E> , IFluxStep<E> ","org.modelix.modelql.core.DropStep"]},{"name":"class EmptyStringIfNullStep : MonoTransformingStep<String?, String> ","description":"org.modelix.modelql.core.EmptyStringIfNullStep","location":"modelql-core/org.modelix.modelql.core/-empty-string-if-null-step/index.html","searchKeys":["EmptyStringIfNullStep","class EmptyStringIfNullStep : MonoTransformingStep<String?, String> ","org.modelix.modelql.core.EmptyStringIfNullStep"]},{"name":"class EqualsOperatorStep<E> : TransformingStepWithParameter<E, E, E, Boolean> ","description":"org.modelix.modelql.core.EqualsOperatorStep","location":"modelql-core/org.modelix.modelql.core/-equals-operator-step/index.html","searchKeys":["EqualsOperatorStep","class EqualsOperatorStep<E> : TransformingStepWithParameter<E, E, E, Boolean> ","org.modelix.modelql.core.EqualsOperatorStep"]},{"name":"class ExecuteLocalStep<In, Out>(transformation: (In) -> Out) : LocalMappingStep<In, Out> ","description":"org.modelix.modelql.core.ExecuteLocalStep","location":"modelql-core/org.modelix.modelql.core/-execute-local-step/index.html","searchKeys":["ExecuteLocalStep","class ExecuteLocalStep<In, Out>(transformation: (In) -> Out) : LocalMappingStep<In, Out> ","org.modelix.modelql.core.ExecuteLocalStep"]},{"name":"class FilteringStep<E>(val condition: MonoUnboundQuery<E, Boolean?>) : TransformingStep<E, E> , IMonoStep<E> , IFluxStep<E> ","description":"org.modelix.modelql.core.FilteringStep","location":"modelql-core/org.modelix.modelql.core/-filtering-step/index.html","searchKeys":["FilteringStep","class FilteringStep<E>(val condition: MonoUnboundQuery<E, Boolean?>) : TransformingStep<E, E> , IMonoStep<E> , IFluxStep<E> ","org.modelix.modelql.core.FilteringStep"]},{"name":"class FirstElementDescriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.FirstElementStep.FirstElementDescriptor","location":"modelql-core/org.modelix.modelql.core/-first-element-step/-first-element-descriptor/index.html","searchKeys":["FirstElementDescriptor","class FirstElementDescriptor : CoreStepDescriptor","org.modelix.modelql.core.FirstElementStep.FirstElementDescriptor"]},{"name":"class FirstElementStep<E> : MonoTransformingStep<E, E> ","description":"org.modelix.modelql.core.FirstElementStep","location":"modelql-core/org.modelix.modelql.core/-first-element-step/index.html","searchKeys":["FirstElementStep","class FirstElementStep<E> : MonoTransformingStep<E, E> ","org.modelix.modelql.core.FirstElementStep"]},{"name":"class FirstOrNullStep<E> : AggregationStep<E, E?> ","description":"org.modelix.modelql.core.FirstOrNullStep","location":"modelql-core/org.modelix.modelql.core/-first-or-null-step/index.html","searchKeys":["FirstOrNullStep","class FirstOrNullStep<E> : AggregationStep<E, E?> ","org.modelix.modelql.core.FirstOrNullStep"]},{"name":"class FlatMapStep<In, Out>(val query: FluxUnboundQuery<In, Out>) : TransformingStep<In, Out> , IFluxStep<Out> ","description":"org.modelix.modelql.core.FlatMapStep","location":"modelql-core/org.modelix.modelql.core/-flat-map-step/index.html","searchKeys":["FlatMapStep","class FlatMapStep<In, Out>(val query: FluxUnboundQuery<In, Out>) : TransformingStep<In, Out> , IFluxStep<Out> ","org.modelix.modelql.core.FlatMapStep"]},{"name":"class FlowInstantiationContext(var evaluationContext: QueryEvaluationContext, val coroutineScope: CoroutineScope?, val query: UnboundQuery<*, *, *>) : IFlowInstantiationContext","description":"org.modelix.modelql.core.FlowInstantiationContext","location":"modelql-core/org.modelix.modelql.core/-flow-instantiation-context/index.html","searchKeys":["FlowInstantiationContext","class FlowInstantiationContext(var evaluationContext: QueryEvaluationContext, val coroutineScope: CoroutineScope?, val query: UnboundQuery<*, *, *>) : IFlowInstantiationContext","org.modelix.modelql.core.FlowInstantiationContext"]},{"name":"class FluxUnboundQuery<In, ElementOut>(inputStep: QueryInput<In>, outputStep: IFluxStep<ElementOut>, reference: QueryReference<*>, sharedSteps: List<SharedStep<*>>) : UnboundQuery<In, List<IStepOutput<ElementOut>>, ElementOut> , IFluxUnboundQuery<In, ElementOut> ","description":"org.modelix.modelql.core.FluxUnboundQuery","location":"modelql-core/org.modelix.modelql.core/-flux-unbound-query/index.html","searchKeys":["FluxUnboundQuery","class FluxUnboundQuery<In, ElementOut>(inputStep: QueryInput<In>, outputStep: IFluxStep<ElementOut>, reference: QueryReference<*>, sharedSteps: List<SharedStep<*>>) : UnboundQuery<In, List<IStepOutput<ElementOut>>, ElementOut> , IFluxUnboundQuery<In, ElementOut> ","org.modelix.modelql.core.FluxUnboundQuery"]},{"name":"class FragmentBuilder<E, Context> : IRecursiveFragmentBuilder<E, Context> , IUnboundFragmentInternal<E, Context> ","description":"org.modelix.modelql.core.FragmentBuilder","location":"modelql-core/org.modelix.modelql.core/-fragment-builder/index.html","searchKeys":["FragmentBuilder","class FragmentBuilder<E, Context> : IRecursiveFragmentBuilder<E, Context> , IUnboundFragmentInternal<E, Context> ","org.modelix.modelql.core.FragmentBuilder"]},{"name":"class IdentityStepDescriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.IdentityStep.IdentityStepDescriptor","location":"modelql-core/org.modelix.modelql.core/-identity-step/-identity-step-descriptor/index.html","searchKeys":["IdentityStepDescriptor","class IdentityStepDescriptor : CoreStepDescriptor","org.modelix.modelql.core.IdentityStep.IdentityStepDescriptor"]},{"name":"class IfEmptyStep<In : Out, Out>(val alternative: UnboundQuery<Unit, *, Out>) : TransformingStep<In, Out> , IFluxOrMonoStep<Out> ","description":"org.modelix.modelql.core.IfEmptyStep","location":"modelql-core/org.modelix.modelql.core/-if-empty-step/index.html","searchKeys":["IfEmptyStep","class IfEmptyStep<In : Out, Out>(val alternative: UnboundQuery<Unit, *, Out>) : TransformingStep<In, Out> , IFluxOrMonoStep<Out> ","org.modelix.modelql.core.IfEmptyStep"]},{"name":"class InPredicate<E> : TransformingStepWithParameter<E, Set<E>, Any?, Boolean> ","description":"org.modelix.modelql.core.InPredicate","location":"modelql-core/org.modelix.modelql.core/-in-predicate/index.html","searchKeys":["InPredicate","class InPredicate<E> : TransformingStepWithParameter<E, Set<E>, Any?, Boolean> ","org.modelix.modelql.core.InPredicate"]},{"name":"class IntSumDescriptor(val operand: Int) : CoreStepDescriptor","description":"org.modelix.modelql.core.IntSumStep.IntSumDescriptor","location":"modelql-core/org.modelix.modelql.core/-int-sum-step/-int-sum-descriptor/index.html","searchKeys":["IntSumDescriptor","class IntSumDescriptor(val operand: Int) : CoreStepDescriptor","org.modelix.modelql.core.IntSumStep.IntSumDescriptor"]},{"name":"class IntSumStep(val operand: Int) : SimpleMonoTransformingStep<Int, Int> ","description":"org.modelix.modelql.core.IntSumStep","location":"modelql-core/org.modelix.modelql.core/-int-sum-step/index.html","searchKeys":["IntSumStep","class IntSumStep(val operand: Int) : SimpleMonoTransformingStep<Int, Int> ","org.modelix.modelql.core.IntSumStep"]},{"name":"class IsEmptyStep : AggregationStep<Any?, Boolean> ","description":"org.modelix.modelql.core.IsEmptyStep","location":"modelql-core/org.modelix.modelql.core/-is-empty-step/index.html","searchKeys":["IsEmptyStep","class IsEmptyStep : AggregationStep<Any?, Boolean> ","org.modelix.modelql.core.IsEmptyStep"]},{"name":"class IsNullPredicateStep<In> : SimpleMonoTransformingStep<In, Boolean> ","description":"org.modelix.modelql.core.IsNullPredicateStep","location":"modelql-core/org.modelix.modelql.core/-is-null-predicate-step/index.html","searchKeys":["IsNullPredicateStep","class IsNullPredicateStep<In> : SimpleMonoTransformingStep<In, Boolean> ","org.modelix.modelql.core.IsNullPredicateStep"]},{"name":"class JoinStep<E> : ProducingStep<E> , IConsumingStep<E> , IFluxStep<E> ","description":"org.modelix.modelql.core.JoinStep","location":"modelql-core/org.modelix.modelql.core/-join-step/index.html","searchKeys":["JoinStep","class JoinStep<E> : ProducingStep<E> , IConsumingStep<E> , IFluxStep<E> ","org.modelix.modelql.core.JoinStep"]},{"name":"class ListCollectorStep<E> : CollectorStep<E, List<E>> ","description":"org.modelix.modelql.core.ListCollectorStep","location":"modelql-core/org.modelix.modelql.core/-list-collector-step/index.html","searchKeys":["ListCollectorStep","class ListCollectorStep<E> : CollectorStep<E, List<E>> ","org.modelix.modelql.core.ListCollectorStep"]},{"name":"class ListCollectorStepOutputSerializer<E>(inputElementSerializer: KSerializer<IStepOutput<E>>) : CollectorStepOutputSerializer<E, List<IStepOutput<E>>, List<E>> ","description":"org.modelix.modelql.core.ListCollectorStepOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-list-collector-step-output-serializer/index.html","searchKeys":["ListCollectorStepOutputSerializer","class ListCollectorStepOutputSerializer<E>(inputElementSerializer: KSerializer<IStepOutput<E>>) : CollectorStepOutputSerializer<E, List<IStepOutput<E>>, List<E>> ","org.modelix.modelql.core.ListCollectorStepOutputSerializer"]},{"name":"class LocalMappingSerializer<In, Out>(val step: LocalMappingStep<In, Out>, val inputSerializer: KSerializer<out IStepOutput<In>>) : KSerializer<Out> ","description":"org.modelix.modelql.core.LocalMappingSerializer","location":"modelql-core/org.modelix.modelql.core/-local-mapping-serializer/index.html","searchKeys":["LocalMappingSerializer","class LocalMappingSerializer<In, Out>(val step: LocalMappingStep<In, Out>, val inputSerializer: KSerializer<out IStepOutput<In>>) : KSerializer<Out> ","org.modelix.modelql.core.LocalMappingSerializer"]},{"name":"class MapAccessStep<K, V> : TransformingStepWithParameter<Map<K, V>, K, Any?, V?> ","description":"org.modelix.modelql.core.MapAccessStep","location":"modelql-core/org.modelix.modelql.core/-map-access-step/index.html","searchKeys":["MapAccessStep","class MapAccessStep<K, V> : TransformingStepWithParameter<Map<K, V>, K, Any?, V?> ","org.modelix.modelql.core.MapAccessStep"]},{"name":"class MapCollectorStep<K, V> : CollectorStep<IZip2Output<Any?, K, V>, Map<K, V>> ","description":"org.modelix.modelql.core.MapCollectorStep","location":"modelql-core/org.modelix.modelql.core/-map-collector-step/index.html","searchKeys":["MapCollectorStep","class MapCollectorStep<K, V> : CollectorStep<IZip2Output<Any?, K, V>, Map<K, V>> ","org.modelix.modelql.core.MapCollectorStep"]},{"name":"class MapCollectorStepOutputSerializer<K, V>(inputElementSerializer: KSerializer<IStepOutput<IZip2Output<Any?, K, V>>>) : CollectorStepOutputSerializer<IZip2Output<Any?, K, V>, Map<K, IStepOutput<V>>, Map<K, V>> ","description":"org.modelix.modelql.core.MapCollectorStepOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-map-collector-step-output-serializer/index.html","searchKeys":["MapCollectorStepOutputSerializer","class MapCollectorStepOutputSerializer<K, V>(inputElementSerializer: KSerializer<IStepOutput<IZip2Output<Any?, K, V>>>) : CollectorStepOutputSerializer<IZip2Output<Any?, K, V>, Map<K, IStepOutput<V>>, Map<K, V>> ","org.modelix.modelql.core.MapCollectorStepOutputSerializer"]},{"name":"class MapIfNotNullStep<In : Any, Out>(val query: MonoUnboundQuery<In, Out>) : MonoTransformingStep<In?, Out?> ","description":"org.modelix.modelql.core.MapIfNotNullStep","location":"modelql-core/org.modelix.modelql.core/-map-if-not-null-step/index.html","searchKeys":["MapIfNotNullStep","class MapIfNotNullStep<In : Any, Out>(val query: MonoUnboundQuery<In, Out>) : MonoTransformingStep<In?, Out?> ","org.modelix.modelql.core.MapIfNotNullStep"]},{"name":"class MappingStep<In, Out>(val query: MonoUnboundQuery<In, Out>) : MonoTransformingStep<In, Out> ","description":"org.modelix.modelql.core.MappingStep","location":"modelql-core/org.modelix.modelql.core/-mapping-step/index.html","searchKeys":["MappingStep","class MappingStep<In, Out>(val query: MonoUnboundQuery<In, Out>) : MonoTransformingStep<In, Out> ","org.modelix.modelql.core.MappingStep"]},{"name":"class MonoUnboundQuery<In, ElementOut>(inputStep: QueryInput<In>, outputStep: IMonoStep<ElementOut>, reference: QueryReference<*>, sharedSteps: List<SharedStep<*>>) : UnboundQuery<In, ElementOut, ElementOut> , IMonoUnboundQuery<In, ElementOut> ","description":"org.modelix.modelql.core.MonoUnboundQuery","location":"modelql-core/org.modelix.modelql.core/-mono-unbound-query/index.html","searchKeys":["MonoUnboundQuery","class MonoUnboundQuery<In, ElementOut>(inputStep: QueryInput<In>, outputStep: IMonoStep<ElementOut>, reference: QueryReference<*>, sharedSteps: List<SharedStep<*>>) : UnboundQuery<In, ElementOut, ElementOut> , IMonoUnboundQuery<In, ElementOut> ","org.modelix.modelql.core.MonoUnboundQuery"]},{"name":"class MultiplexedOutput<out E>(val muxIndex: Int, val output: IStepOutput<E>) : IStepOutput<E> ","description":"org.modelix.modelql.core.MultiplexedOutput","location":"modelql-core/org.modelix.modelql.core/-multiplexed-output/index.html","searchKeys":["MultiplexedOutput","class MultiplexedOutput<out E>(val muxIndex: Int, val output: IStepOutput<E>) : IStepOutput<E> ","org.modelix.modelql.core.MultiplexedOutput"]},{"name":"class NotDescriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.NotOperatorStep.NotDescriptor","location":"modelql-core/org.modelix.modelql.core/-not-operator-step/-not-descriptor/index.html","searchKeys":["NotDescriptor","class NotDescriptor : CoreStepDescriptor","org.modelix.modelql.core.NotOperatorStep.NotDescriptor"]},{"name":"class NotOperatorStep : SimpleMonoTransformingStep<Boolean, Boolean> ","description":"org.modelix.modelql.core.NotOperatorStep","location":"modelql-core/org.modelix.modelql.core/-not-operator-step/index.html","searchKeys":["NotOperatorStep","class NotOperatorStep : SimpleMonoTransformingStep<Boolean, Boolean> ","org.modelix.modelql.core.NotOperatorStep"]},{"name":"class NullIfEmpty<E> : MonoTransformingStep<E, E?> ","description":"org.modelix.modelql.core.NullIfEmpty","location":"modelql-core/org.modelix.modelql.core/-null-if-empty/index.html","searchKeys":["NullIfEmpty","class NullIfEmpty<E> : MonoTransformingStep<E, E?> ","org.modelix.modelql.core.NullIfEmpty"]},{"name":"class OrNullDescriptor : CoreStepDescriptor","description":"org.modelix.modelql.core.NullIfEmpty.OrNullDescriptor","location":"modelql-core/org.modelix.modelql.core/-null-if-empty/-or-null-descriptor/index.html","searchKeys":["OrNullDescriptor","class OrNullDescriptor : CoreStepDescriptor","org.modelix.modelql.core.NullIfEmpty.OrNullDescriptor"]},{"name":"class OrOperatorStep : SimpleMonoTransformingStep<IZipOutput<Boolean>, Boolean> ","description":"org.modelix.modelql.core.OrOperatorStep","location":"modelql-core/org.modelix.modelql.core/-or-operator-step/index.html","searchKeys":["OrOperatorStep","class OrOperatorStep : SimpleMonoTransformingStep<IZipOutput<Boolean>, Boolean> ","org.modelix.modelql.core.OrOperatorStep"]},{"name":"class PrintStep<E>(val prefix: String) : MonoTransformingStep<E, E> ","description":"org.modelix.modelql.core.PrintStep","location":"modelql-core/org.modelix.modelql.core/-print-step/index.html","searchKeys":["PrintStep","class PrintStep<E>(val prefix: String) : MonoTransformingStep<E, E> ","org.modelix.modelql.core.PrintStep"]},{"name":"class QueryBuilderContext<In, Out, Q : IUnboundQuery<*, *, *>> : IQueryBuilderContext<In, Out> ","description":"org.modelix.modelql.core.QueryBuilderContext","location":"modelql-core/org.modelix.modelql.core/-query-builder-context/index.html","searchKeys":["QueryBuilderContext","class QueryBuilderContext<In, Out, Q : IUnboundQuery<*, *, *>> : IQueryBuilderContext<In, Out> ","org.modelix.modelql.core.QueryBuilderContext"]},{"name":"class QueryCallStep<In, Out>(val queryRef: QueryReference<out IUnboundQuery<In, *, Out>>) : TransformingStep<In, Out> , IFluxStep<Out> , IMonoStep<Out> ","description":"org.modelix.modelql.core.QueryCallStep","location":"modelql-core/org.modelix.modelql.core/-query-call-step/index.html","searchKeys":["QueryCallStep","class QueryCallStep<In, Out>(val queryRef: QueryReference<out IUnboundQuery<In, *, Out>>) : TransformingStep<In, Out> , IFluxStep<Out> , IMonoStep<Out> ","org.modelix.modelql.core.QueryCallStep"]},{"name":"class QueryDeserializationContext(val graphDescriptor: QueryGraphDescriptor)","description":"org.modelix.modelql.core.QueryDeserializationContext","location":"modelql-core/org.modelix.modelql.core/-query-deserialization-context/index.html","searchKeys":["QueryDeserializationContext","class QueryDeserializationContext(val graphDescriptor: QueryGraphDescriptor)","org.modelix.modelql.core.QueryDeserializationContext"]},{"name":"class QueryGraphDescriptorBuilder","description":"org.modelix.modelql.core.QueryGraphDescriptorBuilder","location":"modelql-core/org.modelix.modelql.core/-query-graph-descriptor-builder/index.html","searchKeys":["QueryGraphDescriptorBuilder","class QueryGraphDescriptorBuilder","org.modelix.modelql.core.QueryGraphDescriptorBuilder"]},{"name":"class QueryInput<E> : ProducingStep<E> , IMonoStep<E> ","description":"org.modelix.modelql.core.QueryInput","location":"modelql-core/org.modelix.modelql.core/-query-input/index.html","searchKeys":["QueryInput","class QueryInput<E> : ProducingStep<E> , IMonoStep<E> ","org.modelix.modelql.core.QueryInput"]},{"name":"class QueryReference<Q : IUnboundQuery<*, *, *>>(initiallyProvidedQuery: Q?, queryId: Long?, queryInitializer: () -> Q?) : IQueryReference<Q> ","description":"org.modelix.modelql.core.QueryReference","location":"modelql-core/org.modelix.modelql.core/-query-reference/index.html","searchKeys":["QueryReference","class QueryReference<Q : IUnboundQuery<*, *, *>>(initiallyProvidedQuery: Q?, queryId: Long?, queryInitializer: () -> Q?) : IQueryReference<Q> ","org.modelix.modelql.core.QueryReference"]},{"name":"class RecursiveQuerySerializer<Out>(val query: IUnboundQuery<*, *, Out>, val owner: QueryCallStep<*, Out>, val serializationContext: SerializationContext) : KSerializer<IStepOutput<Out>> ","description":"org.modelix.modelql.core.RecursiveQuerySerializer","location":"modelql-core/org.modelix.modelql.core/-recursive-query-serializer/index.html","searchKeys":["RecursiveQuerySerializer","class RecursiveQuerySerializer<Out>(val query: IUnboundQuery<*, *, Out>, val owner: QueryCallStep<*, Out>, val serializationContext: SerializationContext) : KSerializer<IStepOutput<Out>> ","org.modelix.modelql.core.RecursiveQuerySerializer"]},{"name":"class RegexPredicate(val regex: Regex) : SimpleMonoTransformingStep<String?, Boolean> ","description":"org.modelix.modelql.core.RegexPredicate","location":"modelql-core/org.modelix.modelql.core/-regex-predicate/index.html","searchKeys":["RegexPredicate","class RegexPredicate(val regex: Regex) : SimpleMonoTransformingStep<String?, Boolean> ","org.modelix.modelql.core.RegexPredicate"]},{"name":"class SerializationContext(val serializersModule: SerializersModule, val queryInputSerializers: Map<QueryInput<*>, KSerializer<IStepOutput<*>>> = emptyMap())","description":"org.modelix.modelql.core.SerializationContext","location":"modelql-core/org.modelix.modelql.core/-serialization-context/index.html","searchKeys":["SerializationContext","class SerializationContext(val serializersModule: SerializersModule, val queryInputSerializers: Map<QueryInput<*>, KSerializer<IStepOutput<*>>> = emptyMap())","org.modelix.modelql.core.SerializationContext"]},{"name":"class Serializer : KSerializer<ConstantSourceStep.Descriptor> ","description":"org.modelix.modelql.core.ConstantSourceStep.Descriptor.Serializer","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/-descriptor/-serializer/index.html","searchKeys":["Serializer","class Serializer : KSerializer<ConstantSourceStep.Descriptor> ","org.modelix.modelql.core.ConstantSourceStep.Descriptor.Serializer"]},{"name":"class SetCollectorStep<E> : CollectorStep<E, Set<E>> ","description":"org.modelix.modelql.core.SetCollectorStep","location":"modelql-core/org.modelix.modelql.core/-set-collector-step/index.html","searchKeys":["SetCollectorStep","class SetCollectorStep<E> : CollectorStep<E, Set<E>> ","org.modelix.modelql.core.SetCollectorStep"]},{"name":"class SetCollectorStepOutputSerializer<E>(inputElementSerializer: KSerializer<IStepOutput<E>>) : CollectorStepOutputSerializer<E, List<IStepOutput<E>>, Set<E>> ","description":"org.modelix.modelql.core.SetCollectorStepOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-set-collector-step-output-serializer/index.html","searchKeys":["SetCollectorStepOutputSerializer","class SetCollectorStepOutputSerializer<E>(inputElementSerializer: KSerializer<IStepOutput<E>>) : CollectorStepOutputSerializer<E, List<IStepOutput<E>>, Set<E>> ","org.modelix.modelql.core.SetCollectorStepOutputSerializer"]},{"name":"class SharedStep<E> : MonoTransformingStep<E, E> ","description":"org.modelix.modelql.core.SharedStep","location":"modelql-core/org.modelix.modelql.core/-shared-step/index.html","searchKeys":["SharedStep","class SharedStep<E> : MonoTransformingStep<E, E> ","org.modelix.modelql.core.SharedStep"]},{"name":"class SimpleQueryExecutor<E>(val input: E) : IQueryExecutor<E> ","description":"org.modelix.modelql.core.SimpleQueryExecutor","location":"modelql-core/org.modelix.modelql.core/-simple-query-executor/index.html","searchKeys":["SimpleQueryExecutor","class SimpleQueryExecutor<E>(val input: E) : IQueryExecutor<E> ","org.modelix.modelql.core.SimpleQueryExecutor"]},{"name":"class SimpleStepOutput<out E>(val value: E, val owner: IProducingStep<E>?) : IStepOutput<E> ","description":"org.modelix.modelql.core.SimpleStepOutput","location":"modelql-core/org.modelix.modelql.core/-simple-step-output/index.html","searchKeys":["SimpleStepOutput","class SimpleStepOutput<out E>(val value: E, val owner: IProducingStep<E>?) : IStepOutput<E> ","org.modelix.modelql.core.SimpleStepOutput"]},{"name":"class SimpleStepOutputSerializer<E>(val valueSerializer: KSerializer<E>, val owner: IProducingStep<E>?) : KSerializer<SimpleStepOutput<E>> ","description":"org.modelix.modelql.core.SimpleStepOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-simple-step-output-serializer/index.html","searchKeys":["SimpleStepOutputSerializer","class SimpleStepOutputSerializer<E>(val valueSerializer: KSerializer<E>, val owner: IProducingStep<E>?) : KSerializer<SimpleStepOutput<E>> ","org.modelix.modelql.core.SimpleStepOutputSerializer"]},{"name":"class SinglePathFlowInstantiationContext(val evaluationContext: QueryEvaluationContext, val queryInput: QueryInput<*>, val inputFlow: StepFlow<*>) : IFlowInstantiationContext","description":"org.modelix.modelql.core.SinglePathFlowInstantiationContext","location":"modelql-core/org.modelix.modelql.core/-single-path-flow-instantiation-context/index.html","searchKeys":["SinglePathFlowInstantiationContext","class SinglePathFlowInstantiationContext(val evaluationContext: QueryEvaluationContext, val queryInput: QueryInput<*>, val inputFlow: StepFlow<*>) : IFlowInstantiationContext","org.modelix.modelql.core.SinglePathFlowInstantiationContext"]},{"name":"class SingleStep<E> : AggregationStep<E, E> ","description":"org.modelix.modelql.core.SingleStep","location":"modelql-core/org.modelix.modelql.core/-single-step/index.html","searchKeys":["SingleStep","class SingleStep<E> : AggregationStep<E, E> ","org.modelix.modelql.core.SingleStep"]},{"name":"class StringContainsDescriptor(val substring: String) : CoreStepDescriptor","description":"org.modelix.modelql.core.StringContainsPredicate.StringContainsDescriptor","location":"modelql-core/org.modelix.modelql.core/-string-contains-predicate/-string-contains-descriptor/index.html","searchKeys":["StringContainsDescriptor","class StringContainsDescriptor(val substring: String) : CoreStepDescriptor","org.modelix.modelql.core.StringContainsPredicate.StringContainsDescriptor"]},{"name":"class StringContainsPredicate(val substring: String) : SimpleMonoTransformingStep<String?, Boolean> ","description":"org.modelix.modelql.core.StringContainsPredicate","location":"modelql-core/org.modelix.modelql.core/-string-contains-predicate/index.html","searchKeys":["StringContainsPredicate","class StringContainsPredicate(val substring: String) : SimpleMonoTransformingStep<String?, Boolean> ","org.modelix.modelql.core.StringContainsPredicate"]},{"name":"class StringToBooleanStep : SimpleMonoTransformingStep<String?, Boolean> ","description":"org.modelix.modelql.core.StringToBooleanStep","location":"modelql-core/org.modelix.modelql.core/-string-to-boolean-step/index.html","searchKeys":["StringToBooleanStep","class StringToBooleanStep : SimpleMonoTransformingStep<String?, Boolean> ","org.modelix.modelql.core.StringToBooleanStep"]},{"name":"class StringToIntStep : SimpleMonoTransformingStep<String?, Int> ","description":"org.modelix.modelql.core.StringToIntStep","location":"modelql-core/org.modelix.modelql.core/-string-to-int-step/index.html","searchKeys":["StringToIntStep","class StringToIntStep : SimpleMonoTransformingStep<String?, Int> ","org.modelix.modelql.core.StringToIntStep"]},{"name":"class TakeStep<E>(val count: Int) : TransformingStep<E, E> , IMonoStep<E> , IFluxStep<E> ","description":"org.modelix.modelql.core.TakeStep","location":"modelql-core/org.modelix.modelql.core/-take-step/index.html","searchKeys":["TakeStep","class TakeStep<E>(val count: Int) : TransformingStep<E, E> , IMonoStep<E> , IFluxStep<E> ","org.modelix.modelql.core.TakeStep"]},{"name":"class ToStringStep : SimpleMonoTransformingStep<Any?, String?> ","description":"org.modelix.modelql.core.ToStringStep","location":"modelql-core/org.modelix.modelql.core/-to-string-step/index.html","searchKeys":["ToStringStep","class ToStringStep : SimpleMonoTransformingStep<Any?, String?> ","org.modelix.modelql.core.ToStringStep"]},{"name":"class VersionAndData<E>(val data: E, val version: String?)","description":"org.modelix.modelql.core.VersionAndData","location":"modelql-core/org.modelix.modelql.core/-version-and-data/index.html","searchKeys":["VersionAndData","class VersionAndData<E>(val data: E, val version: String?)","org.modelix.modelql.core.VersionAndData"]},{"name":"class WhenStep<In, Out>(val cases: List<Pair<IMonoUnboundQuery<In, Boolean?>, IMonoUnboundQuery<In, Out>>>, val elseCase: IMonoUnboundQuery<In, Out>?) : MonoTransformingStep<In, Out> ","description":"org.modelix.modelql.core.WhenStep","location":"modelql-core/org.modelix.modelql.core/-when-step/index.html","searchKeys":["WhenStep","class WhenStep<In, Out>(val cases: List<Pair<IMonoUnboundQuery<In, Boolean?>, IMonoUnboundQuery<In, Out>>>, val elseCase: IMonoUnboundQuery<In, Out>?) : MonoTransformingStep<In, Out> ","org.modelix.modelql.core.WhenStep"]},{"name":"class WhenStepBuilder<In, Out>(input: IMonoStep<In>)","description":"org.modelix.modelql.core.WhenStepBuilder","location":"modelql-core/org.modelix.modelql.core/-when-step-builder/index.html","searchKeys":["WhenStepBuilder","class WhenStepBuilder<In, Out>(input: IMonoStep<In>)","org.modelix.modelql.core.WhenStepBuilder"]},{"name":"class WithIndexStep<E> : MonoTransformingStep<E, IZip2Output<Any?, E, Int>> ","description":"org.modelix.modelql.core.WithIndexStep","location":"modelql-core/org.modelix.modelql.core/-with-index-step/index.html","searchKeys":["WithIndexStep","class WithIndexStep<E> : MonoTransformingStep<E, IZip2Output<Any?, E, Int>> ","org.modelix.modelql.core.WithIndexStep"]},{"name":"class ZipBuilder","description":"org.modelix.modelql.core.ZipBuilder","location":"modelql-core/org.modelix.modelql.core/-zip-builder/index.html","searchKeys":["ZipBuilder","class ZipBuilder","org.modelix.modelql.core.ZipBuilder"]},{"name":"class ZipElementAccessStep<Out>(val index: Int) : MonoTransformingStep<IZipOutput<Any?>, Out> ","description":"org.modelix.modelql.core.ZipElementAccessStep","location":"modelql-core/org.modelix.modelql.core/-zip-element-access-step/index.html","searchKeys":["ZipElementAccessStep","class ZipElementAccessStep<Out>(val index: Int) : MonoTransformingStep<IZipOutput<Any?>, Out> ","org.modelix.modelql.core.ZipElementAccessStep"]},{"name":"class ZipOutputSerializer<CommonT, Out : IZipOutput<CommonT>>(val elementSerializers: Array<KSerializer<IStepOutput<CommonT>>>) : KSerializer<ZipStepOutput<Out, CommonT>> ","description":"org.modelix.modelql.core.ZipOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-zip-output-serializer/index.html","searchKeys":["ZipOutputSerializer","class ZipOutputSerializer<CommonT, Out : IZipOutput<CommonT>>(val elementSerializers: Array<KSerializer<IStepOutput<CommonT>>>) : KSerializer<ZipStepOutput<Out, CommonT>> ","org.modelix.modelql.core.ZipOutputSerializer"]},{"name":"class ZipStepOutput<E : IZipOutput<Common>, Common>(val values: List<IStepOutput<Common>>) : IStepOutput<E> ","description":"org.modelix.modelql.core.ZipStepOutput","location":"modelql-core/org.modelix.modelql.core/-zip-step-output/index.html","searchKeys":["ZipStepOutput","class ZipStepOutput<E : IZipOutput<Common>, Common>(val values: List<IStepOutput<Common>>) : IStepOutput<E> ","org.modelix.modelql.core.ZipStepOutput"]},{"name":"const val modelqlVersion: String","description":"org.modelix.modelql.core.modelqlVersion","location":"modelql-core/org.modelix.modelql.core/modelql-version.html","searchKeys":["modelqlVersion","const val modelqlVersion: String","org.modelix.modelql.core.modelqlVersion"]},{"name":"constructor()","description":"org.modelix.modelql.core.AggregationStep.AggregationStep","location":"modelql-core/org.modelix.modelql.core/-aggregation-step/-aggregation-step.html","searchKeys":["AggregationStep","constructor()","org.modelix.modelql.core.AggregationStep.AggregationStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.AllowEmptyStep.AllowEmptyStep","location":"modelql-core/org.modelix.modelql.core/-allow-empty-step/-allow-empty-step.html","searchKeys":["AllowEmptyStep","constructor()","org.modelix.modelql.core.AllowEmptyStep.AllowEmptyStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.AllowEmptyStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-allow-empty-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.AllowEmptyStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.AndOperatorStep.AndOperatorStep","location":"modelql-core/org.modelix.modelql.core/-and-operator-step/-and-operator-step.html","searchKeys":["AndOperatorStep","constructor()","org.modelix.modelql.core.AndOperatorStep.AndOperatorStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.AndOperatorStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-and-operator-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.AndOperatorStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.AssertNotEmptyStep.AssertNotEmptyStep","location":"modelql-core/org.modelix.modelql.core/-assert-not-empty-step/-assert-not-empty-step.html","searchKeys":["AssertNotEmptyStep","constructor()","org.modelix.modelql.core.AssertNotEmptyStep.AssertNotEmptyStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.AssertNotEmptyStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-assert-not-empty-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.AssertNotEmptyStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.BulkQueryExecutor.BulkQueryExecutor","location":"modelql-core/org.modelix.modelql.core/-bulk-query-executor/-bulk-query-executor.html","searchKeys":["BulkQueryExecutor","constructor()","org.modelix.modelql.core.BulkQueryExecutor.BulkQueryExecutor"]},{"name":"constructor()","description":"org.modelix.modelql.core.CollectionSizeStep.CollectionSizeStep","location":"modelql-core/org.modelix.modelql.core/-collection-size-step/-collection-size-step.html","searchKeys":["CollectionSizeStep","constructor()","org.modelix.modelql.core.CollectionSizeStep.CollectionSizeStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.CollectionSizeStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-collection-size-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.CollectionSizeStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.CollectorStep.CollectorStep","location":"modelql-core/org.modelix.modelql.core/-collector-step/-collector-step.html","searchKeys":["CollectorStep","constructor()","org.modelix.modelql.core.CollectorStep.CollectorStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.ConstantSourceStep.Descriptor.Serializer.Serializer","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/-descriptor/-serializer/-serializer.html","searchKeys":["Serializer","constructor()","org.modelix.modelql.core.ConstantSourceStep.Descriptor.Serializer.Serializer"]},{"name":"constructor()","description":"org.modelix.modelql.core.ContextValue.ContextValue","location":"modelql-core/org.modelix.modelql.core/-context-value/-context-value.html","searchKeys":["ContextValue","constructor()","org.modelix.modelql.core.ContextValue.ContextValue"]},{"name":"constructor()","description":"org.modelix.modelql.core.CountingStep.CountDescriptor.CountDescriptor","location":"modelql-core/org.modelix.modelql.core/-counting-step/-count-descriptor/-count-descriptor.html","searchKeys":["CountDescriptor","constructor()","org.modelix.modelql.core.CountingStep.CountDescriptor.CountDescriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.CountingStep.CountingStep","location":"modelql-core/org.modelix.modelql.core/-counting-step/-counting-step.html","searchKeys":["CountingStep","constructor()","org.modelix.modelql.core.CountingStep.CountingStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.EmptyStringIfNullStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-empty-string-if-null-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.EmptyStringIfNullStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.EmptyStringIfNullStep.EmptyStringIfNullStep","location":"modelql-core/org.modelix.modelql.core/-empty-string-if-null-step/-empty-string-if-null-step.html","searchKeys":["EmptyStringIfNullStep","constructor()","org.modelix.modelql.core.EmptyStringIfNullStep.EmptyStringIfNullStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.EqualsOperatorStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-equals-operator-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.EqualsOperatorStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.EqualsOperatorStep.EqualsOperatorStep","location":"modelql-core/org.modelix.modelql.core/-equals-operator-step/-equals-operator-step.html","searchKeys":["EqualsOperatorStep","constructor()","org.modelix.modelql.core.EqualsOperatorStep.EqualsOperatorStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.FirstElementStep.FirstElementDescriptor.FirstElementDescriptor","location":"modelql-core/org.modelix.modelql.core/-first-element-step/-first-element-descriptor/-first-element-descriptor.html","searchKeys":["FirstElementDescriptor","constructor()","org.modelix.modelql.core.FirstElementStep.FirstElementDescriptor.FirstElementDescriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.FirstElementStep.FirstElementStep","location":"modelql-core/org.modelix.modelql.core/-first-element-step/-first-element-step.html","searchKeys":["FirstElementStep","constructor()","org.modelix.modelql.core.FirstElementStep.FirstElementStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.FirstOrNullStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-first-or-null-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.FirstOrNullStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.FirstOrNullStep.FirstOrNullStep","location":"modelql-core/org.modelix.modelql.core/-first-or-null-step/-first-or-null-step.html","searchKeys":["FirstOrNullStep","constructor()","org.modelix.modelql.core.FirstOrNullStep.FirstOrNullStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.FluxTransformingStep.FluxTransformingStep","location":"modelql-core/org.modelix.modelql.core/-flux-transforming-step/-flux-transforming-step.html","searchKeys":["FluxTransformingStep","constructor()","org.modelix.modelql.core.FluxTransformingStep.FluxTransformingStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.FragmentBuilder.FragmentBuilder","location":"modelql-core/org.modelix.modelql.core/-fragment-builder/-fragment-builder.html","searchKeys":["FragmentBuilder","constructor()","org.modelix.modelql.core.FragmentBuilder.FragmentBuilder"]},{"name":"constructor()","description":"org.modelix.modelql.core.IdentityStep.IdentityStep","location":"modelql-core/org.modelix.modelql.core/-identity-step/-identity-step.html","searchKeys":["IdentityStep","constructor()","org.modelix.modelql.core.IdentityStep.IdentityStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.IdentityStep.IdentityStepDescriptor.IdentityStepDescriptor","location":"modelql-core/org.modelix.modelql.core/-identity-step/-identity-step-descriptor/-identity-step-descriptor.html","searchKeys":["IdentityStepDescriptor","constructor()","org.modelix.modelql.core.IdentityStep.IdentityStepDescriptor.IdentityStepDescriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.InPredicate.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-in-predicate/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.InPredicate.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.InPredicate.InPredicate","location":"modelql-core/org.modelix.modelql.core/-in-predicate/-in-predicate.html","searchKeys":["InPredicate","constructor()","org.modelix.modelql.core.InPredicate.InPredicate"]},{"name":"constructor()","description":"org.modelix.modelql.core.IsEmptyStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-is-empty-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.IsEmptyStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.IsEmptyStep.IsEmptyStep","location":"modelql-core/org.modelix.modelql.core/-is-empty-step/-is-empty-step.html","searchKeys":["IsEmptyStep","constructor()","org.modelix.modelql.core.IsEmptyStep.IsEmptyStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.IsNullPredicateStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-is-null-predicate-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.IsNullPredicateStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.IsNullPredicateStep.IsNullPredicateStep","location":"modelql-core/org.modelix.modelql.core/-is-null-predicate-step/-is-null-predicate-step.html","searchKeys":["IsNullPredicateStep","constructor()","org.modelix.modelql.core.IsNullPredicateStep.IsNullPredicateStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.JoinStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-join-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.JoinStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.JoinStep.JoinStep","location":"modelql-core/org.modelix.modelql.core/-join-step/-join-step.html","searchKeys":["JoinStep","constructor()","org.modelix.modelql.core.JoinStep.JoinStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.ListCollectorStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-list-collector-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.ListCollectorStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.ListCollectorStep.ListCollectorStep","location":"modelql-core/org.modelix.modelql.core/-list-collector-step/-list-collector-step.html","searchKeys":["ListCollectorStep","constructor()","org.modelix.modelql.core.ListCollectorStep.ListCollectorStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.MapAccessStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-map-access-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.MapAccessStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.MapAccessStep.MapAccessStep","location":"modelql-core/org.modelix.modelql.core/-map-access-step/-map-access-step.html","searchKeys":["MapAccessStep","constructor()","org.modelix.modelql.core.MapAccessStep.MapAccessStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.MapCollectorStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-map-collector-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.MapCollectorStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.MapCollectorStep.MapCollectorStep","location":"modelql-core/org.modelix.modelql.core/-map-collector-step/-map-collector-step.html","searchKeys":["MapCollectorStep","constructor()","org.modelix.modelql.core.MapCollectorStep.MapCollectorStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.MonoTransformingStep.MonoTransformingStep","location":"modelql-core/org.modelix.modelql.core/-mono-transforming-step/-mono-transforming-step.html","searchKeys":["MonoTransformingStep","constructor()","org.modelix.modelql.core.MonoTransformingStep.MonoTransformingStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.NotOperatorStep.NotDescriptor.NotDescriptor","location":"modelql-core/org.modelix.modelql.core/-not-operator-step/-not-descriptor/-not-descriptor.html","searchKeys":["NotDescriptor","constructor()","org.modelix.modelql.core.NotOperatorStep.NotDescriptor.NotDescriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.NotOperatorStep.NotOperatorStep","location":"modelql-core/org.modelix.modelql.core/-not-operator-step/-not-operator-step.html","searchKeys":["NotOperatorStep","constructor()","org.modelix.modelql.core.NotOperatorStep.NotOperatorStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.NullIfEmpty.NullIfEmpty","location":"modelql-core/org.modelix.modelql.core/-null-if-empty/-null-if-empty.html","searchKeys":["NullIfEmpty","constructor()","org.modelix.modelql.core.NullIfEmpty.NullIfEmpty"]},{"name":"constructor()","description":"org.modelix.modelql.core.NullIfEmpty.OrNullDescriptor.OrNullDescriptor","location":"modelql-core/org.modelix.modelql.core/-null-if-empty/-or-null-descriptor/-or-null-descriptor.html","searchKeys":["OrNullDescriptor","constructor()","org.modelix.modelql.core.NullIfEmpty.OrNullDescriptor.OrNullDescriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.OrOperatorStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-or-operator-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.OrOperatorStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.OrOperatorStep.OrOperatorStep","location":"modelql-core/org.modelix.modelql.core/-or-operator-step/-or-operator-step.html","searchKeys":["OrOperatorStep","constructor()","org.modelix.modelql.core.OrOperatorStep.OrOperatorStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.ProducingStep.ProducingStep","location":"modelql-core/org.modelix.modelql.core/-producing-step/-producing-step.html","searchKeys":["ProducingStep","constructor()","org.modelix.modelql.core.ProducingStep.ProducingStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.QueryBuilderContext.QueryBuilderContext","location":"modelql-core/org.modelix.modelql.core/-query-builder-context/-query-builder-context.html","searchKeys":["QueryBuilderContext","constructor()","org.modelix.modelql.core.QueryBuilderContext.QueryBuilderContext"]},{"name":"constructor()","description":"org.modelix.modelql.core.QueryGraphDescriptorBuilder.QueryGraphDescriptorBuilder","location":"modelql-core/org.modelix.modelql.core/-query-graph-descriptor-builder/-query-graph-descriptor-builder.html","searchKeys":["QueryGraphDescriptorBuilder","constructor()","org.modelix.modelql.core.QueryGraphDescriptorBuilder.QueryGraphDescriptorBuilder"]},{"name":"constructor()","description":"org.modelix.modelql.core.QueryInput.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-query-input/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.QueryInput.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.QueryInput.QueryInput","location":"modelql-core/org.modelix.modelql.core/-query-input/-query-input.html","searchKeys":["QueryInput","constructor()","org.modelix.modelql.core.QueryInput.QueryInput"]},{"name":"constructor()","description":"org.modelix.modelql.core.SetCollectorStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-set-collector-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.SetCollectorStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.SetCollectorStep.SetCollectorStep","location":"modelql-core/org.modelix.modelql.core/-set-collector-step/-set-collector-step.html","searchKeys":["SetCollectorStep","constructor()","org.modelix.modelql.core.SetCollectorStep.SetCollectorStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.SharedStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-shared-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.SharedStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.SharedStep.SharedStep","location":"modelql-core/org.modelix.modelql.core/-shared-step/-shared-step.html","searchKeys":["SharedStep","constructor()","org.modelix.modelql.core.SharedStep.SharedStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.SimpleMonoTransformingStep.SimpleMonoTransformingStep","location":"modelql-core/org.modelix.modelql.core/-simple-mono-transforming-step/-simple-mono-transforming-step.html","searchKeys":["SimpleMonoTransformingStep","constructor()","org.modelix.modelql.core.SimpleMonoTransformingStep.SimpleMonoTransformingStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.SingleStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-single-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.SingleStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.SingleStep.SingleStep","location":"modelql-core/org.modelix.modelql.core/-single-step/-single-step.html","searchKeys":["SingleStep","constructor()","org.modelix.modelql.core.SingleStep.SingleStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.StepDescriptor.StepDescriptor","location":"modelql-core/org.modelix.modelql.core/-step-descriptor/-step-descriptor.html","searchKeys":["StepDescriptor","constructor()","org.modelix.modelql.core.StepDescriptor.StepDescriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.StringToBooleanStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-string-to-boolean-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.StringToBooleanStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.StringToBooleanStep.StringToBooleanStep","location":"modelql-core/org.modelix.modelql.core/-string-to-boolean-step/-string-to-boolean-step.html","searchKeys":["StringToBooleanStep","constructor()","org.modelix.modelql.core.StringToBooleanStep.StringToBooleanStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.StringToIntStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-string-to-int-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.StringToIntStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.StringToIntStep.StringToIntStep","location":"modelql-core/org.modelix.modelql.core/-string-to-int-step/-string-to-int-step.html","searchKeys":["StringToIntStep","constructor()","org.modelix.modelql.core.StringToIntStep.StringToIntStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.ToStringStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-to-string-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.ToStringStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.ToStringStep.ToStringStep","location":"modelql-core/org.modelix.modelql.core/-to-string-step/-to-string-step.html","searchKeys":["ToStringStep","constructor()","org.modelix.modelql.core.ToStringStep.ToStringStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.TransformingStep.TransformingStep","location":"modelql-core/org.modelix.modelql.core/-transforming-step/-transforming-step.html","searchKeys":["TransformingStep","constructor()","org.modelix.modelql.core.TransformingStep.TransformingStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.TransformingStepWithParameter.TransformingStepWithParameter","location":"modelql-core/org.modelix.modelql.core/-transforming-step-with-parameter/-transforming-step-with-parameter.html","searchKeys":["TransformingStepWithParameter","constructor()","org.modelix.modelql.core.TransformingStepWithParameter.TransformingStepWithParameter"]},{"name":"constructor()","description":"org.modelix.modelql.core.WithIndexStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-with-index-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.WithIndexStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.WithIndexStep.WithIndexStep","location":"modelql-core/org.modelix.modelql.core/-with-index-step/-with-index-step.html","searchKeys":["WithIndexStep","constructor()","org.modelix.modelql.core.WithIndexStep.WithIndexStep"]},{"name":"constructor()","description":"org.modelix.modelql.core.ZipBuilder.ZipBuilder","location":"modelql-core/org.modelix.modelql.core/-zip-builder/-zip-builder.html","searchKeys":["ZipBuilder","constructor()","org.modelix.modelql.core.ZipBuilder.ZipBuilder"]},{"name":"constructor()","description":"org.modelix.modelql.core.ZipStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-zip-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor()","org.modelix.modelql.core.ZipStep.Descriptor.Descriptor"]},{"name":"constructor()","description":"org.modelix.modelql.core.ZipStep.ZipStep","location":"modelql-core/org.modelix.modelql.core/-zip-step/-zip-step.html","searchKeys":["ZipStep","constructor()","org.modelix.modelql.core.ZipStep.ZipStep"]},{"name":"constructor(alternative: QueryId)","description":"org.modelix.modelql.core.IfEmptyStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-if-empty-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor(alternative: QueryId)","org.modelix.modelql.core.IfEmptyStep.Descriptor.Descriptor"]},{"name":"constructor(alternative: UnboundQuery<Unit, *, Out>)","description":"org.modelix.modelql.core.IfEmptyStep.IfEmptyStep","location":"modelql-core/org.modelix.modelql.core/-if-empty-step/-if-empty-step.html","searchKeys":["IfEmptyStep","constructor(alternative: UnboundQuery<Unit, *, Out>)","org.modelix.modelql.core.IfEmptyStep.IfEmptyStep"]},{"name":"constructor(cases: List<Pair<IMonoUnboundQuery<In, Boolean?>, IMonoUnboundQuery<In, Out>>>, elseCase: IMonoUnboundQuery<In, Out>?)","description":"org.modelix.modelql.core.WhenStep.WhenStep","location":"modelql-core/org.modelix.modelql.core/-when-step/-when-step.html","searchKeys":["WhenStep","constructor(cases: List<Pair<IMonoUnboundQuery<In, Boolean?>, IMonoUnboundQuery<In, Out>>>, elseCase: IMonoUnboundQuery<In, Out>?)","org.modelix.modelql.core.WhenStep.WhenStep"]},{"name":"constructor(cases: List<Pair<QueryId, QueryId>>, elseCase: QueryId? = null)","description":"org.modelix.modelql.core.WhenStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-when-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor(cases: List<Pair<QueryId, QueryId>>, elseCase: QueryId? = null)","org.modelix.modelql.core.WhenStep.Descriptor.Descriptor"]},{"name":"constructor(condition: IMonoUnboundQuery<In, Boolean?>)","description":"org.modelix.modelql.core.WhenStepBuilder.CaseBuilder.CaseBuilder","location":"modelql-core/org.modelix.modelql.core/-when-step-builder/-case-builder/-case-builder.html","searchKeys":["CaseBuilder","constructor(condition: IMonoUnboundQuery<In, Boolean?>)","org.modelix.modelql.core.WhenStepBuilder.CaseBuilder.CaseBuilder"]},{"name":"constructor(condition: MonoUnboundQuery<E, Boolean?>)","description":"org.modelix.modelql.core.FilteringStep.FilteringStep","location":"modelql-core/org.modelix.modelql.core/-filtering-step/-filtering-step.html","searchKeys":["FilteringStep","constructor(condition: MonoUnboundQuery<E, Boolean?>)","org.modelix.modelql.core.FilteringStep.FilteringStep"]},{"name":"constructor(count: Int)","description":"org.modelix.modelql.core.DropStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-drop-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor(count: Int)","org.modelix.modelql.core.DropStep.Descriptor.Descriptor"]},{"name":"constructor(count: Int)","description":"org.modelix.modelql.core.DropStep.DropStep","location":"modelql-core/org.modelix.modelql.core/-drop-step/-drop-step.html","searchKeys":["DropStep","constructor(count: Int)","org.modelix.modelql.core.DropStep.DropStep"]},{"name":"constructor(count: Int)","description":"org.modelix.modelql.core.TakeStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-take-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor(count: Int)","org.modelix.modelql.core.TakeStep.Descriptor.Descriptor"]},{"name":"constructor(count: Int)","description":"org.modelix.modelql.core.TakeStep.TakeStep","location":"modelql-core/org.modelix.modelql.core/-take-step/-take-step.html","searchKeys":["TakeStep","constructor(count: Int)","org.modelix.modelql.core.TakeStep.TakeStep"]},{"name":"constructor(data: E)","description":"org.modelix.modelql.core.VersionAndData.VersionAndData","location":"modelql-core/org.modelix.modelql.core/-version-and-data/-version-and-data.html","searchKeys":["VersionAndData","constructor(data: E)","org.modelix.modelql.core.VersionAndData.VersionAndData"]},{"name":"constructor(data: E, version: String?)","description":"org.modelix.modelql.core.VersionAndData.VersionAndData","location":"modelql-core/org.modelix.modelql.core/-version-and-data/-version-and-data.html","searchKeys":["VersionAndData","constructor(data: E, version: String?)","org.modelix.modelql.core.VersionAndData.VersionAndData"]},{"name":"constructor(element: Any?, elementType: String)","description":"org.modelix.modelql.core.ConstantSourceStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor(element: Any?, elementType: String)","org.modelix.modelql.core.ConstantSourceStep.Descriptor.Descriptor"]},{"name":"constructor(element: E, type: KType)","description":"org.modelix.modelql.core.ConstantSourceStep.ConstantSourceStep","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/-constant-source-step.html","searchKeys":["ConstantSourceStep","constructor(element: E, type: KType)","org.modelix.modelql.core.ConstantSourceStep.ConstantSourceStep"]},{"name":"constructor(elementSerializers: Array<KSerializer<IStepOutput<CommonT>>>)","description":"org.modelix.modelql.core.ZipOutputSerializer.ZipOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-zip-output-serializer/-zip-output-serializer.html","searchKeys":["ZipOutputSerializer","constructor(elementSerializers: Array<KSerializer<IStepOutput<CommonT>>>)","org.modelix.modelql.core.ZipOutputSerializer.ZipOutputSerializer"]},{"name":"constructor(evaluationContext: QueryEvaluationContext, coroutineScope: CoroutineScope?, query: UnboundQuery<*, *, *>)","description":"org.modelix.modelql.core.FlowInstantiationContext.FlowInstantiationContext","location":"modelql-core/org.modelix.modelql.core/-flow-instantiation-context/-flow-instantiation-context.html","searchKeys":["FlowInstantiationContext","constructor(evaluationContext: QueryEvaluationContext, coroutineScope: CoroutineScope?, query: UnboundQuery<*, *, *>)","org.modelix.modelql.core.FlowInstantiationContext.FlowInstantiationContext"]},{"name":"constructor(evaluationContext: QueryEvaluationContext, queryInput: QueryInput<*>, inputFlow: StepFlow<*>)","description":"org.modelix.modelql.core.SinglePathFlowInstantiationContext.SinglePathFlowInstantiationContext","location":"modelql-core/org.modelix.modelql.core/-single-path-flow-instantiation-context/-single-path-flow-instantiation-context.html","searchKeys":["SinglePathFlowInstantiationContext","constructor(evaluationContext: QueryEvaluationContext, queryInput: QueryInput<*>, inputFlow: StepFlow<*>)","org.modelix.modelql.core.SinglePathFlowInstantiationContext.SinglePathFlowInstantiationContext"]},{"name":"constructor(graphDescriptor: QueryGraphDescriptor)","description":"org.modelix.modelql.core.QueryDeserializationContext.QueryDeserializationContext","location":"modelql-core/org.modelix.modelql.core/-query-deserialization-context/-query-deserialization-context.html","searchKeys":["QueryDeserializationContext","constructor(graphDescriptor: QueryGraphDescriptor)","org.modelix.modelql.core.QueryDeserializationContext.QueryDeserializationContext"]},{"name":"constructor(index: Int)","description":"org.modelix.modelql.core.ZipElementAccessStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-zip-element-access-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor(index: Int)","org.modelix.modelql.core.ZipElementAccessStep.Descriptor.Descriptor"]},{"name":"constructor(index: Int)","description":"org.modelix.modelql.core.ZipElementAccessStep.ZipElementAccessStep","location":"modelql-core/org.modelix.modelql.core/-zip-element-access-step/-zip-element-access-step.html","searchKeys":["ZipElementAccessStep","constructor(index: Int)","org.modelix.modelql.core.ZipElementAccessStep.ZipElementAccessStep"]},{"name":"constructor(initial: Out)","description":"org.modelix.modelql.core.FoldingStep.FoldingStep","location":"modelql-core/org.modelix.modelql.core/-folding-step/-folding-step.html","searchKeys":["FoldingStep","constructor(initial: Out)","org.modelix.modelql.core.FoldingStep.FoldingStep"]},{"name":"constructor(initiallyProvidedQuery: Q?, queryId: Long?, queryInitializer: () -> Q?)","description":"org.modelix.modelql.core.QueryReference.QueryReference","location":"modelql-core/org.modelix.modelql.core/-query-reference/-query-reference.html","searchKeys":["QueryReference","constructor(initiallyProvidedQuery: Q?, queryId: Long?, queryInitializer: () -> Q?)","org.modelix.modelql.core.QueryReference.QueryReference"]},{"name":"constructor(input: E)","description":"org.modelix.modelql.core.SimpleQueryExecutor.SimpleQueryExecutor","location":"modelql-core/org.modelix.modelql.core/-simple-query-executor/-simple-query-executor.html","searchKeys":["SimpleQueryExecutor","constructor(input: E)","org.modelix.modelql.core.SimpleQueryExecutor.SimpleQueryExecutor"]},{"name":"constructor(input: IMonoStep<In>)","description":"org.modelix.modelql.core.WhenStepBuilder.WhenStepBuilder","location":"modelql-core/org.modelix.modelql.core/-when-step-builder/-when-step-builder.html","searchKeys":["WhenStepBuilder","constructor(input: IMonoStep<In>)","org.modelix.modelql.core.WhenStepBuilder.WhenStepBuilder"]},{"name":"constructor(input: Int, output: Int, sharedSteps: List<Int> = emptyList(), isFluxOutput: Boolean = false, queryId: Long)","description":"org.modelix.modelql.core.QueryDescriptor.QueryDescriptor","location":"modelql-core/org.modelix.modelql.core/-query-descriptor/-query-descriptor.html","searchKeys":["QueryDescriptor","constructor(input: Int, output: Int, sharedSteps: List<Int> = emptyList(), isFluxOutput: Boolean = false, queryId: Long)","org.modelix.modelql.core.QueryDescriptor.QueryDescriptor"]},{"name":"constructor(input: List<IStepOutput<E>>, internalCollection: InternalCollectionT, output: CollectionT)","description":"org.modelix.modelql.core.CollectorStepOutput.CollectorStepOutput","location":"modelql-core/org.modelix.modelql.core/-collector-step-output/-collector-step-output.html","searchKeys":["CollectorStepOutput","constructor(input: List<IStepOutput<E>>, internalCollection: InternalCollectionT, output: CollectionT)","org.modelix.modelql.core.CollectorStepOutput.CollectorStepOutput"]},{"name":"constructor(inputElementSerializer: KSerializer<IStepOutput<E>>)","description":"org.modelix.modelql.core.CollectorStepOutputSerializer.CollectorStepOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-collector-step-output-serializer/-collector-step-output-serializer.html","searchKeys":["CollectorStepOutputSerializer","constructor(inputElementSerializer: KSerializer<IStepOutput<E>>)","org.modelix.modelql.core.CollectorStepOutputSerializer.CollectorStepOutputSerializer"]},{"name":"constructor(inputElementSerializer: KSerializer<IStepOutput<E>>)","description":"org.modelix.modelql.core.ListCollectorStepOutputSerializer.ListCollectorStepOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-list-collector-step-output-serializer/-list-collector-step-output-serializer.html","searchKeys":["ListCollectorStepOutputSerializer","constructor(inputElementSerializer: KSerializer<IStepOutput<E>>)","org.modelix.modelql.core.ListCollectorStepOutputSerializer.ListCollectorStepOutputSerializer"]},{"name":"constructor(inputElementSerializer: KSerializer<IStepOutput<E>>)","description":"org.modelix.modelql.core.SetCollectorStepOutputSerializer.SetCollectorStepOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-set-collector-step-output-serializer/-set-collector-step-output-serializer.html","searchKeys":["SetCollectorStepOutputSerializer","constructor(inputElementSerializer: KSerializer<IStepOutput<E>>)","org.modelix.modelql.core.SetCollectorStepOutputSerializer.SetCollectorStepOutputSerializer"]},{"name":"constructor(inputElementSerializer: KSerializer<IStepOutput<IZip2Output<Any?, K, V>>>)","description":"org.modelix.modelql.core.MapCollectorStepOutputSerializer.MapCollectorStepOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-map-collector-step-output-serializer/-map-collector-step-output-serializer.html","searchKeys":["MapCollectorStepOutputSerializer","constructor(inputElementSerializer: KSerializer<IStepOutput<IZip2Output<Any?, K, V>>>)","org.modelix.modelql.core.MapCollectorStepOutputSerializer.MapCollectorStepOutputSerializer"]},{"name":"constructor(inputStep: QueryInput<In>, outputStep: IFluxStep<ElementOut>, reference: QueryReference<*>, sharedSteps: List<SharedStep<*>>)","description":"org.modelix.modelql.core.FluxUnboundQuery.FluxUnboundQuery","location":"modelql-core/org.modelix.modelql.core/-flux-unbound-query/-flux-unbound-query.html","searchKeys":["FluxUnboundQuery","constructor(inputStep: QueryInput<In>, outputStep: IFluxStep<ElementOut>, reference: QueryReference<*>, sharedSteps: List<SharedStep<*>>)","org.modelix.modelql.core.FluxUnboundQuery.FluxUnboundQuery"]},{"name":"constructor(inputStep: QueryInput<In>, outputStep: IMonoStep<ElementOut>, reference: QueryReference<*>, sharedSteps: List<SharedStep<*>>)","description":"org.modelix.modelql.core.MonoUnboundQuery.MonoUnboundQuery","location":"modelql-core/org.modelix.modelql.core/-mono-unbound-query/-mono-unbound-query.html","searchKeys":["MonoUnboundQuery","constructor(inputStep: QueryInput<In>, outputStep: IMonoStep<ElementOut>, reference: QueryReference<*>, sharedSteps: List<SharedStep<*>>)","org.modelix.modelql.core.MonoUnboundQuery.MonoUnboundQuery"]},{"name":"constructor(inputStep: QueryInput<In>, outputStep_: IProducingStep<ElementOut>, reference: QueryReference<UnboundQuery<In, AggregationOut, ElementOut>>, sharedSteps: List<SharedStep<*>>)","description":"org.modelix.modelql.core.UnboundQuery.UnboundQuery","location":"modelql-core/org.modelix.modelql.core/-unbound-query/-unbound-query.html","searchKeys":["UnboundQuery","constructor(inputStep: QueryInput<In>, outputStep_: IProducingStep<ElementOut>, reference: QueryReference<UnboundQuery<In, AggregationOut, ElementOut>>, sharedSteps: List<SharedStep<*>>)","org.modelix.modelql.core.UnboundQuery.UnboundQuery"]},{"name":"constructor(message: String)","description":"org.modelix.modelql.core.CrossQueryReferenceException.CrossQueryReferenceException","location":"modelql-core/org.modelix.modelql.core/-cross-query-reference-exception/-cross-query-reference-exception.html","searchKeys":["CrossQueryReferenceException","constructor(message: String)","org.modelix.modelql.core.CrossQueryReferenceException.CrossQueryReferenceException"]},{"name":"constructor(muxIndex: Int, output: IStepOutput<E>)","description":"org.modelix.modelql.core.MultiplexedOutput.MultiplexedOutput","location":"modelql-core/org.modelix.modelql.core/-multiplexed-output/-multiplexed-output.html","searchKeys":["MultiplexedOutput","constructor(muxIndex: Int, output: IStepOutput<E>)","org.modelix.modelql.core.MultiplexedOutput.MultiplexedOutput"]},{"name":"constructor(operand: Int)","description":"org.modelix.modelql.core.IntSumStep.IntSumDescriptor.IntSumDescriptor","location":"modelql-core/org.modelix.modelql.core/-int-sum-step/-int-sum-descriptor/-int-sum-descriptor.html","searchKeys":["IntSumDescriptor","constructor(operand: Int)","org.modelix.modelql.core.IntSumStep.IntSumDescriptor.IntSumDescriptor"]},{"name":"constructor(operand: Int)","description":"org.modelix.modelql.core.IntSumStep.IntSumStep","location":"modelql-core/org.modelix.modelql.core/-int-sum-step/-int-sum-step.html","searchKeys":["IntSumStep","constructor(operand: Int)","org.modelix.modelql.core.IntSumStep.IntSumStep"]},{"name":"constructor(owner: IStep, serializers: List<KSerializer<IStepOutput<E>>>)","description":"org.modelix.modelql.core.MultiplexedOutputSerializer.MultiplexedOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-multiplexed-output-serializer/-multiplexed-output-serializer.html","searchKeys":["MultiplexedOutputSerializer","constructor(owner: IStep, serializers: List<KSerializer<IStepOutput<E>>>)","org.modelix.modelql.core.MultiplexedOutputSerializer.MultiplexedOutputSerializer"]},{"name":"constructor(pattern: String)","description":"org.modelix.modelql.core.RegexPredicate.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-regex-predicate/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor(pattern: String)","org.modelix.modelql.core.RegexPredicate.Descriptor.Descriptor"]},{"name":"constructor(prefix: String = \"\")","description":"org.modelix.modelql.core.PrintStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-print-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor(prefix: String = \"\")","org.modelix.modelql.core.PrintStep.Descriptor.Descriptor"]},{"name":"constructor(prefix: String)","description":"org.modelix.modelql.core.PrintStep.PrintStep","location":"modelql-core/org.modelix.modelql.core/-print-step/-print-step.html","searchKeys":["PrintStep","constructor(prefix: String)","org.modelix.modelql.core.PrintStep.PrintStep"]},{"name":"constructor(producer: PortReference, consumer: PortReference)","description":"org.modelix.modelql.core.PortConnection.PortConnection","location":"modelql-core/org.modelix.modelql.core/-port-connection/-port-connection.html","searchKeys":["PortConnection","constructor(producer: PortReference, consumer: PortReference)","org.modelix.modelql.core.PortConnection.PortConnection"]},{"name":"constructor(queries: List<QueryDescriptor>, steps: Map<Int, StepDescriptor>, connections: List<PortConnection>)","description":"org.modelix.modelql.core.QueryGraphDescriptor.QueryGraphDescriptor","location":"modelql-core/org.modelix.modelql.core/-query-graph-descriptor/-query-graph-descriptor.html","searchKeys":["QueryGraphDescriptor","constructor(queries: List<QueryDescriptor>, steps: Map<Int, StepDescriptor>, connections: List<PortConnection>)","org.modelix.modelql.core.QueryGraphDescriptor.QueryGraphDescriptor"]},{"name":"constructor(query: FluxUnboundQuery<In, Out>)","description":"org.modelix.modelql.core.FlatMapStep.FlatMapStep","location":"modelql-core/org.modelix.modelql.core/-flat-map-step/-flat-map-step.html","searchKeys":["FlatMapStep","constructor(query: FluxUnboundQuery<In, Out>)","org.modelix.modelql.core.FlatMapStep.FlatMapStep"]},{"name":"constructor(query: IUnboundQuery<*, *, Out>, owner: QueryCallStep<*, Out>, serializationContext: SerializationContext)","description":"org.modelix.modelql.core.RecursiveQuerySerializer.RecursiveQuerySerializer","location":"modelql-core/org.modelix.modelql.core/-recursive-query-serializer/-recursive-query-serializer.html","searchKeys":["RecursiveQuerySerializer","constructor(query: IUnboundQuery<*, *, Out>, owner: QueryCallStep<*, Out>, serializationContext: SerializationContext)","org.modelix.modelql.core.RecursiveQuerySerializer.RecursiveQuerySerializer"]},{"name":"constructor(query: MonoUnboundQuery<In, Out>)","description":"org.modelix.modelql.core.MapIfNotNullStep.MapIfNotNullStep","location":"modelql-core/org.modelix.modelql.core/-map-if-not-null-step/-map-if-not-null-step.html","searchKeys":["MapIfNotNullStep","constructor(query: MonoUnboundQuery<In, Out>)","org.modelix.modelql.core.MapIfNotNullStep.MapIfNotNullStep"]},{"name":"constructor(query: MonoUnboundQuery<In, Out>)","description":"org.modelix.modelql.core.MappingStep.MappingStep","location":"modelql-core/org.modelix.modelql.core/-mapping-step/-mapping-step.html","searchKeys":["MappingStep","constructor(query: MonoUnboundQuery<In, Out>)","org.modelix.modelql.core.MappingStep.MappingStep"]},{"name":"constructor(query: UnboundQuery<*, *, *>)","description":"org.modelix.modelql.core.QueryGraphDescriptorBuilder.QueryDescriptorBuilder.QueryDescriptorBuilder","location":"modelql-core/org.modelix.modelql.core/-query-graph-descriptor-builder/-query-descriptor-builder/-query-descriptor-builder.html","searchKeys":["QueryDescriptorBuilder","constructor(query: UnboundQuery<*, *, *>)","org.modelix.modelql.core.QueryGraphDescriptorBuilder.QueryDescriptorBuilder.QueryDescriptorBuilder"]},{"name":"constructor(queryId: QueryId)","description":"org.modelix.modelql.core.FilteringStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-filtering-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor(queryId: QueryId)","org.modelix.modelql.core.FilteringStep.Descriptor.Descriptor"]},{"name":"constructor(queryId: QueryId)","description":"org.modelix.modelql.core.FlatMapStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-flat-map-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor(queryId: QueryId)","org.modelix.modelql.core.FlatMapStep.Descriptor.Descriptor"]},{"name":"constructor(queryId: QueryId)","description":"org.modelix.modelql.core.MapIfNotNullStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-map-if-not-null-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor(queryId: QueryId)","org.modelix.modelql.core.MapIfNotNullStep.Descriptor.Descriptor"]},{"name":"constructor(queryId: QueryId)","description":"org.modelix.modelql.core.MappingStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-mapping-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor(queryId: QueryId)","org.modelix.modelql.core.MappingStep.Descriptor.Descriptor"]},{"name":"constructor(queryId: QueryId)","description":"org.modelix.modelql.core.QueryCallStep.Descriptor.Descriptor","location":"modelql-core/org.modelix.modelql.core/-query-call-step/-descriptor/-descriptor.html","searchKeys":["Descriptor","constructor(queryId: QueryId)","org.modelix.modelql.core.QueryCallStep.Descriptor.Descriptor"]},{"name":"constructor(queryRef: QueryReference<out IUnboundQuery<In, *, Out>>)","description":"org.modelix.modelql.core.QueryCallStep.QueryCallStep","location":"modelql-core/org.modelix.modelql.core/-query-call-step/-query-call-step.html","searchKeys":["QueryCallStep","constructor(queryRef: QueryReference<out IUnboundQuery<In, *, Out>>)","org.modelix.modelql.core.QueryCallStep.QueryCallStep"]},{"name":"constructor(regex: Regex)","description":"org.modelix.modelql.core.RegexPredicate.RegexPredicate","location":"modelql-core/org.modelix.modelql.core/-regex-predicate/-regex-predicate.html","searchKeys":["RegexPredicate","constructor(regex: Regex)","org.modelix.modelql.core.RegexPredicate.RegexPredicate"]},{"name":"constructor(sequences: Array<Sequence<Common>>)","description":"org.modelix.modelql.core.CombiningSequence.CombiningSequence","location":"modelql-core/org.modelix.modelql.core/-combining-sequence/-combining-sequence.html","searchKeys":["CombiningSequence","constructor(sequences: Array<Sequence<Common>>)","org.modelix.modelql.core.CombiningSequence.CombiningSequence"]},{"name":"constructor(serializersModule: SerializersModule, queryInputSerializers: Map<QueryInput<*>, KSerializer<IStepOutput<*>>> = emptyMap())","description":"org.modelix.modelql.core.SerializationContext.SerializationContext","location":"modelql-core/org.modelix.modelql.core/-serialization-context/-serialization-context.html","searchKeys":["SerializationContext","constructor(serializersModule: SerializersModule, queryInputSerializers: Map<QueryInput<*>, KSerializer<IStepOutput<*>>> = emptyMap())","org.modelix.modelql.core.SerializationContext.SerializationContext"]},{"name":"constructor(step: Int, port: Int = 0)","description":"org.modelix.modelql.core.PortReference.PortReference","location":"modelql-core/org.modelix.modelql.core/-port-reference/-port-reference.html","searchKeys":["PortReference","constructor(step: Int, port: Int = 0)","org.modelix.modelql.core.PortReference.PortReference"]},{"name":"constructor(step: LocalMappingStep<In, Out>, inputSerializer: KSerializer<out IStepOutput<In>>)","description":"org.modelix.modelql.core.LocalMappingSerializer.LocalMappingSerializer","location":"modelql-core/org.modelix.modelql.core/-local-mapping-serializer/-local-mapping-serializer.html","searchKeys":["LocalMappingSerializer","constructor(step: LocalMappingStep<In, Out>, inputSerializer: KSerializer<out IStepOutput<In>>)","org.modelix.modelql.core.LocalMappingSerializer.LocalMappingSerializer"]},{"name":"constructor(substring: String)","description":"org.modelix.modelql.core.StringContainsPredicate.StringContainsDescriptor.StringContainsDescriptor","location":"modelql-core/org.modelix.modelql.core/-string-contains-predicate/-string-contains-descriptor/-string-contains-descriptor.html","searchKeys":["StringContainsDescriptor","constructor(substring: String)","org.modelix.modelql.core.StringContainsPredicate.StringContainsDescriptor.StringContainsDescriptor"]},{"name":"constructor(substring: String)","description":"org.modelix.modelql.core.StringContainsPredicate.StringContainsPredicate","location":"modelql-core/org.modelix.modelql.core/-string-contains-predicate/-string-contains-predicate.html","searchKeys":["StringContainsPredicate","constructor(substring: String)","org.modelix.modelql.core.StringContainsPredicate.StringContainsPredicate"]},{"name":"constructor(transformation: (In) -> Out)","description":"org.modelix.modelql.core.ExecuteLocalStep.ExecuteLocalStep","location":"modelql-core/org.modelix.modelql.core/-execute-local-step/-execute-local-step.html","searchKeys":["ExecuteLocalStep","constructor(transformation: (In) -> Out)","org.modelix.modelql.core.ExecuteLocalStep.ExecuteLocalStep"]},{"name":"constructor(transformation: (In) -> Out)","description":"org.modelix.modelql.core.LocalMappingStep.LocalMappingStep","location":"modelql-core/org.modelix.modelql.core/-local-mapping-step/-local-mapping-step.html","searchKeys":["LocalMappingStep","constructor(transformation: (In) -> Out)","org.modelix.modelql.core.LocalMappingStep.LocalMappingStep"]},{"name":"constructor(value: Any?)","description":"org.modelix.modelql.core.Optional.Optional","location":"modelql-core/org.modelix.modelql.core/-optional/-optional.html","searchKeys":["Optional","constructor(value: Any?)","org.modelix.modelql.core.Optional.Optional"]},{"name":"constructor(value: E, owner: IProducingStep<E>?)","description":"org.modelix.modelql.core.SimpleStepOutput.SimpleStepOutput","location":"modelql-core/org.modelix.modelql.core/-simple-step-output/-simple-step-output.html","searchKeys":["SimpleStepOutput","constructor(value: E, owner: IProducingStep<E>?)","org.modelix.modelql.core.SimpleStepOutput.SimpleStepOutput"]},{"name":"constructor(valueSerializer: KSerializer<E>, owner: IProducingStep<E>?)","description":"org.modelix.modelql.core.SimpleStepOutputSerializer.SimpleStepOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-simple-step-output-serializer/-simple-step-output-serializer.html","searchKeys":["SimpleStepOutputSerializer","constructor(valueSerializer: KSerializer<E>, owner: IProducingStep<E>?)","org.modelix.modelql.core.SimpleStepOutputSerializer.SimpleStepOutputSerializer"]},{"name":"constructor(values: List<Common>)","description":"org.modelix.modelql.core.ZipOutput.ZipOutput","location":"modelql-core/org.modelix.modelql.core/-zip-output/-zip-output.html","searchKeys":["ZipOutput","constructor(values: List<Common>)","org.modelix.modelql.core.ZipOutput.ZipOutput"]},{"name":"constructor(values: List<IStepOutput<Common>>)","description":"org.modelix.modelql.core.ZipStepOutput.ZipStepOutput","location":"modelql-core/org.modelix.modelql.core/-zip-step-output/-zip-step-output.html","searchKeys":["ZipStepOutput","constructor(values: List<IStepOutput<Common>>)","org.modelix.modelql.core.ZipStepOutput.ZipStepOutput"]},{"name":"data class MultiplexedOutputSerializer<E>(val owner: IStep, val serializers: List<KSerializer<IStepOutput<E>>>) : KSerializer<MultiplexedOutput<E>> ","description":"org.modelix.modelql.core.MultiplexedOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-multiplexed-output-serializer/index.html","searchKeys":["MultiplexedOutputSerializer","data class MultiplexedOutputSerializer<E>(val owner: IStep, val serializers: List<KSerializer<IStepOutput<E>>>) : KSerializer<MultiplexedOutput<E>> ","org.modelix.modelql.core.MultiplexedOutputSerializer"]},{"name":"data class PortConnection(val producer: PortReference, val consumer: PortReference)","description":"org.modelix.modelql.core.PortConnection","location":"modelql-core/org.modelix.modelql.core/-port-connection/index.html","searchKeys":["PortConnection","data class PortConnection(val producer: PortReference, val consumer: PortReference)","org.modelix.modelql.core.PortConnection"]},{"name":"data class PortReference(val step: Int, val port: Int = 0)","description":"org.modelix.modelql.core.PortReference","location":"modelql-core/org.modelix.modelql.core/-port-reference/index.html","searchKeys":["PortReference","data class PortReference(val step: Int, val port: Int = 0)","org.modelix.modelql.core.PortReference"]},{"name":"data class QueryDescriptor(val input: Int, val output: Int, val sharedSteps: List<Int> = emptyList(), val isFluxOutput: Boolean = false, val queryId: Long)","description":"org.modelix.modelql.core.QueryDescriptor","location":"modelql-core/org.modelix.modelql.core/-query-descriptor/index.html","searchKeys":["QueryDescriptor","data class QueryDescriptor(val input: Int, val output: Int, val sharedSteps: List<Int> = emptyList(), val isFluxOutput: Boolean = false, val queryId: Long)","org.modelix.modelql.core.QueryDescriptor"]},{"name":"data class QueryEvaluationContext","description":"org.modelix.modelql.core.QueryEvaluationContext","location":"modelql-core/org.modelix.modelql.core/-query-evaluation-context/index.html","searchKeys":["QueryEvaluationContext","data class QueryEvaluationContext","org.modelix.modelql.core.QueryEvaluationContext"]},{"name":"data class QueryGraphDescriptor(val queries: List<QueryDescriptor>, val steps: Map<Int, StepDescriptor>, val connections: List<PortConnection>)","description":"org.modelix.modelql.core.QueryGraphDescriptor","location":"modelql-core/org.modelix.modelql.core/-query-graph-descriptor/index.html","searchKeys":["QueryGraphDescriptor","data class QueryGraphDescriptor(val queries: List<QueryDescriptor>, val steps: Map<Int, StepDescriptor>, val connections: List<PortConnection>)","org.modelix.modelql.core.QueryGraphDescriptor"]},{"name":"data class ZipOutput<out Common, out E1, out E2, out E3, out E4, out E5, out E6, out E7, out E8, out E9>(val values: List<Common>) : IZip9Output<Common, E1, E2, E3, E4, E5, E6, E7, E8, E9> ","description":"org.modelix.modelql.core.ZipOutput","location":"modelql-core/org.modelix.modelql.core/-zip-output/index.html","searchKeys":["ZipOutput","data class ZipOutput<out Common, out E1, out E2, out E3, out E4, out E5, out E6, out E7, out E8, out E9>(val values: List<Common>) : IZip9Output<Common, E1, E2, E3, E4, E5, E6, E7, E8, E9> ","org.modelix.modelql.core.ZipOutput"]},{"name":"expect class AtomicLong(initial: Long)","description":"org.modelix.modelql.core.AtomicLong","location":"modelql-core/org.modelix.modelql.core/-atomic-long/index.html","searchKeys":["AtomicLong","expect class AtomicLong(initial: Long)","org.modelix.modelql.core.AtomicLong"]},{"name":"expect class ContextValue<E : Any>","description":"org.modelix.modelql.core.ContextValue","location":"modelql-core/org.modelix.modelql.core/-context-value/index.html","searchKeys":["ContextValue","expect class ContextValue<E : Any>","org.modelix.modelql.core.ContextValue"]},{"name":"expect constructor(initial: Long)","description":"org.modelix.modelql.core.AtomicLong.AtomicLong","location":"modelql-core/org.modelix.modelql.core/-atomic-long/-atomic-long.html","searchKeys":["AtomicLong","expect constructor(initial: Long)","org.modelix.modelql.core.AtomicLong.AtomicLong"]},{"name":"expect fun <T> computeWith(newValue: E, r: () -> T): T","description":"org.modelix.modelql.core.ContextValue.computeWith","location":"modelql-core/org.modelix.modelql.core/-context-value/compute-with.html","searchKeys":["computeWith","expect fun <T> computeWith(newValue: E, r: () -> T): T","org.modelix.modelql.core.ContextValue.computeWith"]},{"name":"expect fun getStack(): List<E>","description":"org.modelix.modelql.core.ContextValue.getStack","location":"modelql-core/org.modelix.modelql.core/-context-value/get-stack.html","searchKeys":["getStack","expect fun getStack(): List<E>","org.modelix.modelql.core.ContextValue.getStack"]},{"name":"expect fun getValue(): E","description":"org.modelix.modelql.core.ContextValue.getValue","location":"modelql-core/org.modelix.modelql.core/-context-value/get-value.html","searchKeys":["getValue","expect fun getValue(): E","org.modelix.modelql.core.ContextValue.getValue"]},{"name":"expect fun incrementAndGet(): Long","description":"org.modelix.modelql.core.AtomicLong.incrementAndGet","location":"modelql-core/org.modelix.modelql.core/-atomic-long/increment-and-get.html","searchKeys":["incrementAndGet","expect fun incrementAndGet(): Long","org.modelix.modelql.core.AtomicLong.incrementAndGet"]},{"name":"expect fun tryGetValue(): E?","description":"org.modelix.modelql.core.ContextValue.tryGetValue","location":"modelql-core/org.modelix.modelql.core/-context-value/try-get-value.html","searchKeys":["tryGetValue","expect fun tryGetValue(): E?","org.modelix.modelql.core.ContextValue.tryGetValue"]},{"name":"fun <Common, T1 : Common, T2 : Common, T3 : Common, T4 : Common, T5 : Common> IMonoStep<T1>.zip(other2: IMonoStep<T2>, other3: IMonoStep<T3>, other4: IMonoStep<T4>, other5: IMonoStep<T5>): IMonoStep<IZip5Output<Common, T1, T2, T3, T4, T5>>","description":"org.modelix.modelql.core.zip","location":"modelql-core/org.modelix.modelql.core/zip.html","searchKeys":["zip","fun <Common, T1 : Common, T2 : Common, T3 : Common, T4 : Common, T5 : Common> IMonoStep<T1>.zip(other2: IMonoStep<T2>, other3: IMonoStep<T3>, other4: IMonoStep<T4>, other5: IMonoStep<T5>): IMonoStep<IZip5Output<Common, T1, T2, T3, T4, T5>>","org.modelix.modelql.core.zip"]},{"name":"fun <Common, T1 : Common, T2 : Common, T3 : Common, T4 : Common, T5 : Common> IProducingStep<T1>.zip(other2: IProducingStep<T2>, other3: IProducingStep<T3>, other4: IProducingStep<T4>, other5: IProducingStep<T5>): IFluxStep<IZip5Output<Common, T1, T2, T3, T4, T5>>","description":"org.modelix.modelql.core.zip","location":"modelql-core/org.modelix.modelql.core/zip.html","searchKeys":["zip","fun <Common, T1 : Common, T2 : Common, T3 : Common, T4 : Common, T5 : Common> IProducingStep<T1>.zip(other2: IProducingStep<T2>, other3: IProducingStep<T3>, other4: IProducingStep<T4>, other5: IProducingStep<T5>): IFluxStep<IZip5Output<Common, T1, T2, T3, T4, T5>>","org.modelix.modelql.core.zip"]},{"name":"fun <Common, T1 : Common, T2 : Common, T3 : Common, T4 : Common> IMonoStep<T1>.zip(other2: IMonoStep<T2>, other3: IMonoStep<T3>, other4: IMonoStep<T4>): IMonoStep<IZip4Output<Common, T1, T2, T3, T4>>","description":"org.modelix.modelql.core.zip","location":"modelql-core/org.modelix.modelql.core/zip.html","searchKeys":["zip","fun <Common, T1 : Common, T2 : Common, T3 : Common, T4 : Common> IMonoStep<T1>.zip(other2: IMonoStep<T2>, other3: IMonoStep<T3>, other4: IMonoStep<T4>): IMonoStep<IZip4Output<Common, T1, T2, T3, T4>>","org.modelix.modelql.core.zip"]},{"name":"fun <Common, T1 : Common, T2 : Common, T3 : Common, T4 : Common> IProducingStep<T1>.zip(other2: IProducingStep<T2>, other3: IProducingStep<T3>, other4: IProducingStep<T4>): IFluxStep<IZip4Output<Common, T1, T2, T3, T4>>","description":"org.modelix.modelql.core.zip","location":"modelql-core/org.modelix.modelql.core/zip.html","searchKeys":["zip","fun <Common, T1 : Common, T2 : Common, T3 : Common, T4 : Common> IProducingStep<T1>.zip(other2: IProducingStep<T2>, other3: IProducingStep<T3>, other4: IProducingStep<T4>): IFluxStep<IZip4Output<Common, T1, T2, T3, T4>>","org.modelix.modelql.core.zip"]},{"name":"fun <Common, T1 : Common, T2 : Common, T3 : Common> IMonoStep<T1>.zip(other2: IMonoStep<T2>, other3: IMonoStep<T3>): IMonoStep<IZip3Output<Common, T1, T2, T3>>","description":"org.modelix.modelql.core.zip","location":"modelql-core/org.modelix.modelql.core/zip.html","searchKeys":["zip","fun <Common, T1 : Common, T2 : Common, T3 : Common> IMonoStep<T1>.zip(other2: IMonoStep<T2>, other3: IMonoStep<T3>): IMonoStep<IZip3Output<Common, T1, T2, T3>>","org.modelix.modelql.core.zip"]},{"name":"fun <Common, T1 : Common, T2 : Common, T3 : Common> IProducingStep<T1>.zip(other2: IProducingStep<T2>, other3: IProducingStep<T3>): IFluxStep<IZip3Output<Common, T1, T2, T3>>","description":"org.modelix.modelql.core.zip","location":"modelql-core/org.modelix.modelql.core/zip.html","searchKeys":["zip","fun <Common, T1 : Common, T2 : Common, T3 : Common> IProducingStep<T1>.zip(other2: IProducingStep<T2>, other3: IProducingStep<T3>): IFluxStep<IZip3Output<Common, T1, T2, T3>>","org.modelix.modelql.core.zip"]},{"name":"fun <Common, T1 : Common, T2 : Common> IMonoStep<T1>.zip(other2: IMonoStep<T2>): IMonoStep<IZip2Output<Common, T1, T2>>","description":"org.modelix.modelql.core.zip","location":"modelql-core/org.modelix.modelql.core/zip.html","searchKeys":["zip","fun <Common, T1 : Common, T2 : Common> IMonoStep<T1>.zip(other2: IMonoStep<T2>): IMonoStep<IZip2Output<Common, T1, T2>>","org.modelix.modelql.core.zip"]},{"name":"fun <Common, T1 : Common, T2 : Common> IProducingStep<T1>.zip(other2: IProducingStep<T2>): IFluxStep<IZip2Output<Common, T1, T2>>","description":"org.modelix.modelql.core.zip","location":"modelql-core/org.modelix.modelql.core/zip.html","searchKeys":["zip","fun <Common, T1 : Common, T2 : Common> IProducingStep<T1>.zip(other2: IProducingStep<T2>): IFluxStep<IZip2Output<Common, T1, T2>>","org.modelix.modelql.core.zip"]},{"name":"fun <E> IFluxStep<E>.single(): IMonoStep<E>","description":"org.modelix.modelql.core.single","location":"modelql-core/org.modelix.modelql.core/single.html","searchKeys":["single","fun <E> IFluxStep<E>.single(): IMonoStep<E>","org.modelix.modelql.core.single"]},{"name":"fun <E> IProducingStep<E>.firstOrNull(): IMonoStep<E?>","description":"org.modelix.modelql.core.firstOrNull","location":"modelql-core/org.modelix.modelql.core/first-or-null.html","searchKeys":["firstOrNull","fun <E> IProducingStep<E>.firstOrNull(): IMonoStep<E?>","org.modelix.modelql.core.firstOrNull"]},{"name":"fun <In : Any, Out> IFluxStep<In?>.mapIfNotNull(body: IQueryBuilderContext<In, Out>.(IMonoStep<In>) -> IMonoStep<Out>): IFluxStep<Out?>","description":"org.modelix.modelql.core.mapIfNotNull","location":"modelql-core/org.modelix.modelql.core/map-if-not-null.html","searchKeys":["mapIfNotNull","fun <In : Any, Out> IFluxStep<In?>.mapIfNotNull(body: IQueryBuilderContext<In, Out>.(IMonoStep<In>) -> IMonoStep<Out>): IFluxStep<Out?>","org.modelix.modelql.core.mapIfNotNull"]},{"name":"fun <In : Any, Out> IMonoStep<In?>.mapIfNotNull(body: IQueryBuilderContext<In, Out>.(IMonoStep<In>) -> IMonoStep<Out>): IMonoStep<Out?>","description":"org.modelix.modelql.core.mapIfNotNull","location":"modelql-core/org.modelix.modelql.core/map-if-not-null.html","searchKeys":["mapIfNotNull","fun <In : Any, Out> IMonoStep<In?>.mapIfNotNull(body: IQueryBuilderContext<In, Out>.(IMonoStep<In>) -> IMonoStep<Out>): IMonoStep<Out?>","org.modelix.modelql.core.mapIfNotNull"]},{"name":"fun <In : Out, Out> IFluxStep<In>.ifEmpty(alternative: () -> IMonoStep<Out>): IFluxStep<Out>","description":"org.modelix.modelql.core.ifEmpty","location":"modelql-core/org.modelix.modelql.core/if-empty.html","searchKeys":["ifEmpty","fun <In : Out, Out> IFluxStep<In>.ifEmpty(alternative: () -> IMonoStep<Out>): IFluxStep<Out>","org.modelix.modelql.core.ifEmpty"]},{"name":"fun <In : Out, Out> IFluxStep<In>.ifEmptyFlux(alternative: () -> IFluxStep<Out>): IFluxStep<Out>","description":"org.modelix.modelql.core.ifEmptyFlux","location":"modelql-core/org.modelix.modelql.core/if-empty-flux.html","searchKeys":["ifEmptyFlux","fun <In : Out, Out> IFluxStep<In>.ifEmptyFlux(alternative: () -> IFluxStep<Out>): IFluxStep<Out>","org.modelix.modelql.core.ifEmptyFlux"]},{"name":"fun <In : Out, Out> IMonoStep<In>.ifEmpty(alternative: () -> IMonoStep<Out>): IMonoStep<Out>","description":"org.modelix.modelql.core.ifEmpty","location":"modelql-core/org.modelix.modelql.core/if-empty.html","searchKeys":["ifEmpty","fun <In : Out, Out> IMonoStep<In>.ifEmpty(alternative: () -> IMonoStep<Out>): IMonoStep<Out>","org.modelix.modelql.core.ifEmpty"]},{"name":"fun <In : Out, Out> IMonoStep<In>.ifEmptyFlux(alternative: () -> IFluxStep<Out>): IFluxStep<Out>","description":"org.modelix.modelql.core.ifEmptyFlux","location":"modelql-core/org.modelix.modelql.core/if-empty-flux.html","searchKeys":["ifEmptyFlux","fun <In : Out, Out> IMonoStep<In>.ifEmptyFlux(alternative: () -> IFluxStep<Out>): IFluxStep<Out>","org.modelix.modelql.core.ifEmptyFlux"]},{"name":"fun <In, Context> buildModelQLFragment(body: IRecursiveFragmentBuilder<In, Context>.() -> Unit): IUnboundFragment<In, Context>","description":"org.modelix.modelql.core.buildModelQLFragment","location":"modelql-core/org.modelix.modelql.core/build-model-q-l-fragment.html","searchKeys":["buildModelQLFragment","fun <In, Context> buildModelQLFragment(body: IRecursiveFragmentBuilder<In, Context>.() -> Unit): IUnboundFragment<In, Context>","org.modelix.modelql.core.buildModelQLFragment"]},{"name":"fun <In, Context> buildModelQLFragment(eager: Boolean, body: IRecursiveFragmentBuilder<In, Context>.() -> Unit): IUnboundFragment<In, Context>","description":"org.modelix.modelql.core.buildModelQLFragment","location":"modelql-core/org.modelix.modelql.core/build-model-q-l-fragment.html","searchKeys":["buildModelQLFragment","fun <In, Context> buildModelQLFragment(eager: Boolean, body: IRecursiveFragmentBuilder<In, Context>.() -> Unit): IUnboundFragment<In, Context>","org.modelix.modelql.core.buildModelQLFragment"]},{"name":"fun <In, K, V> IFluxStep<In>.associate(keySelector: (IMonoStep<In>) -> IMonoStep<K>, valueSelector: (IMonoStep<In>) -> IMonoStep<V>): IMonoStep<Map<K, V>>","description":"org.modelix.modelql.core.associate","location":"modelql-core/org.modelix.modelql.core/associate.html","searchKeys":["associate","fun <In, K, V> IFluxStep<In>.associate(keySelector: (IMonoStep<In>) -> IMonoStep<K>, valueSelector: (IMonoStep<In>) -> IMonoStep<V>): IMonoStep<Map<K, V>>","org.modelix.modelql.core.associate"]},{"name":"fun <In, Out, AggregationT, T> IMonoUnboundQuery<In, Out>.map(query: IUnboundQuery<Out, AggregationT, T>): IUnboundQuery<In, AggregationT, T>","description":"org.modelix.modelql.core.map","location":"modelql-core/org.modelix.modelql.core/map.html","searchKeys":["map","fun <In, Out, AggregationT, T> IMonoUnboundQuery<In, Out>.map(query: IUnboundQuery<Out, AggregationT, T>): IUnboundQuery<In, AggregationT, T>","org.modelix.modelql.core.map"]},{"name":"fun <In, Out, ElementOut> IUnboundQuery<In, Out, ElementOut>.castToInstance(): UnboundQuery<In, Out, ElementOut>","description":"org.modelix.modelql.core.castToInstance","location":"modelql-core/org.modelix.modelql.core/cast-to-instance.html","searchKeys":["castToInstance","fun <In, Out, ElementOut> IUnboundQuery<In, Out, ElementOut>.castToInstance(): UnboundQuery<In, Out, ElementOut>","org.modelix.modelql.core.castToInstance"]},{"name":"fun <In, Out> IFluxStep<In>.buildLocalMapping(body: ILocalMappingBuilder<In, Out>.(IMonoStep<In>) -> Unit): IFluxStep<Out>","description":"org.modelix.modelql.core.buildLocalMapping","location":"modelql-core/org.modelix.modelql.core/build-local-mapping.html","searchKeys":["buildLocalMapping","fun <In, Out> IFluxStep<In>.buildLocalMapping(body: ILocalMappingBuilder<In, Out>.(IMonoStep<In>) -> Unit): IFluxStep<Out>","org.modelix.modelql.core.buildLocalMapping"]},{"name":"fun <In, Out> IFluxStep<In>.executeLocal(body: (In) -> Out): IFluxStep<Out>","description":"org.modelix.modelql.core.executeLocal","location":"modelql-core/org.modelix.modelql.core/execute-local.html","searchKeys":["executeLocal","fun <In, Out> IFluxStep<In>.executeLocal(body: (In) -> Out): IFluxStep<Out>","org.modelix.modelql.core.executeLocal"]},{"name":"fun <In, Out> IFluxStep<In>.map(body: IStepSharingContext.(IMonoStep<In>) -> IMonoStep<Out>): IFluxStep<Out>","description":"org.modelix.modelql.core.map","location":"modelql-core/org.modelix.modelql.core/map.html","searchKeys":["map","fun <In, Out> IFluxStep<In>.map(body: IStepSharingContext.(IMonoStep<In>) -> IMonoStep<Out>): IFluxStep<Out>","org.modelix.modelql.core.map"]},{"name":"fun <In, Out> IFluxStep<In>.map(query: IMonoUnboundQuery<In, Out>): IFluxStep<Out>","description":"org.modelix.modelql.core.map","location":"modelql-core/org.modelix.modelql.core/map.html","searchKeys":["map","fun <In, Out> IFluxStep<In>.map(query: IMonoUnboundQuery<In, Out>): IFluxStep<Out>","org.modelix.modelql.core.map"]},{"name":"fun <In, Out> IFluxStep<In>.mapLocal(body: (In) -> Out): IFluxStep<Out>","description":"org.modelix.modelql.core.mapLocal","location":"modelql-core/org.modelix.modelql.core/map-local.html","searchKeys":["mapLocal","fun <In, Out> IFluxStep<In>.mapLocal(body: (In) -> Out): IFluxStep<Out>","org.modelix.modelql.core.mapLocal"]},{"name":"fun <In, Out> IFluxStep<In>.mapLocal2(body: ILocalMappingBuilder<In, Out>.(IMonoStep<In>) -> Unit): IFluxStep<Out>","description":"org.modelix.modelql.core.mapLocal2","location":"modelql-core/org.modelix.modelql.core/map-local2.html","searchKeys":["mapLocal2","fun <In, Out> IFluxStep<In>.mapLocal2(body: ILocalMappingBuilder<In, Out>.(IMonoStep<In>) -> Unit): IFluxStep<Out>","org.modelix.modelql.core.mapLocal2"]},{"name":"fun <In, Out> IFluxUnboundQuery<In, Out>.castToInstance(): FluxUnboundQuery<In, Out>","description":"org.modelix.modelql.core.castToInstance","location":"modelql-core/org.modelix.modelql.core/cast-to-instance.html","searchKeys":["castToInstance","fun <In, Out> IFluxUnboundQuery<In, Out>.castToInstance(): FluxUnboundQuery<In, Out>","org.modelix.modelql.core.castToInstance"]},{"name":"fun <In, Out> IMonoStep<In>.buildLocalMapping(body: ILocalMappingBuilder<In, Out>.(IMonoStep<In>) -> Unit): IMonoStep<Out>","description":"org.modelix.modelql.core.buildLocalMapping","location":"modelql-core/org.modelix.modelql.core/build-local-mapping.html","searchKeys":["buildLocalMapping","fun <In, Out> IMonoStep<In>.buildLocalMapping(body: ILocalMappingBuilder<In, Out>.(IMonoStep<In>) -> Unit): IMonoStep<Out>","org.modelix.modelql.core.buildLocalMapping"]},{"name":"fun <In, Out> IMonoStep<In>.callFluxQuery(query: () -> IFluxUnboundQuery<In, Out>): IFluxStep<Out>","description":"org.modelix.modelql.core.callFluxQuery","location":"modelql-core/org.modelix.modelql.core/call-flux-query.html","searchKeys":["callFluxQuery","fun <In, Out> IMonoStep<In>.callFluxQuery(query: () -> IFluxUnboundQuery<In, Out>): IFluxStep<Out>","org.modelix.modelql.core.callFluxQuery"]},{"name":"fun <In, Out> IMonoStep<In>.callFluxQuery(ref: QueryReference<IFluxUnboundQuery<In, Out>>): IFluxStep<Out>","description":"org.modelix.modelql.core.callFluxQuery","location":"modelql-core/org.modelix.modelql.core/call-flux-query.html","searchKeys":["callFluxQuery","fun <In, Out> IMonoStep<In>.callFluxQuery(ref: QueryReference<IFluxUnboundQuery<In, Out>>): IFluxStep<Out>","org.modelix.modelql.core.callFluxQuery"]},{"name":"fun <In, Out> IMonoStep<In>.callQuery(query: () -> IMonoUnboundQuery<In, Out>): IMonoStep<Out>","description":"org.modelix.modelql.core.callQuery","location":"modelql-core/org.modelix.modelql.core/call-query.html","searchKeys":["callQuery","fun <In, Out> IMonoStep<In>.callQuery(query: () -> IMonoUnboundQuery<In, Out>): IMonoStep<Out>","org.modelix.modelql.core.callQuery"]},{"name":"fun <In, Out> IMonoStep<In>.callQuery(ref: QueryReference<IMonoUnboundQuery<In, Out>>): IMonoStep<Out>","description":"org.modelix.modelql.core.callQuery","location":"modelql-core/org.modelix.modelql.core/call-query.html","searchKeys":["callQuery","fun <In, Out> IMonoStep<In>.callQuery(ref: QueryReference<IMonoUnboundQuery<In, Out>>): IMonoStep<Out>","org.modelix.modelql.core.callQuery"]},{"name":"fun <In, Out> IMonoStep<In>.executeLocal(body: (In) -> Out): IMonoStep<Out>","description":"org.modelix.modelql.core.executeLocal","location":"modelql-core/org.modelix.modelql.core/execute-local.html","searchKeys":["executeLocal","fun <In, Out> IMonoStep<In>.executeLocal(body: (In) -> Out): IMonoStep<Out>","org.modelix.modelql.core.executeLocal"]},{"name":"fun <In, Out> IMonoStep<In>.map(body: IStepSharingContext.(IMonoStep<In>) -> IMonoStep<Out>): IMonoStep<Out>","description":"org.modelix.modelql.core.map","location":"modelql-core/org.modelix.modelql.core/map.html","searchKeys":["map","fun <In, Out> IMonoStep<In>.map(body: IStepSharingContext.(IMonoStep<In>) -> IMonoStep<Out>): IMonoStep<Out>","org.modelix.modelql.core.map"]},{"name":"fun <In, Out> IMonoStep<In>.map(query: IMonoUnboundQuery<In, Out>): IMonoStep<Out>","description":"org.modelix.modelql.core.map","location":"modelql-core/org.modelix.modelql.core/map.html","searchKeys":["map","fun <In, Out> IMonoStep<In>.map(query: IMonoUnboundQuery<In, Out>): IMonoStep<Out>","org.modelix.modelql.core.map"]},{"name":"fun <In, Out> IMonoStep<In>.mapLocal(body: (In) -> Out): IMonoStep<Out>","description":"org.modelix.modelql.core.mapLocal","location":"modelql-core/org.modelix.modelql.core/map-local.html","searchKeys":["mapLocal","fun <In, Out> IMonoStep<In>.mapLocal(body: (In) -> Out): IMonoStep<Out>","org.modelix.modelql.core.mapLocal"]},{"name":"fun <In, Out> IMonoStep<In>.mapLocal2(body: ILocalMappingBuilder<In, Out>.(IMonoStep<In>) -> Unit): IMonoStep<Out>","description":"org.modelix.modelql.core.mapLocal2","location":"modelql-core/org.modelix.modelql.core/map-local2.html","searchKeys":["mapLocal2","fun <In, Out> IMonoStep<In>.mapLocal2(body: ILocalMappingBuilder<In, Out>.(IMonoStep<In>) -> Unit): IMonoStep<Out>","org.modelix.modelql.core.mapLocal2"]},{"name":"fun <In, Out> IMonoStep<In>.when(): WhenStepBuilder<In, Out>","description":"org.modelix.modelql.core.when","location":"modelql-core/org.modelix.modelql.core/when.html","searchKeys":["when","fun <In, Out> IMonoStep<In>.when(): WhenStepBuilder<In, Out>","org.modelix.modelql.core.when"]},{"name":"fun <In, Out> IMonoUnboundQuery<In, Out>.castToInstance(): MonoUnboundQuery<In, Out>","description":"org.modelix.modelql.core.castToInstance","location":"modelql-core/org.modelix.modelql.core/cast-to-instance.html","searchKeys":["castToInstance","fun <In, Out> IMonoUnboundQuery<In, Out>.castToInstance(): MonoUnboundQuery<In, Out>","org.modelix.modelql.core.castToInstance"]},{"name":"fun <In, Out> IProducingStep<In>.flatMap(body: (IMonoStep<In>) -> IFluxStep<Out>): IFluxStep<Out>","description":"org.modelix.modelql.core.flatMap","location":"modelql-core/org.modelix.modelql.core/flat-map.html","searchKeys":["flatMap","fun <In, Out> IProducingStep<In>.flatMap(body: (IMonoStep<In>) -> IFluxStep<Out>): IFluxStep<Out>","org.modelix.modelql.core.flatMap"]},{"name":"fun <In, Out> IProducingStep<In>.flatMap(query: IFluxUnboundQuery<In, Out>): IFluxStep<Out>","description":"org.modelix.modelql.core.flatMap","location":"modelql-core/org.modelix.modelql.core/flat-map.html","searchKeys":["flatMap","fun <In, Out> IProducingStep<In>.flatMap(query: IFluxUnboundQuery<In, Out>): IFluxStep<Out>","org.modelix.modelql.core.flatMap"]},{"name":"fun <In, Out> buildFlux(body: (IMonoStep<In>) -> IFluxStep<Out>): IFluxUnboundQuery<In, Out>","description":"org.modelix.modelql.core.IUnboundQuery.Companion.buildFlux","location":"modelql-core/org.modelix.modelql.core/-i-unbound-query/-companion/build-flux.html","searchKeys":["buildFlux","fun <In, Out> buildFlux(body: (IMonoStep<In>) -> IFluxStep<Out>): IFluxUnboundQuery<In, Out>","org.modelix.modelql.core.IUnboundQuery.Companion.buildFlux"]},{"name":"fun <In, Out> buildFluxQuery(body: IQueryBuilderContext<In, Out>.(IMonoStep<In>) -> IFluxStep<Out>): IFluxUnboundQuery<In, Out>","description":"org.modelix.modelql.core.buildFluxQuery","location":"modelql-core/org.modelix.modelql.core/build-flux-query.html","searchKeys":["buildFluxQuery","fun <In, Out> buildFluxQuery(body: IQueryBuilderContext<In, Out>.(IMonoStep<In>) -> IFluxStep<Out>): IFluxUnboundQuery<In, Out>","org.modelix.modelql.core.buildFluxQuery"]},{"name":"fun <In, Out> buildMono(body: (IMonoStep<In>) -> IMonoStep<Out>): IMonoUnboundQuery<In, Out>","description":"org.modelix.modelql.core.IUnboundQuery.Companion.buildMono","location":"modelql-core/org.modelix.modelql.core/-i-unbound-query/-companion/build-mono.html","searchKeys":["buildMono","fun <In, Out> buildMono(body: (IMonoStep<In>) -> IMonoStep<Out>): IMonoUnboundQuery<In, Out>","org.modelix.modelql.core.IUnboundQuery.Companion.buildMono"]},{"name":"fun <In, Out> buildMonoQuery(body: IQueryBuilderContext<In, Out>.(IMonoStep<In>) -> IMonoStep<Out>): IMonoUnboundQuery<In, Out>","description":"org.modelix.modelql.core.buildMonoQuery","location":"modelql-core/org.modelix.modelql.core/build-mono-query.html","searchKeys":["buildMonoQuery","fun <In, Out> buildMonoQuery(body: IQueryBuilderContext<In, Out>.(IMonoStep<In>) -> IMonoStep<Out>): IMonoUnboundQuery<In, Out>","org.modelix.modelql.core.buildMonoQuery"]},{"name":"fun <K, V> IFluxStep<IZip2Output<*, K, V>>.toMap(): IMonoStep<Map<K, V>>","description":"org.modelix.modelql.core.toMap","location":"modelql-core/org.modelix.modelql.core/to-map.html","searchKeys":["toMap","fun <K, V> IFluxStep<IZip2Output<*, K, V>>.toMap(): IMonoStep<Map<K, V>>","org.modelix.modelql.core.toMap"]},{"name":"fun <K, V> IFluxStep<K>.associateWith(valueSelector: (IMonoStep<K>) -> IMonoStep<V>): IMonoStep<Map<K, V>>","description":"org.modelix.modelql.core.associateWith","location":"modelql-core/org.modelix.modelql.core/associate-with.html","searchKeys":["associateWith","fun <K, V> IFluxStep<K>.associateWith(valueSelector: (IMonoStep<K>) -> IMonoStep<V>): IMonoStep<Map<K, V>>","org.modelix.modelql.core.associateWith"]},{"name":"fun <K, V> IFluxStep<V>.associateBy(keySelector: (IMonoStep<V>) -> IMonoStep<K>): IMonoStep<Map<K, V>>","description":"org.modelix.modelql.core.associateBy","location":"modelql-core/org.modelix.modelql.core/associate-by.html","searchKeys":["associateBy","fun <K, V> IFluxStep<V>.associateBy(keySelector: (IMonoStep<V>) -> IMonoStep<K>): IMonoStep<Map<K, V>>","org.modelix.modelql.core.associateBy"]},{"name":"fun <Out> IFluxStep<Out>.nullIfEmpty(): IFluxStep<Out?>","description":"org.modelix.modelql.core.nullIfEmpty","location":"modelql-core/org.modelix.modelql.core/null-if-empty.html","searchKeys":["nullIfEmpty","fun <Out> IFluxStep<Out>.nullIfEmpty(): IFluxStep<Out?>","org.modelix.modelql.core.nullIfEmpty"]},{"name":"fun <Out> IFluxStep<Out>.orNull(): IFluxStep<Out?>","description":"org.modelix.modelql.core.orNull","location":"modelql-core/org.modelix.modelql.core/or-null.html","searchKeys":["orNull","fun <Out> IFluxStep<Out>.orNull(): IFluxStep<Out?>","org.modelix.modelql.core.orNull"]},{"name":"fun <Out> IMonoStep<Out>.nullIfEmpty(): IMonoStep<Out?>","description":"org.modelix.modelql.core.nullIfEmpty","location":"modelql-core/org.modelix.modelql.core/null-if-empty.html","searchKeys":["nullIfEmpty","fun <Out> IMonoStep<Out>.nullIfEmpty(): IMonoStep<Out?>","org.modelix.modelql.core.nullIfEmpty"]},{"name":"fun <Out> IMonoStep<Out>.orNull(): IMonoStep<Out?>","description":"org.modelix.modelql.core.orNull","location":"modelql-core/org.modelix.modelql.core/or-null.html","searchKeys":["orNull","fun <Out> IMonoStep<Out>.orNull(): IMonoStep<Out?>","org.modelix.modelql.core.orNull"]},{"name":"fun <Out> IProducingStep<Out>.first(): IMonoStep<Out>","description":"org.modelix.modelql.core.first","location":"modelql-core/org.modelix.modelql.core/first.html","searchKeys":["first","fun <Out> IProducingStep<Out>.first(): IMonoStep<Out>","org.modelix.modelql.core.first"]},{"name":"fun <Q : IUnboundQuery<*, *, *>> load(query: Q): QueryId","description":"org.modelix.modelql.core.QueryGraphDescriptorBuilder.load","location":"modelql-core/org.modelix.modelql.core/-query-graph-descriptor-builder/load.html","searchKeys":["load","fun <Q : IUnboundQuery<*, *, *>> load(query: Q): QueryId","org.modelix.modelql.core.QueryGraphDescriptorBuilder.load"]},{"name":"fun <R> flatMap(body: (E) -> Optional<R>): Optional<R>","description":"org.modelix.modelql.core.Optional.flatMap","location":"modelql-core/org.modelix.modelql.core/-optional/flat-map.html","searchKeys":["flatMap","fun <R> flatMap(body: (E) -> Optional<R>): Optional<R>","org.modelix.modelql.core.Optional.flatMap"]},{"name":"fun <R> map(body: (E) -> R): Optional<R>","description":"org.modelix.modelql.core.Optional.map","location":"modelql-core/org.modelix.modelql.core/-optional/map.html","searchKeys":["map","fun <R> map(body: (E) -> R): Optional<R>","org.modelix.modelql.core.Optional.map"]},{"name":"fun <T : Any> IFluxStep<T?>.filterNotNull(): IFluxStep<T>","description":"org.modelix.modelql.core.filterNotNull","location":"modelql-core/org.modelix.modelql.core/filter-not-null.html","searchKeys":["filterNotNull","fun <T : Any> IFluxStep<T?>.filterNotNull(): IFluxStep<T>","org.modelix.modelql.core.filterNotNull"]},{"name":"fun <T : Any> IMonoStep<T?>.filterNotNull(): IMonoStep<T>","description":"org.modelix.modelql.core.filterNotNull","location":"modelql-core/org.modelix.modelql.core/filter-not-null.html","searchKeys":["filterNotNull","fun <T : Any> IMonoStep<T?>.filterNotNull(): IMonoStep<T>","org.modelix.modelql.core.filterNotNull"]},{"name":"fun <T, Context> IFragmentBuilder<T, Context>.castToInstance(): FragmentBuilder<T, Context>","description":"org.modelix.modelql.core.castToInstance","location":"modelql-core/org.modelix.modelql.core/cast-to-instance.html","searchKeys":["castToInstance","fun <T, Context> IFragmentBuilder<T, Context>.castToInstance(): FragmentBuilder<T, Context>","org.modelix.modelql.core.castToInstance"]},{"name":"fun <T, R> Flow<T>.batchTransform(batchSize: Int, transform: (List<T>) -> List<R>): Flow<R>","description":"org.modelix.modelql.core.batchTransform","location":"modelql-core/org.modelix.modelql.core/batch-transform.html","searchKeys":["batchTransform","fun <T, R> Flow<T>.batchTransform(batchSize: Int, transform: (List<T>) -> List<R>): Flow<R>","org.modelix.modelql.core.batchTransform"]},{"name":"fun <T, R> Flow<T>.flatMapConcatConcurrent(transform: suspend (T) -> Flow<R>): Flow<R>","description":"org.modelix.modelql.core.flatMapConcatConcurrent","location":"modelql-core/org.modelix.modelql.core/flat-map-concat-concurrent.html","searchKeys":["flatMapConcatConcurrent","fun <T, R> Flow<T>.flatMapConcatConcurrent(transform: suspend (T) -> Flow<R>): Flow<R>","org.modelix.modelql.core.flatMapConcatConcurrent"]},{"name":"fun <T> Flow<Flow<T>>.flattenConcatConcurrent(): Flow<T>","description":"org.modelix.modelql.core.flattenConcatConcurrent","location":"modelql-core/org.modelix.modelql.core/flatten-concat-concurrent.html","searchKeys":["flattenConcatConcurrent","fun <T> Flow<Flow<T>>.flattenConcatConcurrent(): Flow<T>","org.modelix.modelql.core.flattenConcatConcurrent"]},{"name":"fun <T> Flow<T>.asStepFlow(owner: IProducingStep<T>?): StepFlow<T>","description":"org.modelix.modelql.core.asStepFlow","location":"modelql-core/org.modelix.modelql.core/as-step-flow.html","searchKeys":["asStepFlow","fun <T> Flow<T>.asStepFlow(owner: IProducingStep<T>?): StepFlow<T>","org.modelix.modelql.core.asStepFlow"]},{"name":"fun <T> Flow<T>.assertNotEmpty(additionalMessage: () -> String = { \"\" }): Flow<T>","description":"org.modelix.modelql.core.assertNotEmpty","location":"modelql-core/org.modelix.modelql.core/assert-not-empty.html","searchKeys":["assertNotEmpty","fun <T> Flow<T>.assertNotEmpty(additionalMessage: () -> String = { \"\" }): Flow<T>","org.modelix.modelql.core.assertNotEmpty"]},{"name":"fun <T> Flow<T>.chunked(chunkSize: Int): Flow<List<T>>","description":"org.modelix.modelql.core.chunked","location":"modelql-core/org.modelix.modelql.core/chunked.html","searchKeys":["chunked","fun <T> Flow<T>.chunked(chunkSize: Int): Flow<List<T>>","org.modelix.modelql.core.chunked"]},{"name":"fun <T> IConsumingStep<T>.connect(producer: IProducingStep<T>)","description":"org.modelix.modelql.core.connect","location":"modelql-core/org.modelix.modelql.core/connect.html","searchKeys":["connect","fun <T> IConsumingStep<T>.connect(producer: IProducingStep<T>)","org.modelix.modelql.core.connect"]},{"name":"fun <T> IFluxStep<T>.allowEmpty(): IFluxStep<T>","description":"org.modelix.modelql.core.allowEmpty","location":"modelql-core/org.modelix.modelql.core/allow-empty.html","searchKeys":["allowEmpty","fun <T> IFluxStep<T>.allowEmpty(): IFluxStep<T>","org.modelix.modelql.core.allowEmpty"]},{"name":"fun <T> IFluxStep<T>.assertNotEmpty(): IFluxStep<T>","description":"org.modelix.modelql.core.assertNotEmpty","location":"modelql-core/org.modelix.modelql.core/assert-not-empty.html","searchKeys":["assertNotEmpty","fun <T> IFluxStep<T>.assertNotEmpty(): IFluxStep<T>","org.modelix.modelql.core.assertNotEmpty"]},{"name":"fun <T> IFluxStep<T>.drop(count: Int): IFluxStep<T>","description":"org.modelix.modelql.core.drop","location":"modelql-core/org.modelix.modelql.core/drop.html","searchKeys":["drop","fun <T> IFluxStep<T>.drop(count: Int): IFluxStep<T>","org.modelix.modelql.core.drop"]},{"name":"fun <T> IFluxStep<T>.filter(condition: IQueryBuilderContext<T, Boolean>.(IMonoStep<T>) -> IMonoStep<Boolean>): IFluxStep<T>","description":"org.modelix.modelql.core.filter","location":"modelql-core/org.modelix.modelql.core/filter.html","searchKeys":["filter","fun <T> IFluxStep<T>.filter(condition: IQueryBuilderContext<T, Boolean>.(IMonoStep<T>) -> IMonoStep<Boolean>): IFluxStep<T>","org.modelix.modelql.core.filter"]},{"name":"fun <T> IFluxStep<T>.identity(): IFluxStep<T>","description":"org.modelix.modelql.core.identity","location":"modelql-core/org.modelix.modelql.core/identity.html","searchKeys":["identity","fun <T> IFluxStep<T>.identity(): IFluxStep<T>","org.modelix.modelql.core.identity"]},{"name":"fun <T> IFluxStep<T>.inSet(values: IMonoStep<Set<T>>): IFluxStep<Boolean>","description":"org.modelix.modelql.core.inSet","location":"modelql-core/org.modelix.modelql.core/in-set.html","searchKeys":["inSet","fun <T> IFluxStep<T>.inSet(values: IMonoStep<Set<T>>): IFluxStep<Boolean>","org.modelix.modelql.core.inSet"]},{"name":"fun <T> IFluxStep<T>.print(prefix: String = \"\"): IFluxStep<T>","description":"org.modelix.modelql.core.print","location":"modelql-core/org.modelix.modelql.core/print.html","searchKeys":["print","fun <T> IFluxStep<T>.print(prefix: String = \"\"): IFluxStep<T>","org.modelix.modelql.core.print"]},{"name":"fun <T> IFluxStep<T>.take(count: Int): IFluxStep<T>","description":"org.modelix.modelql.core.take","location":"modelql-core/org.modelix.modelql.core/take.html","searchKeys":["take","fun <T> IFluxStep<T>.take(count: Int): IFluxStep<T>","org.modelix.modelql.core.take"]},{"name":"fun <T> IFluxStep<T>.toList(): IMonoStep<List<T>>","description":"org.modelix.modelql.core.toList","location":"modelql-core/org.modelix.modelql.core/to-list.html","searchKeys":["toList","fun <T> IFluxStep<T>.toList(): IMonoStep<List<T>>","org.modelix.modelql.core.toList"]},{"name":"fun <T> IFluxStep<T>.toSet(): IMonoStep<Set<T>>","description":"org.modelix.modelql.core.toSet","location":"modelql-core/org.modelix.modelql.core/to-set.html","searchKeys":["toSet","fun <T> IFluxStep<T>.toSet(): IMonoStep<Set<T>>","org.modelix.modelql.core.toSet"]},{"name":"fun <T> IFluxStep<T>.withIndex(): IFluxStep<IWithIndex<T>>","description":"org.modelix.modelql.core.withIndex","location":"modelql-core/org.modelix.modelql.core/with-index.html","searchKeys":["withIndex","fun <T> IFluxStep<T>.withIndex(): IFluxStep<IWithIndex<T>>","org.modelix.modelql.core.withIndex"]},{"name":"fun <T> IMonoStep<T>.allowEmpty(): IMonoStep<T>","description":"org.modelix.modelql.core.allowEmpty","location":"modelql-core/org.modelix.modelql.core/allow-empty.html","searchKeys":["allowEmpty","fun <T> IMonoStep<T>.allowEmpty(): IMonoStep<T>","org.modelix.modelql.core.allowEmpty"]},{"name":"fun <T> IMonoStep<T>.asFlux(): IFluxStep<T>","description":"org.modelix.modelql.core.asFlux","location":"modelql-core/org.modelix.modelql.core/as-flux.html","searchKeys":["asFlux","fun <T> IMonoStep<T>.asFlux(): IFluxStep<T>","org.modelix.modelql.core.asFlux"]},{"name":"fun <T> IMonoStep<T>.assertNotEmpty(): IMonoStep<T>","description":"org.modelix.modelql.core.assertNotEmpty","location":"modelql-core/org.modelix.modelql.core/assert-not-empty.html","searchKeys":["assertNotEmpty","fun <T> IMonoStep<T>.assertNotEmpty(): IMonoStep<T>","org.modelix.modelql.core.assertNotEmpty"]},{"name":"fun <T> IMonoStep<T>.equalTo(operand: IMonoStep<T>): IMonoStep<Boolean>","description":"org.modelix.modelql.core.equalTo","location":"modelql-core/org.modelix.modelql.core/equal-to.html","searchKeys":["equalTo","fun <T> IMonoStep<T>.equalTo(operand: IMonoStep<T>): IMonoStep<Boolean>","org.modelix.modelql.core.equalTo"]},{"name":"fun <T> IMonoStep<T>.filter(condition: IQueryBuilderContext<T, Boolean>.(IMonoStep<T>) -> IMonoStep<Boolean>): IMonoStep<T>","description":"org.modelix.modelql.core.filter","location":"modelql-core/org.modelix.modelql.core/filter.html","searchKeys":["filter","fun <T> IMonoStep<T>.filter(condition: IQueryBuilderContext<T, Boolean>.(IMonoStep<T>) -> IMonoStep<Boolean>): IMonoStep<T>","org.modelix.modelql.core.filter"]},{"name":"fun <T> IMonoStep<T>.identity(): IMonoStep<T>","description":"org.modelix.modelql.core.identity","location":"modelql-core/org.modelix.modelql.core/identity.html","searchKeys":["identity","fun <T> IMonoStep<T>.identity(): IMonoStep<T>","org.modelix.modelql.core.identity"]},{"name":"fun <T> IMonoStep<T>.inSet(values: IMonoStep<Set<T>>): IMonoStep<Boolean>","description":"org.modelix.modelql.core.inSet","location":"modelql-core/org.modelix.modelql.core/in-set.html","searchKeys":["inSet","fun <T> IMonoStep<T>.inSet(values: IMonoStep<Set<T>>): IMonoStep<Boolean>","org.modelix.modelql.core.inSet"]},{"name":"fun <T> IMonoStep<T>.isNull(): IMonoStep<Boolean>","description":"org.modelix.modelql.core.isNull","location":"modelql-core/org.modelix.modelql.core/is-null.html","searchKeys":["isNull","fun <T> IMonoStep<T>.isNull(): IMonoStep<Boolean>","org.modelix.modelql.core.isNull"]},{"name":"fun <T> IMonoStep<T>.notEqualTo(operand: IMonoStep<T>): IMonoStep<Boolean>","description":"org.modelix.modelql.core.notEqualTo","location":"modelql-core/org.modelix.modelql.core/not-equal-to.html","searchKeys":["notEqualTo","fun <T> IMonoStep<T>.notEqualTo(operand: IMonoStep<T>): IMonoStep<Boolean>","org.modelix.modelql.core.notEqualTo"]},{"name":"fun <T> IMonoStep<T>.print(prefix: String = \"\"): IMonoStep<T>","description":"org.modelix.modelql.core.print","location":"modelql-core/org.modelix.modelql.core/print.html","searchKeys":["print","fun <T> IMonoStep<T>.print(prefix: String = \"\"): IMonoStep<T>","org.modelix.modelql.core.print"]},{"name":"fun <T> IMonoStep<T>.toSingletonList(): IMonoStep<List<T>>","description":"org.modelix.modelql.core.toSingletonList","location":"modelql-core/org.modelix.modelql.core/to-singleton-list.html","searchKeys":["toSingletonList","fun <T> IMonoStep<T>.toSingletonList(): IMonoStep<List<T>>","org.modelix.modelql.core.toSingletonList"]},{"name":"fun <T> IMonoStep<T>.toSingletonSet(): IMonoStep<Set<T>>","description":"org.modelix.modelql.core.toSingletonSet","location":"modelql-core/org.modelix.modelql.core/to-singleton-set.html","searchKeys":["toSingletonSet","fun <T> IMonoStep<T>.toSingletonSet(): IMonoStep<Set<T>>","org.modelix.modelql.core.toSingletonSet"]},{"name":"fun <T> IMonoStep<T>.zip(vararg others: IMonoStep<T>): IMonoStep<IZipOutput<T>>","description":"org.modelix.modelql.core.zip","location":"modelql-core/org.modelix.modelql.core/zip.html","searchKeys":["zip","fun <T> IMonoStep<T>.zip(vararg others: IMonoStep<T>): IMonoStep<IZipOutput<T>>","org.modelix.modelql.core.zip"]},{"name":"fun <T> IMonoStep<T>.zipN(vararg others: IMonoStep<T>): IMonoStep<IZipOutput<T>>","description":"org.modelix.modelql.core.zipN","location":"modelql-core/org.modelix.modelql.core/zip-n.html","searchKeys":["zipN","fun <T> IMonoStep<T>.zipN(vararg others: IMonoStep<T>): IMonoStep<IZipOutput<T>>","org.modelix.modelql.core.zipN"]},{"name":"fun <T> IProducingStep<T>.connect(consumer: IConsumingStep<T>)","description":"org.modelix.modelql.core.connect","location":"modelql-core/org.modelix.modelql.core/connect.html","searchKeys":["connect","fun <T> IProducingStep<T>.connect(consumer: IConsumingStep<T>)","org.modelix.modelql.core.connect"]},{"name":"fun <T> IProducingStep<T>.shared(): SharedStep<T>","description":"org.modelix.modelql.core.QueryBuilderContext.shared","location":"modelql-core/org.modelix.modelql.core/-query-builder-context/shared.html","searchKeys":["shared","fun <T> IProducingStep<T>.shared(): SharedStep<T>","org.modelix.modelql.core.QueryBuilderContext.shared"]},{"name":"fun <T> IProducingStep<T>.zip(vararg others: IProducingStep<T>): IFluxStep<IZipOutput<T>>","description":"org.modelix.modelql.core.zip","location":"modelql-core/org.modelix.modelql.core/zip.html","searchKeys":["zip","fun <T> IProducingStep<T>.zip(vararg others: IProducingStep<T>): IFluxStep<IZipOutput<T>>","org.modelix.modelql.core.zip"]},{"name":"fun <T> IProducingStep<T>.zipN(vararg others: IProducingStep<T>): IFluxStep<IZipOutput<T>>","description":"org.modelix.modelql.core.zipN","location":"modelql-core/org.modelix.modelql.core/zip-n.html","searchKeys":["zipN","fun <T> IProducingStep<T>.zipN(vararg others: IProducingStep<T>): IFluxStep<IZipOutput<T>>","org.modelix.modelql.core.zipN"]},{"name":"fun <T> IStepOutput<*>.upcast(): IStepOutput<T>","description":"org.modelix.modelql.core.upcast","location":"modelql-core/org.modelix.modelql.core/upcast.html","searchKeys":["upcast","fun <T> IStepOutput<*>.upcast(): IStepOutput<T>","org.modelix.modelql.core.upcast"]},{"name":"fun <T> KSerializer<T>.stepOutputSerializer(owner: IProducingStep<T>?): SimpleStepOutputSerializer<T>","description":"org.modelix.modelql.core.stepOutputSerializer","location":"modelql-core/org.modelix.modelql.core/step-output-serializer.html","searchKeys":["stepOutputSerializer","fun <T> KSerializer<T>.stepOutputSerializer(owner: IProducingStep<T>?): SimpleStepOutputSerializer<T>","org.modelix.modelql.core.stepOutputSerializer"]},{"name":"fun <T> KSerializer<out T>.upcast(): KSerializer<T>","description":"org.modelix.modelql.core.upcast","location":"modelql-core/org.modelix.modelql.core/upcast.html","searchKeys":["upcast","fun <T> KSerializer<out T>.upcast(): KSerializer<T>","org.modelix.modelql.core.upcast"]},{"name":"fun <T> Optional<T>.getOrElse(defaultValue: T): T","description":"org.modelix.modelql.core.getOrElse","location":"modelql-core/org.modelix.modelql.core/get-or-else.html","searchKeys":["getOrElse","fun <T> Optional<T>.getOrElse(defaultValue: T): T","org.modelix.modelql.core.getOrElse"]},{"name":"fun <T> Optional<T>.presentAndEqual(other: T): Boolean","description":"org.modelix.modelql.core.presentAndEqual","location":"modelql-core/org.modelix.modelql.core/present-and-equal.html","searchKeys":["presentAndEqual","fun <T> Optional<T>.presentAndEqual(other: T): Boolean","org.modelix.modelql.core.presentAndEqual"]},{"name":"fun <T> T.asStepOutput(owner: IProducingStep<T>?): IStepOutput<T>","description":"org.modelix.modelql.core.asStepOutput","location":"modelql-core/org.modelix.modelql.core/as-step-output.html","searchKeys":["asStepOutput","fun <T> T.asStepOutput(owner: IProducingStep<T>?): IStepOutput<T>","org.modelix.modelql.core.asStepOutput"]},{"name":"fun <T> computeWith(body: QueryBuilderContext<In, Out, Q>.() -> T): T","description":"org.modelix.modelql.core.QueryBuilderContext.computeWith","location":"modelql-core/org.modelix.modelql.core/-query-builder-context/compute-with.html","searchKeys":["computeWith","fun <T> computeWith(body: QueryBuilderContext<In, Out, Q>.() -> T): T","org.modelix.modelql.core.QueryBuilderContext.computeWith"]},{"name":"fun <T> deserialize(serializedJson: String, dataSerializer: KSerializer<T>, json: Json): VersionAndData<T>","description":"org.modelix.modelql.core.VersionAndData.Companion.deserialize","location":"modelql-core/org.modelix.modelql.core/-version-and-data/-companion/deserialize.html","searchKeys":["deserialize","fun <T> deserialize(serializedJson: String, dataSerializer: KSerializer<T>, json: Json): VersionAndData<T>","org.modelix.modelql.core.VersionAndData.Companion.deserialize"]},{"name":"fun <T> empty(): Optional<T>","description":"org.modelix.modelql.core.Optional.Companion.empty","location":"modelql-core/org.modelix.modelql.core/-optional/-companion/empty.html","searchKeys":["empty","fun <T> empty(): Optional<T>","org.modelix.modelql.core.Optional.Companion.empty"]},{"name":"fun <T> getValue(producer: IProducingStep<T>): List<IStepOutput<T>>","description":"org.modelix.modelql.core.QueryEvaluationContext.getValue","location":"modelql-core/org.modelix.modelql.core/-query-evaluation-context/get-value.html","searchKeys":["getValue","fun <T> getValue(producer: IProducingStep<T>): List<IStepOutput<T>>","org.modelix.modelql.core.QueryEvaluationContext.getValue"]},{"name":"fun <T> nullSerializer(): KSerializer<T?>","description":"org.modelix.modelql.core.nullSerializer","location":"modelql-core/org.modelix.modelql.core/null-serializer.html","searchKeys":["nullSerializer","fun <T> nullSerializer(): KSerializer<T?>","org.modelix.modelql.core.nullSerializer"]},{"name":"fun <T> of(entry: Pair<IProducingStep<T>, IStepOutput<T>>): QueryEvaluationContext","description":"org.modelix.modelql.core.QueryEvaluationContext.Companion.of","location":"modelql-core/org.modelix.modelql.core/-query-evaluation-context/-companion/of.html","searchKeys":["of","fun <T> of(entry: Pair<IProducingStep<T>, IStepOutput<T>>): QueryEvaluationContext","org.modelix.modelql.core.QueryEvaluationContext.Companion.of"]},{"name":"fun <T> of(producer: IProducingStep<T>, value: IStepOutput<T>): QueryEvaluationContext","description":"org.modelix.modelql.core.QueryEvaluationContext.Companion.of","location":"modelql-core/org.modelix.modelql.core/-query-evaluation-context/-companion/of.html","searchKeys":["of","fun <T> of(producer: IProducingStep<T>, value: IStepOutput<T>): QueryEvaluationContext","org.modelix.modelql.core.QueryEvaluationContext.Companion.of"]},{"name":"fun <T> of(value: T): Optional<T>","description":"org.modelix.modelql.core.Optional.Companion.of","location":"modelql-core/org.modelix.modelql.core/-optional/-companion/of.html","searchKeys":["of","fun <T> of(value: T): Optional<T>","org.modelix.modelql.core.Optional.Companion.of"]},{"name":"fun <T> plus(producer: IProducingStep<T>, value: List<IStepOutput<T>>): QueryEvaluationContext","description":"org.modelix.modelql.core.QueryEvaluationContext.plus","location":"modelql-core/org.modelix.modelql.core/-query-evaluation-context/plus.html","searchKeys":["plus","fun <T> plus(producer: IProducingStep<T>, value: List<IStepOutput<T>>): QueryEvaluationContext","org.modelix.modelql.core.QueryEvaluationContext.plus"]},{"name":"fun <T> put(step: IProducingStep<T>, producer: Flow<T>)","description":"org.modelix.modelql.core.FlowInstantiationContext.put","location":"modelql-core/org.modelix.modelql.core/-flow-instantiation-context/put.html","searchKeys":["put","fun <T> put(step: IProducingStep<T>, producer: Flow<T>)","org.modelix.modelql.core.FlowInstantiationContext.put"]},{"name":"fun <T> request(input: IMonoStep<T>): IValueRequest<T>","description":"org.modelix.modelql.core.ZipBuilder.request","location":"modelql-core/org.modelix.modelql.core/-zip-builder/request.html","searchKeys":["request","fun <T> request(input: IMonoStep<T>): IValueRequest<T>","org.modelix.modelql.core.ZipBuilder.request"]},{"name":"fun <T> withResult(result: IZipOutput<*>, body: () -> T): T","description":"org.modelix.modelql.core.ZipBuilder.withResult","location":"modelql-core/org.modelix.modelql.core/-zip-builder/with-result.html","searchKeys":["withResult","fun <T> withResult(result: IZipOutput<*>, body: () -> T): T","org.modelix.modelql.core.ZipBuilder.withResult"]},{"name":"fun <T> zipList(vararg steps: IMonoStep<T>): IMonoStep<IZipOutput<T>>","description":"org.modelix.modelql.core.zipList","location":"modelql-core/org.modelix.modelql.core/zip-list.html","searchKeys":["zipList","fun <T> zipList(vararg steps: IMonoStep<T>): IMonoStep<IZipOutput<T>>","org.modelix.modelql.core.zipList"]},{"name":"fun <TContext> TContext.insertFragment(fragment: IBoundFragment<TContext>)","description":"org.modelix.modelql.core.insertFragment","location":"modelql-core/org.modelix.modelql.core/insert-fragment.html","searchKeys":["insertFragment","fun <TContext> TContext.insertFragment(fragment: IBoundFragment<TContext>)","org.modelix.modelql.core.insertFragment"]},{"name":"fun <TIn, TContext> IFluxStep<TIn>.bindFragment(body: IRecursiveFragmentBuilder<TIn, TContext>.() -> Unit): IMonoStep<IBoundFragment<TContext>>","description":"org.modelix.modelql.core.bindFragment","location":"modelql-core/org.modelix.modelql.core/bind-fragment.html","searchKeys":["bindFragment","fun <TIn, TContext> IFluxStep<TIn>.bindFragment(body: IRecursiveFragmentBuilder<TIn, TContext>.() -> Unit): IMonoStep<IBoundFragment<TContext>>","org.modelix.modelql.core.bindFragment"]},{"name":"fun <TIn, TContext> IFluxStep<TIn>.bindFragment(fragment: IUnboundFragment<TIn, TContext>): IMonoStep<IBoundFragment<TContext>>","description":"org.modelix.modelql.core.bindFragment","location":"modelql-core/org.modelix.modelql.core/bind-fragment.html","searchKeys":["bindFragment","fun <TIn, TContext> IFluxStep<TIn>.bindFragment(fragment: IUnboundFragment<TIn, TContext>): IMonoStep<IBoundFragment<TContext>>","org.modelix.modelql.core.bindFragment"]},{"name":"fun <TIn, TContext> IMonoStep<TIn>.bindFragment(body: IRecursiveFragmentBuilder<TIn, TContext>.() -> Unit): IMonoStep<IBoundFragment<TContext>>","description":"org.modelix.modelql.core.bindFragment","location":"modelql-core/org.modelix.modelql.core/bind-fragment.html","searchKeys":["bindFragment","fun <TIn, TContext> IMonoStep<TIn>.bindFragment(body: IRecursiveFragmentBuilder<TIn, TContext>.() -> Unit): IMonoStep<IBoundFragment<TContext>>","org.modelix.modelql.core.bindFragment"]},{"name":"fun <TIn, TContext> IMonoStep<TIn>.bindFragment(fragment: IUnboundFragment<TIn, TContext>): IMonoStep<IBoundFragment<TContext>>","description":"org.modelix.modelql.core.bindFragment","location":"modelql-core/org.modelix.modelql.core/bind-fragment.html","searchKeys":["bindFragment","fun <TIn, TContext> IMonoStep<TIn>.bindFragment(fragment: IUnboundFragment<TIn, TContext>): IMonoStep<IBoundFragment<TContext>>","org.modelix.modelql.core.bindFragment"]},{"name":"fun Boolean.asMono(): IMonoStep<Boolean>","description":"org.modelix.modelql.core.asMono","location":"modelql-core/org.modelix.modelql.core/as-mono.html","searchKeys":["asMono","fun Boolean.asMono(): IMonoStep<Boolean>","org.modelix.modelql.core.asMono"]},{"name":"fun Boolean?.asMono(): IMonoStep<Boolean?>","description":"org.modelix.modelql.core.asMono","location":"modelql-core/org.modelix.modelql.core/as-mono.html","searchKeys":["asMono","fun Boolean?.asMono(): IMonoStep<Boolean?>","org.modelix.modelql.core.asMono"]},{"name":"fun Byte.asMono(): IMonoStep<Byte>","description":"org.modelix.modelql.core.asMono","location":"modelql-core/org.modelix.modelql.core/as-mono.html","searchKeys":["asMono","fun Byte.asMono(): IMonoStep<Byte>","org.modelix.modelql.core.asMono"]},{"name":"fun Byte?.asMono(): IMonoStep<Byte?>","description":"org.modelix.modelql.core.asMono","location":"modelql-core/org.modelix.modelql.core/as-mono.html","searchKeys":["asMono","fun Byte?.asMono(): IMonoStep<Byte?>","org.modelix.modelql.core.asMono"]},{"name":"fun Char.asMono(): IMonoStep<Char>","description":"org.modelix.modelql.core.asMono","location":"modelql-core/org.modelix.modelql.core/as-mono.html","searchKeys":["asMono","fun Char.asMono(): IMonoStep<Char>","org.modelix.modelql.core.asMono"]},{"name":"fun Char?.asMono(): IMonoStep<Char?>","description":"org.modelix.modelql.core.asMono","location":"modelql-core/org.modelix.modelql.core/as-mono.html","searchKeys":["asMono","fun Char?.asMono(): IMonoStep<Char?>","org.modelix.modelql.core.asMono"]},{"name":"fun Double.asMono(): IMonoStep<Double>","description":"org.modelix.modelql.core.asMono","location":"modelql-core/org.modelix.modelql.core/as-mono.html","searchKeys":["asMono","fun Double.asMono(): IMonoStep<Double>","org.modelix.modelql.core.asMono"]},{"name":"fun Double?.asMono(): IMonoStep<Double?>","description":"org.modelix.modelql.core.asMono","location":"modelql-core/org.modelix.modelql.core/as-mono.html","searchKeys":["asMono","fun Double?.asMono(): IMonoStep<Double?>","org.modelix.modelql.core.asMono"]},{"name":"fun Float.asMono(): IMonoStep<Float>","description":"org.modelix.modelql.core.asMono","location":"modelql-core/org.modelix.modelql.core/as-mono.html","searchKeys":["asMono","fun Float.asMono(): IMonoStep<Float>","org.modelix.modelql.core.asMono"]},{"name":"fun Float?.asMono(): IMonoStep<Float?>","description":"org.modelix.modelql.core.asMono","location":"modelql-core/org.modelix.modelql.core/as-mono.html","searchKeys":["asMono","fun Float?.asMono(): IMonoStep<Float?>","org.modelix.modelql.core.asMono"]},{"name":"fun IFluxStep<*>.count(): IMonoStep<Int>","description":"org.modelix.modelql.core.count","location":"modelql-core/org.modelix.modelql.core/count.html","searchKeys":["count","fun IFluxStep<*>.count(): IMonoStep<Int>","org.modelix.modelql.core.count"]},{"name":"fun IFluxStep<Any>.asString(): IFluxStep<String>","description":"org.modelix.modelql.core.asString","location":"modelql-core/org.modelix.modelql.core/as-string.html","searchKeys":["asString","fun IFluxStep<Any>.asString(): IFluxStep<String>","org.modelix.modelql.core.asString"]},{"name":"fun IFluxStep<Any?>.asString(): IFluxStep<String?>","description":"org.modelix.modelql.core.asString","location":"modelql-core/org.modelix.modelql.core/as-string.html","searchKeys":["asString","fun IFluxStep<Any?>.asString(): IFluxStep<String?>","org.modelix.modelql.core.asString"]},{"name":"fun IFluxStep<String?>.emptyStringIfNull(): IFluxStep<String>","description":"org.modelix.modelql.core.emptyStringIfNull","location":"modelql-core/org.modelix.modelql.core/empty-string-if-null.html","searchKeys":["emptyStringIfNull","fun IFluxStep<String?>.emptyStringIfNull(): IFluxStep<String>","org.modelix.modelql.core.emptyStringIfNull"]},{"name":"fun IFluxStep<String?>.inSet(values: Set<String>): IFluxStep<Boolean>","description":"org.modelix.modelql.core.inSet","location":"modelql-core/org.modelix.modelql.core/in-set.html","searchKeys":["inSet","fun IFluxStep<String?>.inSet(values: Set<String>): IFluxStep<Boolean>","org.modelix.modelql.core.inSet"]},{"name":"fun IFluxStep<String?>.toBoolean(): IFluxStep<Boolean>","description":"org.modelix.modelql.core.toBoolean","location":"modelql-core/org.modelix.modelql.core/to-boolean.html","searchKeys":["toBoolean","fun IFluxStep<String?>.toBoolean(): IFluxStep<Boolean>","org.modelix.modelql.core.toBoolean"]},{"name":"fun IFluxStep<String?>.toInt(): IFluxStep<Int>","description":"org.modelix.modelql.core.toInt","location":"modelql-core/org.modelix.modelql.core/to-int.html","searchKeys":["toInt","fun IFluxStep<String?>.toInt(): IFluxStep<Int>","org.modelix.modelql.core.toInt"]},{"name":"fun IMonoStep<Any>.asString(): IMonoStep<String>","description":"org.modelix.modelql.core.asString","location":"modelql-core/org.modelix.modelql.core/as-string.html","searchKeys":["asString","fun IMonoStep<Any>.asString(): IMonoStep<String>","org.modelix.modelql.core.asString"]},{"name":"fun IMonoStep<Any?>.asString(): IMonoStep<String?>","description":"org.modelix.modelql.core.asString","location":"modelql-core/org.modelix.modelql.core/as-string.html","searchKeys":["asString","fun IMonoStep<Any?>.asString(): IMonoStep<String?>","org.modelix.modelql.core.asString"]},{"name":"fun IMonoStep<Boolean?>.equalTo(operand: Boolean?): IMonoStep<Boolean>","description":"org.modelix.modelql.core.equalTo","location":"modelql-core/org.modelix.modelql.core/equal-to.html","searchKeys":["equalTo","fun IMonoStep<Boolean?>.equalTo(operand: Boolean?): IMonoStep<Boolean>","org.modelix.modelql.core.equalTo"]},{"name":"fun IMonoStep<Boolean?>.notEqualTo(operand: Boolean?): IMonoStep<Boolean>","description":"org.modelix.modelql.core.notEqualTo","location":"modelql-core/org.modelix.modelql.core/not-equal-to.html","searchKeys":["notEqualTo","fun IMonoStep<Boolean?>.notEqualTo(operand: Boolean?): IMonoStep<Boolean>","org.modelix.modelql.core.notEqualTo"]},{"name":"fun IMonoStep<Byte?>.equalTo(operand: Byte?): IMonoStep<Boolean>","description":"org.modelix.modelql.core.equalTo","location":"modelql-core/org.modelix.modelql.core/equal-to.html","searchKeys":["equalTo","fun IMonoStep<Byte?>.equalTo(operand: Byte?): IMonoStep<Boolean>","org.modelix.modelql.core.equalTo"]},{"name":"fun IMonoStep<Byte?>.notEqualTo(operand: Byte?): IMonoStep<Boolean>","description":"org.modelix.modelql.core.notEqualTo","location":"modelql-core/org.modelix.modelql.core/not-equal-to.html","searchKeys":["notEqualTo","fun IMonoStep<Byte?>.notEqualTo(operand: Byte?): IMonoStep<Boolean>","org.modelix.modelql.core.notEqualTo"]},{"name":"fun IMonoStep<Char?>.equalTo(operand: Char?): IMonoStep<Boolean>","description":"org.modelix.modelql.core.equalTo","location":"modelql-core/org.modelix.modelql.core/equal-to.html","searchKeys":["equalTo","fun IMonoStep<Char?>.equalTo(operand: Char?): IMonoStep<Boolean>","org.modelix.modelql.core.equalTo"]},{"name":"fun IMonoStep<Char?>.notEqualTo(operand: Char?): IMonoStep<Boolean>","description":"org.modelix.modelql.core.notEqualTo","location":"modelql-core/org.modelix.modelql.core/not-equal-to.html","searchKeys":["notEqualTo","fun IMonoStep<Char?>.notEqualTo(operand: Char?): IMonoStep<Boolean>","org.modelix.modelql.core.notEqualTo"]},{"name":"fun IMonoStep<Collection<*>>.size(): IMonoStep<Int>","description":"org.modelix.modelql.core.size","location":"modelql-core/org.modelix.modelql.core/size.html","searchKeys":["size","fun IMonoStep<Collection<*>>.size(): IMonoStep<Int>","org.modelix.modelql.core.size"]},{"name":"fun IMonoStep<Double?>.equalTo(operand: Double?): IMonoStep<Boolean>","description":"org.modelix.modelql.core.equalTo","location":"modelql-core/org.modelix.modelql.core/equal-to.html","searchKeys":["equalTo","fun IMonoStep<Double?>.equalTo(operand: Double?): IMonoStep<Boolean>","org.modelix.modelql.core.equalTo"]},{"name":"fun IMonoStep<Double?>.notEqualTo(operand: Double?): IMonoStep<Boolean>","description":"org.modelix.modelql.core.notEqualTo","location":"modelql-core/org.modelix.modelql.core/not-equal-to.html","searchKeys":["notEqualTo","fun IMonoStep<Double?>.notEqualTo(operand: Double?): IMonoStep<Boolean>","org.modelix.modelql.core.notEqualTo"]},{"name":"fun IMonoStep<Float?>.equalTo(operand: Float?): IMonoStep<Boolean>","description":"org.modelix.modelql.core.equalTo","location":"modelql-core/org.modelix.modelql.core/equal-to.html","searchKeys":["equalTo","fun IMonoStep<Float?>.equalTo(operand: Float?): IMonoStep<Boolean>","org.modelix.modelql.core.equalTo"]},{"name":"fun IMonoStep<Float?>.notEqualTo(operand: Float?): IMonoStep<Boolean>","description":"org.modelix.modelql.core.notEqualTo","location":"modelql-core/org.modelix.modelql.core/not-equal-to.html","searchKeys":["notEqualTo","fun IMonoStep<Float?>.notEqualTo(operand: Float?): IMonoStep<Boolean>","org.modelix.modelql.core.notEqualTo"]},{"name":"fun IMonoStep<Int?>.equalTo(operand: Int?): IMonoStep<Boolean>","description":"org.modelix.modelql.core.equalTo","location":"modelql-core/org.modelix.modelql.core/equal-to.html","searchKeys":["equalTo","fun IMonoStep<Int?>.equalTo(operand: Int?): IMonoStep<Boolean>","org.modelix.modelql.core.equalTo"]},{"name":"fun IMonoStep<Int?>.notEqualTo(operand: Int?): IMonoStep<Boolean>","description":"org.modelix.modelql.core.notEqualTo","location":"modelql-core/org.modelix.modelql.core/not-equal-to.html","searchKeys":["notEqualTo","fun IMonoStep<Int?>.notEqualTo(operand: Int?): IMonoStep<Boolean>","org.modelix.modelql.core.notEqualTo"]},{"name":"fun IMonoStep<Long?>.equalTo(operand: Long?): IMonoStep<Boolean>","description":"org.modelix.modelql.core.equalTo","location":"modelql-core/org.modelix.modelql.core/equal-to.html","searchKeys":["equalTo","fun IMonoStep<Long?>.equalTo(operand: Long?): IMonoStep<Boolean>","org.modelix.modelql.core.equalTo"]},{"name":"fun IMonoStep<Long?>.notEqualTo(operand: Long?): IMonoStep<Boolean>","description":"org.modelix.modelql.core.notEqualTo","location":"modelql-core/org.modelix.modelql.core/not-equal-to.html","searchKeys":["notEqualTo","fun IMonoStep<Long?>.notEqualTo(operand: Long?): IMonoStep<Boolean>","org.modelix.modelql.core.notEqualTo"]},{"name":"fun IMonoStep<Short?>.equalTo(operand: Short?): IMonoStep<Boolean>","description":"org.modelix.modelql.core.equalTo","location":"modelql-core/org.modelix.modelql.core/equal-to.html","searchKeys":["equalTo","fun IMonoStep<Short?>.equalTo(operand: Short?): IMonoStep<Boolean>","org.modelix.modelql.core.equalTo"]},{"name":"fun IMonoStep<Short?>.notEqualTo(operand: Short?): IMonoStep<Boolean>","description":"org.modelix.modelql.core.notEqualTo","location":"modelql-core/org.modelix.modelql.core/not-equal-to.html","searchKeys":["notEqualTo","fun IMonoStep<Short?>.notEqualTo(operand: Short?): IMonoStep<Boolean>","org.modelix.modelql.core.notEqualTo"]},{"name":"fun IMonoStep<String?>.contains(substring: String): IMonoStep<Boolean>","description":"org.modelix.modelql.core.contains","location":"modelql-core/org.modelix.modelql.core/contains.html","searchKeys":["contains","fun IMonoStep<String?>.contains(substring: String): IMonoStep<Boolean>","org.modelix.modelql.core.contains"]},{"name":"fun IMonoStep<String?>.emptyStringIfNull(): IMonoStep<String>","description":"org.modelix.modelql.core.emptyStringIfNull","location":"modelql-core/org.modelix.modelql.core/empty-string-if-null.html","searchKeys":["emptyStringIfNull","fun IMonoStep<String?>.emptyStringIfNull(): IMonoStep<String>","org.modelix.modelql.core.emptyStringIfNull"]},{"name":"fun IMonoStep<String?>.equalTo(operand: String): IMonoStep<Boolean>","description":"org.modelix.modelql.core.equalTo","location":"modelql-core/org.modelix.modelql.core/equal-to.html","searchKeys":["equalTo","fun IMonoStep<String?>.equalTo(operand: String): IMonoStep<Boolean>","org.modelix.modelql.core.equalTo"]},{"name":"fun IMonoStep<String?>.inSet(values: Set<String>): IMonoStep<Boolean>","description":"org.modelix.modelql.core.inSet","location":"modelql-core/org.modelix.modelql.core/in-set.html","searchKeys":["inSet","fun IMonoStep<String?>.inSet(values: Set<String>): IMonoStep<Boolean>","org.modelix.modelql.core.inSet"]},{"name":"fun IMonoStep<String?>.matches(regex: Regex): IMonoStep<Boolean>","description":"org.modelix.modelql.core.matches","location":"modelql-core/org.modelix.modelql.core/matches.html","searchKeys":["matches","fun IMonoStep<String?>.matches(regex: Regex): IMonoStep<Boolean>","org.modelix.modelql.core.matches"]},{"name":"fun IMonoStep<String?>.notEqualTo(operand: String): IMonoStep<Boolean>","description":"org.modelix.modelql.core.notEqualTo","location":"modelql-core/org.modelix.modelql.core/not-equal-to.html","searchKeys":["notEqualTo","fun IMonoStep<String?>.notEqualTo(operand: String): IMonoStep<Boolean>","org.modelix.modelql.core.notEqualTo"]},{"name":"fun IMonoStep<String?>.toBoolean(): IMonoStep<Boolean>","description":"org.modelix.modelql.core.toBoolean","location":"modelql-core/org.modelix.modelql.core/to-boolean.html","searchKeys":["toBoolean","fun IMonoStep<String?>.toBoolean(): IMonoStep<Boolean>","org.modelix.modelql.core.toBoolean"]},{"name":"fun IMonoStep<String?>.toInt(): IMonoStep<Int>","description":"org.modelix.modelql.core.toInt","location":"modelql-core/org.modelix.modelql.core/to-int.html","searchKeys":["toInt","fun IMonoStep<String?>.toInt(): IMonoStep<Int>","org.modelix.modelql.core.toInt"]},{"name":"fun IProducingStep<*>.isSingle(): Boolean","description":"org.modelix.modelql.core.isSingle","location":"modelql-core/org.modelix.modelql.core/is-single.html","searchKeys":["isSingle","fun IProducingStep<*>.isSingle(): Boolean","org.modelix.modelql.core.isSingle"]},{"name":"fun IProducingStep<Any?>.isEmpty(): IMonoStep<Boolean>","description":"org.modelix.modelql.core.isEmpty","location":"modelql-core/org.modelix.modelql.core/is-empty.html","searchKeys":["isEmpty","fun IProducingStep<Any?>.isEmpty(): IMonoStep<Boolean>","org.modelix.modelql.core.isEmpty"]},{"name":"fun IProducingStep<Any?>.isNotEmpty(): IMonoStep<Boolean>","description":"org.modelix.modelql.core.isNotEmpty","location":"modelql-core/org.modelix.modelql.core/is-not-empty.html","searchKeys":["isNotEmpty","fun IProducingStep<Any?>.isNotEmpty(): IMonoStep<Boolean>","org.modelix.modelql.core.isNotEmpty"]},{"name":"fun IStep.id(): Int","description":"org.modelix.modelql.core.QueryGraphDescriptorBuilder.id","location":"modelql-core/org.modelix.modelql.core/-query-graph-descriptor-builder/id.html","searchKeys":["id","fun IStep.id(): Int","org.modelix.modelql.core.QueryGraphDescriptorBuilder.id"]},{"name":"fun Int.asMono(): IMonoStep<Int>","description":"org.modelix.modelql.core.asMono","location":"modelql-core/org.modelix.modelql.core/as-mono.html","searchKeys":["asMono","fun Int.asMono(): IMonoStep<Int>","org.modelix.modelql.core.asMono"]},{"name":"fun Int?.asMono(): IMonoStep<Int?>","description":"org.modelix.modelql.core.asMono","location":"modelql-core/org.modelix.modelql.core/as-mono.html","searchKeys":["asMono","fun Int?.asMono(): IMonoStep<Int?>","org.modelix.modelql.core.asMono"]},{"name":"fun Long.asMono(): IMonoStep<Long>","description":"org.modelix.modelql.core.asMono","location":"modelql-core/org.modelix.modelql.core/as-mono.html","searchKeys":["asMono","fun Long.asMono(): IMonoStep<Long>","org.modelix.modelql.core.asMono"]},{"name":"fun Long?.asMono(): IMonoStep<Long?>","description":"org.modelix.modelql.core.asMono","location":"modelql-core/org.modelix.modelql.core/as-mono.html","searchKeys":["asMono","fun Long?.asMono(): IMonoStep<Long?>","org.modelix.modelql.core.asMono"]},{"name":"fun Set<String>.asMono(): IMonoStep<Set<String>>","description":"org.modelix.modelql.core.asMono","location":"modelql-core/org.modelix.modelql.core/as-mono.html","searchKeys":["asMono","fun Set<String>.asMono(): IMonoStep<Set<String>>","org.modelix.modelql.core.asMono"]},{"name":"fun Set<String?>.asMono(): IMonoStep<Set<String?>>","description":"org.modelix.modelql.core.asMono","location":"modelql-core/org.modelix.modelql.core/as-mono.html","searchKeys":["asMono","fun Set<String?>.asMono(): IMonoStep<Set<String?>>","org.modelix.modelql.core.asMono"]},{"name":"fun Short.asMono(): IMonoStep<Short>","description":"org.modelix.modelql.core.asMono","location":"modelql-core/org.modelix.modelql.core/as-mono.html","searchKeys":["asMono","fun Short.asMono(): IMonoStep<Short>","org.modelix.modelql.core.asMono"]},{"name":"fun Short?.asMono(): IMonoStep<Short?>","description":"org.modelix.modelql.core.asMono","location":"modelql-core/org.modelix.modelql.core/as-mono.html","searchKeys":["asMono","fun Short?.asMono(): IMonoStep<Short?>","org.modelix.modelql.core.asMono"]},{"name":"fun String.asMono(): IMonoStep<String>","description":"org.modelix.modelql.core.asMono","location":"modelql-core/org.modelix.modelql.core/as-mono.html","searchKeys":["asMono","fun String.asMono(): IMonoStep<String>","org.modelix.modelql.core.asMono"]},{"name":"fun String?.asMono(): IMonoStep<String?>","description":"org.modelix.modelql.core.asMono","location":"modelql-core/org.modelix.modelql.core/as-mono.html","searchKeys":["asMono","fun String?.asMono(): IMonoStep<String?>","org.modelix.modelql.core.asMono"]},{"name":"fun build(): QueryGraphDescriptor","description":"org.modelix.modelql.core.QueryGraphDescriptorBuilder.build","location":"modelql-core/org.modelix.modelql.core/-query-graph-descriptor-builder/build.html","searchKeys":["build","fun build(): QueryGraphDescriptor","org.modelix.modelql.core.QueryGraphDescriptorBuilder.build"]},{"name":"fun buildQueryDescriptor(): QueryDescriptor","description":"org.modelix.modelql.core.QueryGraphDescriptorBuilder.QueryDescriptorBuilder.buildQueryDescriptor","location":"modelql-core/org.modelix.modelql.core/-query-graph-descriptor-builder/-query-descriptor-builder/build-query-descriptor.html","searchKeys":["buildQueryDescriptor","fun buildQueryDescriptor(): QueryDescriptor","org.modelix.modelql.core.QueryGraphDescriptorBuilder.QueryDescriptorBuilder.buildQueryDescriptor"]},{"name":"fun checkNotSealed()","description":"org.modelix.modelql.core.FragmentBuilder.checkNotSealed","location":"modelql-core/org.modelix.modelql.core/-fragment-builder/check-not-sealed.html","searchKeys":["checkNotSealed","fun checkNotSealed()","org.modelix.modelql.core.FragmentBuilder.checkNotSealed"]},{"name":"fun checkSealed()","description":"org.modelix.modelql.core.FragmentBuilder.checkSealed","location":"modelql-core/org.modelix.modelql.core/-fragment-builder/check-sealed.html","searchKeys":["checkSealed","fun checkSealed()","org.modelix.modelql.core.FragmentBuilder.checkSealed"]},{"name":"fun compileMappingStep(it: IMonoStep<E>): IMonoStep<IZipOutput<*>>","description":"org.modelix.modelql.core.FragmentBuilder.compileMappingStep","location":"modelql-core/org.modelix.modelql.core/-fragment-builder/compile-mapping-step.html","searchKeys":["compileMappingStep","fun compileMappingStep(it: IMonoStep<E>): IMonoStep<IZipOutput<*>>","org.modelix.modelql.core.FragmentBuilder.compileMappingStep"]},{"name":"fun compileOutputStep(): IMonoStep<IZipOutput<*>>","description":"org.modelix.modelql.core.ZipBuilder.compileOutputStep","location":"modelql-core/org.modelix.modelql.core/-zip-builder/compile-output-step.html","searchKeys":["compileOutputStep","fun compileOutputStep(): IMonoStep<IZipOutput<*>>","org.modelix.modelql.core.ZipBuilder.compileOutputStep"]},{"name":"fun connectAndDowncast(producer: IFluxStep<In>): IFluxStep<Out>","description":"org.modelix.modelql.core.MonoTransformingStep.connectAndDowncast","location":"modelql-core/org.modelix.modelql.core/-mono-transforming-step/connect-and-downcast.html","searchKeys":["connectAndDowncast","fun connectAndDowncast(producer: IFluxStep<In>): IFluxStep<Out>","org.modelix.modelql.core.MonoTransformingStep.connectAndDowncast"]},{"name":"fun connectAndDowncast(producer: IMonoStep<In>): IMonoStep<Out>","description":"org.modelix.modelql.core.MonoTransformingStep.connectAndDowncast","location":"modelql-core/org.modelix.modelql.core/-mono-transforming-step/connect-and-downcast.html","searchKeys":["connectAndDowncast","fun connectAndDowncast(producer: IMonoStep<In>): IMonoStep<Out>","org.modelix.modelql.core.MonoTransformingStep.connectAndDowncast"]},{"name":"fun connectAndDowncast(producer: IProducingStep<In>): IFluxStep<Out>","description":"org.modelix.modelql.core.FluxTransformingStep.connectAndDowncast","location":"modelql-core/org.modelix.modelql.core/-flux-transforming-step/connect-and-downcast.html","searchKeys":["connectAndDowncast","fun connectAndDowncast(producer: IProducingStep<In>): IFluxStep<Out>","org.modelix.modelql.core.FluxTransformingStep.connectAndDowncast"]},{"name":"fun connectAndDowncast(producer: IProducingStep<In>): IMonoStep<Out>","description":"org.modelix.modelql.core.AggregationStep.connectAndDowncast","location":"modelql-core/org.modelix.modelql.core/-aggregation-step/connect-and-downcast.html","searchKeys":["connectAndDowncast","fun connectAndDowncast(producer: IProducingStep<In>): IMonoStep<Out>","org.modelix.modelql.core.AggregationStep.connectAndDowncast"]},{"name":"fun createConnections()","description":"org.modelix.modelql.core.QueryDeserializationContext.createConnections","location":"modelql-core/org.modelix.modelql.core/-query-deserialization-context/create-connections.html","searchKeys":["createConnections","fun createConnections()","org.modelix.modelql.core.QueryDeserializationContext.createConnections"]},{"name":"fun createConnections()","description":"org.modelix.modelql.core.QueryGraphDescriptorBuilder.createConnections","location":"modelql-core/org.modelix.modelql.core/-query-graph-descriptor-builder/create-connections.html","searchKeys":["createConnections","fun createConnections()","org.modelix.modelql.core.QueryGraphDescriptorBuilder.createConnections"]},{"name":"fun createDescriptor(): QueryGraphDescriptor","description":"org.modelix.modelql.core.UnboundQuery.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-unbound-query/create-descriptor.html","searchKeys":["createDescriptor","fun createDescriptor(): QueryGraphDescriptor","org.modelix.modelql.core.UnboundQuery.createDescriptor"]},{"name":"fun createQueries(): List<UnboundQuery<*, *, *>>","description":"org.modelix.modelql.core.QueryDeserializationContext.createQueries","location":"modelql-core/org.modelix.modelql.core/-query-deserialization-context/create-queries.html","searchKeys":["createQueries","fun createQueries(): List<UnboundQuery<*, *, *>>","org.modelix.modelql.core.QueryDeserializationContext.createQueries"]},{"name":"fun createRootQuery(): UnboundQuery<*, *, *>","description":"org.modelix.modelql.core.QueryGraphDescriptor.createRootQuery","location":"modelql-core/org.modelix.modelql.core/-query-graph-descriptor/create-root-query.html","searchKeys":["createRootQuery","fun createRootQuery(): UnboundQuery<*, *, *>","org.modelix.modelql.core.QueryGraphDescriptor.createRootQuery"]},{"name":"fun createStep(step: IStep): StepDescriptor","description":"org.modelix.modelql.core.QueryGraphDescriptorBuilder.createStep","location":"modelql-core/org.modelix.modelql.core/-query-graph-descriptor-builder/create-step.html","searchKeys":["createStep","fun createStep(step: IStep): StepDescriptor","org.modelix.modelql.core.QueryGraphDescriptorBuilder.createStep"]},{"name":"fun else(body: (IMonoStep<In>) -> IMonoStep<Out>): IMonoStep<Out>","description":"org.modelix.modelql.core.WhenStepBuilder.else","location":"modelql-core/org.modelix.modelql.core/-when-step-builder/else.html","searchKeys":["else","fun else(body: (IMonoStep<In>) -> IMonoStep<Out>): IMonoStep<Out>","org.modelix.modelql.core.WhenStepBuilder.else"]},{"name":"fun generateId(): Long","description":"org.modelix.modelql.core.UnboundQuery.Companion.generateId","location":"modelql-core/org.modelix.modelql.core/-unbound-query/-companion/generate-id.html","searchKeys":["generateId","fun generateId(): Long","org.modelix.modelql.core.UnboundQuery.Companion.generateId"]},{"name":"fun get(): E","description":"org.modelix.modelql.core.Optional.get","location":"modelql-core/org.modelix.modelql.core/-optional/get.html","searchKeys":["get","fun get(): E","org.modelix.modelql.core.Optional.get"]},{"name":"fun getAllSteps(): Set<IStep>","description":"org.modelix.modelql.core.UnboundQuery.getAllSteps","location":"modelql-core/org.modelix.modelql.core/-unbound-query/get-all-steps.html","searchKeys":["getAllSteps","fun getAllSteps(): Set<IStep>","org.modelix.modelql.core.UnboundQuery.getAllSteps"]},{"name":"fun getGraphBuilder(): QueryGraphDescriptorBuilder","description":"org.modelix.modelql.core.QueryGraphDescriptorBuilder.QueryDescriptorBuilder.getGraphBuilder","location":"modelql-core/org.modelix.modelql.core/-query-graph-descriptor-builder/-query-descriptor-builder/get-graph-builder.html","searchKeys":["getGraphBuilder","fun getGraphBuilder(): QueryGraphDescriptorBuilder","org.modelix.modelql.core.QueryGraphDescriptorBuilder.QueryDescriptorBuilder.getGraphBuilder"]},{"name":"fun getInputProducer(): IProducingStep<In>","description":"org.modelix.modelql.core.TransformingStepWithParameter.getInputProducer","location":"modelql-core/org.modelix.modelql.core/-transforming-step-with-parameter/get-input-producer.html","searchKeys":["getInputProducer","fun getInputProducer(): IProducingStep<In>","org.modelix.modelql.core.TransformingStepWithParameter.getInputProducer"]},{"name":"fun getOrCreateQuery(id: QueryId): UnboundQuery<*, *, *>","description":"org.modelix.modelql.core.QueryDeserializationContext.getOrCreateQuery","location":"modelql-core/org.modelix.modelql.core/-query-deserialization-context/get-or-create-query.html","searchKeys":["getOrCreateQuery","fun getOrCreateQuery(id: QueryId): UnboundQuery<*, *, *>","org.modelix.modelql.core.QueryDeserializationContext.getOrCreateQuery"]},{"name":"fun getOrCreateQueryReference(id: QueryId): QueryReference<*>","description":"org.modelix.modelql.core.QueryDeserializationContext.getOrCreateQueryReference","location":"modelql-core/org.modelix.modelql.core/-query-deserialization-context/get-or-create-query-reference.html","searchKeys":["getOrCreateQueryReference","fun getOrCreateQueryReference(id: QueryId): QueryReference<*>","org.modelix.modelql.core.QueryDeserializationContext.getOrCreateQueryReference"]},{"name":"fun getOrCreateStep(id: Int): IStep","description":"org.modelix.modelql.core.QueryDeserializationContext.getOrCreateStep","location":"modelql-core/org.modelix.modelql.core/-query-deserialization-context/get-or-create-step.html","searchKeys":["getOrCreateStep","fun getOrCreateStep(id: Int): IStep","org.modelix.modelql.core.QueryDeserializationContext.getOrCreateStep"]},{"name":"fun getOwnSteps(): List<IStep>","description":"org.modelix.modelql.core.UnboundQuery.getOwnSteps","location":"modelql-core/org.modelix.modelql.core/-unbound-query/get-own-steps.html","searchKeys":["getOwnSteps","fun getOwnSteps(): List<IStep>","org.modelix.modelql.core.UnboundQuery.getOwnSteps"]},{"name":"fun getParameterProducer(): IProducingStep<ParameterT>","description":"org.modelix.modelql.core.TransformingStepWithParameter.getParameterProducer","location":"modelql-core/org.modelix.modelql.core/-transforming-step-with-parameter/get-parameter-producer.html","searchKeys":["getParameterProducer","fun getParameterProducer(): IProducingStep<ParameterT>","org.modelix.modelql.core.TransformingStepWithParameter.getParameterProducer"]},{"name":"fun getProducer(): IProducingStep<In>","description":"org.modelix.modelql.core.TransformingStep.getProducer","location":"modelql-core/org.modelix.modelql.core/-transforming-step/get-producer.html","searchKeys":["getProducer","fun getProducer(): IProducingStep<In>","org.modelix.modelql.core.TransformingStep.getProducer"]},{"name":"fun getQuery(): IMonoUnboundQuery<E, IZipOutput<*>>","description":"org.modelix.modelql.core.FragmentBuilder.getQuery","location":"modelql-core/org.modelix.modelql.core/-fragment-builder/get-query.html","searchKeys":["getQuery","fun getQuery(): IMonoUnboundQuery<E, IZipOutput<*>>","org.modelix.modelql.core.FragmentBuilder.getQuery"]},{"name":"fun getQuery(): IUnboundQuery<In, *, Out>","description":"org.modelix.modelql.core.QueryCallStep.getQuery","location":"modelql-core/org.modelix.modelql.core/-query-call-step/get-query.html","searchKeys":["getQuery","fun getQuery(): IUnboundQuery<In, *, Out>","org.modelix.modelql.core.QueryCallStep.getQuery"]},{"name":"fun hasValue(producer: IProducingStep<*>): Boolean","description":"org.modelix.modelql.core.QueryEvaluationContext.hasValue","location":"modelql-core/org.modelix.modelql.core/-query-evaluation-context/has-value.html","searchKeys":["hasValue","fun hasValue(producer: IProducingStep<*>): Boolean","org.modelix.modelql.core.QueryEvaluationContext.hasValue"]},{"name":"fun if(condition: (IMonoStep<In>) -> IMonoStep<Boolean?>): WhenStepBuilder.CaseBuilder<In, Out>","description":"org.modelix.modelql.core.WhenStepBuilder.if","location":"modelql-core/org.modelix.modelql.core/-when-step-builder/if.html","searchKeys":["if","fun if(condition: (IMonoStep<In>) -> IMonoStep<Boolean?>): WhenStepBuilder.CaseBuilder<In, Out>","org.modelix.modelql.core.WhenStepBuilder.if"]},{"name":"fun initStepIds()","description":"org.modelix.modelql.core.QueryGraphDescriptor.initStepIds","location":"modelql-core/org.modelix.modelql.core/-query-graph-descriptor/init-step-ids.html","searchKeys":["initStepIds","fun initStepIds()","org.modelix.modelql.core.QueryGraphDescriptor.initStepIds"]},{"name":"fun isPresent(): Boolean","description":"org.modelix.modelql.core.Optional.isPresent","location":"modelql-core/org.modelix.modelql.core/-optional/is-present.html","searchKeys":["isPresent","fun isPresent(): Boolean","org.modelix.modelql.core.Optional.isPresent"]},{"name":"fun load(steps: Sequence<IStep>)","description":"org.modelix.modelql.core.QueryGraphDescriptorBuilder.load","location":"modelql-core/org.modelix.modelql.core/-query-graph-descriptor-builder/load.html","searchKeys":["load","fun load(steps: Sequence<IStep>)","org.modelix.modelql.core.QueryGraphDescriptorBuilder.load"]},{"name":"fun readVersionOnly(text: String): String?","description":"org.modelix.modelql.core.VersionAndData.Companion.readVersionOnly","location":"modelql-core/org.modelix.modelql.core/-version-and-data/-companion/read-version-only.html","searchKeys":["readVersionOnly","fun readVersionOnly(text: String): String?","org.modelix.modelql.core.VersionAndData.Companion.readVersionOnly"]},{"name":"fun seal()","description":"org.modelix.modelql.core.FragmentBuilder.seal","location":"modelql-core/org.modelix.modelql.core/-fragment-builder/seal.html","searchKeys":["seal","fun seal()","org.modelix.modelql.core.FragmentBuilder.seal"]},{"name":"fun serializer(type: KType): KSerializer<Any?>","description":"org.modelix.modelql.core.SerializationContext.serializer","location":"modelql-core/org.modelix.modelql.core/-serialization-context/serializer.html","searchKeys":["serializer","fun serializer(type: KType): KSerializer<Any?>","org.modelix.modelql.core.SerializationContext.serializer"]},{"name":"fun stepId(step: IStep): Int","description":"org.modelix.modelql.core.QueryGraphDescriptorBuilder.stepId","location":"modelql-core/org.modelix.modelql.core/-query-graph-descriptor-builder/step-id.html","searchKeys":["stepId","fun stepId(step: IStep): Int","org.modelix.modelql.core.QueryGraphDescriptorBuilder.stepId"]},{"name":"fun then(body: (IMonoStep<In>) -> IMonoStep<Out>): WhenStepBuilder<In, Out>","description":"org.modelix.modelql.core.WhenStepBuilder.CaseBuilder.then","location":"modelql-core/org.modelix.modelql.core/-when-step-builder/-case-builder/then.html","searchKeys":["then","fun then(body: (IMonoStep<In>) -> IMonoStep<Out>): WhenStepBuilder<In, Out>","org.modelix.modelql.core.WhenStepBuilder.CaseBuilder.then"]},{"name":"fun validate()","description":"org.modelix.modelql.core.UnboundQuery.validate","location":"modelql-core/org.modelix.modelql.core/-unbound-query/validate.html","searchKeys":["validate","fun validate()","org.modelix.modelql.core.UnboundQuery.validate"]},{"name":"fun validateAll()","description":"org.modelix.modelql.core.QueryBuilderContext.validateAll","location":"modelql-core/org.modelix.modelql.core/-query-builder-context/validate-all.html","searchKeys":["validateAll","fun validateAll()","org.modelix.modelql.core.QueryBuilderContext.validateAll"]},{"name":"fun validateAllIfRoot()","description":"org.modelix.modelql.core.QueryBuilderContext.validateAllIfRoot","location":"modelql-core/org.modelix.modelql.core/-query-builder-context/validate-all-if-root.html","searchKeys":["validateAllIfRoot","fun validateAllIfRoot()","org.modelix.modelql.core.QueryBuilderContext.validateAllIfRoot"]},{"name":"infix fun IMonoStep<Boolean>.and(other: IMonoStep<Boolean>): IMonoStep<Boolean>","description":"org.modelix.modelql.core.and","location":"modelql-core/org.modelix.modelql.core/and.html","searchKeys":["and","infix fun IMonoStep<Boolean>.and(other: IMonoStep<Boolean>): IMonoStep<Boolean>","org.modelix.modelql.core.and"]},{"name":"infix fun IMonoStep<Boolean>.or(other: IMonoStep<Boolean>): IMonoStep<Boolean>","description":"org.modelix.modelql.core.or","location":"modelql-core/org.modelix.modelql.core/or.html","searchKeys":["or","infix fun IMonoStep<Boolean>.or(other: IMonoStep<Boolean>): IMonoStep<Boolean>","org.modelix.modelql.core.or"]},{"name":"inline fun <T> nullMono(): IMonoStep<T?>","description":"org.modelix.modelql.core.nullMono","location":"modelql-core/org.modelix.modelql.core/null-mono.html","searchKeys":["nullMono","inline fun <T> nullMono(): IMonoStep<T?>","org.modelix.modelql.core.nullMono"]},{"name":"inline fun <T> serializer(): KSerializer<T>","description":"org.modelix.modelql.core.SerializationContext.serializer","location":"modelql-core/org.modelix.modelql.core/-serialization-context/serializer.html","searchKeys":["serializer","inline fun <T> serializer(): KSerializer<T>","org.modelix.modelql.core.SerializationContext.serializer"]},{"name":"inner class CaseBuilder(val condition: IMonoUnboundQuery<In, Boolean?>)","description":"org.modelix.modelql.core.WhenStepBuilder.CaseBuilder","location":"modelql-core/org.modelix.modelql.core/-when-step-builder/-case-builder/index.html","searchKeys":["CaseBuilder","inner class CaseBuilder(val condition: IMonoUnboundQuery<In, Boolean?>)","org.modelix.modelql.core.WhenStepBuilder.CaseBuilder"]},{"name":"inner class QueryDescriptorBuilder(val query: UnboundQuery<*, *, *>)","description":"org.modelix.modelql.core.QueryGraphDescriptorBuilder.QueryDescriptorBuilder","location":"modelql-core/org.modelix.modelql.core/-query-graph-descriptor-builder/-query-descriptor-builder/index.html","searchKeys":["QueryDescriptorBuilder","inner class QueryDescriptorBuilder(val query: UnboundQuery<*, *, *>)","org.modelix.modelql.core.QueryGraphDescriptorBuilder.QueryDescriptorBuilder"]},{"name":"interface IBoundFragment<in Context>","description":"org.modelix.modelql.core.IBoundFragment","location":"modelql-core/org.modelix.modelql.core/-i-bound-fragment/index.html","searchKeys":["IBoundFragment","interface IBoundFragment<in Context>","org.modelix.modelql.core.IBoundFragment"]},{"name":"interface IBulkQueryExecutor","description":"org.modelix.modelql.core.IBulkQueryExecutor","location":"modelql-core/org.modelix.modelql.core/-i-bulk-query-executor/index.html","searchKeys":["IBulkQueryExecutor","interface IBulkQueryExecutor","org.modelix.modelql.core.IBulkQueryExecutor"]},{"name":"interface IBulkRequestType<ParameterT, ResultT>","description":"org.modelix.modelql.core.IBulkRequestType","location":"modelql-core/org.modelix.modelql.core/-i-bulk-request-type/index.html","searchKeys":["IBulkRequestType","interface IBulkRequestType<ParameterT, ResultT>","org.modelix.modelql.core.IBulkRequestType"]},{"name":"interface IConsumingStep<in E> : IStep","description":"org.modelix.modelql.core.IConsumingStep","location":"modelql-core/org.modelix.modelql.core/-i-consuming-step/index.html","searchKeys":["IConsumingStep","interface IConsumingStep<in E> : IStep","org.modelix.modelql.core.IConsumingStep"]},{"name":"interface IFlowInstantiationContext","description":"org.modelix.modelql.core.IFlowInstantiationContext","location":"modelql-core/org.modelix.modelql.core/-i-flow-instantiation-context/index.html","searchKeys":["IFlowInstantiationContext","interface IFlowInstantiationContext","org.modelix.modelql.core.IFlowInstantiationContext"]},{"name":"interface IFluxOrMonoStep<out E> : IMonoStep<E> , IFluxStep<E> ","description":"org.modelix.modelql.core.IFluxOrMonoStep","location":"modelql-core/org.modelix.modelql.core/-i-flux-or-mono-step/index.html","searchKeys":["IFluxOrMonoStep","interface IFluxOrMonoStep<out E> : IMonoStep<E> , IFluxStep<E> ","org.modelix.modelql.core.IFluxOrMonoStep"]},{"name":"interface IFluxQuery<out Out> : IQuery<List<IStepOutput<Out>>, Out> ","description":"org.modelix.modelql.core.IFluxQuery","location":"modelql-core/org.modelix.modelql.core/-i-flux-query/index.html","searchKeys":["IFluxQuery","interface IFluxQuery<out Out> : IQuery<List<IStepOutput<Out>>, Out> ","org.modelix.modelql.core.IFluxQuery"]},{"name":"interface IFluxStep<out E> : IProducingStep<E> ","description":"org.modelix.modelql.core.IFluxStep","location":"modelql-core/org.modelix.modelql.core/-i-flux-step/index.html","searchKeys":["IFluxStep","interface IFluxStep<out E> : IProducingStep<E> ","org.modelix.modelql.core.IFluxStep"]},{"name":"interface IFluxUnboundQuery<in In, out Out> : IUnboundQuery<In, List<IStepOutput<Out>>, Out> ","description":"org.modelix.modelql.core.IFluxUnboundQuery","location":"modelql-core/org.modelix.modelql.core/-i-flux-unbound-query/index.html","searchKeys":["IFluxUnboundQuery","interface IFluxUnboundQuery<in In, out Out> : IUnboundQuery<In, List<IStepOutput<Out>>, Out> ","org.modelix.modelql.core.IFluxUnboundQuery"]},{"name":"interface IFragmentBuilder<out In, out Context> : IZipBuilderContext, IStepSharingContext","description":"org.modelix.modelql.core.IFragmentBuilder","location":"modelql-core/org.modelix.modelql.core/-i-fragment-builder/index.html","searchKeys":["IFragmentBuilder","interface IFragmentBuilder<out In, out Context> : IZipBuilderContext, IStepSharingContext","org.modelix.modelql.core.IFragmentBuilder"]},{"name":"interface ILocalMappingBuilder<In, Out> : IZipBuilderContext","description":"org.modelix.modelql.core.ILocalMappingBuilder","location":"modelql-core/org.modelix.modelql.core/-i-local-mapping-builder/index.html","searchKeys":["ILocalMappingBuilder","interface ILocalMappingBuilder<In, Out> : IZipBuilderContext","org.modelix.modelql.core.ILocalMappingBuilder"]},{"name":"interface IMonoQuery<out Out> : IQuery<Out, Out> ","description":"org.modelix.modelql.core.IMonoQuery","location":"modelql-core/org.modelix.modelql.core/-i-mono-query/index.html","searchKeys":["IMonoQuery","interface IMonoQuery<out Out> : IQuery<Out, Out> ","org.modelix.modelql.core.IMonoQuery"]},{"name":"interface IMonoStep<out E> : IProducingStep<E> ","description":"org.modelix.modelql.core.IMonoStep","location":"modelql-core/org.modelix.modelql.core/-i-mono-step/index.html","searchKeys":["IMonoStep","interface IMonoStep<out E> : IProducingStep<E> ","org.modelix.modelql.core.IMonoStep"]},{"name":"interface IMonoUnboundQuery<in In, out Out> : IUnboundQuery<In, Out, Out> ","description":"org.modelix.modelql.core.IMonoUnboundQuery","location":"modelql-core/org.modelix.modelql.core/-i-mono-unbound-query/index.html","searchKeys":["IMonoUnboundQuery","interface IMonoUnboundQuery<in In, out Out> : IUnboundQuery<In, Out, Out> ","org.modelix.modelql.core.IMonoUnboundQuery"]},{"name":"interface IProcessingStep<In, Out> : IConsumingStep<In> , IProducingStep<Out> ","description":"org.modelix.modelql.core.IProcessingStep","location":"modelql-core/org.modelix.modelql.core/-i-processing-step/index.html","searchKeys":["IProcessingStep","interface IProcessingStep<In, Out> : IConsumingStep<In> , IProducingStep<Out> ","org.modelix.modelql.core.IProcessingStep"]},{"name":"interface IProducingStep<out E> : IStep","description":"org.modelix.modelql.core.IProducingStep","location":"modelql-core/org.modelix.modelql.core/-i-producing-step/index.html","searchKeys":["IProducingStep","interface IProducingStep<out E> : IStep","org.modelix.modelql.core.IProducingStep"]},{"name":"interface IQuery<out AggregationOut, out ElementOut>","description":"org.modelix.modelql.core.IQuery","location":"modelql-core/org.modelix.modelql.core/-i-query/index.html","searchKeys":["IQuery","interface IQuery<out AggregationOut, out ElementOut>","org.modelix.modelql.core.IQuery"]},{"name":"interface IQueryBuilderContext<in In, out Out> : IStepSharingContext","description":"org.modelix.modelql.core.IQueryBuilderContext","location":"modelql-core/org.modelix.modelql.core/-i-query-builder-context/index.html","searchKeys":["IQueryBuilderContext","interface IQueryBuilderContext<in In, out Out> : IStepSharingContext","org.modelix.modelql.core.IQueryBuilderContext"]},{"name":"interface IQueryExecutor<out In>","description":"org.modelix.modelql.core.IQueryExecutor","location":"modelql-core/org.modelix.modelql.core/-i-query-executor/index.html","searchKeys":["IQueryExecutor","interface IQueryExecutor<out In>","org.modelix.modelql.core.IQueryExecutor"]},{"name":"interface IQueryReference<out Q : IUnboundQuery<*, *, *>>","description":"org.modelix.modelql.core.IQueryReference","location":"modelql-core/org.modelix.modelql.core/-i-query-reference/index.html","searchKeys":["IQueryReference","interface IQueryReference<out Q : IUnboundQuery<*, *, *>>","org.modelix.modelql.core.IQueryReference"]},{"name":"interface IRecursiveFragmentBuilder<In, Context> : IFragmentBuilder<In, Context> , IUnboundFragment<In, Context> ","description":"org.modelix.modelql.core.IRecursiveFragmentBuilder","location":"modelql-core/org.modelix.modelql.core/-i-recursive-fragment-builder/index.html","searchKeys":["IRecursiveFragmentBuilder","interface IRecursiveFragmentBuilder<In, Context> : IFragmentBuilder<In, Context> , IUnboundFragment<In, Context> ","org.modelix.modelql.core.IRecursiveFragmentBuilder"]},{"name":"interface IStep","description":"org.modelix.modelql.core.IStep","location":"modelql-core/org.modelix.modelql.core/-i-step/index.html","searchKeys":["IStep","interface IStep","org.modelix.modelql.core.IStep"]},{"name":"interface IStepOutput<out E>","description":"org.modelix.modelql.core.IStepOutput","location":"modelql-core/org.modelix.modelql.core/-i-step-output/index.html","searchKeys":["IStepOutput","interface IStepOutput<out E>","org.modelix.modelql.core.IStepOutput"]},{"name":"interface IStepSharingContext","description":"org.modelix.modelql.core.IStepSharingContext","location":"modelql-core/org.modelix.modelql.core/-i-step-sharing-context/index.html","searchKeys":["IStepSharingContext","interface IStepSharingContext","org.modelix.modelql.core.IStepSharingContext"]},{"name":"interface IUnboundFragment<In, Context>","description":"org.modelix.modelql.core.IUnboundFragment","location":"modelql-core/org.modelix.modelql.core/-i-unbound-fragment/index.html","searchKeys":["IUnboundFragment","interface IUnboundFragment<In, Context>","org.modelix.modelql.core.IUnboundFragment"]},{"name":"interface IUnboundQuery<in In, out AggregationOut, out ElementOut>","description":"org.modelix.modelql.core.IUnboundQuery","location":"modelql-core/org.modelix.modelql.core/-i-unbound-query/index.html","searchKeys":["IUnboundQuery","interface IUnboundQuery<in In, out AggregationOut, out ElementOut>","org.modelix.modelql.core.IUnboundQuery"]},{"name":"interface IValueRequest<out E>","description":"org.modelix.modelql.core.IValueRequest","location":"modelql-core/org.modelix.modelql.core/-i-value-request/index.html","searchKeys":["IValueRequest","interface IValueRequest<out E>","org.modelix.modelql.core.IValueRequest"]},{"name":"interface IZip1Output<out Common, out E1> : IZipOutput<Common> ","description":"org.modelix.modelql.core.IZip1Output","location":"modelql-core/org.modelix.modelql.core/-i-zip1-output/index.html","searchKeys":["IZip1Output","interface IZip1Output<out Common, out E1> : IZipOutput<Common> ","org.modelix.modelql.core.IZip1Output"]},{"name":"interface IZip2Output<out Common, out E1, out E2> : IZip1Output<Common, E1> ","description":"org.modelix.modelql.core.IZip2Output","location":"modelql-core/org.modelix.modelql.core/-i-zip2-output/index.html","searchKeys":["IZip2Output","interface IZip2Output<out Common, out E1, out E2> : IZip1Output<Common, E1> ","org.modelix.modelql.core.IZip2Output"]},{"name":"interface IZip3Output<out Common, out E1, out E2, out E3> : IZip2Output<Common, E1, E2> ","description":"org.modelix.modelql.core.IZip3Output","location":"modelql-core/org.modelix.modelql.core/-i-zip3-output/index.html","searchKeys":["IZip3Output","interface IZip3Output<out Common, out E1, out E2, out E3> : IZip2Output<Common, E1, E2> ","org.modelix.modelql.core.IZip3Output"]},{"name":"interface IZip4Output<out Common, out E1, out E2, out E3, out E4> : IZip3Output<Common, E1, E2, E3> ","description":"org.modelix.modelql.core.IZip4Output","location":"modelql-core/org.modelix.modelql.core/-i-zip4-output/index.html","searchKeys":["IZip4Output","interface IZip4Output<out Common, out E1, out E2, out E3, out E4> : IZip3Output<Common, E1, E2, E3> ","org.modelix.modelql.core.IZip4Output"]},{"name":"interface IZip5Output<out Common, out E1, out E2, out E3, out E4, out E5> : IZip4Output<Common, E1, E2, E3, E4> ","description":"org.modelix.modelql.core.IZip5Output","location":"modelql-core/org.modelix.modelql.core/-i-zip5-output/index.html","searchKeys":["IZip5Output","interface IZip5Output<out Common, out E1, out E2, out E3, out E4, out E5> : IZip4Output<Common, E1, E2, E3, E4> ","org.modelix.modelql.core.IZip5Output"]},{"name":"interface IZip6Output<out Common, out E1, out E2, out E3, out E4, out E5, out E6> : IZip5Output<Common, E1, E2, E3, E4, E5> ","description":"org.modelix.modelql.core.IZip6Output","location":"modelql-core/org.modelix.modelql.core/-i-zip6-output/index.html","searchKeys":["IZip6Output","interface IZip6Output<out Common, out E1, out E2, out E3, out E4, out E5, out E6> : IZip5Output<Common, E1, E2, E3, E4, E5> ","org.modelix.modelql.core.IZip6Output"]},{"name":"interface IZip7Output<out Common, out E1, out E2, out E3, out E4, out E5, out E6, out E7> : IZip6Output<Common, E1, E2, E3, E4, E5, E6> ","description":"org.modelix.modelql.core.IZip7Output","location":"modelql-core/org.modelix.modelql.core/-i-zip7-output/index.html","searchKeys":["IZip7Output","interface IZip7Output<out Common, out E1, out E2, out E3, out E4, out E5, out E6, out E7> : IZip6Output<Common, E1, E2, E3, E4, E5, E6> ","org.modelix.modelql.core.IZip7Output"]},{"name":"interface IZip8Output<out Common, out E1, out E2, out E3, out E4, out E5, out E6, out E7, out E8> : IZip7Output<Common, E1, E2, E3, E4, E5, E6, E7> ","description":"org.modelix.modelql.core.IZip8Output","location":"modelql-core/org.modelix.modelql.core/-i-zip8-output/index.html","searchKeys":["IZip8Output","interface IZip8Output<out Common, out E1, out E2, out E3, out E4, out E5, out E6, out E7, out E8> : IZip7Output<Common, E1, E2, E3, E4, E5, E6, E7> ","org.modelix.modelql.core.IZip8Output"]},{"name":"interface IZip9Output<out Common, out E1, out E2, out E3, out E4, out E5, out E6, out E7, out E8, out E9> : IZip8Output<Common, E1, E2, E3, E4, E5, E6, E7, E8> ","description":"org.modelix.modelql.core.IZip9Output","location":"modelql-core/org.modelix.modelql.core/-i-zip9-output/index.html","searchKeys":["IZip9Output","interface IZip9Output<out Common, out E1, out E2, out E3, out E4, out E5, out E6, out E7, out E8, out E9> : IZip8Output<Common, E1, E2, E3, E4, E5, E6, E7, E8> ","org.modelix.modelql.core.IZip9Output"]},{"name":"interface IZipBuilderContext","description":"org.modelix.modelql.core.IZipBuilderContext","location":"modelql-core/org.modelix.modelql.core/-i-zip-builder-context/index.html","searchKeys":["IZipBuilderContext","interface IZipBuilderContext","org.modelix.modelql.core.IZipBuilderContext"]},{"name":"interface IZipOutput<out Common>","description":"org.modelix.modelql.core.IZipOutput","location":"modelql-core/org.modelix.modelql.core/-i-zip-output/index.html","searchKeys":["IZipOutput","interface IZipOutput<out Common>","org.modelix.modelql.core.IZipOutput"]},{"name":"object Companion","description":"org.modelix.modelql.core.IUnboundQuery.Companion","location":"modelql-core/org.modelix.modelql.core/-i-unbound-query/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.modelql.core.IUnboundQuery.Companion"]},{"name":"object Companion","description":"org.modelix.modelql.core.Optional.Companion","location":"modelql-core/org.modelix.modelql.core/-optional/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.modelql.core.Optional.Companion"]},{"name":"object Companion","description":"org.modelix.modelql.core.QueryBuilderContext.Companion","location":"modelql-core/org.modelix.modelql.core/-query-builder-context/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.modelql.core.QueryBuilderContext.Companion"]},{"name":"object Companion","description":"org.modelix.modelql.core.QueryEvaluationContext.Companion","location":"modelql-core/org.modelix.modelql.core/-query-evaluation-context/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.modelql.core.QueryEvaluationContext.Companion"]},{"name":"object Companion","description":"org.modelix.modelql.core.QueryReference.Companion","location":"modelql-core/org.modelix.modelql.core/-query-reference/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.modelql.core.QueryReference.Companion"]},{"name":"object Companion","description":"org.modelix.modelql.core.UnboundQuery.Companion","location":"modelql-core/org.modelix.modelql.core/-unbound-query/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.modelql.core.UnboundQuery.Companion"]},{"name":"object Companion","description":"org.modelix.modelql.core.VersionAndData.Companion","location":"modelql-core/org.modelix.modelql.core/-version-and-data/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.modelql.core.VersionAndData.Companion"]},{"name":"object UNINITIALIZED","description":"org.modelix.modelql.core.CombiningSequence.UNINITIALIZED","location":"modelql-core/org.modelix.modelql.core/-combining-sequence/-u-n-i-n-i-t-i-a-l-i-z-e-d/index.html","searchKeys":["UNINITIALIZED","object UNINITIALIZED","org.modelix.modelql.core.CombiningSequence.UNINITIALIZED"]},{"name":"open class ConstantSourceStep<E>(val element: E, val type: KType) : ProducingStep<E> , IMonoStep<E> ","description":"org.modelix.modelql.core.ConstantSourceStep","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/index.html","searchKeys":["ConstantSourceStep","open class ConstantSourceStep<E>(val element: E, val type: KType) : ProducingStep<E> , IMonoStep<E> ","org.modelix.modelql.core.ConstantSourceStep"]},{"name":"open class IdentityStep<E> : TransformingStep<E, E> , IFluxOrMonoStep<E> ","description":"org.modelix.modelql.core.IdentityStep","location":"modelql-core/org.modelix.modelql.core/-identity-step/index.html","searchKeys":["IdentityStep","open class IdentityStep<E> : TransformingStep<E, E> , IFluxOrMonoStep<E> ","org.modelix.modelql.core.IdentityStep"]},{"name":"open class LocalMappingStep<In, Out>(val transformation: (In) -> Out) : MonoTransformingStep<In, Out> ","description":"org.modelix.modelql.core.LocalMappingStep","location":"modelql-core/org.modelix.modelql.core/-local-mapping-step/index.html","searchKeys":["LocalMappingStep","open class LocalMappingStep<In, Out>(val transformation: (In) -> Out) : MonoTransformingStep<In, Out> ","org.modelix.modelql.core.LocalMappingStep"]},{"name":"open class ZipStep<CommonIn, Out : ZipNOutputC<CommonIn>> : ProducingStep<Out> , IConsumingStep<CommonIn> , IMonoStep<Out> , IFluxStep<Out> ","description":"org.modelix.modelql.core.ZipStep","location":"modelql-core/org.modelix.modelql.core/-zip-step/index.html","searchKeys":["ZipStep","open class ZipStep<CommonIn, Out : ZipNOutputC<CommonIn>> : ProducingStep<Out> , IConsumingStep<CommonIn> , IMonoStep<Out> , IFluxStep<Out> ","org.modelix.modelql.core.ZipStep"]},{"name":"open fun <T, TContext> IFluxStep<T>.requestFragment(eager: Boolean = true, body: IRecursiveFragmentBuilder<T, TContext>.() -> Unit): IRequestedFragment<TContext>","description":"org.modelix.modelql.core.IFragmentBuilder.requestFragment","location":"modelql-core/org.modelix.modelql.core/-i-fragment-builder/request-fragment.html","searchKeys":["requestFragment","open fun <T, TContext> IFluxStep<T>.requestFragment(eager: Boolean = true, body: IRecursiveFragmentBuilder<T, TContext>.() -> Unit): IRequestedFragment<TContext>","org.modelix.modelql.core.IFragmentBuilder.requestFragment"]},{"name":"open fun <T, TContext> IMonoStep<T>.requestFragment(eager: Boolean = true, body: IRecursiveFragmentBuilder<T, TContext>.() -> Unit): IRequestedFragment<TContext>","description":"org.modelix.modelql.core.IFragmentBuilder.requestFragment","location":"modelql-core/org.modelix.modelql.core/-i-fragment-builder/request-fragment.html","searchKeys":["requestFragment","open fun <T, TContext> IMonoStep<T>.requestFragment(eager: Boolean = true, body: IRecursiveFragmentBuilder<T, TContext>.() -> Unit): IRequestedFragment<TContext>","org.modelix.modelql.core.IFragmentBuilder.requestFragment"]},{"name":"open fun <T> IMonoStep<T>.getLater(): IValueRequest<T>","description":"org.modelix.modelql.core.IZipBuilderContext.getLater","location":"modelql-core/org.modelix.modelql.core/-i-zip-builder-context/get-later.html","searchKeys":["getLater","open fun <T> IMonoStep<T>.getLater(): IValueRequest<T>","org.modelix.modelql.core.IZipBuilderContext.getLater"]},{"name":"open fun <T> flatMap(body: (IMonoStep<Out>) -> IFluxStep<T>): IFluxUnboundQuery<In, T>","description":"org.modelix.modelql.core.IMonoUnboundQuery.flatMap","location":"modelql-core/org.modelix.modelql.core/-i-mono-unbound-query/flat-map.html","searchKeys":["flatMap","open fun <T> flatMap(body: (IMonoStep<Out>) -> IFluxStep<T>): IFluxUnboundQuery<In, T>","org.modelix.modelql.core.IMonoUnboundQuery.flatMap"]},{"name":"open fun <T> map(body: (IMonoStep<Out>) -> IMonoStep<T>): IMonoUnboundQuery<In, T>","description":"org.modelix.modelql.core.IMonoUnboundQuery.map","location":"modelql-core/org.modelix.modelql.core/-i-mono-unbound-query/map.html","searchKeys":["map","open fun <T> map(body: (IMonoStep<Out>) -> IMonoStep<T>): IMonoUnboundQuery<In, T>","org.modelix.modelql.core.IMonoUnboundQuery.map"]},{"name":"open fun <TContext> TContext.insertFragment(fragment: IBoundFragment<TContext>)","description":"org.modelix.modelql.core.IFragmentBuilder.insertFragment","location":"modelql-core/org.modelix.modelql.core/-i-fragment-builder/insert-fragment.html","searchKeys":["insertFragment","open fun <TContext> TContext.insertFragment(fragment: IBoundFragment<TContext>)","org.modelix.modelql.core.IFragmentBuilder.insertFragment"]},{"name":"open fun <TContext> TContext.insertFragment(fragment: IRequestedFragment<TContext>)","description":"org.modelix.modelql.core.IFragmentBuilder.insertFragment","location":"modelql-core/org.modelix.modelql.core/-i-fragment-builder/insert-fragment.html","searchKeys":["insertFragment","open fun <TContext> TContext.insertFragment(fragment: IRequestedFragment<TContext>)","org.modelix.modelql.core.IFragmentBuilder.insertFragment"]},{"name":"open fun <TIn, TContext> IFluxStep<TIn>.requestFragment(fragment: IUnboundFragment<TIn, TContext>): IRequestedFragment<TContext>","description":"org.modelix.modelql.core.IFragmentBuilder.requestFragment","location":"modelql-core/org.modelix.modelql.core/-i-fragment-builder/request-fragment.html","searchKeys":["requestFragment","open fun <TIn, TContext> IFluxStep<TIn>.requestFragment(fragment: IUnboundFragment<TIn, TContext>): IRequestedFragment<TContext>","org.modelix.modelql.core.IFragmentBuilder.requestFragment"]},{"name":"open fun <TIn, TContext> IMonoStep<TIn>.requestFragment(fragment: IUnboundFragment<TIn, TContext>): IRequestedFragment<TContext>","description":"org.modelix.modelql.core.IFragmentBuilder.requestFragment","location":"modelql-core/org.modelix.modelql.core/-i-fragment-builder/request-fragment.html","searchKeys":["requestFragment","open fun <TIn, TContext> IMonoStep<TIn>.requestFragment(fragment: IUnboundFragment<TIn, TContext>): IRequestedFragment<TContext>","org.modelix.modelql.core.IFragmentBuilder.requestFragment"]},{"name":"open fun asFlow(evaluationContext: QueryEvaluationContext, input: IStepOutput<In>): StepFlow<ElementOut>","description":"org.modelix.modelql.core.IUnboundQuery.asFlow","location":"modelql-core/org.modelix.modelql.core/-i-unbound-query/as-flow.html","searchKeys":["asFlow","open fun asFlow(evaluationContext: QueryEvaluationContext, input: IStepOutput<In>): StepFlow<ElementOut>","org.modelix.modelql.core.IUnboundQuery.asFlow"]},{"name":"open fun canBeEmpty(): Boolean","description":"org.modelix.modelql.core.IProducingStep.canBeEmpty","location":"modelql-core/org.modelix.modelql.core/-i-producing-step/can-be-empty.html","searchKeys":["canBeEmpty","open fun canBeEmpty(): Boolean","org.modelix.modelql.core.IProducingStep.canBeEmpty"]},{"name":"open fun canBeMultiple(): Boolean","description":"org.modelix.modelql.core.IProducingStep.canBeMultiple","location":"modelql-core/org.modelix.modelql.core/-i-producing-step/can-be-multiple.html","searchKeys":["canBeMultiple","open fun canBeMultiple(): Boolean","org.modelix.modelql.core.IProducingStep.canBeMultiple"]},{"name":"open fun canEvaluateStatically(): Boolean","description":"org.modelix.modelql.core.IProducingStep.canEvaluateStatically","location":"modelql-core/org.modelix.modelql.core/-i-producing-step/can-evaluate-statically.html","searchKeys":["canEvaluateStatically","open fun canEvaluateStatically(): Boolean","org.modelix.modelql.core.IProducingStep.canEvaluateStatically"]},{"name":"open fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.core.IStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-i-step/create-descriptor.html","searchKeys":["createDescriptor","open fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.core.IStep.createDescriptor"]},{"name":"open fun evaluateStatically(): E","description":"org.modelix.modelql.core.IProducingStep.evaluateStatically","location":"modelql-core/org.modelix.modelql.core/-i-producing-step/evaluate-statically.html","searchKeys":["evaluateStatically","open fun evaluateStatically(): E","org.modelix.modelql.core.IProducingStep.evaluateStatically"]},{"name":"open fun getRootInputSteps(): Set<IStep>","description":"org.modelix.modelql.core.IStep.getRootInputSteps","location":"modelql-core/org.modelix.modelql.core/-i-step/get-root-input-steps.html","searchKeys":["getRootInputSteps","open fun getRootInputSteps(): Set<IStep>","org.modelix.modelql.core.IStep.getRootInputSteps"]},{"name":"open fun hasSideEffect(): Boolean","description":"org.modelix.modelql.core.IStep.hasSideEffect","location":"modelql-core/org.modelix.modelql.core/-i-step/has-side-effect.html","searchKeys":["hasSideEffect","open fun hasSideEffect(): Boolean","org.modelix.modelql.core.IStep.hasSideEffect"]},{"name":"open fun inputIsConsumedMultipleTimes(): Boolean","description":"org.modelix.modelql.core.IConsumingStep.inputIsConsumedMultipleTimes","location":"modelql-core/org.modelix.modelql.core/-i-consuming-step/input-is-consumed-multiple-times.html","searchKeys":["inputIsConsumedMultipleTimes","open fun inputIsConsumedMultipleTimes(): Boolean","org.modelix.modelql.core.IConsumingStep.inputIsConsumedMultipleTimes"]},{"name":"open fun needsCoroutineScope(): Boolean","description":"org.modelix.modelql.core.IStep.needsCoroutineScope","location":"modelql-core/org.modelix.modelql.core/-i-step/needs-coroutine-scope.html","searchKeys":["needsCoroutineScope","open fun needsCoroutineScope(): Boolean","org.modelix.modelql.core.IStep.needsCoroutineScope"]},{"name":"open fun outputIsConsumedMultipleTimes(): Boolean","description":"org.modelix.modelql.core.IProducingStep.outputIsConsumedMultipleTimes","location":"modelql-core/org.modelix.modelql.core/-i-producing-step/output-is-consumed-multiple-times.html","searchKeys":["outputIsConsumedMultipleTimes","open fun outputIsConsumedMultipleTimes(): Boolean","org.modelix.modelql.core.IProducingStep.outputIsConsumedMultipleTimes"]},{"name":"open fun requiresWriteAccess(): Boolean","description":"org.modelix.modelql.core.IStep.requiresWriteAccess","location":"modelql-core/org.modelix.modelql.core/-i-step/requires-write-access.html","searchKeys":["requiresWriteAccess","open fun requiresWriteAccess(): Boolean","org.modelix.modelql.core.IStep.requiresWriteAccess"]},{"name":"open fun validate()","description":"org.modelix.modelql.core.IStep.validate","location":"modelql-core/org.modelix.modelql.core/-i-step/validate.html","searchKeys":["validate","open fun validate()","org.modelix.modelql.core.IStep.validate"]},{"name":"open operator override fun iterator(): Iterator<ZipNOutputC<Common>>","description":"org.modelix.modelql.core.CombiningSequence.iterator","location":"modelql-core/org.modelix.modelql.core/-combining-sequence/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<ZipNOutputC<Common>>","org.modelix.modelql.core.CombiningSequence.iterator"]},{"name":"open override fun <ElementOut> createFlow(query: IUnboundQuery<E, *, ElementOut>): StepFlow<ElementOut>","description":"org.modelix.modelql.core.SimpleQueryExecutor.createFlow","location":"modelql-core/org.modelix.modelql.core/-simple-query-executor/create-flow.html","searchKeys":["createFlow","open override fun <ElementOut> createFlow(query: IUnboundQuery<E, *, ElementOut>): StepFlow<ElementOut>","org.modelix.modelql.core.SimpleQueryExecutor.createFlow"]},{"name":"open override fun <ParameterT, ResultT> request(type: IBulkRequestType<ParameterT, ResultT>, parameter: ParameterT, callback: BulkRequestCallback<ResultT>)","description":"org.modelix.modelql.core.BulkQueryExecutor.request","location":"modelql-core/org.modelix.modelql.core/-bulk-query-executor/request.html","searchKeys":["request","open override fun <ParameterT, ResultT> request(type: IBulkRequestType<ParameterT, ResultT>, parameter: ParameterT, callback: BulkRequestCallback<ResultT>)","org.modelix.modelql.core.BulkQueryExecutor.request"]},{"name":"open override fun <T> IFluxStep<T>.shared(): IFluxStep<T>","description":"org.modelix.modelql.core.FragmentBuilder.shared","location":"modelql-core/org.modelix.modelql.core/-fragment-builder/shared.html","searchKeys":["shared","open override fun <T> IFluxStep<T>.shared(): IFluxStep<T>","org.modelix.modelql.core.FragmentBuilder.shared"]},{"name":"open override fun <T> IFluxStep<T>.shared(): IFluxStep<T>","description":"org.modelix.modelql.core.QueryBuilderContext.shared","location":"modelql-core/org.modelix.modelql.core/-query-builder-context/shared.html","searchKeys":["shared","open override fun <T> IFluxStep<T>.shared(): IFluxStep<T>","org.modelix.modelql.core.QueryBuilderContext.shared"]},{"name":"open override fun <T> IMonoStep<T>.request(): IValueRequest<T>","description":"org.modelix.modelql.core.FragmentBuilder.request","location":"modelql-core/org.modelix.modelql.core/-fragment-builder/request.html","searchKeys":["request","open override fun <T> IMonoStep<T>.request(): IValueRequest<T>","org.modelix.modelql.core.FragmentBuilder.request"]},{"name":"open override fun <T> IMonoStep<T>.shared(): IMonoStep<T>","description":"org.modelix.modelql.core.FragmentBuilder.shared","location":"modelql-core/org.modelix.modelql.core/-fragment-builder/shared.html","searchKeys":["shared","open override fun <T> IMonoStep<T>.shared(): IMonoStep<T>","org.modelix.modelql.core.FragmentBuilder.shared"]},{"name":"open override fun <T> IMonoStep<T>.shared(): IMonoStep<T>","description":"org.modelix.modelql.core.QueryBuilderContext.shared","location":"modelql-core/org.modelix.modelql.core/-query-builder-context/shared.html","searchKeys":["shared","open override fun <T> IMonoStep<T>.shared(): IMonoStep<T>","org.modelix.modelql.core.QueryBuilderContext.shared"]},{"name":"open override fun <T> flatMap(body: (IMonoStep<ElementOut>) -> IFluxStep<T>): IFluxUnboundQuery<In, T>","description":"org.modelix.modelql.core.FluxUnboundQuery.flatMap","location":"modelql-core/org.modelix.modelql.core/-flux-unbound-query/flat-map.html","searchKeys":["flatMap","open override fun <T> flatMap(body: (IMonoStep<ElementOut>) -> IFluxStep<T>): IFluxUnboundQuery<In, T>","org.modelix.modelql.core.FluxUnboundQuery.flatMap"]},{"name":"open override fun <T> getFlow(step: IProducingStep<T>): Flow<T>?","description":"org.modelix.modelql.core.FlowInstantiationContext.getFlow","location":"modelql-core/org.modelix.modelql.core/-flow-instantiation-context/get-flow.html","searchKeys":["getFlow","open override fun <T> getFlow(step: IProducingStep<T>): Flow<T>?","org.modelix.modelql.core.FlowInstantiationContext.getFlow"]},{"name":"open override fun <T> getFlow(step: IProducingStep<T>): Flow<T>?","description":"org.modelix.modelql.core.SinglePathFlowInstantiationContext.getFlow","location":"modelql-core/org.modelix.modelql.core/-single-path-flow-instantiation-context/get-flow.html","searchKeys":["getFlow","open override fun <T> getFlow(step: IProducingStep<T>): Flow<T>?","org.modelix.modelql.core.SinglePathFlowInstantiationContext.getFlow"]},{"name":"open override fun <T> getOrCreateFlow(step: IProducingStep<T>): StepFlow<T>","description":"org.modelix.modelql.core.FlowInstantiationContext.getOrCreateFlow","location":"modelql-core/org.modelix.modelql.core/-flow-instantiation-context/get-or-create-flow.html","searchKeys":["getOrCreateFlow","open override fun <T> getOrCreateFlow(step: IProducingStep<T>): StepFlow<T>","org.modelix.modelql.core.FlowInstantiationContext.getOrCreateFlow"]},{"name":"open override fun <T> getOrCreateFlow(step: IProducingStep<T>): StepFlow<T>","description":"org.modelix.modelql.core.SinglePathFlowInstantiationContext.getOrCreateFlow","location":"modelql-core/org.modelix.modelql.core/-single-path-flow-instantiation-context/get-or-create-flow.html","searchKeys":["getOrCreateFlow","open override fun <T> getOrCreateFlow(step: IProducingStep<T>): StepFlow<T>","org.modelix.modelql.core.SinglePathFlowInstantiationContext.getOrCreateFlow"]},{"name":"open override fun <T> map(body: (IMonoStep<ElementOut>) -> IMonoStep<T>): IFluxUnboundQuery<In, T>","description":"org.modelix.modelql.core.FluxUnboundQuery.map","location":"modelql-core/org.modelix.modelql.core/-flux-unbound-query/map.html","searchKeys":["map","open override fun <T> map(body: (IMonoStep<ElementOut>) -> IMonoStep<T>): IFluxUnboundQuery<In, T>","org.modelix.modelql.core.FluxUnboundQuery.map"]},{"name":"open override fun <T> map(query: IFluxUnboundQuery<ElementOut, T>): IFluxUnboundQuery<In, T>","description":"org.modelix.modelql.core.MonoUnboundQuery.map","location":"modelql-core/org.modelix.modelql.core/-mono-unbound-query/map.html","searchKeys":["map","open override fun <T> map(query: IFluxUnboundQuery<ElementOut, T>): IFluxUnboundQuery<In, T>","org.modelix.modelql.core.MonoUnboundQuery.map"]},{"name":"open override fun <T> map(query: IMonoUnboundQuery<ElementOut, T>): IMonoUnboundQuery<In, T>","description":"org.modelix.modelql.core.MonoUnboundQuery.map","location":"modelql-core/org.modelix.modelql.core/-mono-unbound-query/map.html","searchKeys":["map","open override fun <T> map(query: IMonoUnboundQuery<ElementOut, T>): IMonoUnboundQuery<In, T>","org.modelix.modelql.core.MonoUnboundQuery.map"]},{"name":"open override fun IProducingStep<In>.mapRecursive(): IFluxStep<Out>","description":"org.modelix.modelql.core.QueryBuilderContext.mapRecursive","location":"modelql-core/org.modelix.modelql.core/-query-builder-context/map-recursive.html","searchKeys":["mapRecursive","open override fun IProducingStep<In>.mapRecursive(): IFluxStep<Out>","org.modelix.modelql.core.QueryBuilderContext.mapRecursive"]},{"name":"open override fun addConsumer(consumer: IConsumingStep<E>)","description":"org.modelix.modelql.core.ProducingStep.addConsumer","location":"modelql-core/org.modelix.modelql.core/-producing-step/add-consumer.html","searchKeys":["addConsumer","open override fun addConsumer(consumer: IConsumingStep<E>)","org.modelix.modelql.core.ProducingStep.addConsumer"]},{"name":"open override fun addProducer(producer: IProducingStep<CommonIn>)","description":"org.modelix.modelql.core.TransformingStepWithParameter.addProducer","location":"modelql-core/org.modelix.modelql.core/-transforming-step-with-parameter/add-producer.html","searchKeys":["addProducer","open override fun addProducer(producer: IProducingStep<CommonIn>)","org.modelix.modelql.core.TransformingStepWithParameter.addProducer"]},{"name":"open override fun addProducer(producer: IProducingStep<CommonIn>)","description":"org.modelix.modelql.core.ZipStep.addProducer","location":"modelql-core/org.modelix.modelql.core/-zip-step/add-producer.html","searchKeys":["addProducer","open override fun addProducer(producer: IProducingStep<CommonIn>)","org.modelix.modelql.core.ZipStep.addProducer"]},{"name":"open override fun addProducer(producer: IProducingStep<E>)","description":"org.modelix.modelql.core.JoinStep.addProducer","location":"modelql-core/org.modelix.modelql.core/-join-step/add-producer.html","searchKeys":["addProducer","open override fun addProducer(producer: IProducingStep<E>)","org.modelix.modelql.core.JoinStep.addProducer"]},{"name":"open override fun addProducer(producer: IProducingStep<In>)","description":"org.modelix.modelql.core.TransformingStep.addProducer","location":"modelql-core/org.modelix.modelql.core/-transforming-step/add-producer.html","searchKeys":["addProducer","open override fun addProducer(producer: IProducingStep<In>)","org.modelix.modelql.core.TransformingStep.addProducer"]},{"name":"open override fun asFlow(evaluationContext: QueryEvaluationContext, input: StepFlow<In>): StepFlow<ElementOut>","description":"org.modelix.modelql.core.UnboundQuery.asFlow","location":"modelql-core/org.modelix.modelql.core/-unbound-query/as-flow.html","searchKeys":["asFlow","open override fun asFlow(evaluationContext: QueryEvaluationContext, input: StepFlow<In>): StepFlow<ElementOut>","org.modelix.modelql.core.UnboundQuery.asFlow"]},{"name":"open override fun bind(executor: IQueryExecutor<In>): IFluxQuery<ElementOut>","description":"org.modelix.modelql.core.FluxUnboundQuery.bind","location":"modelql-core/org.modelix.modelql.core/-flux-unbound-query/bind.html","searchKeys":["bind","open override fun bind(executor: IQueryExecutor<In>): IFluxQuery<ElementOut>","org.modelix.modelql.core.FluxUnboundQuery.bind"]},{"name":"open override fun bind(executor: IQueryExecutor<In>): IMonoQuery<ElementOut>","description":"org.modelix.modelql.core.MonoUnboundQuery.bind","location":"modelql-core/org.modelix.modelql.core/-mono-unbound-query/bind.html","searchKeys":["bind","open override fun bind(executor: IQueryExecutor<In>): IMonoQuery<ElementOut>","org.modelix.modelql.core.MonoUnboundQuery.bind"]},{"name":"open override fun canBeEmpty(): Boolean","description":"org.modelix.modelql.core.AggregationStep.canBeEmpty","location":"modelql-core/org.modelix.modelql.core/-aggregation-step/can-be-empty.html","searchKeys":["canBeEmpty","open override fun canBeEmpty(): Boolean","org.modelix.modelql.core.AggregationStep.canBeEmpty"]},{"name":"open override fun canBeEmpty(): Boolean","description":"org.modelix.modelql.core.AssertNotEmptyStep.canBeEmpty","location":"modelql-core/org.modelix.modelql.core/-assert-not-empty-step/can-be-empty.html","searchKeys":["canBeEmpty","open override fun canBeEmpty(): Boolean","org.modelix.modelql.core.AssertNotEmptyStep.canBeEmpty"]},{"name":"open override fun canBeEmpty(): Boolean","description":"org.modelix.modelql.core.ConstantSourceStep.canBeEmpty","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/can-be-empty.html","searchKeys":["canBeEmpty","open override fun canBeEmpty(): Boolean","org.modelix.modelql.core.ConstantSourceStep.canBeEmpty"]},{"name":"open override fun canBeEmpty(): Boolean","description":"org.modelix.modelql.core.DropStep.canBeEmpty","location":"modelql-core/org.modelix.modelql.core/-drop-step/can-be-empty.html","searchKeys":["canBeEmpty","open override fun canBeEmpty(): Boolean","org.modelix.modelql.core.DropStep.canBeEmpty"]},{"name":"open override fun canBeEmpty(): Boolean","description":"org.modelix.modelql.core.FilteringStep.canBeEmpty","location":"modelql-core/org.modelix.modelql.core/-filtering-step/can-be-empty.html","searchKeys":["canBeEmpty","open override fun canBeEmpty(): Boolean","org.modelix.modelql.core.FilteringStep.canBeEmpty"]},{"name":"open override fun canBeEmpty(): Boolean","description":"org.modelix.modelql.core.FlatMapStep.canBeEmpty","location":"modelql-core/org.modelix.modelql.core/-flat-map-step/can-be-empty.html","searchKeys":["canBeEmpty","open override fun canBeEmpty(): Boolean","org.modelix.modelql.core.FlatMapStep.canBeEmpty"]},{"name":"open override fun canBeEmpty(): Boolean","description":"org.modelix.modelql.core.IdentityStep.canBeEmpty","location":"modelql-core/org.modelix.modelql.core/-identity-step/can-be-empty.html","searchKeys":["canBeEmpty","open override fun canBeEmpty(): Boolean","org.modelix.modelql.core.IdentityStep.canBeEmpty"]},{"name":"open override fun canBeEmpty(): Boolean","description":"org.modelix.modelql.core.IfEmptyStep.canBeEmpty","location":"modelql-core/org.modelix.modelql.core/-if-empty-step/can-be-empty.html","searchKeys":["canBeEmpty","open override fun canBeEmpty(): Boolean","org.modelix.modelql.core.IfEmptyStep.canBeEmpty"]},{"name":"open override fun canBeEmpty(): Boolean","description":"org.modelix.modelql.core.JoinStep.canBeEmpty","location":"modelql-core/org.modelix.modelql.core/-join-step/can-be-empty.html","searchKeys":["canBeEmpty","open override fun canBeEmpty(): Boolean","org.modelix.modelql.core.JoinStep.canBeEmpty"]},{"name":"open override fun canBeEmpty(): Boolean","description":"org.modelix.modelql.core.MappingStep.canBeEmpty","location":"modelql-core/org.modelix.modelql.core/-mapping-step/can-be-empty.html","searchKeys":["canBeEmpty","open override fun canBeEmpty(): Boolean","org.modelix.modelql.core.MappingStep.canBeEmpty"]},{"name":"open override fun canBeEmpty(): Boolean","description":"org.modelix.modelql.core.MonoTransformingStep.canBeEmpty","location":"modelql-core/org.modelix.modelql.core/-mono-transforming-step/can-be-empty.html","searchKeys":["canBeEmpty","open override fun canBeEmpty(): Boolean","org.modelix.modelql.core.MonoTransformingStep.canBeEmpty"]},{"name":"open override fun canBeEmpty(): Boolean","description":"org.modelix.modelql.core.NullIfEmpty.canBeEmpty","location":"modelql-core/org.modelix.modelql.core/-null-if-empty/can-be-empty.html","searchKeys":["canBeEmpty","open override fun canBeEmpty(): Boolean","org.modelix.modelql.core.NullIfEmpty.canBeEmpty"]},{"name":"open override fun canBeEmpty(): Boolean","description":"org.modelix.modelql.core.QueryInput.canBeEmpty","location":"modelql-core/org.modelix.modelql.core/-query-input/can-be-empty.html","searchKeys":["canBeEmpty","open override fun canBeEmpty(): Boolean","org.modelix.modelql.core.QueryInput.canBeEmpty"]},{"name":"open override fun canBeEmpty(): Boolean","description":"org.modelix.modelql.core.TakeStep.canBeEmpty","location":"modelql-core/org.modelix.modelql.core/-take-step/can-be-empty.html","searchKeys":["canBeEmpty","open override fun canBeEmpty(): Boolean","org.modelix.modelql.core.TakeStep.canBeEmpty"]},{"name":"open override fun canBeEmpty(): Boolean","description":"org.modelix.modelql.core.UnboundQuery.canBeEmpty","location":"modelql-core/org.modelix.modelql.core/-unbound-query/can-be-empty.html","searchKeys":["canBeEmpty","open override fun canBeEmpty(): Boolean","org.modelix.modelql.core.UnboundQuery.canBeEmpty"]},{"name":"open override fun canBeEmpty(): Boolean","description":"org.modelix.modelql.core.WhenStep.canBeEmpty","location":"modelql-core/org.modelix.modelql.core/-when-step/can-be-empty.html","searchKeys":["canBeEmpty","open override fun canBeEmpty(): Boolean","org.modelix.modelql.core.WhenStep.canBeEmpty"]},{"name":"open override fun canBeEmpty(): Boolean","description":"org.modelix.modelql.core.ZipStep.canBeEmpty","location":"modelql-core/org.modelix.modelql.core/-zip-step/can-be-empty.html","searchKeys":["canBeEmpty","open override fun canBeEmpty(): Boolean","org.modelix.modelql.core.ZipStep.canBeEmpty"]},{"name":"open override fun canBeMultiple(): Boolean","description":"org.modelix.modelql.core.AggregationStep.canBeMultiple","location":"modelql-core/org.modelix.modelql.core/-aggregation-step/can-be-multiple.html","searchKeys":["canBeMultiple","open override fun canBeMultiple(): Boolean","org.modelix.modelql.core.AggregationStep.canBeMultiple"]},{"name":"open override fun canBeMultiple(): Boolean","description":"org.modelix.modelql.core.ConstantSourceStep.canBeMultiple","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/can-be-multiple.html","searchKeys":["canBeMultiple","open override fun canBeMultiple(): Boolean","org.modelix.modelql.core.ConstantSourceStep.canBeMultiple"]},{"name":"open override fun canBeMultiple(): Boolean","description":"org.modelix.modelql.core.DropStep.canBeMultiple","location":"modelql-core/org.modelix.modelql.core/-drop-step/can-be-multiple.html","searchKeys":["canBeMultiple","open override fun canBeMultiple(): Boolean","org.modelix.modelql.core.DropStep.canBeMultiple"]},{"name":"open override fun canBeMultiple(): Boolean","description":"org.modelix.modelql.core.FilteringStep.canBeMultiple","location":"modelql-core/org.modelix.modelql.core/-filtering-step/can-be-multiple.html","searchKeys":["canBeMultiple","open override fun canBeMultiple(): Boolean","org.modelix.modelql.core.FilteringStep.canBeMultiple"]},{"name":"open override fun canBeMultiple(): Boolean","description":"org.modelix.modelql.core.FirstElementStep.canBeMultiple","location":"modelql-core/org.modelix.modelql.core/-first-element-step/can-be-multiple.html","searchKeys":["canBeMultiple","open override fun canBeMultiple(): Boolean","org.modelix.modelql.core.FirstElementStep.canBeMultiple"]},{"name":"open override fun canBeMultiple(): Boolean","description":"org.modelix.modelql.core.FlatMapStep.canBeMultiple","location":"modelql-core/org.modelix.modelql.core/-flat-map-step/can-be-multiple.html","searchKeys":["canBeMultiple","open override fun canBeMultiple(): Boolean","org.modelix.modelql.core.FlatMapStep.canBeMultiple"]},{"name":"open override fun canBeMultiple(): Boolean","description":"org.modelix.modelql.core.IdentityStep.canBeMultiple","location":"modelql-core/org.modelix.modelql.core/-identity-step/can-be-multiple.html","searchKeys":["canBeMultiple","open override fun canBeMultiple(): Boolean","org.modelix.modelql.core.IdentityStep.canBeMultiple"]},{"name":"open override fun canBeMultiple(): Boolean","description":"org.modelix.modelql.core.IfEmptyStep.canBeMultiple","location":"modelql-core/org.modelix.modelql.core/-if-empty-step/can-be-multiple.html","searchKeys":["canBeMultiple","open override fun canBeMultiple(): Boolean","org.modelix.modelql.core.IfEmptyStep.canBeMultiple"]},{"name":"open override fun canBeMultiple(): Boolean","description":"org.modelix.modelql.core.JoinStep.canBeMultiple","location":"modelql-core/org.modelix.modelql.core/-join-step/can-be-multiple.html","searchKeys":["canBeMultiple","open override fun canBeMultiple(): Boolean","org.modelix.modelql.core.JoinStep.canBeMultiple"]},{"name":"open override fun canBeMultiple(): Boolean","description":"org.modelix.modelql.core.MappingStep.canBeMultiple","location":"modelql-core/org.modelix.modelql.core/-mapping-step/can-be-multiple.html","searchKeys":["canBeMultiple","open override fun canBeMultiple(): Boolean","org.modelix.modelql.core.MappingStep.canBeMultiple"]},{"name":"open override fun canBeMultiple(): Boolean","description":"org.modelix.modelql.core.MonoTransformingStep.canBeMultiple","location":"modelql-core/org.modelix.modelql.core/-mono-transforming-step/can-be-multiple.html","searchKeys":["canBeMultiple","open override fun canBeMultiple(): Boolean","org.modelix.modelql.core.MonoTransformingStep.canBeMultiple"]},{"name":"open override fun canBeMultiple(): Boolean","description":"org.modelix.modelql.core.QueryInput.canBeMultiple","location":"modelql-core/org.modelix.modelql.core/-query-input/can-be-multiple.html","searchKeys":["canBeMultiple","open override fun canBeMultiple(): Boolean","org.modelix.modelql.core.QueryInput.canBeMultiple"]},{"name":"open override fun canBeMultiple(): Boolean","description":"org.modelix.modelql.core.TakeStep.canBeMultiple","location":"modelql-core/org.modelix.modelql.core/-take-step/can-be-multiple.html","searchKeys":["canBeMultiple","open override fun canBeMultiple(): Boolean","org.modelix.modelql.core.TakeStep.canBeMultiple"]},{"name":"open override fun canBeMultiple(): Boolean","description":"org.modelix.modelql.core.WhenStep.canBeMultiple","location":"modelql-core/org.modelix.modelql.core/-when-step/can-be-multiple.html","searchKeys":["canBeMultiple","open override fun canBeMultiple(): Boolean","org.modelix.modelql.core.WhenStep.canBeMultiple"]},{"name":"open override fun canBeMultiple(): Boolean","description":"org.modelix.modelql.core.ZipStep.canBeMultiple","location":"modelql-core/org.modelix.modelql.core/-zip-step/can-be-multiple.html","searchKeys":["canBeMultiple","open override fun canBeMultiple(): Boolean","org.modelix.modelql.core.ZipStep.canBeMultiple"]},{"name":"open override fun canEvaluateStatically(): Boolean","description":"org.modelix.modelql.core.ConstantSourceStep.canEvaluateStatically","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/can-evaluate-statically.html","searchKeys":["canEvaluateStatically","open override fun canEvaluateStatically(): Boolean","org.modelix.modelql.core.ConstantSourceStep.canEvaluateStatically"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): AndOperatorStep.Descriptor","description":"org.modelix.modelql.core.AndOperatorStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-and-operator-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): AndOperatorStep.Descriptor","org.modelix.modelql.core.AndOperatorStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): CountingStep.CountDescriptor","description":"org.modelix.modelql.core.CountingStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-counting-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): CountingStep.CountDescriptor","org.modelix.modelql.core.CountingStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): DropStep.Descriptor","description":"org.modelix.modelql.core.DropStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-drop-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): DropStep.Descriptor","org.modelix.modelql.core.DropStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): EqualsOperatorStep.Descriptor","description":"org.modelix.modelql.core.EqualsOperatorStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-equals-operator-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): EqualsOperatorStep.Descriptor","org.modelix.modelql.core.EqualsOperatorStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): FilteringStep.Descriptor","description":"org.modelix.modelql.core.FilteringStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-filtering-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): FilteringStep.Descriptor","org.modelix.modelql.core.FilteringStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): FirstElementStep.FirstElementDescriptor","description":"org.modelix.modelql.core.FirstElementStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-first-element-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): FirstElementStep.FirstElementDescriptor","org.modelix.modelql.core.FirstElementStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): FirstOrNullStep.Descriptor","description":"org.modelix.modelql.core.FirstOrNullStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-first-or-null-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): FirstOrNullStep.Descriptor","org.modelix.modelql.core.FirstOrNullStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): FlatMapStep.Descriptor","description":"org.modelix.modelql.core.FlatMapStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-flat-map-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): FlatMapStep.Descriptor","org.modelix.modelql.core.FlatMapStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): IfEmptyStep.Descriptor","description":"org.modelix.modelql.core.IfEmptyStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-if-empty-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): IfEmptyStep.Descriptor","org.modelix.modelql.core.IfEmptyStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): InPredicate.Descriptor","description":"org.modelix.modelql.core.InPredicate.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-in-predicate/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): InPredicate.Descriptor","org.modelix.modelql.core.InPredicate.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): IntSumStep.IntSumDescriptor","description":"org.modelix.modelql.core.IntSumStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-int-sum-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): IntSumStep.IntSumDescriptor","org.modelix.modelql.core.IntSumStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): IsEmptyStep.Descriptor","description":"org.modelix.modelql.core.IsEmptyStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-is-empty-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): IsEmptyStep.Descriptor","org.modelix.modelql.core.IsEmptyStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): IsNullPredicateStep.Descriptor","description":"org.modelix.modelql.core.IsNullPredicateStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-is-null-predicate-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): IsNullPredicateStep.Descriptor","org.modelix.modelql.core.IsNullPredicateStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): JoinStep.Descriptor","description":"org.modelix.modelql.core.JoinStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-join-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): JoinStep.Descriptor","org.modelix.modelql.core.JoinStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): ListCollectorStep.Descriptor","description":"org.modelix.modelql.core.ListCollectorStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-list-collector-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): ListCollectorStep.Descriptor","org.modelix.modelql.core.ListCollectorStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): MapAccessStep.Descriptor","description":"org.modelix.modelql.core.MapAccessStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-map-access-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): MapAccessStep.Descriptor","org.modelix.modelql.core.MapAccessStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): MapCollectorStep.Descriptor","description":"org.modelix.modelql.core.MapCollectorStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-map-collector-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): MapCollectorStep.Descriptor","org.modelix.modelql.core.MapCollectorStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): MapIfNotNullStep.Descriptor","description":"org.modelix.modelql.core.MapIfNotNullStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-map-if-not-null-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): MapIfNotNullStep.Descriptor","org.modelix.modelql.core.MapIfNotNullStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): MappingStep.Descriptor","description":"org.modelix.modelql.core.MappingStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-mapping-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): MappingStep.Descriptor","org.modelix.modelql.core.MappingStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): NotOperatorStep.NotDescriptor","description":"org.modelix.modelql.core.NotOperatorStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-not-operator-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): NotOperatorStep.NotDescriptor","org.modelix.modelql.core.NotOperatorStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): NullIfEmpty.OrNullDescriptor","description":"org.modelix.modelql.core.NullIfEmpty.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-null-if-empty/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): NullIfEmpty.OrNullDescriptor","org.modelix.modelql.core.NullIfEmpty.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): OrOperatorStep.Descriptor","description":"org.modelix.modelql.core.OrOperatorStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-or-operator-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): OrOperatorStep.Descriptor","org.modelix.modelql.core.OrOperatorStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): QueryInput.Descriptor","description":"org.modelix.modelql.core.QueryInput.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-query-input/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): QueryInput.Descriptor","org.modelix.modelql.core.QueryInput.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): RegexPredicate.Descriptor","description":"org.modelix.modelql.core.RegexPredicate.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-regex-predicate/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): RegexPredicate.Descriptor","org.modelix.modelql.core.RegexPredicate.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): SetCollectorStep.Descriptor","description":"org.modelix.modelql.core.SetCollectorStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-set-collector-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): SetCollectorStep.Descriptor","org.modelix.modelql.core.SetCollectorStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): SingleStep.Descriptor","description":"org.modelix.modelql.core.SingleStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-single-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): SingleStep.Descriptor","org.modelix.modelql.core.SingleStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.core.AllowEmptyStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-allow-empty-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.core.AllowEmptyStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.core.AssertNotEmptyStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-assert-not-empty-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.core.AssertNotEmptyStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.core.CollectionSizeStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-collection-size-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.core.CollectionSizeStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.core.ConstantSourceStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.core.ConstantSourceStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.core.EmptyStringIfNullStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-empty-string-if-null-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.core.EmptyStringIfNullStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.core.IdentityStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-identity-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.core.IdentityStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.core.LocalMappingStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-local-mapping-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.core.LocalMappingStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.core.PrintStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-print-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.core.PrintStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.core.QueryCallStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-query-call-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.core.QueryCallStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.core.SharedStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-shared-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.core.SharedStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.core.StringToBooleanStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-string-to-boolean-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.core.StringToBooleanStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.core.StringToIntStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-string-to-int-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.core.StringToIntStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.core.ToStringStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-to-string-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.core.ToStringStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.core.WhenStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-when-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.core.WhenStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.core.WithIndexStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-with-index-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.core.WithIndexStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","description":"org.modelix.modelql.core.ZipElementAccessStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-zip-element-access-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StepDescriptor","org.modelix.modelql.core.ZipElementAccessStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StringContainsPredicate.StringContainsDescriptor","description":"org.modelix.modelql.core.StringContainsPredicate.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-string-contains-predicate/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): StringContainsPredicate.StringContainsDescriptor","org.modelix.modelql.core.StringContainsPredicate.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): TakeStep.Descriptor","description":"org.modelix.modelql.core.TakeStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-take-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): TakeStep.Descriptor","org.modelix.modelql.core.TakeStep.createDescriptor"]},{"name":"open override fun createDescriptor(context: QueryGraphDescriptorBuilder): ZipStep.Descriptor","description":"org.modelix.modelql.core.ZipStep.createDescriptor","location":"modelql-core/org.modelix.modelql.core/-zip-step/create-descriptor.html","searchKeys":["createDescriptor","open override fun createDescriptor(context: QueryGraphDescriptorBuilder): ZipStep.Descriptor","org.modelix.modelql.core.ZipStep.createDescriptor"]},{"name":"open override fun createFlow(context: IFlowInstantiationContext): Flow<ZipStepOutput<Out, CommonIn>>","description":"org.modelix.modelql.core.ZipStep.createFlow","location":"modelql-core/org.modelix.modelql.core/-zip-step/create-flow.html","searchKeys":["createFlow","open override fun createFlow(context: IFlowInstantiationContext): Flow<ZipStepOutput<Out, CommonIn>>","org.modelix.modelql.core.ZipStep.createFlow"]},{"name":"open override fun createFlow(context: IFlowInstantiationContext): StepFlow<E>","description":"org.modelix.modelql.core.ConstantSourceStep.createFlow","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/create-flow.html","searchKeys":["createFlow","open override fun createFlow(context: IFlowInstantiationContext): StepFlow<E>","org.modelix.modelql.core.ConstantSourceStep.createFlow"]},{"name":"open override fun createFlow(context: IFlowInstantiationContext): StepFlow<E>","description":"org.modelix.modelql.core.JoinStep.createFlow","location":"modelql-core/org.modelix.modelql.core/-join-step/create-flow.html","searchKeys":["createFlow","open override fun createFlow(context: IFlowInstantiationContext): StepFlow<E>","org.modelix.modelql.core.JoinStep.createFlow"]},{"name":"open override fun createFlow(context: IFlowInstantiationContext): StepFlow<E>","description":"org.modelix.modelql.core.QueryInput.createFlow","location":"modelql-core/org.modelix.modelql.core/-query-input/create-flow.html","searchKeys":["createFlow","open override fun createFlow(context: IFlowInstantiationContext): StepFlow<E>","org.modelix.modelql.core.QueryInput.createFlow"]},{"name":"open override fun createFlow(context: IFlowInstantiationContext): StepFlow<Out>","description":"org.modelix.modelql.core.TransformingStep.createFlow","location":"modelql-core/org.modelix.modelql.core/-transforming-step/create-flow.html","searchKeys":["createFlow","open override fun createFlow(context: IFlowInstantiationContext): StepFlow<Out>","org.modelix.modelql.core.TransformingStep.createFlow"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.AllowEmptyStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-allow-empty-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.AllowEmptyStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.AndOperatorStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-and-operator-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.AndOperatorStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.AssertNotEmptyStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-assert-not-empty-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.AssertNotEmptyStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.CollectionSizeStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-collection-size-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.CollectionSizeStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.ConstantSourceStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.ConstantSourceStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.CountingStep.CountDescriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-counting-step/-count-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.CountingStep.CountDescriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.DropStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-drop-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.DropStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.EmptyStringIfNullStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-empty-string-if-null-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.EmptyStringIfNullStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.EqualsOperatorStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-equals-operator-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.EqualsOperatorStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.FilteringStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-filtering-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.FilteringStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.FirstElementStep.FirstElementDescriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-first-element-step/-first-element-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.FirstElementStep.FirstElementDescriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.FirstOrNullStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-first-or-null-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.FirstOrNullStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.FlatMapStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-flat-map-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.FlatMapStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.IdentityStep.IdentityStepDescriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-identity-step/-identity-step-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.IdentityStep.IdentityStepDescriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.IfEmptyStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-if-empty-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.IfEmptyStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.InPredicate.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-in-predicate/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.InPredicate.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.IntSumStep.IntSumDescriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-int-sum-step/-int-sum-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.IntSumStep.IntSumDescriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.IsEmptyStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-is-empty-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.IsEmptyStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.IsNullPredicateStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-is-null-predicate-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.IsNullPredicateStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.JoinStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-join-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.JoinStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.ListCollectorStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-list-collector-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.ListCollectorStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.MapAccessStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-map-access-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.MapAccessStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.MapCollectorStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-map-collector-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.MapCollectorStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.MapIfNotNullStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-map-if-not-null-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.MapIfNotNullStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.MappingStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-mapping-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.MappingStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.NotOperatorStep.NotDescriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-not-operator-step/-not-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.NotOperatorStep.NotDescriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.NullIfEmpty.OrNullDescriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-null-if-empty/-or-null-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.NullIfEmpty.OrNullDescriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.OrOperatorStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-or-operator-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.OrOperatorStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.PrintStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-print-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.PrintStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.QueryCallStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-query-call-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.QueryCallStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.QueryInput.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-query-input/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.QueryInput.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.RegexPredicate.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-regex-predicate/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.RegexPredicate.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.SetCollectorStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-set-collector-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.SetCollectorStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.SharedStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-shared-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.SharedStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.SingleStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-single-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.SingleStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.StringContainsPredicate.StringContainsDescriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-string-contains-predicate/-string-contains-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.StringContainsPredicate.StringContainsDescriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.StringToBooleanStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-string-to-boolean-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.StringToBooleanStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.StringToIntStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-string-to-int-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.StringToIntStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.TakeStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-take-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.TakeStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.ToStringStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-to-string-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.ToStringStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.WhenStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-when-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.WhenStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.WithIndexStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-with-index-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.WithIndexStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.ZipElementAccessStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-zip-element-access-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.ZipElementAccessStep.Descriptor.createStep"]},{"name":"open override fun createStep(context: QueryDeserializationContext): IStep","description":"org.modelix.modelql.core.ZipStep.Descriptor.createStep","location":"modelql-core/org.modelix.modelql.core/-zip-step/-descriptor/create-step.html","searchKeys":["createStep","open override fun createStep(context: QueryDeserializationContext): IStep","org.modelix.modelql.core.ZipStep.Descriptor.createStep"]},{"name":"open override fun deserialize(decoder: Decoder): CollectorStepOutput<E, InternalCollectionT, CollectionT>","description":"org.modelix.modelql.core.CollectorStepOutputSerializer.deserialize","location":"modelql-core/org.modelix.modelql.core/-collector-step-output-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): CollectorStepOutput<E, InternalCollectionT, CollectionT>","org.modelix.modelql.core.CollectorStepOutputSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): ConstantSourceStep.Descriptor","description":"org.modelix.modelql.core.ConstantSourceStep.Descriptor.Serializer.deserialize","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/-descriptor/-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): ConstantSourceStep.Descriptor","org.modelix.modelql.core.ConstantSourceStep.Descriptor.Serializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): IStepOutput<Out>","description":"org.modelix.modelql.core.RecursiveQuerySerializer.deserialize","location":"modelql-core/org.modelix.modelql.core/-recursive-query-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): IStepOutput<Out>","org.modelix.modelql.core.RecursiveQuerySerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): MultiplexedOutput<E>","description":"org.modelix.modelql.core.MultiplexedOutputSerializer.deserialize","location":"modelql-core/org.modelix.modelql.core/-multiplexed-output-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): MultiplexedOutput<E>","org.modelix.modelql.core.MultiplexedOutputSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): Out","description":"org.modelix.modelql.core.LocalMappingSerializer.deserialize","location":"modelql-core/org.modelix.modelql.core/-local-mapping-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): Out","org.modelix.modelql.core.LocalMappingSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): SimpleStepOutput<E>","description":"org.modelix.modelql.core.SimpleStepOutputSerializer.deserialize","location":"modelql-core/org.modelix.modelql.core/-simple-step-output-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): SimpleStepOutput<E>","org.modelix.modelql.core.SimpleStepOutputSerializer.deserialize"]},{"name":"open override fun deserialize(decoder: Decoder): ZipStepOutput<Out, CommonT>","description":"org.modelix.modelql.core.ZipOutputSerializer.deserialize","location":"modelql-core/org.modelix.modelql.core/-zip-output-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(decoder: Decoder): ZipStepOutput<Out, CommonT>","org.modelix.modelql.core.ZipOutputSerializer.deserialize"]},{"name":"open override fun evaluateStatically(): E","description":"org.modelix.modelql.core.ConstantSourceStep.evaluateStatically","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/evaluate-statically.html","searchKeys":["evaluateStatically","open override fun evaluateStatically(): E","org.modelix.modelql.core.ConstantSourceStep.evaluateStatically"]},{"name":"open override fun flush()","description":"org.modelix.modelql.core.BulkQueryExecutor.flush","location":"modelql-core/org.modelix.modelql.core/-bulk-query-executor/flush.html","searchKeys":["flush","open override fun flush()","org.modelix.modelql.core.BulkQueryExecutor.flush"]},{"name":"open override fun getAggregationOutputSerializer(serializationContext: SerializationContext): KSerializer<IStepOutput<ElementOut>>","description":"org.modelix.modelql.core.MonoUnboundQuery.getAggregationOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-mono-unbound-query/get-aggregation-output-serializer.html","searchKeys":["getAggregationOutputSerializer","open override fun getAggregationOutputSerializer(serializationContext: SerializationContext): KSerializer<IStepOutput<ElementOut>>","org.modelix.modelql.core.MonoUnboundQuery.getAggregationOutputSerializer"]},{"name":"open override fun getAggregationOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<List<IStepOutput<ElementOut>>>>","description":"org.modelix.modelql.core.FluxUnboundQuery.getAggregationOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-flux-unbound-query/get-aggregation-output-serializer.html","searchKeys":["getAggregationOutputSerializer","open override fun getAggregationOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<List<IStepOutput<ElementOut>>>>","org.modelix.modelql.core.FluxUnboundQuery.getAggregationOutputSerializer"]},{"name":"open override fun getConsumers(): List<IConsumingStep<E>>","description":"org.modelix.modelql.core.ProducingStep.getConsumers","location":"modelql-core/org.modelix.modelql.core/-producing-step/get-consumers.html","searchKeys":["getConsumers","open override fun getConsumers(): List<IConsumingStep<E>>","org.modelix.modelql.core.ProducingStep.getConsumers"]},{"name":"open override fun getElementOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<ElementOut>>","description":"org.modelix.modelql.core.FluxUnboundQuery.getElementOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-flux-unbound-query/get-element-output-serializer.html","searchKeys":["getElementOutputSerializer","open override fun getElementOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<ElementOut>>","org.modelix.modelql.core.FluxUnboundQuery.getElementOutputSerializer"]},{"name":"open override fun getElementOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<ElementOut>>","description":"org.modelix.modelql.core.MonoUnboundQuery.getElementOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-mono-unbound-query/get-element-output-serializer.html","searchKeys":["getElementOutputSerializer","open override fun getElementOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<ElementOut>>","org.modelix.modelql.core.MonoUnboundQuery.getElementOutputSerializer"]},{"name":"open override fun getId(): Long","description":"org.modelix.modelql.core.QueryReference.getId","location":"modelql-core/org.modelix.modelql.core/-query-reference/get-id.html","searchKeys":["getId","open override fun getId(): Long","org.modelix.modelql.core.QueryReference.getId"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Boolean>>","description":"org.modelix.modelql.core.AndOperatorStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-and-operator-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Boolean>>","org.modelix.modelql.core.AndOperatorStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Boolean>>","description":"org.modelix.modelql.core.EqualsOperatorStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-equals-operator-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Boolean>>","org.modelix.modelql.core.EqualsOperatorStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Boolean>>","description":"org.modelix.modelql.core.InPredicate.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-in-predicate/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Boolean>>","org.modelix.modelql.core.InPredicate.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Boolean>>","description":"org.modelix.modelql.core.IsEmptyStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-is-empty-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Boolean>>","org.modelix.modelql.core.IsEmptyStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Boolean>>","description":"org.modelix.modelql.core.IsNullPredicateStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-is-null-predicate-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Boolean>>","org.modelix.modelql.core.IsNullPredicateStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Boolean>>","description":"org.modelix.modelql.core.NotOperatorStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-not-operator-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Boolean>>","org.modelix.modelql.core.NotOperatorStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Boolean>>","description":"org.modelix.modelql.core.OrOperatorStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-or-operator-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Boolean>>","org.modelix.modelql.core.OrOperatorStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Boolean>>","description":"org.modelix.modelql.core.RegexPredicate.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-regex-predicate/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Boolean>>","org.modelix.modelql.core.RegexPredicate.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Boolean>>","description":"org.modelix.modelql.core.StringContainsPredicate.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-string-contains-predicate/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Boolean>>","org.modelix.modelql.core.StringContainsPredicate.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Boolean>>","description":"org.modelix.modelql.core.StringToBooleanStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-string-to-boolean-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Boolean>>","org.modelix.modelql.core.StringToBooleanStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<CollectionT>>","description":"org.modelix.modelql.core.CollectorStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-collector-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<CollectionT>>","org.modelix.modelql.core.CollectorStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","description":"org.modelix.modelql.core.ConstantSourceStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","org.modelix.modelql.core.ConstantSourceStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","description":"org.modelix.modelql.core.DropStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-drop-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","org.modelix.modelql.core.DropStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","description":"org.modelix.modelql.core.FilteringStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-filtering-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","org.modelix.modelql.core.FilteringStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","description":"org.modelix.modelql.core.FirstElementStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-first-element-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","org.modelix.modelql.core.FirstElementStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","description":"org.modelix.modelql.core.IdentityStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-identity-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","org.modelix.modelql.core.IdentityStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","description":"org.modelix.modelql.core.JoinStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-join-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","org.modelix.modelql.core.JoinStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","description":"org.modelix.modelql.core.PrintStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-print-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","org.modelix.modelql.core.PrintStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","description":"org.modelix.modelql.core.QueryInput.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-query-input/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","org.modelix.modelql.core.QueryInput.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","description":"org.modelix.modelql.core.SharedStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-shared-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","org.modelix.modelql.core.SharedStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","description":"org.modelix.modelql.core.SingleStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-single-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","org.modelix.modelql.core.SingleStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","description":"org.modelix.modelql.core.TakeStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-take-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E>>","org.modelix.modelql.core.TakeStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E?>>","description":"org.modelix.modelql.core.FirstOrNullStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-first-or-null-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E?>>","org.modelix.modelql.core.FirstOrNullStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E?>>","description":"org.modelix.modelql.core.NullIfEmpty.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-null-if-empty/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<E?>>","org.modelix.modelql.core.NullIfEmpty.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<IZip2Output<Any?, E, Int>>>","description":"org.modelix.modelql.core.WithIndexStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-with-index-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<IZip2Output<Any?, E, Int>>>","org.modelix.modelql.core.WithIndexStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Int>>","description":"org.modelix.modelql.core.CollectionSizeStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-collection-size-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Int>>","org.modelix.modelql.core.CollectionSizeStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Int>>","description":"org.modelix.modelql.core.CountingStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-counting-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Int>>","org.modelix.modelql.core.CountingStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Int>>","description":"org.modelix.modelql.core.IntSumStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-int-sum-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Int>>","org.modelix.modelql.core.IntSumStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Int>>","description":"org.modelix.modelql.core.StringToIntStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-string-to-int-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Int>>","org.modelix.modelql.core.StringToIntStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Out>>","description":"org.modelix.modelql.core.FlatMapStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-flat-map-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Out>>","org.modelix.modelql.core.FlatMapStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Out>>","description":"org.modelix.modelql.core.IfEmptyStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-if-empty-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Out>>","org.modelix.modelql.core.IfEmptyStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Out>>","description":"org.modelix.modelql.core.LocalMappingStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-local-mapping-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Out>>","org.modelix.modelql.core.LocalMappingStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Out>>","description":"org.modelix.modelql.core.MappingStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-mapping-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Out>>","org.modelix.modelql.core.MappingStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Out>>","description":"org.modelix.modelql.core.QueryCallStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-query-call-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Out>>","org.modelix.modelql.core.QueryCallStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Out>>","description":"org.modelix.modelql.core.WhenStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-when-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Out>>","org.modelix.modelql.core.WhenStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Out>>","description":"org.modelix.modelql.core.ZipElementAccessStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-zip-element-access-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Out>>","org.modelix.modelql.core.ZipElementAccessStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Out>>","description":"org.modelix.modelql.core.ZipStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-zip-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Out>>","org.modelix.modelql.core.ZipStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Out?>>","description":"org.modelix.modelql.core.MapIfNotNullStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-map-if-not-null-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<Out?>>","org.modelix.modelql.core.MapIfNotNullStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<String>>","description":"org.modelix.modelql.core.EmptyStringIfNullStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-empty-string-if-null-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<String>>","org.modelix.modelql.core.EmptyStringIfNullStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<String?>>","description":"org.modelix.modelql.core.ToStringStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-to-string-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<String?>>","org.modelix.modelql.core.ToStringStep.getOutputSerializer"]},{"name":"open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<V?>>","description":"org.modelix.modelql.core.MapAccessStep.getOutputSerializer","location":"modelql-core/org.modelix.modelql.core/-map-access-step/get-output-serializer.html","searchKeys":["getOutputSerializer","open override fun getOutputSerializer(serializationContext: SerializationContext): KSerializer<out IStepOutput<V?>>","org.modelix.modelql.core.MapAccessStep.getOutputSerializer"]},{"name":"open override fun getProducers(): List<IProducingStep<CommonIn>>","description":"org.modelix.modelql.core.TransformingStepWithParameter.getProducers","location":"modelql-core/org.modelix.modelql.core/-transforming-step-with-parameter/get-producers.html","searchKeys":["getProducers","open override fun getProducers(): List<IProducingStep<CommonIn>>","org.modelix.modelql.core.TransformingStepWithParameter.getProducers"]},{"name":"open override fun getProducers(): List<IProducingStep<CommonIn>>","description":"org.modelix.modelql.core.ZipStep.getProducers","location":"modelql-core/org.modelix.modelql.core/-zip-step/get-producers.html","searchKeys":["getProducers","open override fun getProducers(): List<IProducingStep<CommonIn>>","org.modelix.modelql.core.ZipStep.getProducers"]},{"name":"open override fun getProducers(): List<IProducingStep<E>>","description":"org.modelix.modelql.core.JoinStep.getProducers","location":"modelql-core/org.modelix.modelql.core/-join-step/get-producers.html","searchKeys":["getProducers","open override fun getProducers(): List<IProducingStep<E>>","org.modelix.modelql.core.JoinStep.getProducers"]},{"name":"open override fun getProducers(): List<IProducingStep<In>>","description":"org.modelix.modelql.core.TransformingStep.getProducers","location":"modelql-core/org.modelix.modelql.core/-transforming-step/get-producers.html","searchKeys":["getProducers","open override fun getProducers(): List<IProducingStep<In>>","org.modelix.modelql.core.TransformingStep.getProducers"]},{"name":"open override fun getRootInputSteps(): Set<IStep>","description":"org.modelix.modelql.core.SharedStep.getRootInputSteps","location":"modelql-core/org.modelix.modelql.core/-shared-step/get-root-input-steps.html","searchKeys":["getRootInputSteps","open override fun getRootInputSteps(): Set<IStep>","org.modelix.modelql.core.SharedStep.getRootInputSteps"]},{"name":"open override fun hasSideEffect(): Boolean","description":"org.modelix.modelql.core.ConstantSourceStep.hasSideEffect","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/has-side-effect.html","searchKeys":["hasSideEffect","open override fun hasSideEffect(): Boolean","org.modelix.modelql.core.ConstantSourceStep.hasSideEffect"]},{"name":"open override fun hasSideEffect(): Boolean","description":"org.modelix.modelql.core.ExecuteLocalStep.hasSideEffect","location":"modelql-core/org.modelix.modelql.core/-execute-local-step/has-side-effect.html","searchKeys":["hasSideEffect","open override fun hasSideEffect(): Boolean","org.modelix.modelql.core.ExecuteLocalStep.hasSideEffect"]},{"name":"open override fun inputIsConsumedMultipleTimes(): Boolean","description":"org.modelix.modelql.core.AggregationStep.inputIsConsumedMultipleTimes","location":"modelql-core/org.modelix.modelql.core/-aggregation-step/input-is-consumed-multiple-times.html","searchKeys":["inputIsConsumedMultipleTimes","open override fun inputIsConsumedMultipleTimes(): Boolean","org.modelix.modelql.core.AggregationStep.inputIsConsumedMultipleTimes"]},{"name":"open override fun inputIsConsumedMultipleTimes(): Boolean","description":"org.modelix.modelql.core.IProcessingStep.inputIsConsumedMultipleTimes","location":"modelql-core/org.modelix.modelql.core/-i-processing-step/input-is-consumed-multiple-times.html","searchKeys":["inputIsConsumedMultipleTimes","open override fun inputIsConsumedMultipleTimes(): Boolean","org.modelix.modelql.core.IProcessingStep.inputIsConsumedMultipleTimes"]},{"name":"open override fun needsCoroutineScope(): Boolean","description":"org.modelix.modelql.core.AggregationStep.needsCoroutineScope","location":"modelql-core/org.modelix.modelql.core/-aggregation-step/needs-coroutine-scope.html","searchKeys":["needsCoroutineScope","open override fun needsCoroutineScope(): Boolean","org.modelix.modelql.core.AggregationStep.needsCoroutineScope"]},{"name":"open override fun needsCoroutineScope(): Boolean","description":"org.modelix.modelql.core.ConstantSourceStep.needsCoroutineScope","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/needs-coroutine-scope.html","searchKeys":["needsCoroutineScope","open override fun needsCoroutineScope(): Boolean","org.modelix.modelql.core.ConstantSourceStep.needsCoroutineScope"]},{"name":"open override fun onSuccess(body: FragmentBody<Context>)","description":"org.modelix.modelql.core.FragmentBuilder.onSuccess","location":"modelql-core/org.modelix.modelql.core/-fragment-builder/on-success.html","searchKeys":["onSuccess","open override fun onSuccess(body: FragmentBody<Context>)","org.modelix.modelql.core.FragmentBuilder.onSuccess"]},{"name":"open override fun processResult(result: IZipOutput<*>, context: Context)","description":"org.modelix.modelql.core.FragmentBuilder.processResult","location":"modelql-core/org.modelix.modelql.core/-fragment-builder/process-result.html","searchKeys":["processResult","open override fun processResult(result: IZipOutput<*>, context: Context)","org.modelix.modelql.core.FragmentBuilder.processResult"]},{"name":"open override fun requiresSingularQueryInput(): Boolean","description":"org.modelix.modelql.core.AggregationStep.requiresSingularQueryInput","location":"modelql-core/org.modelix.modelql.core/-aggregation-step/requires-singular-query-input.html","searchKeys":["requiresSingularQueryInput","open override fun requiresSingularQueryInput(): Boolean","org.modelix.modelql.core.AggregationStep.requiresSingularQueryInput"]},{"name":"open override fun requiresSingularQueryInput(): Boolean","description":"org.modelix.modelql.core.ConstantSourceStep.requiresSingularQueryInput","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/requires-singular-query-input.html","searchKeys":["requiresSingularQueryInput","open override fun requiresSingularQueryInput(): Boolean","org.modelix.modelql.core.ConstantSourceStep.requiresSingularQueryInput"]},{"name":"open override fun requiresSingularQueryInput(): Boolean","description":"org.modelix.modelql.core.FirstElementStep.requiresSingularQueryInput","location":"modelql-core/org.modelix.modelql.core/-first-element-step/requires-singular-query-input.html","searchKeys":["requiresSingularQueryInput","open override fun requiresSingularQueryInput(): Boolean","org.modelix.modelql.core.FirstElementStep.requiresSingularQueryInput"]},{"name":"open override fun requiresSingularQueryInput(): Boolean","description":"org.modelix.modelql.core.IProducingStep.requiresSingularQueryInput","location":"modelql-core/org.modelix.modelql.core/-i-producing-step/requires-singular-query-input.html","searchKeys":["requiresSingularQueryInput","open override fun requiresSingularQueryInput(): Boolean","org.modelix.modelql.core.IProducingStep.requiresSingularQueryInput"]},{"name":"open override fun requiresSingularQueryInput(): Boolean","description":"org.modelix.modelql.core.IfEmptyStep.requiresSingularQueryInput","location":"modelql-core/org.modelix.modelql.core/-if-empty-step/requires-singular-query-input.html","searchKeys":["requiresSingularQueryInput","open override fun requiresSingularQueryInput(): Boolean","org.modelix.modelql.core.IfEmptyStep.requiresSingularQueryInput"]},{"name":"open override fun requiresSingularQueryInput(): Boolean","description":"org.modelix.modelql.core.JoinStep.requiresSingularQueryInput","location":"modelql-core/org.modelix.modelql.core/-join-step/requires-singular-query-input.html","searchKeys":["requiresSingularQueryInput","open override fun requiresSingularQueryInput(): Boolean","org.modelix.modelql.core.JoinStep.requiresSingularQueryInput"]},{"name":"open override fun requiresSingularQueryInput(): Boolean","description":"org.modelix.modelql.core.MappingStep.requiresSingularQueryInput","location":"modelql-core/org.modelix.modelql.core/-mapping-step/requires-singular-query-input.html","searchKeys":["requiresSingularQueryInput","open override fun requiresSingularQueryInput(): Boolean","org.modelix.modelql.core.MappingStep.requiresSingularQueryInput"]},{"name":"open override fun requiresSingularQueryInput(): Boolean","description":"org.modelix.modelql.core.QueryCallStep.requiresSingularQueryInput","location":"modelql-core/org.modelix.modelql.core/-query-call-step/requires-singular-query-input.html","searchKeys":["requiresSingularQueryInput","open override fun requiresSingularQueryInput(): Boolean","org.modelix.modelql.core.QueryCallStep.requiresSingularQueryInput"]},{"name":"open override fun requiresSingularQueryInput(): Boolean","description":"org.modelix.modelql.core.WithIndexStep.requiresSingularQueryInput","location":"modelql-core/org.modelix.modelql.core/-with-index-step/requires-singular-query-input.html","searchKeys":["requiresSingularQueryInput","open override fun requiresSingularQueryInput(): Boolean","org.modelix.modelql.core.WithIndexStep.requiresSingularQueryInput"]},{"name":"open override fun requiresSingularQueryInput(): Boolean","description":"org.modelix.modelql.core.ZipStep.requiresSingularQueryInput","location":"modelql-core/org.modelix.modelql.core/-zip-step/requires-singular-query-input.html","searchKeys":["requiresSingularQueryInput","open override fun requiresSingularQueryInput(): Boolean","org.modelix.modelql.core.ZipStep.requiresSingularQueryInput"]},{"name":"open override fun requiresWriteAccess(): Boolean","description":"org.modelix.modelql.core.ConstantSourceStep.requiresWriteAccess","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/requires-write-access.html","searchKeys":["requiresWriteAccess","open override fun requiresWriteAccess(): Boolean","org.modelix.modelql.core.ConstantSourceStep.requiresWriteAccess"]},{"name":"open override fun requiresWriteAccess(): Boolean","description":"org.modelix.modelql.core.FlatMapStep.requiresWriteAccess","location":"modelql-core/org.modelix.modelql.core/-flat-map-step/requires-write-access.html","searchKeys":["requiresWriteAccess","open override fun requiresWriteAccess(): Boolean","org.modelix.modelql.core.FlatMapStep.requiresWriteAccess"]},{"name":"open override fun requiresWriteAccess(): Boolean","description":"org.modelix.modelql.core.MapIfNotNullStep.requiresWriteAccess","location":"modelql-core/org.modelix.modelql.core/-map-if-not-null-step/requires-write-access.html","searchKeys":["requiresWriteAccess","open override fun requiresWriteAccess(): Boolean","org.modelix.modelql.core.MapIfNotNullStep.requiresWriteAccess"]},{"name":"open override fun requiresWriteAccess(): Boolean","description":"org.modelix.modelql.core.MappingStep.requiresWriteAccess","location":"modelql-core/org.modelix.modelql.core/-mapping-step/requires-write-access.html","searchKeys":["requiresWriteAccess","open override fun requiresWriteAccess(): Boolean","org.modelix.modelql.core.MappingStep.requiresWriteAccess"]},{"name":"open override fun requiresWriteAccess(): Boolean","description":"org.modelix.modelql.core.UnboundQuery.requiresWriteAccess","location":"modelql-core/org.modelix.modelql.core/-unbound-query/requires-write-access.html","searchKeys":["requiresWriteAccess","open override fun requiresWriteAccess(): Boolean","org.modelix.modelql.core.UnboundQuery.requiresWriteAccess"]},{"name":"open override fun serialize(encoder: Encoder, value: CollectorStepOutput<E, InternalCollectionT, CollectionT>)","description":"org.modelix.modelql.core.CollectorStepOutputSerializer.serialize","location":"modelql-core/org.modelix.modelql.core/-collector-step-output-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: CollectorStepOutput<E, InternalCollectionT, CollectionT>)","org.modelix.modelql.core.CollectorStepOutputSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: ConstantSourceStep.Descriptor)","description":"org.modelix.modelql.core.ConstantSourceStep.Descriptor.Serializer.serialize","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/-descriptor/-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: ConstantSourceStep.Descriptor)","org.modelix.modelql.core.ConstantSourceStep.Descriptor.Serializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: IStepOutput<Out>)","description":"org.modelix.modelql.core.RecursiveQuerySerializer.serialize","location":"modelql-core/org.modelix.modelql.core/-recursive-query-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: IStepOutput<Out>)","org.modelix.modelql.core.RecursiveQuerySerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: MultiplexedOutput<E>)","description":"org.modelix.modelql.core.MultiplexedOutputSerializer.serialize","location":"modelql-core/org.modelix.modelql.core/-multiplexed-output-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: MultiplexedOutput<E>)","org.modelix.modelql.core.MultiplexedOutputSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: Out)","description":"org.modelix.modelql.core.LocalMappingSerializer.serialize","location":"modelql-core/org.modelix.modelql.core/-local-mapping-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: Out)","org.modelix.modelql.core.LocalMappingSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: SimpleStepOutput<E>)","description":"org.modelix.modelql.core.SimpleStepOutputSerializer.serialize","location":"modelql-core/org.modelix.modelql.core/-simple-step-output-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: SimpleStepOutput<E>)","org.modelix.modelql.core.SimpleStepOutputSerializer.serialize"]},{"name":"open override fun serialize(encoder: Encoder, value: ZipStepOutput<Out, CommonT>)","description":"org.modelix.modelql.core.ZipOutputSerializer.serialize","location":"modelql-core/org.modelix.modelql.core/-zip-output-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(encoder: Encoder, value: ZipStepOutput<Out, CommonT>)","org.modelix.modelql.core.ZipOutputSerializer.serialize"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.AllowEmptyStep.toString","location":"modelql-core/org.modelix.modelql.core/-allow-empty-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.AllowEmptyStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.AndOperatorStep.toString","location":"modelql-core/org.modelix.modelql.core/-and-operator-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.AndOperatorStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.AssertNotEmptyStep.toString","location":"modelql-core/org.modelix.modelql.core/-assert-not-empty-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.AssertNotEmptyStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.CollectionSizeStep.toString","location":"modelql-core/org.modelix.modelql.core/-collection-size-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.CollectionSizeStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.ConstantSourceStep.toString","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.ConstantSourceStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.CountingStep.toString","location":"modelql-core/org.modelix.modelql.core/-counting-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.CountingStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.DropStep.toString","location":"modelql-core/org.modelix.modelql.core/-drop-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.DropStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.EmptyStringIfNullStep.toString","location":"modelql-core/org.modelix.modelql.core/-empty-string-if-null-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.EmptyStringIfNullStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.EqualsOperatorStep.toString","location":"modelql-core/org.modelix.modelql.core/-equals-operator-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.EqualsOperatorStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.ExecuteLocalStep.toString","location":"modelql-core/org.modelix.modelql.core/-execute-local-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.ExecuteLocalStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.FilteringStep.toString","location":"modelql-core/org.modelix.modelql.core/-filtering-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.FilteringStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.FirstElementStep.toString","location":"modelql-core/org.modelix.modelql.core/-first-element-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.FirstElementStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.FirstOrNullStep.toString","location":"modelql-core/org.modelix.modelql.core/-first-or-null-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.FirstOrNullStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.FlatMapStep.toString","location":"modelql-core/org.modelix.modelql.core/-flat-map-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.FlatMapStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.IdentityStep.toString","location":"modelql-core/org.modelix.modelql.core/-identity-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.IdentityStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.IfEmptyStep.toString","location":"modelql-core/org.modelix.modelql.core/-if-empty-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.IfEmptyStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.InPredicate.toString","location":"modelql-core/org.modelix.modelql.core/-in-predicate/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.InPredicate.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.IntSumStep.toString","location":"modelql-core/org.modelix.modelql.core/-int-sum-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.IntSumStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.IsEmptyStep.toString","location":"modelql-core/org.modelix.modelql.core/-is-empty-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.IsEmptyStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.IsNullPredicateStep.toString","location":"modelql-core/org.modelix.modelql.core/-is-null-predicate-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.IsNullPredicateStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.JoinStep.toString","location":"modelql-core/org.modelix.modelql.core/-join-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.JoinStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.ListCollectorStep.toString","location":"modelql-core/org.modelix.modelql.core/-list-collector-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.ListCollectorStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.LocalMappingStep.toString","location":"modelql-core/org.modelix.modelql.core/-local-mapping-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.LocalMappingStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.MapAccessStep.toString","location":"modelql-core/org.modelix.modelql.core/-map-access-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.MapAccessStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.MapCollectorStep.toString","location":"modelql-core/org.modelix.modelql.core/-map-collector-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.MapCollectorStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.MapIfNotNullStep.toString","location":"modelql-core/org.modelix.modelql.core/-map-if-not-null-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.MapIfNotNullStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.MappingStep.toString","location":"modelql-core/org.modelix.modelql.core/-mapping-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.MappingStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.NotOperatorStep.toString","location":"modelql-core/org.modelix.modelql.core/-not-operator-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.NotOperatorStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.NullIfEmpty.toString","location":"modelql-core/org.modelix.modelql.core/-null-if-empty/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.NullIfEmpty.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.OrOperatorStep.toString","location":"modelql-core/org.modelix.modelql.core/-or-operator-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.OrOperatorStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.PrintStep.toString","location":"modelql-core/org.modelix.modelql.core/-print-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.PrintStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.QueryCallStep.toString","location":"modelql-core/org.modelix.modelql.core/-query-call-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.QueryCallStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.QueryInput.toString","location":"modelql-core/org.modelix.modelql.core/-query-input/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.QueryInput.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.RegexPredicate.toString","location":"modelql-core/org.modelix.modelql.core/-regex-predicate/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.RegexPredicate.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.SetCollectorStep.toString","location":"modelql-core/org.modelix.modelql.core/-set-collector-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.SetCollectorStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.SharedStep.toString","location":"modelql-core/org.modelix.modelql.core/-shared-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.SharedStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.SimpleStepOutput.toString","location":"modelql-core/org.modelix.modelql.core/-simple-step-output/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.SimpleStepOutput.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.SingleStep.toString","location":"modelql-core/org.modelix.modelql.core/-single-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.SingleStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.StringContainsPredicate.toString","location":"modelql-core/org.modelix.modelql.core/-string-contains-predicate/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.StringContainsPredicate.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.StringToBooleanStep.toString","location":"modelql-core/org.modelix.modelql.core/-string-to-boolean-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.StringToBooleanStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.StringToIntStep.toString","location":"modelql-core/org.modelix.modelql.core/-string-to-int-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.StringToIntStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.TakeStep.toString","location":"modelql-core/org.modelix.modelql.core/-take-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.TakeStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.ToStringStep.toString","location":"modelql-core/org.modelix.modelql.core/-to-string-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.ToStringStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.UnboundQuery.toString","location":"modelql-core/org.modelix.modelql.core/-unbound-query/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.UnboundQuery.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.WhenStep.toString","location":"modelql-core/org.modelix.modelql.core/-when-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.WhenStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.WithIndexStep.toString","location":"modelql-core/org.modelix.modelql.core/-with-index-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.WithIndexStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.ZipElementAccessStep.toString","location":"modelql-core/org.modelix.modelql.core/-zip-element-access-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.ZipElementAccessStep.toString"]},{"name":"open override fun toString(): String","description":"org.modelix.modelql.core.ZipStep.toString","location":"modelql-core/org.modelix.modelql.core/-zip-step/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.modelql.core.ZipStep.toString"]},{"name":"open override fun transform(evaluationContext: QueryEvaluationContext, input: Any?): String?","description":"org.modelix.modelql.core.ToStringStep.transform","location":"modelql-core/org.modelix.modelql.core/-to-string-step/transform.html","searchKeys":["transform","open override fun transform(evaluationContext: QueryEvaluationContext, input: Any?): String?","org.modelix.modelql.core.ToStringStep.transform"]},{"name":"open override fun transform(evaluationContext: QueryEvaluationContext, input: Boolean): Boolean","description":"org.modelix.modelql.core.NotOperatorStep.transform","location":"modelql-core/org.modelix.modelql.core/-not-operator-step/transform.html","searchKeys":["transform","open override fun transform(evaluationContext: QueryEvaluationContext, input: Boolean): Boolean","org.modelix.modelql.core.NotOperatorStep.transform"]},{"name":"open override fun transform(evaluationContext: QueryEvaluationContext, input: Collection<*>): Int","description":"org.modelix.modelql.core.CollectionSizeStep.transform","location":"modelql-core/org.modelix.modelql.core/-collection-size-step/transform.html","searchKeys":["transform","open override fun transform(evaluationContext: QueryEvaluationContext, input: Collection<*>): Int","org.modelix.modelql.core.CollectionSizeStep.transform"]},{"name":"open override fun transform(evaluationContext: QueryEvaluationContext, input: IZipOutput<Boolean>): Boolean","description":"org.modelix.modelql.core.AndOperatorStep.transform","location":"modelql-core/org.modelix.modelql.core/-and-operator-step/transform.html","searchKeys":["transform","open override fun transform(evaluationContext: QueryEvaluationContext, input: IZipOutput<Boolean>): Boolean","org.modelix.modelql.core.AndOperatorStep.transform"]},{"name":"open override fun transform(evaluationContext: QueryEvaluationContext, input: IZipOutput<Boolean>): Boolean","description":"org.modelix.modelql.core.OrOperatorStep.transform","location":"modelql-core/org.modelix.modelql.core/-or-operator-step/transform.html","searchKeys":["transform","open override fun transform(evaluationContext: QueryEvaluationContext, input: IZipOutput<Boolean>): Boolean","org.modelix.modelql.core.OrOperatorStep.transform"]},{"name":"open override fun transform(evaluationContext: QueryEvaluationContext, input: In): Boolean","description":"org.modelix.modelql.core.IsNullPredicateStep.transform","location":"modelql-core/org.modelix.modelql.core/-is-null-predicate-step/transform.html","searchKeys":["transform","open override fun transform(evaluationContext: QueryEvaluationContext, input: In): Boolean","org.modelix.modelql.core.IsNullPredicateStep.transform"]},{"name":"open override fun transform(evaluationContext: QueryEvaluationContext, input: Int): Int","description":"org.modelix.modelql.core.IntSumStep.transform","location":"modelql-core/org.modelix.modelql.core/-int-sum-step/transform.html","searchKeys":["transform","open override fun transform(evaluationContext: QueryEvaluationContext, input: Int): Int","org.modelix.modelql.core.IntSumStep.transform"]},{"name":"open override fun transform(evaluationContext: QueryEvaluationContext, input: String?): Boolean","description":"org.modelix.modelql.core.RegexPredicate.transform","location":"modelql-core/org.modelix.modelql.core/-regex-predicate/transform.html","searchKeys":["transform","open override fun transform(evaluationContext: QueryEvaluationContext, input: String?): Boolean","org.modelix.modelql.core.RegexPredicate.transform"]},{"name":"open override fun transform(evaluationContext: QueryEvaluationContext, input: String?): Boolean","description":"org.modelix.modelql.core.StringContainsPredicate.transform","location":"modelql-core/org.modelix.modelql.core/-string-contains-predicate/transform.html","searchKeys":["transform","open override fun transform(evaluationContext: QueryEvaluationContext, input: String?): Boolean","org.modelix.modelql.core.StringContainsPredicate.transform"]},{"name":"open override fun transform(evaluationContext: QueryEvaluationContext, input: String?): Boolean","description":"org.modelix.modelql.core.StringToBooleanStep.transform","location":"modelql-core/org.modelix.modelql.core/-string-to-boolean-step/transform.html","searchKeys":["transform","open override fun transform(evaluationContext: QueryEvaluationContext, input: String?): Boolean","org.modelix.modelql.core.StringToBooleanStep.transform"]},{"name":"open override fun transform(evaluationContext: QueryEvaluationContext, input: String?): Int","description":"org.modelix.modelql.core.StringToIntStep.transform","location":"modelql-core/org.modelix.modelql.core/-string-to-int-step/transform.html","searchKeys":["transform","open override fun transform(evaluationContext: QueryEvaluationContext, input: String?): Int","org.modelix.modelql.core.StringToIntStep.transform"]},{"name":"open override fun validate()","description":"org.modelix.modelql.core.FilteringStep.validate","location":"modelql-core/org.modelix.modelql.core/-filtering-step/validate.html","searchKeys":["validate","open override fun validate()","org.modelix.modelql.core.FilteringStep.validate"]},{"name":"open override fun validate()","description":"org.modelix.modelql.core.MappingStep.validate","location":"modelql-core/org.modelix.modelql.core/-mapping-step/validate.html","searchKeys":["validate","open override fun validate()","org.modelix.modelql.core.MappingStep.validate"]},{"name":"open override fun validate()","description":"org.modelix.modelql.core.TransformingStep.validate","location":"modelql-core/org.modelix.modelql.core/-transforming-step/validate.html","searchKeys":["validate","open override fun validate()","org.modelix.modelql.core.TransformingStep.validate"]},{"name":"open override fun validate()","description":"org.modelix.modelql.core.TransformingStepWithParameter.validate","location":"modelql-core/org.modelix.modelql.core/-transforming-step-with-parameter/validate.html","searchKeys":["validate","open override fun validate()","org.modelix.modelql.core.TransformingStepWithParameter.validate"]},{"name":"open override fun validate()","description":"org.modelix.modelql.core.ZipStep.validate","location":"modelql-core/org.modelix.modelql.core/-zip-step/validate.html","searchKeys":["validate","open override fun validate()","org.modelix.modelql.core.ZipStep.validate"]},{"name":"open override val coroutineScope: CoroutineScope?","description":"org.modelix.modelql.core.FlowInstantiationContext.coroutineScope","location":"modelql-core/org.modelix.modelql.core/-flow-instantiation-context/coroutine-scope.html","searchKeys":["coroutineScope","open override val coroutineScope: CoroutineScope?","org.modelix.modelql.core.FlowInstantiationContext.coroutineScope"]},{"name":"open override val coroutineScope: CoroutineScope?","description":"org.modelix.modelql.core.SinglePathFlowInstantiationContext.coroutineScope","location":"modelql-core/org.modelix.modelql.core/-single-path-flow-instantiation-context/coroutine-scope.html","searchKeys":["coroutineScope","open override val coroutineScope: CoroutineScope?","org.modelix.modelql.core.SinglePathFlowInstantiationContext.coroutineScope"]},{"name":"open override val descriptor: SerialDescriptor","description":"org.modelix.modelql.core.CollectorStepOutputSerializer.descriptor","location":"modelql-core/org.modelix.modelql.core/-collector-step-output-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","org.modelix.modelql.core.CollectorStepOutputSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"org.modelix.modelql.core.ConstantSourceStep.Descriptor.Serializer.descriptor","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/-descriptor/-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","org.modelix.modelql.core.ConstantSourceStep.Descriptor.Serializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"org.modelix.modelql.core.LocalMappingSerializer.descriptor","location":"modelql-core/org.modelix.modelql.core/-local-mapping-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","org.modelix.modelql.core.LocalMappingSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"org.modelix.modelql.core.MultiplexedOutputSerializer.descriptor","location":"modelql-core/org.modelix.modelql.core/-multiplexed-output-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","org.modelix.modelql.core.MultiplexedOutputSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"org.modelix.modelql.core.RecursiveQuerySerializer.descriptor","location":"modelql-core/org.modelix.modelql.core/-recursive-query-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","org.modelix.modelql.core.RecursiveQuerySerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"org.modelix.modelql.core.SimpleStepOutputSerializer.descriptor","location":"modelql-core/org.modelix.modelql.core/-simple-step-output-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","org.modelix.modelql.core.SimpleStepOutputSerializer.descriptor"]},{"name":"open override val descriptor: SerialDescriptor","description":"org.modelix.modelql.core.ZipOutputSerializer.descriptor","location":"modelql-core/org.modelix.modelql.core/-zip-output-serializer/descriptor.html","searchKeys":["descriptor","open override val descriptor: SerialDescriptor","org.modelix.modelql.core.ZipOutputSerializer.descriptor"]},{"name":"open override val eighth: E8","description":"org.modelix.modelql.core.ZipOutput.eighth","location":"modelql-core/org.modelix.modelql.core/-zip-output/eighth.html","searchKeys":["eighth","open override val eighth: E8","org.modelix.modelql.core.ZipOutput.eighth"]},{"name":"open override val evaluationContext: QueryEvaluationContext","description":"org.modelix.modelql.core.SinglePathFlowInstantiationContext.evaluationContext","location":"modelql-core/org.modelix.modelql.core/-single-path-flow-instantiation-context/evaluation-context.html","searchKeys":["evaluationContext","open override val evaluationContext: QueryEvaluationContext","org.modelix.modelql.core.SinglePathFlowInstantiationContext.evaluationContext"]},{"name":"open override val fifth: E5","description":"org.modelix.modelql.core.ZipOutput.fifth","location":"modelql-core/org.modelix.modelql.core/-zip-output/fifth.html","searchKeys":["fifth","open override val fifth: E5","org.modelix.modelql.core.ZipOutput.fifth"]},{"name":"open override val first: E1","description":"org.modelix.modelql.core.ZipOutput.first","location":"modelql-core/org.modelix.modelql.core/-zip-output/first.html","searchKeys":["first","open override val first: E1","org.modelix.modelql.core.ZipOutput.first"]},{"name":"open override val fourth: E4","description":"org.modelix.modelql.core.ZipOutput.fourth","location":"modelql-core/org.modelix.modelql.core/-zip-output/fourth.html","searchKeys":["fourth","open override val fourth: E4","org.modelix.modelql.core.ZipOutput.fourth"]},{"name":"open override val input: QueryInput<E>","description":"org.modelix.modelql.core.FragmentBuilder.input","location":"modelql-core/org.modelix.modelql.core/-fragment-builder/input.html","searchKeys":["input","open override val input: QueryInput<E>","org.modelix.modelql.core.FragmentBuilder.input"]},{"name":"open override val ninth: E9","description":"org.modelix.modelql.core.ZipOutput.ninth","location":"modelql-core/org.modelix.modelql.core/-zip-output/ninth.html","searchKeys":["ninth","open override val ninth: E9","org.modelix.modelql.core.ZipOutput.ninth"]},{"name":"open override val outputStep: IFluxStep<ElementOut>","description":"org.modelix.modelql.core.FluxUnboundQuery.outputStep","location":"modelql-core/org.modelix.modelql.core/-flux-unbound-query/output-step.html","searchKeys":["outputStep","open override val outputStep: IFluxStep<ElementOut>","org.modelix.modelql.core.FluxUnboundQuery.outputStep"]},{"name":"open override val outputStep: IMonoStep<ElementOut>","description":"org.modelix.modelql.core.MonoUnboundQuery.outputStep","location":"modelql-core/org.modelix.modelql.core/-mono-unbound-query/output-step.html","searchKeys":["outputStep","open override val outputStep: IMonoStep<ElementOut>","org.modelix.modelql.core.MonoUnboundQuery.outputStep"]},{"name":"open override val owner: QueryReference<*>","description":"org.modelix.modelql.core.ProducingStep.owner","location":"modelql-core/org.modelix.modelql.core/-producing-step/owner.html","searchKeys":["owner","open override val owner: QueryReference<*>","org.modelix.modelql.core.ProducingStep.owner"]},{"name":"open override val query: Q","description":"org.modelix.modelql.core.QueryReference.query","location":"modelql-core/org.modelix.modelql.core/-query-reference/query.html","searchKeys":["query","open override val query: Q","org.modelix.modelql.core.QueryReference.query"]},{"name":"open override val queryReference: QueryReference<IMonoUnboundQuery<E, IZipOutput<*>>>","description":"org.modelix.modelql.core.FragmentBuilder.queryReference","location":"modelql-core/org.modelix.modelql.core/-fragment-builder/query-reference.html","searchKeys":["queryReference","open override val queryReference: QueryReference<IMonoUnboundQuery<E, IZipOutput<*>>>","org.modelix.modelql.core.FragmentBuilder.queryReference"]},{"name":"open override val reference: QueryReference<UnboundQuery<In, AggregationOut, ElementOut>>","description":"org.modelix.modelql.core.UnboundQuery.reference","location":"modelql-core/org.modelix.modelql.core/-unbound-query/reference.html","searchKeys":["reference","open override val reference: QueryReference<UnboundQuery<In, AggregationOut, ElementOut>>","org.modelix.modelql.core.UnboundQuery.reference"]},{"name":"open override val second: E2","description":"org.modelix.modelql.core.ZipOutput.second","location":"modelql-core/org.modelix.modelql.core/-zip-output/second.html","searchKeys":["second","open override val second: E2","org.modelix.modelql.core.ZipOutput.second"]},{"name":"open override val seventh: E7","description":"org.modelix.modelql.core.ZipOutput.seventh","location":"modelql-core/org.modelix.modelql.core/-zip-output/seventh.html","searchKeys":["seventh","open override val seventh: E7","org.modelix.modelql.core.ZipOutput.seventh"]},{"name":"open override val sixth: E6","description":"org.modelix.modelql.core.ZipOutput.sixth","location":"modelql-core/org.modelix.modelql.core/-zip-output/sixth.html","searchKeys":["sixth","open override val sixth: E6","org.modelix.modelql.core.ZipOutput.sixth"]},{"name":"open override val third: E3","description":"org.modelix.modelql.core.ZipOutput.third","location":"modelql-core/org.modelix.modelql.core/-zip-output/third.html","searchKeys":["third","open override val third: E3","org.modelix.modelql.core.ZipOutput.third"]},{"name":"open override val value: CollectionT","description":"org.modelix.modelql.core.CollectorStepOutput.value","location":"modelql-core/org.modelix.modelql.core/-collector-step-output/value.html","searchKeys":["value","open override val value: CollectionT","org.modelix.modelql.core.CollectorStepOutput.value"]},{"name":"open override val value: E","description":"org.modelix.modelql.core.MultiplexedOutput.value","location":"modelql-core/org.modelix.modelql.core/-multiplexed-output/value.html","searchKeys":["value","open override val value: E","org.modelix.modelql.core.MultiplexedOutput.value"]},{"name":"open override val value: E","description":"org.modelix.modelql.core.SimpleStepOutput.value","location":"modelql-core/org.modelix.modelql.core/-simple-step-output/value.html","searchKeys":["value","open override val value: E","org.modelix.modelql.core.SimpleStepOutput.value"]},{"name":"open override val value: E","description":"org.modelix.modelql.core.ZipStepOutput.value","location":"modelql-core/org.modelix.modelql.core/-zip-step-output/value.html","searchKeys":["value","open override val value: E","org.modelix.modelql.core.ZipStepOutput.value"]},{"name":"open override val values: List<Common>","description":"org.modelix.modelql.core.ZipOutput.values","location":"modelql-core/org.modelix.modelql.core/-zip-output/values.html","searchKeys":["values","open override val values: List<Common>","org.modelix.modelql.core.ZipOutput.values"]},{"name":"open override var evaluationContext: QueryEvaluationContext","description":"org.modelix.modelql.core.FlowInstantiationContext.evaluationContext","location":"modelql-core/org.modelix.modelql.core/-flow-instantiation-context/evaluation-context.html","searchKeys":["evaluationContext","open override var evaluationContext: QueryEvaluationContext","org.modelix.modelql.core.FlowInstantiationContext.evaluationContext"]},{"name":"open suspend override fun execute(evaluationContext: QueryEvaluationContext, input: IStepOutput<In>): IStepOutput<ElementOut>","description":"org.modelix.modelql.core.MonoUnboundQuery.execute","location":"modelql-core/org.modelix.modelql.core/-mono-unbound-query/execute.html","searchKeys":["execute","open suspend override fun execute(evaluationContext: QueryEvaluationContext, input: IStepOutput<In>): IStepOutput<ElementOut>","org.modelix.modelql.core.MonoUnboundQuery.execute"]},{"name":"open suspend override fun execute(evaluationContext: QueryEvaluationContext, input: IStepOutput<In>): IStepOutput<List<IStepOutput<ElementOut>>>","description":"org.modelix.modelql.core.FluxUnboundQuery.execute","location":"modelql-core/org.modelix.modelql.core/-flux-unbound-query/execute.html","searchKeys":["execute","open suspend override fun execute(evaluationContext: QueryEvaluationContext, input: IStepOutput<In>): IStepOutput<List<IStepOutput<ElementOut>>>","org.modelix.modelql.core.FluxUnboundQuery.execute"]},{"name":"open val forth: E4","description":"org.modelix.modelql.core.IZip4Output.forth","location":"modelql-core/org.modelix.modelql.core/-i-zip4-output/forth.html","searchKeys":["forth","open val forth: E4","org.modelix.modelql.core.IZip4Output.forth"]},{"name":"open val outputStep: IProducingStep<ElementOut>","description":"org.modelix.modelql.core.UnboundQuery.outputStep","location":"modelql-core/org.modelix.modelql.core/-unbound-query/output-step.html","searchKeys":["outputStep","open val outputStep: IProducingStep<ElementOut>","org.modelix.modelql.core.UnboundQuery.outputStep"]},{"name":"operator fun <Common> IProducingStep<Common>.plus(other: IProducingStep<Common>): IFluxStep<Common>","description":"org.modelix.modelql.core.plus","location":"modelql-core/org.modelix.modelql.core/plus.html","searchKeys":["plus","operator fun <Common> IProducingStep<Common>.plus(other: IProducingStep<Common>): IFluxStep<Common>","org.modelix.modelql.core.plus"]},{"name":"operator fun <K, V> IMonoStep<Map<K, V>>.get(operand: IMonoStep<K>): IMonoStep<V?>","description":"org.modelix.modelql.core.get","location":"modelql-core/org.modelix.modelql.core/get.html","searchKeys":["get","operator fun <K, V> IMonoStep<Map<K, V>>.get(operand: IMonoStep<K>): IMonoStep<V?>","org.modelix.modelql.core.get"]},{"name":"operator fun <T> IMonoStep<IZip1Output<*, T>>.component1(): IMonoStep<T>","description":"org.modelix.modelql.core.component1","location":"modelql-core/org.modelix.modelql.core/component1.html","searchKeys":["component1","operator fun <T> IMonoStep<IZip1Output<*, T>>.component1(): IMonoStep<T>","org.modelix.modelql.core.component1"]},{"name":"operator fun <T> IMonoStep<IZip2Output<*, *, T>>.component2(): IMonoStep<T>","description":"org.modelix.modelql.core.component2","location":"modelql-core/org.modelix.modelql.core/component2.html","searchKeys":["component2","operator fun <T> IMonoStep<IZip2Output<*, *, T>>.component2(): IMonoStep<T>","org.modelix.modelql.core.component2"]},{"name":"operator fun <T> IMonoStep<IZip3Output<*, *, *, T>>.component3(): IMonoStep<T>","description":"org.modelix.modelql.core.component3","location":"modelql-core/org.modelix.modelql.core/component3.html","searchKeys":["component3","operator fun <T> IMonoStep<IZip3Output<*, *, *, T>>.component3(): IMonoStep<T>","org.modelix.modelql.core.component3"]},{"name":"operator fun <T> IMonoStep<IZip4Output<*, *, *, *, T>>.component4(): IMonoStep<T>","description":"org.modelix.modelql.core.component4","location":"modelql-core/org.modelix.modelql.core/component4.html","searchKeys":["component4","operator fun <T> IMonoStep<IZip4Output<*, *, *, *, T>>.component4(): IMonoStep<T>","org.modelix.modelql.core.component4"]},{"name":"operator fun <T> IMonoStep<IZip5Output<*, *, *, *, *, T>>.component5(): IMonoStep<T>","description":"org.modelix.modelql.core.component5","location":"modelql-core/org.modelix.modelql.core/component5.html","searchKeys":["component5","operator fun <T> IMonoStep<IZip5Output<*, *, *, *, *, T>>.component5(): IMonoStep<T>","org.modelix.modelql.core.component5"]},{"name":"operator fun <T> IMonoStep<IZip6Output<*, *, *, *, *, *, T>>.component6(): IMonoStep<T>","description":"org.modelix.modelql.core.component6","location":"modelql-core/org.modelix.modelql.core/component6.html","searchKeys":["component6","operator fun <T> IMonoStep<IZip6Output<*, *, *, *, *, *, T>>.component6(): IMonoStep<T>","org.modelix.modelql.core.component6"]},{"name":"operator fun <T> IMonoStep<IZip7Output<*, *, *, *, *, *, *, T>>.component7(): IMonoStep<T>","description":"org.modelix.modelql.core.component7","location":"modelql-core/org.modelix.modelql.core/component7.html","searchKeys":["component7","operator fun <T> IMonoStep<IZip7Output<*, *, *, *, *, *, *, T>>.component7(): IMonoStep<T>","org.modelix.modelql.core.component7"]},{"name":"operator fun <T> IMonoStep<IZip8Output<*, *, *, *, *, *, *, *, T>>.component8(): IMonoStep<T>","description":"org.modelix.modelql.core.component8","location":"modelql-core/org.modelix.modelql.core/component8.html","searchKeys":["component8","operator fun <T> IMonoStep<IZip8Output<*, *, *, *, *, *, *, *, T>>.component8(): IMonoStep<T>","org.modelix.modelql.core.component8"]},{"name":"operator fun <T> IMonoStep<IZip9Output<*, *, *, *, *, *, *, *, *, T>>.component9(): IMonoStep<T>","description":"org.modelix.modelql.core.component9","location":"modelql-core/org.modelix.modelql.core/component9.html","searchKeys":["component9","operator fun <T> IMonoStep<IZip9Output<*, *, *, *, *, *, *, *, *, T>>.component9(): IMonoStep<T>","org.modelix.modelql.core.component9"]},{"name":"operator fun <T> IZip1Output<*, T>.component1(): T","description":"org.modelix.modelql.core.component1","location":"modelql-core/org.modelix.modelql.core/component1.html","searchKeys":["component1","operator fun <T> IZip1Output<*, T>.component1(): T","org.modelix.modelql.core.component1"]},{"name":"operator fun <T> IZip2Output<*, *, T>.component2(): T","description":"org.modelix.modelql.core.component2","location":"modelql-core/org.modelix.modelql.core/component2.html","searchKeys":["component2","operator fun <T> IZip2Output<*, *, T>.component2(): T","org.modelix.modelql.core.component2"]},{"name":"operator fun <T> IZip3Output<*, *, *, T>.component3(): T","description":"org.modelix.modelql.core.component3","location":"modelql-core/org.modelix.modelql.core/component3.html","searchKeys":["component3","operator fun <T> IZip3Output<*, *, *, T>.component3(): T","org.modelix.modelql.core.component3"]},{"name":"operator fun <T> IZip4Output<*, *, *, *, T>.component4(): T","description":"org.modelix.modelql.core.component4","location":"modelql-core/org.modelix.modelql.core/component4.html","searchKeys":["component4","operator fun <T> IZip4Output<*, *, *, *, T>.component4(): T","org.modelix.modelql.core.component4"]},{"name":"operator fun <T> IZip5Output<*, *, *, *, *, T>.component5(): T","description":"org.modelix.modelql.core.component5","location":"modelql-core/org.modelix.modelql.core/component5.html","searchKeys":["component5","operator fun <T> IZip5Output<*, *, *, *, *, T>.component5(): T","org.modelix.modelql.core.component5"]},{"name":"operator fun <T> IZip6Output<*, *, *, *, *, *, T>.component6(): T","description":"org.modelix.modelql.core.component6","location":"modelql-core/org.modelix.modelql.core/component6.html","searchKeys":["component6","operator fun <T> IZip6Output<*, *, *, *, *, *, T>.component6(): T","org.modelix.modelql.core.component6"]},{"name":"operator fun <T> IZip7Output<*, *, *, *, *, *, *, T>.component7(): T","description":"org.modelix.modelql.core.component7","location":"modelql-core/org.modelix.modelql.core/component7.html","searchKeys":["component7","operator fun <T> IZip7Output<*, *, *, *, *, *, *, T>.component7(): T","org.modelix.modelql.core.component7"]},{"name":"operator fun <T> IZip8Output<*, *, *, *, *, *, *, *, T>.component8(): T","description":"org.modelix.modelql.core.component8","location":"modelql-core/org.modelix.modelql.core/component8.html","searchKeys":["component8","operator fun <T> IZip8Output<*, *, *, *, *, *, *, *, T>.component8(): T","org.modelix.modelql.core.component8"]},{"name":"operator fun <T> IZip9Output<*, *, *, *, *, *, *, *, *, T>.component9(): T","description":"org.modelix.modelql.core.component9","location":"modelql-core/org.modelix.modelql.core/component9.html","searchKeys":["component9","operator fun <T> IZip9Output<*, *, *, *, *, *, *, *, *, T>.component9(): T","org.modelix.modelql.core.component9"]},{"name":"operator fun <T> plus(entry: Pair<IProducingStep<T>, List<IStepOutput<T>>>): QueryEvaluationContext","description":"org.modelix.modelql.core.QueryEvaluationContext.plus","location":"modelql-core/org.modelix.modelql.core/-query-evaluation-context/plus.html","searchKeys":["plus","operator fun <T> plus(entry: Pair<IProducingStep<T>, List<IStepOutput<T>>>): QueryEvaluationContext","org.modelix.modelql.core.QueryEvaluationContext.plus"]},{"name":"operator fun <T> plus(queryInputSerializer: Pair<QueryInput<T>, KSerializer<out IStepOutput<T>>>): SerializationContext","description":"org.modelix.modelql.core.SerializationContext.plus","location":"modelql-core/org.modelix.modelql.core/-serialization-context/plus.html","searchKeys":["plus","operator fun <T> plus(queryInputSerializer: Pair<QueryInput<T>, KSerializer<out IStepOutput<T>>>): SerializationContext","org.modelix.modelql.core.SerializationContext.plus"]},{"name":"operator fun IFluxStep<Int>.plus(other: Int): IFluxStep<Int>","description":"org.modelix.modelql.core.plus","location":"modelql-core/org.modelix.modelql.core/plus.html","searchKeys":["plus","operator fun IFluxStep<Int>.plus(other: Int): IFluxStep<Int>","org.modelix.modelql.core.plus"]},{"name":"operator fun IMonoStep<Boolean>.not(): IMonoStep<Boolean>","description":"org.modelix.modelql.core.not","location":"modelql-core/org.modelix.modelql.core/not.html","searchKeys":["not","operator fun IMonoStep<Boolean>.not(): IMonoStep<Boolean>","org.modelix.modelql.core.not"]},{"name":"operator fun IMonoStep<Int>.plus(other: Int): IMonoStep<Int>","description":"org.modelix.modelql.core.plus","location":"modelql-core/org.modelix.modelql.core/plus.html","searchKeys":["plus","operator fun IMonoStep<Int>.plus(other: Int): IMonoStep<Int>","org.modelix.modelql.core.plus"]},{"name":"operator fun Int.plus(other: IFluxStep<Int>): IFluxStep<Int>","description":"org.modelix.modelql.core.plus","location":"modelql-core/org.modelix.modelql.core/plus.html","searchKeys":["plus","operator fun Int.plus(other: IFluxStep<Int>): IFluxStep<Int>","org.modelix.modelql.core.plus"]},{"name":"operator fun Int.plus(other: IMonoStep<Int>): IMonoStep<Int>","description":"org.modelix.modelql.core.plus","location":"modelql-core/org.modelix.modelql.core/plus.html","searchKeys":["plus","operator fun Int.plus(other: IMonoStep<Int>): IMonoStep<Int>","org.modelix.modelql.core.plus"]},{"name":"operator fun get(index: Int): Common","description":"org.modelix.modelql.core.ZipOutput.get","location":"modelql-core/org.modelix.modelql.core/-zip-output/get.html","searchKeys":["get","operator fun get(index: Int): Common","org.modelix.modelql.core.ZipOutput.get"]},{"name":"operator fun plus(other: QueryEvaluationContext): QueryEvaluationContext","description":"org.modelix.modelql.core.QueryEvaluationContext.plus","location":"modelql-core/org.modelix.modelql.core/-query-evaluation-context/plus.html","searchKeys":["plus","operator fun plus(other: QueryEvaluationContext): QueryEvaluationContext","org.modelix.modelql.core.QueryEvaluationContext.plus"]},{"name":"sealed class CoreStepDescriptor : StepDescriptor","description":"org.modelix.modelql.core.CoreStepDescriptor","location":"modelql-core/org.modelix.modelql.core/-core-step-descriptor/index.html","searchKeys":["CoreStepDescriptor","sealed class CoreStepDescriptor : StepDescriptor","org.modelix.modelql.core.CoreStepDescriptor"]},{"name":"suspend fun <In, Out> IMonoUnboundQuery<In, Out>.evaluate(evaluationContext: QueryEvaluationContext, input: In): Optional<Out>","description":"org.modelix.modelql.core.evaluate","location":"modelql-core/org.modelix.modelql.core/evaluate.html","searchKeys":["evaluate","suspend fun <In, Out> IMonoUnboundQuery<In, Out>.evaluate(evaluationContext: QueryEvaluationContext, input: In): Optional<Out>","org.modelix.modelql.core.evaluate"]},{"name":"suspend fun <T> Flow<T>.asSequence(): Sequence<T>","description":"org.modelix.modelql.core.asSequence","location":"modelql-core/org.modelix.modelql.core/as-sequence.html","searchKeys":["asSequence","suspend fun <T> Flow<T>.asSequence(): Sequence<T>","org.modelix.modelql.core.asSequence"]},{"name":"suspend fun <T> Flow<T>.optionalSingle(): Optional<T>","description":"org.modelix.modelql.core.optionalSingle","location":"modelql-core/org.modelix.modelql.core/optional-single.html","searchKeys":["optionalSingle","suspend fun <T> Flow<T>.optionalSingle(): Optional<T>","org.modelix.modelql.core.optionalSingle"]},{"name":"typealias BulkRequestCallback<ResultT> = (Result<ResultT>) -> Unit","description":"org.modelix.modelql.core.BulkRequestCallback","location":"modelql-core/org.modelix.modelql.core/-bulk-request-callback/index.html","searchKeys":["BulkRequestCallback","typealias BulkRequestCallback<ResultT> = (Result<ResultT>) -> Unit","org.modelix.modelql.core.BulkRequestCallback"]},{"name":"typealias FragmentBody<ContextT> = ContextT.() -> Unit","description":"org.modelix.modelql.core.FragmentBody","location":"modelql-core/org.modelix.modelql.core/-fragment-body/index.html","searchKeys":["FragmentBody","typealias FragmentBody<ContextT> = ContextT.() -> Unit","org.modelix.modelql.core.FragmentBody"]},{"name":"typealias IRequestedFragment<Context> = IValueRequest<IBoundFragment<Context>>","description":"org.modelix.modelql.core.IRequestedFragment","location":"modelql-core/org.modelix.modelql.core/-i-requested-fragment/index.html","searchKeys":["IRequestedFragment","typealias IRequestedFragment<Context> = IValueRequest<IBoundFragment<Context>>","org.modelix.modelql.core.IRequestedFragment"]},{"name":"typealias IWithIndex<V> = IZip2Output<Any?, V, Int>","description":"org.modelix.modelql.core.IWithIndex","location":"modelql-core/org.modelix.modelql.core/-i-with-index/index.html","searchKeys":["IWithIndex","typealias IWithIndex<V> = IZip2Output<Any?, V, Int>","org.modelix.modelql.core.IWithIndex"]},{"name":"typealias QueryId = Long","description":"org.modelix.modelql.core.QueryId","location":"modelql-core/org.modelix.modelql.core/-query-id/index.html","searchKeys":["QueryId","typealias QueryId = Long","org.modelix.modelql.core.QueryId"]},{"name":"typealias StepFlow<E> = Flow<IStepOutput<E>>","description":"org.modelix.modelql.core.StepFlow","location":"modelql-core/org.modelix.modelql.core/-step-flow/index.html","searchKeys":["StepFlow","typealias StepFlow<E> = Flow<IStepOutput<E>>","org.modelix.modelql.core.StepFlow"]},{"name":"typealias ZipNOutput = ZipOutput<Any?, Any?, Any?, Any?, Any?, Any?, Any?, Any?, Any?, Any?>","description":"org.modelix.modelql.core.ZipNOutput","location":"modelql-core/org.modelix.modelql.core/-zip-n-output/index.html","searchKeys":["ZipNOutput","typealias ZipNOutput = ZipOutput<Any?, Any?, Any?, Any?, Any?, Any?, Any?, Any?, Any?, Any?>","org.modelix.modelql.core.ZipNOutput"]},{"name":"typealias ZipNOutputC<Common> = ZipOutput<Common, Any?, Any?, Any?, Any?, Any?, Any?, Any?, Any?, Any?>","description":"org.modelix.modelql.core.ZipNOutputC","location":"modelql-core/org.modelix.modelql.core/-zip-n-output-c/index.html","searchKeys":["ZipNOutputC","typealias ZipNOutputC<Common> = ZipOutput<Common, Any?, Any?, Any?, Any?, Any?, Any?, Any?, Any?, Any?>","org.modelix.modelql.core.ZipNOutputC"]},{"name":"val <T> Flow<IStepOutput<T>>.value: Flow<T>","description":"org.modelix.modelql.core.value","location":"modelql-core/org.modelix.modelql.core/value.html","searchKeys":["value","val <T> Flow<IStepOutput<T>>.value: Flow<T>","org.modelix.modelql.core.value"]},{"name":"val <T> IMonoStep<IWithIndex<T>>.value: IMonoStep<T>","description":"org.modelix.modelql.core.value","location":"modelql-core/org.modelix.modelql.core/value.html","searchKeys":["value","val <T> IMonoStep<IWithIndex<T>>.value: IMonoStep<T>","org.modelix.modelql.core.value"]},{"name":"val <T> IMonoStep<IZip1Output<*, T>>.first: IMonoStep<T>","description":"org.modelix.modelql.core.first","location":"modelql-core/org.modelix.modelql.core/first.html","searchKeys":["first","val <T> IMonoStep<IZip1Output<*, T>>.first: IMonoStep<T>","org.modelix.modelql.core.first"]},{"name":"val <T> IMonoStep<IZip2Output<*, *, T>>.second: IMonoStep<T>","description":"org.modelix.modelql.core.second","location":"modelql-core/org.modelix.modelql.core/second.html","searchKeys":["second","val <T> IMonoStep<IZip2Output<*, *, T>>.second: IMonoStep<T>","org.modelix.modelql.core.second"]},{"name":"val <T> IMonoStep<IZip3Output<*, *, *, T>>.third: IMonoStep<T>","description":"org.modelix.modelql.core.third","location":"modelql-core/org.modelix.modelql.core/third.html","searchKeys":["third","val <T> IMonoStep<IZip3Output<*, *, *, T>>.third: IMonoStep<T>","org.modelix.modelql.core.third"]},{"name":"val <T> IMonoStep<IZip4Output<*, *, *, *, T>>.forth: IMonoStep<T>","description":"org.modelix.modelql.core.forth","location":"modelql-core/org.modelix.modelql.core/forth.html","searchKeys":["forth","val <T> IMonoStep<IZip4Output<*, *, *, *, T>>.forth: IMonoStep<T>","org.modelix.modelql.core.forth"]},{"name":"val <T> IMonoStep<IZip4Output<*, *, *, *, T>>.fourth: IMonoStep<T>","description":"org.modelix.modelql.core.fourth","location":"modelql-core/org.modelix.modelql.core/fourth.html","searchKeys":["fourth","val <T> IMonoStep<IZip4Output<*, *, *, *, T>>.fourth: IMonoStep<T>","org.modelix.modelql.core.fourth"]},{"name":"val <T> IMonoStep<IZip5Output<*, *, *, *, *, T>>.fifth: IMonoStep<T>","description":"org.modelix.modelql.core.fifth","location":"modelql-core/org.modelix.modelql.core/fifth.html","searchKeys":["fifth","val <T> IMonoStep<IZip5Output<*, *, *, *, *, T>>.fifth: IMonoStep<T>","org.modelix.modelql.core.fifth"]},{"name":"val <T> IMonoStep<IZip6Output<*, *, *, *, *, *, T>>.sixth: IMonoStep<T>","description":"org.modelix.modelql.core.sixth","location":"modelql-core/org.modelix.modelql.core/sixth.html","searchKeys":["sixth","val <T> IMonoStep<IZip6Output<*, *, *, *, *, *, T>>.sixth: IMonoStep<T>","org.modelix.modelql.core.sixth"]},{"name":"val <T> IMonoStep<IZip7Output<*, *, *, *, *, *, *, T>>.seventh: IMonoStep<T>","description":"org.modelix.modelql.core.seventh","location":"modelql-core/org.modelix.modelql.core/seventh.html","searchKeys":["seventh","val <T> IMonoStep<IZip7Output<*, *, *, *, *, *, *, T>>.seventh: IMonoStep<T>","org.modelix.modelql.core.seventh"]},{"name":"val <T> IMonoStep<IZip8Output<*, *, *, *, *, *, *, *, T>>.eighth: IMonoStep<T>","description":"org.modelix.modelql.core.eighth","location":"modelql-core/org.modelix.modelql.core/eighth.html","searchKeys":["eighth","val <T> IMonoStep<IZip8Output<*, *, *, *, *, *, *, *, T>>.eighth: IMonoStep<T>","org.modelix.modelql.core.eighth"]},{"name":"val <T> IMonoStep<IZip9Output<*, *, *, *, *, *, *, *, *, T>>.ninth: IMonoStep<T>","description":"org.modelix.modelql.core.ninth","location":"modelql-core/org.modelix.modelql.core/ninth.html","searchKeys":["ninth","val <T> IMonoStep<IZip9Output<*, *, *, *, *, *, *, *, *, T>>.ninth: IMonoStep<T>","org.modelix.modelql.core.ninth"]},{"name":"val CONTEXT_VALUE: ContextValue<QueryBuilderContext<*, *, *>>","description":"org.modelix.modelql.core.QueryBuilderContext.Companion.CONTEXT_VALUE","location":"modelql-core/org.modelix.modelql.core/-query-builder-context/-companion/-c-o-n-t-e-x-t_-v-a-l-u-e.html","searchKeys":["CONTEXT_VALUE","val CONTEXT_VALUE: ContextValue<QueryBuilderContext<*, *, *>>","org.modelix.modelql.core.QueryBuilderContext.Companion.CONTEXT_VALUE"]},{"name":"val CONTEXT_VALUE: ContextValue<QueryReference<*>>","description":"org.modelix.modelql.core.QueryReference.Companion.CONTEXT_VALUE","location":"modelql-core/org.modelix.modelql.core/-query-reference/-companion/-c-o-n-t-e-x-t_-v-a-l-u-e.html","searchKeys":["CONTEXT_VALUE","val CONTEXT_VALUE: ContextValue<QueryReference<*>>","org.modelix.modelql.core.QueryReference.Companion.CONTEXT_VALUE"]},{"name":"val EMPTY: QueryEvaluationContext","description":"org.modelix.modelql.core.QueryEvaluationContext.Companion.EMPTY","location":"modelql-core/org.modelix.modelql.core/-query-evaluation-context/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: QueryEvaluationContext","org.modelix.modelql.core.QueryEvaluationContext.Companion.EMPTY"]},{"name":"val IMonoStep<IWithIndex<*>>.index: IMonoStep<Int>","description":"org.modelix.modelql.core.index","location":"modelql-core/org.modelix.modelql.core/--index--.html","searchKeys":["index","val IMonoStep<IWithIndex<*>>.index: IMonoStep<Int>","org.modelix.modelql.core.index"]},{"name":"val alternative: QueryId","description":"org.modelix.modelql.core.IfEmptyStep.Descriptor.alternative","location":"modelql-core/org.modelix.modelql.core/-if-empty-step/-descriptor/alternative.html","searchKeys":["alternative","val alternative: QueryId","org.modelix.modelql.core.IfEmptyStep.Descriptor.alternative"]},{"name":"val alternative: UnboundQuery<Unit, *, Out>","description":"org.modelix.modelql.core.IfEmptyStep.alternative","location":"modelql-core/org.modelix.modelql.core/-if-empty-step/alternative.html","searchKeys":["alternative","val alternative: UnboundQuery<Unit, *, Out>","org.modelix.modelql.core.IfEmptyStep.alternative"]},{"name":"val cases: List<Pair<IMonoUnboundQuery<In, Boolean?>, IMonoUnboundQuery<In, Out>>>","description":"org.modelix.modelql.core.WhenStep.cases","location":"modelql-core/org.modelix.modelql.core/-when-step/cases.html","searchKeys":["cases","val cases: List<Pair<IMonoUnboundQuery<In, Boolean?>, IMonoUnboundQuery<In, Out>>>","org.modelix.modelql.core.WhenStep.cases"]},{"name":"val cases: List<Pair<QueryId, QueryId>>","description":"org.modelix.modelql.core.WhenStep.Descriptor.cases","location":"modelql-core/org.modelix.modelql.core/-when-step/-descriptor/cases.html","searchKeys":["cases","val cases: List<Pair<QueryId, QueryId>>","org.modelix.modelql.core.WhenStep.Descriptor.cases"]},{"name":"val condition: IMonoUnboundQuery<In, Boolean?>","description":"org.modelix.modelql.core.WhenStepBuilder.CaseBuilder.condition","location":"modelql-core/org.modelix.modelql.core/-when-step-builder/-case-builder/condition.html","searchKeys":["condition","val condition: IMonoUnboundQuery<In, Boolean?>","org.modelix.modelql.core.WhenStepBuilder.CaseBuilder.condition"]},{"name":"val condition: MonoUnboundQuery<E, Boolean?>","description":"org.modelix.modelql.core.FilteringStep.condition","location":"modelql-core/org.modelix.modelql.core/-filtering-step/condition.html","searchKeys":["condition","val condition: MonoUnboundQuery<E, Boolean?>","org.modelix.modelql.core.FilteringStep.condition"]},{"name":"val connections: List<PortConnection>","description":"org.modelix.modelql.core.QueryGraphDescriptor.connections","location":"modelql-core/org.modelix.modelql.core/-query-graph-descriptor/connections.html","searchKeys":["connections","val connections: List<PortConnection>","org.modelix.modelql.core.QueryGraphDescriptor.connections"]},{"name":"val consumer: PortReference","description":"org.modelix.modelql.core.PortConnection.consumer","location":"modelql-core/org.modelix.modelql.core/-port-connection/consumer.html","searchKeys":["consumer","val consumer: PortReference","org.modelix.modelql.core.PortConnection.consumer"]},{"name":"val count: Int","description":"org.modelix.modelql.core.DropStep.Descriptor.count","location":"modelql-core/org.modelix.modelql.core/-drop-step/-descriptor/count.html","searchKeys":["count","val count: Int","org.modelix.modelql.core.DropStep.Descriptor.count"]},{"name":"val count: Int","description":"org.modelix.modelql.core.DropStep.count","location":"modelql-core/org.modelix.modelql.core/-drop-step/count.html","searchKeys":["count","val count: Int","org.modelix.modelql.core.DropStep.count"]},{"name":"val count: Int","description":"org.modelix.modelql.core.TakeStep.Descriptor.count","location":"modelql-core/org.modelix.modelql.core/-take-step/-descriptor/count.html","searchKeys":["count","val count: Int","org.modelix.modelql.core.TakeStep.Descriptor.count"]},{"name":"val count: Int","description":"org.modelix.modelql.core.TakeStep.count","location":"modelql-core/org.modelix.modelql.core/-take-step/count.html","searchKeys":["count","val count: Int","org.modelix.modelql.core.TakeStep.count"]},{"name":"val data: E","description":"org.modelix.modelql.core.VersionAndData.data","location":"modelql-core/org.modelix.modelql.core/-version-and-data/data.html","searchKeys":["data","val data: E","org.modelix.modelql.core.VersionAndData.data"]},{"name":"val element: Any?","description":"org.modelix.modelql.core.ConstantSourceStep.Descriptor.element","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/-descriptor/element.html","searchKeys":["element","val element: Any?","org.modelix.modelql.core.ConstantSourceStep.Descriptor.element"]},{"name":"val element: E","description":"org.modelix.modelql.core.ConstantSourceStep.element","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/element.html","searchKeys":["element","val element: E","org.modelix.modelql.core.ConstantSourceStep.element"]},{"name":"val elementSerializers: Array<KSerializer<IStepOutput<CommonT>>>","description":"org.modelix.modelql.core.ZipOutputSerializer.elementSerializers","location":"modelql-core/org.modelix.modelql.core/-zip-output-serializer/element-serializers.html","searchKeys":["elementSerializers","val elementSerializers: Array<KSerializer<IStepOutput<CommonT>>>","org.modelix.modelql.core.ZipOutputSerializer.elementSerializers"]},{"name":"val elementType: String","description":"org.modelix.modelql.core.ConstantSourceStep.Descriptor.elementType","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/-descriptor/element-type.html","searchKeys":["elementType","val elementType: String","org.modelix.modelql.core.ConstantSourceStep.Descriptor.elementType"]},{"name":"val elseCase: IMonoUnboundQuery<In, Out>?","description":"org.modelix.modelql.core.WhenStep.elseCase","location":"modelql-core/org.modelix.modelql.core/-when-step/else-case.html","searchKeys":["elseCase","val elseCase: IMonoUnboundQuery<In, Out>?","org.modelix.modelql.core.WhenStep.elseCase"]},{"name":"val elseCase: QueryId? = null","description":"org.modelix.modelql.core.WhenStep.Descriptor.elseCase","location":"modelql-core/org.modelix.modelql.core/-when-step/-descriptor/else-case.html","searchKeys":["elseCase","val elseCase: QueryId? = null","org.modelix.modelql.core.WhenStep.Descriptor.elseCase"]},{"name":"val graphDescriptor: QueryGraphDescriptor","description":"org.modelix.modelql.core.QueryDeserializationContext.graphDescriptor","location":"modelql-core/org.modelix.modelql.core/-query-deserialization-context/graph-descriptor.html","searchKeys":["graphDescriptor","val graphDescriptor: QueryGraphDescriptor","org.modelix.modelql.core.QueryDeserializationContext.graphDescriptor"]},{"name":"val index: Int","description":"org.modelix.modelql.core.ZipElementAccessStep.Descriptor.index","location":"modelql-core/org.modelix.modelql.core/-zip-element-access-step/-descriptor/--index--.html","searchKeys":["index","val index: Int","org.modelix.modelql.core.ZipElementAccessStep.Descriptor.index"]},{"name":"val index: Int","description":"org.modelix.modelql.core.ZipElementAccessStep.index","location":"modelql-core/org.modelix.modelql.core/-zip-element-access-step/--index--.html","searchKeys":["index","val index: Int","org.modelix.modelql.core.ZipElementAccessStep.index"]},{"name":"val input: E","description":"org.modelix.modelql.core.SimpleQueryExecutor.input","location":"modelql-core/org.modelix.modelql.core/-simple-query-executor/input.html","searchKeys":["input","val input: E","org.modelix.modelql.core.SimpleQueryExecutor.input"]},{"name":"val input: Int","description":"org.modelix.modelql.core.QueryDescriptor.input","location":"modelql-core/org.modelix.modelql.core/-query-descriptor/input.html","searchKeys":["input","val input: Int","org.modelix.modelql.core.QueryDescriptor.input"]},{"name":"val input: List<IStepOutput<E>>","description":"org.modelix.modelql.core.CollectorStepOutput.input","location":"modelql-core/org.modelix.modelql.core/-collector-step-output/input.html","searchKeys":["input","val input: List<IStepOutput<E>>","org.modelix.modelql.core.CollectorStepOutput.input"]},{"name":"val inputElementSerializer: KSerializer<IStepOutput<E>>","description":"org.modelix.modelql.core.CollectorStepOutputSerializer.inputElementSerializer","location":"modelql-core/org.modelix.modelql.core/-collector-step-output-serializer/input-element-serializer.html","searchKeys":["inputElementSerializer","val inputElementSerializer: KSerializer<IStepOutput<E>>","org.modelix.modelql.core.CollectorStepOutputSerializer.inputElementSerializer"]},{"name":"val inputFlow: StepFlow<*>","description":"org.modelix.modelql.core.SinglePathFlowInstantiationContext.inputFlow","location":"modelql-core/org.modelix.modelql.core/-single-path-flow-instantiation-context/input-flow.html","searchKeys":["inputFlow","val inputFlow: StepFlow<*>","org.modelix.modelql.core.SinglePathFlowInstantiationContext.inputFlow"]},{"name":"val inputSerializer: KSerializer<out IStepOutput<In>>","description":"org.modelix.modelql.core.LocalMappingSerializer.inputSerializer","location":"modelql-core/org.modelix.modelql.core/-local-mapping-serializer/input-serializer.html","searchKeys":["inputSerializer","val inputSerializer: KSerializer<out IStepOutput<In>>","org.modelix.modelql.core.LocalMappingSerializer.inputSerializer"]},{"name":"val inputStep: QueryInput<In>","description":"org.modelix.modelql.core.QueryBuilderContext.inputStep","location":"modelql-core/org.modelix.modelql.core/-query-builder-context/input-step.html","searchKeys":["inputStep","val inputStep: QueryInput<In>","org.modelix.modelql.core.QueryBuilderContext.inputStep"]},{"name":"val inputStep: QueryInput<In>","description":"org.modelix.modelql.core.UnboundQuery.inputStep","location":"modelql-core/org.modelix.modelql.core/-unbound-query/input-step.html","searchKeys":["inputStep","val inputStep: QueryInput<In>","org.modelix.modelql.core.UnboundQuery.inputStep"]},{"name":"val internalCollection: InternalCollectionT","description":"org.modelix.modelql.core.CollectorStepOutput.internalCollection","location":"modelql-core/org.modelix.modelql.core/-collector-step-output/internal-collection.html","searchKeys":["internalCollection","val internalCollection: InternalCollectionT","org.modelix.modelql.core.CollectorStepOutput.internalCollection"]},{"name":"val isFluxOutput: Boolean = false","description":"org.modelix.modelql.core.QueryDescriptor.isFluxOutput","location":"modelql-core/org.modelix.modelql.core/-query-descriptor/is-flux-output.html","searchKeys":["isFluxOutput","val isFluxOutput: Boolean = false","org.modelix.modelql.core.QueryDescriptor.isFluxOutput"]},{"name":"val muxIndex: Int","description":"org.modelix.modelql.core.MultiplexedOutput.muxIndex","location":"modelql-core/org.modelix.modelql.core/-multiplexed-output/mux-index.html","searchKeys":["muxIndex","val muxIndex: Int","org.modelix.modelql.core.MultiplexedOutput.muxIndex"]},{"name":"val operand: Int","description":"org.modelix.modelql.core.IntSumStep.IntSumDescriptor.operand","location":"modelql-core/org.modelix.modelql.core/-int-sum-step/-int-sum-descriptor/operand.html","searchKeys":["operand","val operand: Int","org.modelix.modelql.core.IntSumStep.IntSumDescriptor.operand"]},{"name":"val operand: Int","description":"org.modelix.modelql.core.IntSumStep.operand","location":"modelql-core/org.modelix.modelql.core/-int-sum-step/operand.html","searchKeys":["operand","val operand: Int","org.modelix.modelql.core.IntSumStep.operand"]},{"name":"val output: CollectionT","description":"org.modelix.modelql.core.CollectorStepOutput.output","location":"modelql-core/org.modelix.modelql.core/-collector-step-output/output.html","searchKeys":["output","val output: CollectionT","org.modelix.modelql.core.CollectorStepOutput.output"]},{"name":"val output: IStepOutput<E>","description":"org.modelix.modelql.core.MultiplexedOutput.output","location":"modelql-core/org.modelix.modelql.core/-multiplexed-output/output.html","searchKeys":["output","val output: IStepOutput<E>","org.modelix.modelql.core.MultiplexedOutput.output"]},{"name":"val output: Int","description":"org.modelix.modelql.core.QueryDescriptor.output","location":"modelql-core/org.modelix.modelql.core/-query-descriptor/output.html","searchKeys":["output","val output: Int","org.modelix.modelql.core.QueryDescriptor.output"]},{"name":"val owner: IProducingStep<E>?","description":"org.modelix.modelql.core.SimpleStepOutput.owner","location":"modelql-core/org.modelix.modelql.core/-simple-step-output/owner.html","searchKeys":["owner","val owner: IProducingStep<E>?","org.modelix.modelql.core.SimpleStepOutput.owner"]},{"name":"val owner: IProducingStep<E>?","description":"org.modelix.modelql.core.SimpleStepOutputSerializer.owner","location":"modelql-core/org.modelix.modelql.core/-simple-step-output-serializer/owner.html","searchKeys":["owner","val owner: IProducingStep<E>?","org.modelix.modelql.core.SimpleStepOutputSerializer.owner"]},{"name":"val owner: IStep","description":"org.modelix.modelql.core.MultiplexedOutputSerializer.owner","location":"modelql-core/org.modelix.modelql.core/-multiplexed-output-serializer/owner.html","searchKeys":["owner","val owner: IStep","org.modelix.modelql.core.MultiplexedOutputSerializer.owner"]},{"name":"val owner: QueryCallStep<*, Out>","description":"org.modelix.modelql.core.RecursiveQuerySerializer.owner","location":"modelql-core/org.modelix.modelql.core/-recursive-query-serializer/owner.html","searchKeys":["owner","val owner: QueryCallStep<*, Out>","org.modelix.modelql.core.RecursiveQuerySerializer.owner"]},{"name":"val pattern: String","description":"org.modelix.modelql.core.RegexPredicate.Descriptor.pattern","location":"modelql-core/org.modelix.modelql.core/-regex-predicate/-descriptor/pattern.html","searchKeys":["pattern","val pattern: String","org.modelix.modelql.core.RegexPredicate.Descriptor.pattern"]},{"name":"val port: Int = 0","description":"org.modelix.modelql.core.PortReference.port","location":"modelql-core/org.modelix.modelql.core/-port-reference/port.html","searchKeys":["port","val port: Int = 0","org.modelix.modelql.core.PortReference.port"]},{"name":"val prefix: String","description":"org.modelix.modelql.core.PrintStep.Descriptor.prefix","location":"modelql-core/org.modelix.modelql.core/-print-step/-descriptor/prefix.html","searchKeys":["prefix","val prefix: String","org.modelix.modelql.core.PrintStep.Descriptor.prefix"]},{"name":"val prefix: String","description":"org.modelix.modelql.core.PrintStep.prefix","location":"modelql-core/org.modelix.modelql.core/-print-step/prefix.html","searchKeys":["prefix","val prefix: String","org.modelix.modelql.core.PrintStep.prefix"]},{"name":"val producer: PortReference","description":"org.modelix.modelql.core.PortConnection.producer","location":"modelql-core/org.modelix.modelql.core/-port-connection/producer.html","searchKeys":["producer","val producer: PortReference","org.modelix.modelql.core.PortConnection.producer"]},{"name":"val queries: List<QueryDescriptor>","description":"org.modelix.modelql.core.QueryGraphDescriptor.queries","location":"modelql-core/org.modelix.modelql.core/-query-graph-descriptor/queries.html","searchKeys":["queries","val queries: List<QueryDescriptor>","org.modelix.modelql.core.QueryGraphDescriptor.queries"]},{"name":"val query: FluxUnboundQuery<In, Out>","description":"org.modelix.modelql.core.FlatMapStep.query","location":"modelql-core/org.modelix.modelql.core/-flat-map-step/query.html","searchKeys":["query","val query: FluxUnboundQuery<In, Out>","org.modelix.modelql.core.FlatMapStep.query"]},{"name":"val query: IUnboundQuery<*, *, Out>","description":"org.modelix.modelql.core.RecursiveQuerySerializer.query","location":"modelql-core/org.modelix.modelql.core/-recursive-query-serializer/query.html","searchKeys":["query","val query: IUnboundQuery<*, *, Out>","org.modelix.modelql.core.RecursiveQuerySerializer.query"]},{"name":"val query: MonoUnboundQuery<In, Out>","description":"org.modelix.modelql.core.MapIfNotNullStep.query","location":"modelql-core/org.modelix.modelql.core/-map-if-not-null-step/query.html","searchKeys":["query","val query: MonoUnboundQuery<In, Out>","org.modelix.modelql.core.MapIfNotNullStep.query"]},{"name":"val query: MonoUnboundQuery<In, Out>","description":"org.modelix.modelql.core.MappingStep.query","location":"modelql-core/org.modelix.modelql.core/-mapping-step/query.html","searchKeys":["query","val query: MonoUnboundQuery<In, Out>","org.modelix.modelql.core.MappingStep.query"]},{"name":"val query: UnboundQuery<*, *, *>","description":"org.modelix.modelql.core.FlowInstantiationContext.query","location":"modelql-core/org.modelix.modelql.core/-flow-instantiation-context/query.html","searchKeys":["query","val query: UnboundQuery<*, *, *>","org.modelix.modelql.core.FlowInstantiationContext.query"]},{"name":"val query: UnboundQuery<*, *, *>","description":"org.modelix.modelql.core.QueryGraphDescriptorBuilder.QueryDescriptorBuilder.query","location":"modelql-core/org.modelix.modelql.core/-query-graph-descriptor-builder/-query-descriptor-builder/query.html","searchKeys":["query","val query: UnboundQuery<*, *, *>","org.modelix.modelql.core.QueryGraphDescriptorBuilder.QueryDescriptorBuilder.query"]},{"name":"val queryBuilder: QueryBuilderContext<E, IZipOutput<*>, IMonoUnboundQuery<E, IZipOutput<*>>>","description":"org.modelix.modelql.core.FragmentBuilder.queryBuilder","location":"modelql-core/org.modelix.modelql.core/-fragment-builder/query-builder.html","searchKeys":["queryBuilder","val queryBuilder: QueryBuilderContext<E, IZipOutput<*>, IMonoUnboundQuery<E, IZipOutput<*>>>","org.modelix.modelql.core.FragmentBuilder.queryBuilder"]},{"name":"val queryId: Long","description":"org.modelix.modelql.core.QueryDescriptor.queryId","location":"modelql-core/org.modelix.modelql.core/-query-descriptor/query-id.html","searchKeys":["queryId","val queryId: Long","org.modelix.modelql.core.QueryDescriptor.queryId"]},{"name":"val queryId: QueryId","description":"org.modelix.modelql.core.FilteringStep.Descriptor.queryId","location":"modelql-core/org.modelix.modelql.core/-filtering-step/-descriptor/query-id.html","searchKeys":["queryId","val queryId: QueryId","org.modelix.modelql.core.FilteringStep.Descriptor.queryId"]},{"name":"val queryId: QueryId","description":"org.modelix.modelql.core.FlatMapStep.Descriptor.queryId","location":"modelql-core/org.modelix.modelql.core/-flat-map-step/-descriptor/query-id.html","searchKeys":["queryId","val queryId: QueryId","org.modelix.modelql.core.FlatMapStep.Descriptor.queryId"]},{"name":"val queryId: QueryId","description":"org.modelix.modelql.core.MapIfNotNullStep.Descriptor.queryId","location":"modelql-core/org.modelix.modelql.core/-map-if-not-null-step/-descriptor/query-id.html","searchKeys":["queryId","val queryId: QueryId","org.modelix.modelql.core.MapIfNotNullStep.Descriptor.queryId"]},{"name":"val queryId: QueryId","description":"org.modelix.modelql.core.MappingStep.Descriptor.queryId","location":"modelql-core/org.modelix.modelql.core/-mapping-step/-descriptor/query-id.html","searchKeys":["queryId","val queryId: QueryId","org.modelix.modelql.core.MappingStep.Descriptor.queryId"]},{"name":"val queryId: QueryId","description":"org.modelix.modelql.core.QueryCallStep.Descriptor.queryId","location":"modelql-core/org.modelix.modelql.core/-query-call-step/-descriptor/query-id.html","searchKeys":["queryId","val queryId: QueryId","org.modelix.modelql.core.QueryCallStep.Descriptor.queryId"]},{"name":"val queryInput: QueryInput<*>","description":"org.modelix.modelql.core.SinglePathFlowInstantiationContext.queryInput","location":"modelql-core/org.modelix.modelql.core/-single-path-flow-instantiation-context/query-input.html","searchKeys":["queryInput","val queryInput: QueryInput<*>","org.modelix.modelql.core.SinglePathFlowInstantiationContext.queryInput"]},{"name":"val queryInputSerializers: Map<QueryInput<*>, KSerializer<IStepOutput<*>>>","description":"org.modelix.modelql.core.SerializationContext.queryInputSerializers","location":"modelql-core/org.modelix.modelql.core/-serialization-context/query-input-serializers.html","searchKeys":["queryInputSerializers","val queryInputSerializers: Map<QueryInput<*>, KSerializer<IStepOutput<*>>>","org.modelix.modelql.core.SerializationContext.queryInputSerializers"]},{"name":"val queryRef: QueryReference<out IUnboundQuery<In, *, Out>>","description":"org.modelix.modelql.core.QueryCallStep.queryRef","location":"modelql-core/org.modelix.modelql.core/-query-call-step/query-ref.html","searchKeys":["queryRef","val queryRef: QueryReference<out IUnboundQuery<In, *, Out>>","org.modelix.modelql.core.QueryCallStep.queryRef"]},{"name":"val queryReference: QueryReference<Q>","description":"org.modelix.modelql.core.QueryBuilderContext.queryReference","location":"modelql-core/org.modelix.modelql.core/-query-builder-context/query-reference.html","searchKeys":["queryReference","val queryReference: QueryReference<Q>","org.modelix.modelql.core.QueryBuilderContext.queryReference"]},{"name":"val regex: Regex","description":"org.modelix.modelql.core.RegexPredicate.regex","location":"modelql-core/org.modelix.modelql.core/-regex-predicate/regex.html","searchKeys":["regex","val regex: Regex","org.modelix.modelql.core.RegexPredicate.regex"]},{"name":"val serializationContext: SerializationContext","description":"org.modelix.modelql.core.RecursiveQuerySerializer.serializationContext","location":"modelql-core/org.modelix.modelql.core/-recursive-query-serializer/serialization-context.html","searchKeys":["serializationContext","val serializationContext: SerializationContext","org.modelix.modelql.core.RecursiveQuerySerializer.serializationContext"]},{"name":"val serializers: List<KSerializer<IStepOutput<E>>>","description":"org.modelix.modelql.core.MultiplexedOutputSerializer.serializers","location":"modelql-core/org.modelix.modelql.core/-multiplexed-output-serializer/serializers.html","searchKeys":["serializers","val serializers: List<KSerializer<IStepOutput<E>>>","org.modelix.modelql.core.MultiplexedOutputSerializer.serializers"]},{"name":"val serializersModule: SerializersModule","description":"org.modelix.modelql.core.SerializationContext.serializersModule","location":"modelql-core/org.modelix.modelql.core/-serialization-context/serializers-module.html","searchKeys":["serializersModule","val serializersModule: SerializersModule","org.modelix.modelql.core.SerializationContext.serializersModule"]},{"name":"val serializersModule: SerializersModule","description":"org.modelix.modelql.core.UnboundQuery.Companion.serializersModule","location":"modelql-core/org.modelix.modelql.core/-unbound-query/-companion/serializers-module.html","searchKeys":["serializersModule","val serializersModule: SerializersModule","org.modelix.modelql.core.UnboundQuery.Companion.serializersModule"]},{"name":"val sharedSteps: ArrayList<SharedStep<*>>","description":"org.modelix.modelql.core.QueryBuilderContext.sharedSteps","location":"modelql-core/org.modelix.modelql.core/-query-builder-context/shared-steps.html","searchKeys":["sharedSteps","val sharedSteps: ArrayList<SharedStep<*>>","org.modelix.modelql.core.QueryBuilderContext.sharedSteps"]},{"name":"val sharedSteps: List<Int>","description":"org.modelix.modelql.core.QueryDescriptor.sharedSteps","location":"modelql-core/org.modelix.modelql.core/-query-descriptor/shared-steps.html","searchKeys":["sharedSteps","val sharedSteps: List<Int>","org.modelix.modelql.core.QueryDescriptor.sharedSteps"]},{"name":"val sharedSteps: List<SharedStep<*>>","description":"org.modelix.modelql.core.UnboundQuery.sharedSteps","location":"modelql-core/org.modelix.modelql.core/-unbound-query/shared-steps.html","searchKeys":["sharedSteps","val sharedSteps: List<SharedStep<*>>","org.modelix.modelql.core.UnboundQuery.sharedSteps"]},{"name":"val step: Int","description":"org.modelix.modelql.core.PortReference.step","location":"modelql-core/org.modelix.modelql.core/-port-reference/step.html","searchKeys":["step","val step: Int","org.modelix.modelql.core.PortReference.step"]},{"name":"val step: LocalMappingStep<In, Out>","description":"org.modelix.modelql.core.LocalMappingSerializer.step","location":"modelql-core/org.modelix.modelql.core/-local-mapping-serializer/step.html","searchKeys":["step","val step: LocalMappingStep<In, Out>","org.modelix.modelql.core.LocalMappingSerializer.step"]},{"name":"val steps: Map<Int, StepDescriptor>","description":"org.modelix.modelql.core.QueryGraphDescriptor.steps","location":"modelql-core/org.modelix.modelql.core/-query-graph-descriptor/steps.html","searchKeys":["steps","val steps: Map<Int, StepDescriptor>","org.modelix.modelql.core.QueryGraphDescriptor.steps"]},{"name":"val substring: String","description":"org.modelix.modelql.core.StringContainsPredicate.StringContainsDescriptor.substring","location":"modelql-core/org.modelix.modelql.core/-string-contains-predicate/-string-contains-descriptor/substring.html","searchKeys":["substring","val substring: String","org.modelix.modelql.core.StringContainsPredicate.StringContainsDescriptor.substring"]},{"name":"val substring: String","description":"org.modelix.modelql.core.StringContainsPredicate.substring","location":"modelql-core/org.modelix.modelql.core/-string-contains-predicate/substring.html","searchKeys":["substring","val substring: String","org.modelix.modelql.core.StringContainsPredicate.substring"]},{"name":"val transformation: (In) -> Out","description":"org.modelix.modelql.core.LocalMappingStep.transformation","location":"modelql-core/org.modelix.modelql.core/-local-mapping-step/transformation.html","searchKeys":["transformation","val transformation: (In) -> Out","org.modelix.modelql.core.LocalMappingStep.transformation"]},{"name":"val type: KType","description":"org.modelix.modelql.core.ConstantSourceStep.type","location":"modelql-core/org.modelix.modelql.core/-constant-source-step/type.html","searchKeys":["type","val type: KType","org.modelix.modelql.core.ConstantSourceStep.type"]},{"name":"val valueSerializer: KSerializer<E>","description":"org.modelix.modelql.core.SimpleStepOutputSerializer.valueSerializer","location":"modelql-core/org.modelix.modelql.core/-simple-step-output-serializer/value-serializer.html","searchKeys":["valueSerializer","val valueSerializer: KSerializer<E>","org.modelix.modelql.core.SimpleStepOutputSerializer.valueSerializer"]},{"name":"val values: List<IStepOutput<Common>>","description":"org.modelix.modelql.core.ZipStepOutput.values","location":"modelql-core/org.modelix.modelql.core/-zip-step-output/values.html","searchKeys":["values","val values: List<IStepOutput<Common>>","org.modelix.modelql.core.ZipStepOutput.values"]},{"name":"val version: String?","description":"org.modelix.modelql.core.VersionAndData.version","location":"modelql-core/org.modelix.modelql.core/-version-and-data/version.html","searchKeys":["version","val version: String?","org.modelix.modelql.core.VersionAndData.version"]},{"name":"value class Optional<out E>(value: Any?)","description":"org.modelix.modelql.core.Optional","location":"modelql-core/org.modelix.modelql.core/-optional/index.html","searchKeys":["Optional","value class Optional<out E>(value: Any?)","org.modelix.modelql.core.Optional"]},{"name":"var id: Int?","description":"org.modelix.modelql.core.StepDescriptor.id","location":"modelql-core/org.modelix.modelql.core/-step-descriptor/id.html","searchKeys":["id","var id: Int?","org.modelix.modelql.core.StepDescriptor.id"]},{"name":"var owner: QueryId?","description":"org.modelix.modelql.core.StepDescriptor.owner","location":"modelql-core/org.modelix.modelql.core/-step-descriptor/owner.html","searchKeys":["owner","var owner: QueryId?","org.modelix.modelql.core.StepDescriptor.owner"]},{"name":"var providedQuery: Q?","description":"org.modelix.modelql.core.QueryReference.providedQuery","location":"modelql-core/org.modelix.modelql.core/-query-reference/provided-query.html","searchKeys":["providedQuery","var providedQuery: Q?","org.modelix.modelql.core.QueryReference.providedQuery"]},{"name":"var queryId: Long?","description":"org.modelix.modelql.core.QueryReference.queryId","location":"modelql-core/org.modelix.modelql.core/-query-reference/query-id.html","searchKeys":["queryId","var queryId: Long?","org.modelix.modelql.core.QueryReference.queryId"]},{"name":"abstract class ExportFromModelServer constructor(of: ObjectFactory) : DefaultTask","description":"org.modelix.model.sync.bulk.gradle.tasks.ExportFromModelServer","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-export-from-model-server/index.html","searchKeys":["ExportFromModelServer","abstract class ExportFromModelServer constructor(of: ObjectFactory) : DefaultTask","org.modelix.model.sync.bulk.gradle.tasks.ExportFromModelServer"]},{"name":"abstract class ImportIntoModelServer constructor(of: ObjectFactory) : DefaultTask","description":"org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-import-into-model-server/index.html","searchKeys":["ImportIntoModelServer","abstract class ImportIntoModelServer constructor(of: ObjectFactory) : DefaultTask","org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer"]},{"name":"abstract class ValidateSyncSettings constructor(of: ObjectFactory) : DefaultTask","description":"org.modelix.model.sync.bulk.gradle.tasks.ValidateSyncSettings","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-validate-sync-settings/index.html","searchKeys":["ValidateSyncSettings","abstract class ValidateSyncSettings constructor(of: ObjectFactory) : DefaultTask","org.modelix.model.sync.bulk.gradle.tasks.ValidateSyncSettings"]},{"name":"abstract fun getValidationErrors(): List<String>","description":"org.modelix.model.sync.bulk.gradle.config.SyncEndpoint.getValidationErrors","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-sync-endpoint/get-validation-errors.html","searchKeys":["getValidationErrors","abstract fun getValidationErrors(): List<String>","org.modelix.model.sync.bulk.gradle.config.SyncEndpoint.getValidationErrors"]},{"name":"abstract fun mpsLibrary(folder: File)","description":"org.modelix.model.sync.bulk.gradle.config.LocalEndpoint.mpsLibrary","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-local-endpoint/mps-library.html","searchKeys":["mpsLibrary","abstract fun mpsLibrary(folder: File)","org.modelix.model.sync.bulk.gradle.config.LocalEndpoint.mpsLibrary"]},{"name":"abstract var branchName: String?","description":"org.modelix.model.sync.bulk.gradle.config.ServerEndpoint.branchName","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-server-endpoint/branch-name.html","searchKeys":["branchName","abstract var branchName: String?","org.modelix.model.sync.bulk.gradle.config.ServerEndpoint.branchName"]},{"name":"abstract var mpsDebugPort: Int?","description":"org.modelix.model.sync.bulk.gradle.config.LocalEndpoint.mpsDebugPort","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-local-endpoint/mps-debug-port.html","searchKeys":["mpsDebugPort","abstract var mpsDebugPort: Int?","org.modelix.model.sync.bulk.gradle.config.LocalEndpoint.mpsDebugPort"]},{"name":"abstract var mpsHeapSize: String","description":"org.modelix.model.sync.bulk.gradle.config.LocalEndpoint.mpsHeapSize","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-local-endpoint/mps-heap-size.html","searchKeys":["mpsHeapSize","abstract var mpsHeapSize: String","org.modelix.model.sync.bulk.gradle.config.LocalEndpoint.mpsHeapSize"]},{"name":"abstract var mpsHome: File?","description":"org.modelix.model.sync.bulk.gradle.config.LocalEndpoint.mpsHome","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-local-endpoint/mps-home.html","searchKeys":["mpsHome","abstract var mpsHome: File?","org.modelix.model.sync.bulk.gradle.config.LocalEndpoint.mpsHome"]},{"name":"abstract var repositoryDir: File?","description":"org.modelix.model.sync.bulk.gradle.config.LocalEndpoint.repositoryDir","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-local-endpoint/repository-dir.html","searchKeys":["repositoryDir","abstract var repositoryDir: File?","org.modelix.model.sync.bulk.gradle.config.LocalEndpoint.repositoryDir"]},{"name":"abstract var repositoryId: String?","description":"org.modelix.model.sync.bulk.gradle.config.ServerEndpoint.repositoryId","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-server-endpoint/repository-id.html","searchKeys":["repositoryId","abstract var repositoryId: String?","org.modelix.model.sync.bulk.gradle.config.ServerEndpoint.repositoryId"]},{"name":"abstract var requestTimeoutSeconds: Int","description":"org.modelix.model.sync.bulk.gradle.config.ServerEndpoint.requestTimeoutSeconds","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-server-endpoint/request-timeout-seconds.html","searchKeys":["requestTimeoutSeconds","abstract var requestTimeoutSeconds: Int","org.modelix.model.sync.bulk.gradle.config.ServerEndpoint.requestTimeoutSeconds"]},{"name":"abstract var url: String?","description":"org.modelix.model.sync.bulk.gradle.config.ServerEndpoint.url","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-server-endpoint/url.html","searchKeys":["url","abstract var url: String?","org.modelix.model.sync.bulk.gradle.config.ServerEndpoint.url"]},{"name":"class ModelSyncGradlePlugin : Plugin<Project> ","description":"org.modelix.model.sync.bulk.gradle.ModelSyncGradlePlugin","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle/-model-sync-gradle-plugin/index.html","searchKeys":["ModelSyncGradlePlugin","class ModelSyncGradlePlugin : Plugin<Project> ","org.modelix.model.sync.bulk.gradle.ModelSyncGradlePlugin"]},{"name":"constructor()","description":"org.modelix.model.sync.bulk.gradle.ModelSyncGradlePlugin.ModelSyncGradlePlugin","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle/-model-sync-gradle-plugin/-model-sync-gradle-plugin.html","searchKeys":["ModelSyncGradlePlugin","constructor()","org.modelix.model.sync.bulk.gradle.ModelSyncGradlePlugin.ModelSyncGradlePlugin"]},{"name":"constructor()","description":"org.modelix.model.sync.bulk.gradle.config.ModelSyncGradleSettings.ModelSyncGradleSettings","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-model-sync-gradle-settings/-model-sync-gradle-settings.html","searchKeys":["ModelSyncGradleSettings","constructor()","org.modelix.model.sync.bulk.gradle.config.ModelSyncGradleSettings.ModelSyncGradleSettings"]},{"name":"constructor(mpsHome: File? = null, mpsLibraries: Set<File> = emptySet(), mpsHeapSize: String = \"2g\", repositoryDir: File? = null, mpsDebugPort: Int? = null)","description":"org.modelix.model.sync.bulk.gradle.config.LocalSource.LocalSource","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-local-source/-local-source.html","searchKeys":["LocalSource","constructor(mpsHome: File? = null, mpsLibraries: Set<File> = emptySet(), mpsHeapSize: String = \"2g\", repositoryDir: File? = null, mpsDebugPort: Int? = null)","org.modelix.model.sync.bulk.gradle.config.LocalSource.LocalSource"]},{"name":"constructor(mpsHome: File? = null, mpsLibraries: Set<File> = emptySet(), mpsHeapSize: String = \"2g\", repositoryDir: File? = null, mpsDebugPort: Int? = null)","description":"org.modelix.model.sync.bulk.gradle.config.LocalTarget.LocalTarget","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-local-target/-local-target.html","searchKeys":["LocalTarget","constructor(mpsHome: File? = null, mpsLibraries: Set<File> = emptySet(), mpsHeapSize: String = \"2g\", repositoryDir: File? = null, mpsDebugPort: Int? = null)","org.modelix.model.sync.bulk.gradle.config.LocalTarget.LocalTarget"]},{"name":"constructor(name: String, source: SyncEndpoint? = null, target: SyncEndpoint? = null, includedModules: Set<String> = mutableSetOf(), registeredLanguages: Set<ILanguage> = mutableSetOf(), includedModulePrefixes: Set<String> = mutableSetOf(), continueOnError: Boolean = false)","description":"org.modelix.model.sync.bulk.gradle.config.SyncDirection.SyncDirection","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-sync-direction/-sync-direction.html","searchKeys":["SyncDirection","constructor(name: String, source: SyncEndpoint? = null, target: SyncEndpoint? = null, includedModules: Set<String> = mutableSetOf(), registeredLanguages: Set<ILanguage> = mutableSetOf(), includedModulePrefixes: Set<String> = mutableSetOf(), continueOnError: Boolean = false)","org.modelix.model.sync.bulk.gradle.config.SyncDirection.SyncDirection"]},{"name":"constructor(of: ObjectFactory)","description":"org.modelix.model.sync.bulk.gradle.tasks.ExportFromModelServer.ExportFromModelServer","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-export-from-model-server/-export-from-model-server.html","searchKeys":["ExportFromModelServer","constructor(of: ObjectFactory)","org.modelix.model.sync.bulk.gradle.tasks.ExportFromModelServer.ExportFromModelServer"]},{"name":"constructor(of: ObjectFactory)","description":"org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer.ImportIntoModelServer","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-import-into-model-server/-import-into-model-server.html","searchKeys":["ImportIntoModelServer","constructor(of: ObjectFactory)","org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer.ImportIntoModelServer"]},{"name":"constructor(of: ObjectFactory)","description":"org.modelix.model.sync.bulk.gradle.tasks.ValidateSyncSettings.ValidateSyncSettings","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-validate-sync-settings/-validate-sync-settings.html","searchKeys":["ValidateSyncSettings","constructor(of: ObjectFactory)","org.modelix.model.sync.bulk.gradle.tasks.ValidateSyncSettings.ValidateSyncSettings"]},{"name":"constructor(url: String? = null, repositoryId: String? = null, branchName: String? = null, requestTimeoutSeconds: Int = DEFAULT_REQUEST_TIMEOUT_SECONDS)","description":"org.modelix.model.sync.bulk.gradle.config.ServerTarget.ServerTarget","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-server-target/-server-target.html","searchKeys":["ServerTarget","constructor(url: String? = null, repositoryId: String? = null, branchName: String? = null, requestTimeoutSeconds: Int = DEFAULT_REQUEST_TIMEOUT_SECONDS)","org.modelix.model.sync.bulk.gradle.config.ServerTarget.ServerTarget"]},{"name":"constructor(url: String? = null, repositoryId: String? = null, branchName: String? = null, requestTimeoutSeconds: Int = DEFAULT_REQUEST_TIMEOUT_SECONDS, revision: String? = null)","description":"org.modelix.model.sync.bulk.gradle.config.ServerSource.ServerSource","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-server-source/-server-source.html","searchKeys":["ServerSource","constructor(url: String? = null, repositoryId: String? = null, branchName: String? = null, requestTimeoutSeconds: Int = DEFAULT_REQUEST_TIMEOUT_SECONDS, revision: String? = null)","org.modelix.model.sync.bulk.gradle.config.ServerSource.ServerSource"]},{"name":"data class LocalSource(var mpsHome: File? = null, mpsLibraries: Set<File> = emptySet(), var mpsHeapSize: String = \"2g\", var repositoryDir: File? = null, var mpsDebugPort: Int? = null) : LocalEndpoint","description":"org.modelix.model.sync.bulk.gradle.config.LocalSource","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-local-source/index.html","searchKeys":["LocalSource","data class LocalSource(var mpsHome: File? = null, mpsLibraries: Set<File> = emptySet(), var mpsHeapSize: String = \"2g\", var repositoryDir: File? = null, var mpsDebugPort: Int? = null) : LocalEndpoint","org.modelix.model.sync.bulk.gradle.config.LocalSource"]},{"name":"data class LocalTarget(var mpsHome: File? = null, mpsLibraries: Set<File> = emptySet(), var mpsHeapSize: String = \"2g\", var repositoryDir: File? = null, var mpsDebugPort: Int? = null) : LocalEndpoint","description":"org.modelix.model.sync.bulk.gradle.config.LocalTarget","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-local-target/index.html","searchKeys":["LocalTarget","data class LocalTarget(var mpsHome: File? = null, mpsLibraries: Set<File> = emptySet(), var mpsHeapSize: String = \"2g\", var repositoryDir: File? = null, var mpsDebugPort: Int? = null) : LocalEndpoint","org.modelix.model.sync.bulk.gradle.config.LocalTarget"]},{"name":"data class ServerSource(var url: String? = null, var repositoryId: String? = null, var branchName: String? = null, var requestTimeoutSeconds: Int = DEFAULT_REQUEST_TIMEOUT_SECONDS, var revision: String? = null) : ServerEndpoint","description":"org.modelix.model.sync.bulk.gradle.config.ServerSource","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-server-source/index.html","searchKeys":["ServerSource","data class ServerSource(var url: String? = null, var repositoryId: String? = null, var branchName: String? = null, var requestTimeoutSeconds: Int = DEFAULT_REQUEST_TIMEOUT_SECONDS, var revision: String? = null) : ServerEndpoint","org.modelix.model.sync.bulk.gradle.config.ServerSource"]},{"name":"data class ServerTarget(var url: String? = null, var repositoryId: String? = null, var branchName: String? = null, var requestTimeoutSeconds: Int = DEFAULT_REQUEST_TIMEOUT_SECONDS) : ServerEndpoint","description":"org.modelix.model.sync.bulk.gradle.config.ServerTarget","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-server-target/index.html","searchKeys":["ServerTarget","data class ServerTarget(var url: String? = null, var repositoryId: String? = null, var branchName: String? = null, var requestTimeoutSeconds: Int = DEFAULT_REQUEST_TIMEOUT_SECONDS) : ServerEndpoint","org.modelix.model.sync.bulk.gradle.config.ServerTarget"]},{"name":"data class SyncDirection(name: String, source: SyncEndpoint? = null, target: SyncEndpoint? = null, includedModules: Set<String> = mutableSetOf(), registeredLanguages: Set<ILanguage> = mutableSetOf(), includedModulePrefixes: Set<String> = mutableSetOf(), continueOnError: Boolean = false)","description":"org.modelix.model.sync.bulk.gradle.config.SyncDirection","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-sync-direction/index.html","searchKeys":["SyncDirection","data class SyncDirection(name: String, source: SyncEndpoint? = null, target: SyncEndpoint? = null, includedModules: Set<String> = mutableSetOf(), registeredLanguages: Set<ILanguage> = mutableSetOf(), includedModulePrefixes: Set<String> = mutableSetOf(), continueOnError: Boolean = false)","org.modelix.model.sync.bulk.gradle.config.SyncDirection"]},{"name":"fun dependsOn(task: Any)","description":"org.modelix.model.sync.bulk.gradle.config.ModelSyncGradleSettings.dependsOn","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-model-sync-gradle-settings/depends-on.html","searchKeys":["dependsOn","fun dependsOn(task: Any)","org.modelix.model.sync.bulk.gradle.config.ModelSyncGradleSettings.dependsOn"]},{"name":"fun direction(name: String, action: Action<SyncDirection>)","description":"org.modelix.model.sync.bulk.gradle.config.ModelSyncGradleSettings.direction","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-model-sync-gradle-settings/direction.html","searchKeys":["direction","fun direction(name: String, action: Action<SyncDirection>)","org.modelix.model.sync.bulk.gradle.config.ModelSyncGradleSettings.direction"]},{"name":"fun enableContinueOnError(state: Boolean)","description":"org.modelix.model.sync.bulk.gradle.config.SyncDirection.enableContinueOnError","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-sync-direction/enable-continue-on-error.html","searchKeys":["enableContinueOnError","fun enableContinueOnError(state: Boolean)","org.modelix.model.sync.bulk.gradle.config.SyncDirection.enableContinueOnError"]},{"name":"fun export()","description":"org.modelix.model.sync.bulk.gradle.tasks.ExportFromModelServer.export","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-export-from-model-server/export.html","searchKeys":["export","fun export()","org.modelix.model.sync.bulk.gradle.tasks.ExportFromModelServer.export"]},{"name":"fun fromLocal(action: Action<LocalSource>)","description":"org.modelix.model.sync.bulk.gradle.config.SyncDirection.fromLocal","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-sync-direction/from-local.html","searchKeys":["fromLocal","fun fromLocal(action: Action<LocalSource>)","org.modelix.model.sync.bulk.gradle.config.SyncDirection.fromLocal"]},{"name":"fun fromModelServer(action: Action<ServerSource>)","description":"org.modelix.model.sync.bulk.gradle.config.SyncDirection.fromModelServer","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-sync-direction/from-model-server.html","searchKeys":["fromModelServer","fun fromModelServer(action: Action<ServerSource>)","org.modelix.model.sync.bulk.gradle.config.SyncDirection.fromModelServer"]},{"name":"fun import()","description":"org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer.import","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-import-into-model-server/import.html","searchKeys":["import","fun import()","org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer.import"]},{"name":"fun includeModule(module: String)","description":"org.modelix.model.sync.bulk.gradle.config.SyncDirection.includeModule","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-sync-direction/include-module.html","searchKeys":["includeModule","fun includeModule(module: String)","org.modelix.model.sync.bulk.gradle.config.SyncDirection.includeModule"]},{"name":"fun includeModulesByPrefix(prefix: String)","description":"org.modelix.model.sync.bulk.gradle.config.SyncDirection.includeModulesByPrefix","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-sync-direction/include-modules-by-prefix.html","searchKeys":["includeModulesByPrefix","fun includeModulesByPrefix(prefix: String)","org.modelix.model.sync.bulk.gradle.config.SyncDirection.includeModulesByPrefix"]},{"name":"fun registerLanguage(language: ILanguage)","description":"org.modelix.model.sync.bulk.gradle.config.SyncDirection.registerLanguage","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-sync-direction/register-language.html","searchKeys":["registerLanguage","fun registerLanguage(language: ILanguage)","org.modelix.model.sync.bulk.gradle.config.SyncDirection.registerLanguage"]},{"name":"fun toLocal(action: Action<LocalTarget>)","description":"org.modelix.model.sync.bulk.gradle.config.SyncDirection.toLocal","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-sync-direction/to-local.html","searchKeys":["toLocal","fun toLocal(action: Action<LocalTarget>)","org.modelix.model.sync.bulk.gradle.config.SyncDirection.toLocal"]},{"name":"fun toModelServer(action: Action<ServerTarget>)","description":"org.modelix.model.sync.bulk.gradle.config.SyncDirection.toModelServer","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-sync-direction/to-model-server.html","searchKeys":["toModelServer","fun toModelServer(action: Action<ServerTarget>)","org.modelix.model.sync.bulk.gradle.config.SyncDirection.toModelServer"]},{"name":"fun validate()","description":"org.modelix.model.sync.bulk.gradle.tasks.ValidateSyncSettings.validate","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-validate-sync-settings/validate.html","searchKeys":["validate","fun validate()","org.modelix.model.sync.bulk.gradle.tasks.ValidateSyncSettings.validate"]},{"name":"interface LocalEndpoint : SyncEndpoint","description":"org.modelix.model.sync.bulk.gradle.config.LocalEndpoint","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-local-endpoint/index.html","searchKeys":["LocalEndpoint","interface LocalEndpoint : SyncEndpoint","org.modelix.model.sync.bulk.gradle.config.LocalEndpoint"]},{"name":"interface ServerEndpoint : SyncEndpoint","description":"org.modelix.model.sync.bulk.gradle.config.ServerEndpoint","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-server-endpoint/index.html","searchKeys":["ServerEndpoint","interface ServerEndpoint : SyncEndpoint","org.modelix.model.sync.bulk.gradle.config.ServerEndpoint"]},{"name":"interface SyncEndpoint","description":"org.modelix.model.sync.bulk.gradle.config.SyncEndpoint","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-sync-endpoint/index.html","searchKeys":["SyncEndpoint","interface SyncEndpoint","org.modelix.model.sync.bulk.gradle.config.SyncEndpoint"]},{"name":"open class ModelSyncGradleSettings","description":"org.modelix.model.sync.bulk.gradle.config.ModelSyncGradleSettings","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-model-sync-gradle-settings/index.html","searchKeys":["ModelSyncGradleSettings","open class ModelSyncGradleSettings","org.modelix.model.sync.bulk.gradle.config.ModelSyncGradleSettings"]},{"name":"open override fun apply(project: Project)","description":"org.modelix.model.sync.bulk.gradle.ModelSyncGradlePlugin.apply","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle/-model-sync-gradle-plugin/apply.html","searchKeys":["apply","open override fun apply(project: Project)","org.modelix.model.sync.bulk.gradle.ModelSyncGradlePlugin.apply"]},{"name":"open override fun getValidationErrors(): List<String>","description":"org.modelix.model.sync.bulk.gradle.config.LocalEndpoint.getValidationErrors","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-local-endpoint/get-validation-errors.html","searchKeys":["getValidationErrors","open override fun getValidationErrors(): List<String>","org.modelix.model.sync.bulk.gradle.config.LocalEndpoint.getValidationErrors"]},{"name":"open override fun getValidationErrors(): List<String>","description":"org.modelix.model.sync.bulk.gradle.config.ServerEndpoint.getValidationErrors","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-server-endpoint/get-validation-errors.html","searchKeys":["getValidationErrors","open override fun getValidationErrors(): List<String>","org.modelix.model.sync.bulk.gradle.config.ServerEndpoint.getValidationErrors"]},{"name":"open override fun getValidationErrors(): List<String>","description":"org.modelix.model.sync.bulk.gradle.config.ServerSource.getValidationErrors","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-server-source/get-validation-errors.html","searchKeys":["getValidationErrors","open override fun getValidationErrors(): List<String>","org.modelix.model.sync.bulk.gradle.config.ServerSource.getValidationErrors"]},{"name":"open override fun getValidationErrors(): List<String>","description":"org.modelix.model.sync.bulk.gradle.config.ServerTarget.getValidationErrors","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-server-target/get-validation-errors.html","searchKeys":["getValidationErrors","open override fun getValidationErrors(): List<String>","org.modelix.model.sync.bulk.gradle.config.ServerTarget.getValidationErrors"]},{"name":"open override fun mpsLibrary(folder: File)","description":"org.modelix.model.sync.bulk.gradle.config.LocalSource.mpsLibrary","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-local-source/mps-library.html","searchKeys":["mpsLibrary","open override fun mpsLibrary(folder: File)","org.modelix.model.sync.bulk.gradle.config.LocalSource.mpsLibrary"]},{"name":"open override fun mpsLibrary(folder: File)","description":"org.modelix.model.sync.bulk.gradle.config.LocalTarget.mpsLibrary","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-local-target/mps-library.html","searchKeys":["mpsLibrary","open override fun mpsLibrary(folder: File)","org.modelix.model.sync.bulk.gradle.config.LocalTarget.mpsLibrary"]},{"name":"open override var branchName: String?","description":"org.modelix.model.sync.bulk.gradle.config.ServerSource.branchName","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-server-source/branch-name.html","searchKeys":["branchName","open override var branchName: String?","org.modelix.model.sync.bulk.gradle.config.ServerSource.branchName"]},{"name":"open override var branchName: String?","description":"org.modelix.model.sync.bulk.gradle.config.ServerTarget.branchName","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-server-target/branch-name.html","searchKeys":["branchName","open override var branchName: String?","org.modelix.model.sync.bulk.gradle.config.ServerTarget.branchName"]},{"name":"open override var mpsDebugPort: Int?","description":"org.modelix.model.sync.bulk.gradle.config.LocalSource.mpsDebugPort","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-local-source/mps-debug-port.html","searchKeys":["mpsDebugPort","open override var mpsDebugPort: Int?","org.modelix.model.sync.bulk.gradle.config.LocalSource.mpsDebugPort"]},{"name":"open override var mpsDebugPort: Int?","description":"org.modelix.model.sync.bulk.gradle.config.LocalTarget.mpsDebugPort","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-local-target/mps-debug-port.html","searchKeys":["mpsDebugPort","open override var mpsDebugPort: Int?","org.modelix.model.sync.bulk.gradle.config.LocalTarget.mpsDebugPort"]},{"name":"open override var mpsHeapSize: String","description":"org.modelix.model.sync.bulk.gradle.config.LocalSource.mpsHeapSize","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-local-source/mps-heap-size.html","searchKeys":["mpsHeapSize","open override var mpsHeapSize: String","org.modelix.model.sync.bulk.gradle.config.LocalSource.mpsHeapSize"]},{"name":"open override var mpsHeapSize: String","description":"org.modelix.model.sync.bulk.gradle.config.LocalTarget.mpsHeapSize","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-local-target/mps-heap-size.html","searchKeys":["mpsHeapSize","open override var mpsHeapSize: String","org.modelix.model.sync.bulk.gradle.config.LocalTarget.mpsHeapSize"]},{"name":"open override var mpsHome: File?","description":"org.modelix.model.sync.bulk.gradle.config.LocalSource.mpsHome","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-local-source/mps-home.html","searchKeys":["mpsHome","open override var mpsHome: File?","org.modelix.model.sync.bulk.gradle.config.LocalSource.mpsHome"]},{"name":"open override var mpsHome: File?","description":"org.modelix.model.sync.bulk.gradle.config.LocalTarget.mpsHome","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-local-target/mps-home.html","searchKeys":["mpsHome","open override var mpsHome: File?","org.modelix.model.sync.bulk.gradle.config.LocalTarget.mpsHome"]},{"name":"open override var repositoryDir: File?","description":"org.modelix.model.sync.bulk.gradle.config.LocalSource.repositoryDir","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-local-source/repository-dir.html","searchKeys":["repositoryDir","open override var repositoryDir: File?","org.modelix.model.sync.bulk.gradle.config.LocalSource.repositoryDir"]},{"name":"open override var repositoryDir: File?","description":"org.modelix.model.sync.bulk.gradle.config.LocalTarget.repositoryDir","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-local-target/repository-dir.html","searchKeys":["repositoryDir","open override var repositoryDir: File?","org.modelix.model.sync.bulk.gradle.config.LocalTarget.repositoryDir"]},{"name":"open override var repositoryId: String?","description":"org.modelix.model.sync.bulk.gradle.config.ServerSource.repositoryId","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-server-source/repository-id.html","searchKeys":["repositoryId","open override var repositoryId: String?","org.modelix.model.sync.bulk.gradle.config.ServerSource.repositoryId"]},{"name":"open override var repositoryId: String?","description":"org.modelix.model.sync.bulk.gradle.config.ServerTarget.repositoryId","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-server-target/repository-id.html","searchKeys":["repositoryId","open override var repositoryId: String?","org.modelix.model.sync.bulk.gradle.config.ServerTarget.repositoryId"]},{"name":"open override var requestTimeoutSeconds: Int","description":"org.modelix.model.sync.bulk.gradle.config.ServerSource.requestTimeoutSeconds","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-server-source/request-timeout-seconds.html","searchKeys":["requestTimeoutSeconds","open override var requestTimeoutSeconds: Int","org.modelix.model.sync.bulk.gradle.config.ServerSource.requestTimeoutSeconds"]},{"name":"open override var requestTimeoutSeconds: Int","description":"org.modelix.model.sync.bulk.gradle.config.ServerTarget.requestTimeoutSeconds","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-server-target/request-timeout-seconds.html","searchKeys":["requestTimeoutSeconds","open override var requestTimeoutSeconds: Int","org.modelix.model.sync.bulk.gradle.config.ServerTarget.requestTimeoutSeconds"]},{"name":"open override var url: String?","description":"org.modelix.model.sync.bulk.gradle.config.ServerSource.url","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-server-source/url.html","searchKeys":["url","open override var url: String?","org.modelix.model.sync.bulk.gradle.config.ServerSource.url"]},{"name":"open override var url: String?","description":"org.modelix.model.sync.bulk.gradle.config.ServerTarget.url","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-server-target/url.html","searchKeys":["url","open override var url: String?","org.modelix.model.sync.bulk.gradle.config.ServerTarget.url"]},{"name":"val branchName: Property<String>","description":"org.modelix.model.sync.bulk.gradle.tasks.ExportFromModelServer.branchName","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-export-from-model-server/branch-name.html","searchKeys":["branchName","val branchName: Property<String>","org.modelix.model.sync.bulk.gradle.tasks.ExportFromModelServer.branchName"]},{"name":"val branchName: Property<String>","description":"org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer.branchName","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-import-into-model-server/branch-name.html","searchKeys":["branchName","val branchName: Property<String>","org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer.branchName"]},{"name":"val continueOnError: Property<Boolean>","description":"org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer.continueOnError","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-import-into-model-server/continue-on-error.html","searchKeys":["continueOnError","val continueOnError: Property<Boolean>","org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer.continueOnError"]},{"name":"val includedModulePrefixes: SetProperty<String>","description":"org.modelix.model.sync.bulk.gradle.tasks.ExportFromModelServer.includedModulePrefixes","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-export-from-model-server/included-module-prefixes.html","searchKeys":["includedModulePrefixes","val includedModulePrefixes: SetProperty<String>","org.modelix.model.sync.bulk.gradle.tasks.ExportFromModelServer.includedModulePrefixes"]},{"name":"val includedModulePrefixes: SetProperty<String>","description":"org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer.includedModulePrefixes","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-import-into-model-server/included-module-prefixes.html","searchKeys":["includedModulePrefixes","val includedModulePrefixes: SetProperty<String>","org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer.includedModulePrefixes"]},{"name":"val includedModules: SetProperty<String>","description":"org.modelix.model.sync.bulk.gradle.tasks.ExportFromModelServer.includedModules","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-export-from-model-server/included-modules.html","searchKeys":["includedModules","val includedModules: SetProperty<String>","org.modelix.model.sync.bulk.gradle.tasks.ExportFromModelServer.includedModules"]},{"name":"val includedModules: SetProperty<String>","description":"org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer.includedModules","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-import-into-model-server/included-modules.html","searchKeys":["includedModules","val includedModules: SetProperty<String>","org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer.includedModules"]},{"name":"val inputDir: DirectoryProperty","description":"org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer.inputDir","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-import-into-model-server/input-dir.html","searchKeys":["inputDir","val inputDir: DirectoryProperty","org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer.inputDir"]},{"name":"val outputDir: DirectoryProperty","description":"org.modelix.model.sync.bulk.gradle.tasks.ExportFromModelServer.outputDir","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-export-from-model-server/output-dir.html","searchKeys":["outputDir","val outputDir: DirectoryProperty","org.modelix.model.sync.bulk.gradle.tasks.ExportFromModelServer.outputDir"]},{"name":"val registeredLanguages: SetProperty<ILanguage>","description":"org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer.registeredLanguages","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-import-into-model-server/registered-languages.html","searchKeys":["registeredLanguages","val registeredLanguages: SetProperty<ILanguage>","org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer.registeredLanguages"]},{"name":"val repositoryId: Property<String>","description":"org.modelix.model.sync.bulk.gradle.tasks.ExportFromModelServer.repositoryId","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-export-from-model-server/repository-id.html","searchKeys":["repositoryId","val repositoryId: Property<String>","org.modelix.model.sync.bulk.gradle.tasks.ExportFromModelServer.repositoryId"]},{"name":"val repositoryId: Property<String>","description":"org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer.repositoryId","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-import-into-model-server/repository-id.html","searchKeys":["repositoryId","val repositoryId: Property<String>","org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer.repositoryId"]},{"name":"val requestTimeoutSeconds: Property<Int>","description":"org.modelix.model.sync.bulk.gradle.tasks.ExportFromModelServer.requestTimeoutSeconds","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-export-from-model-server/request-timeout-seconds.html","searchKeys":["requestTimeoutSeconds","val requestTimeoutSeconds: Property<Int>","org.modelix.model.sync.bulk.gradle.tasks.ExportFromModelServer.requestTimeoutSeconds"]},{"name":"val requestTimeoutSeconds: Property<Int>","description":"org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer.requestTimeoutSeconds","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-import-into-model-server/request-timeout-seconds.html","searchKeys":["requestTimeoutSeconds","val requestTimeoutSeconds: Property<Int>","org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer.requestTimeoutSeconds"]},{"name":"val revision: Property<String>","description":"org.modelix.model.sync.bulk.gradle.tasks.ExportFromModelServer.revision","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-export-from-model-server/revision.html","searchKeys":["revision","val revision: Property<String>","org.modelix.model.sync.bulk.gradle.tasks.ExportFromModelServer.revision"]},{"name":"val settings: Property<ModelSyncGradleSettings>","description":"org.modelix.model.sync.bulk.gradle.tasks.ValidateSyncSettings.settings","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-validate-sync-settings/settings.html","searchKeys":["settings","val settings: Property<ModelSyncGradleSettings>","org.modelix.model.sync.bulk.gradle.tasks.ValidateSyncSettings.settings"]},{"name":"val url: Property<String>","description":"org.modelix.model.sync.bulk.gradle.tasks.ExportFromModelServer.url","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-export-from-model-server/url.html","searchKeys":["url","val url: Property<String>","org.modelix.model.sync.bulk.gradle.tasks.ExportFromModelServer.url"]},{"name":"val url: Property<String>","description":"org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer.url","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.tasks/-import-into-model-server/url.html","searchKeys":["url","val url: Property<String>","org.modelix.model.sync.bulk.gradle.tasks.ImportIntoModelServer.url"]},{"name":"var revision: String?","description":"org.modelix.model.sync.bulk.gradle.config.ServerSource.revision","location":"bulk-model-sync-gradle/org.modelix.model.sync.bulk.gradle.config/-server-source/revision.html","searchKeys":["revision","var revision: String?","org.modelix.model.sync.bulk.gradle.config.ServerSource.revision"]},{"name":"abstract class LightModelClientBuilder","description":"org.modelix.client.light.LightModelClientBuilder","location":"light-model-client/org.modelix.client.light/-light-model-client-builder/index.html","searchKeys":["LightModelClientBuilder","abstract class LightModelClientBuilder","org.modelix.client.light.LightModelClientBuilder"]},{"name":"abstract fun connect(messageReceiver: (message: MessageFromServer) -> Unit)","description":"org.modelix.client.light.LightModelClient.IConnection.connect","location":"light-model-client/org.modelix.client.light/-light-model-client/-i-connection/connect.html","searchKeys":["connect","abstract fun connect(messageReceiver: (message: MessageFromServer) -> Unit)","org.modelix.client.light.LightModelClient.IConnection.connect"]},{"name":"abstract fun disconnect()","description":"org.modelix.client.light.LightModelClient.IConnection.disconnect","location":"light-model-client/org.modelix.client.light/-light-model-client/-i-connection/disconnect.html","searchKeys":["disconnect","abstract fun disconnect()","org.modelix.client.light.LightModelClient.IConnection.disconnect"]},{"name":"abstract fun sendMessage(message: MessageFromClient)","description":"org.modelix.client.light.LightModelClient.IConnection.sendMessage","location":"light-model-client/org.modelix.client.light/-light-model-client/-i-connection/send-message.html","searchKeys":["sendMessage","abstract fun sendMessage(message: MessageFromClient)","org.modelix.client.light.LightModelClient.IConnection.sendMessage"]},{"name":"class LightClientNodeReference(val nodeId: NodeId) : INodeReference","description":"org.modelix.client.light.LightClientNodeReference","location":"light-model-client/org.modelix.client.light/-light-client-node-reference/index.html","searchKeys":["LightClientNodeReference","class LightClientNodeReference(val nodeId: NodeId) : INodeReference","org.modelix.client.light.LightClientNodeReference"]},{"name":"class LightModelClient","description":"org.modelix.client.light.LightModelClient","location":"light-model-client/org.modelix.client.light/-light-model-client/index.html","searchKeys":["LightModelClient","class LightModelClient","org.modelix.client.light.LightModelClient"]},{"name":"class ServerSideException(data: ExceptionData) : Exception","description":"org.modelix.client.light.ServerSideException","location":"light-model-client/org.modelix.client.light/-server-side-exception/index.html","searchKeys":["ServerSideException","class ServerSideException(data: ExceptionData) : Exception","org.modelix.client.light.ServerSideException"]},{"name":"class WebsocketConnection(val httpClient: HttpClient, val url: String) : LightModelClient.IConnection","description":"org.modelix.client.light.WebsocketConnection","location":"light-model-client/org.modelix.client.light/-websocket-connection/index.html","searchKeys":["WebsocketConnection","class WebsocketConnection(val httpClient: HttpClient, val url: String) : LightModelClient.IConnection","org.modelix.client.light.WebsocketConnection"]},{"name":"constructor()","description":"org.modelix.client.light.LightModelClient.Area.Area","location":"light-model-client/org.modelix.client.light/-light-model-client/-area/-area.html","searchKeys":["Area","constructor()","org.modelix.client.light.LightModelClient.Area.Area"]},{"name":"constructor()","description":"org.modelix.client.light.LightModelClientBuilder.LightModelClientBuilder","location":"light-model-client/org.modelix.client.light/-light-model-client-builder/-light-model-client-builder.html","searchKeys":["LightModelClientBuilder","constructor()","org.modelix.client.light.LightModelClientBuilder.LightModelClientBuilder"]},{"name":"constructor()","description":"org.modelix.client.light.PlatformSpecificLightModelClientBuilder.PlatformSpecificLightModelClientBuilder","location":"light-model-client/org.modelix.client.light/-platform-specific-light-model-client-builder/-platform-specific-light-model-client-builder.html","searchKeys":["PlatformSpecificLightModelClientBuilder","constructor()","org.modelix.client.light.PlatformSpecificLightModelClientBuilder.PlatformSpecificLightModelClientBuilder"]},{"name":"constructor(branchId: String?)","description":"org.modelix.client.light.LightModelClient.AreaReference.AreaReference","location":"light-model-client/org.modelix.client.light/-light-model-client/-area-reference/-area-reference.html","searchKeys":["AreaReference","constructor(branchId: String?)","org.modelix.client.light.LightModelClient.AreaReference.AreaReference"]},{"name":"constructor(data: ExceptionData)","description":"org.modelix.client.light.ServerSideException.ServerSideException","location":"light-model-client/org.modelix.client.light/-server-side-exception/-server-side-exception.html","searchKeys":["ServerSideException","constructor(data: ExceptionData)","org.modelix.client.light.ServerSideException.ServerSideException"]},{"name":"constructor(httpClient: HttpClient, url: String)","description":"org.modelix.client.light.WebsocketConnection.WebsocketConnection","location":"light-model-client/org.modelix.client.light/-websocket-connection/-websocket-connection.html","searchKeys":["WebsocketConnection","constructor(httpClient: HttpClient, url: String)","org.modelix.client.light.WebsocketConnection.WebsocketConnection"]},{"name":"constructor(nodeId: NodeId)","description":"org.modelix.client.light.LightClientNodeReference.LightClientNodeReference","location":"light-model-client/org.modelix.client.light/-light-client-node-reference/-light-client-node-reference.html","searchKeys":["LightClientNodeReference","constructor(nodeId: NodeId)","org.modelix.client.light.LightClientNodeReference.LightClientNodeReference"]},{"name":"constructor(nodeId: NodeId)","description":"org.modelix.client.light.LightModelClient.NodeAdapter.NodeAdapter","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/-node-adapter.html","searchKeys":["NodeAdapter","constructor(nodeId: NodeId)","org.modelix.client.light.LightModelClient.NodeAdapter.NodeAdapter"]},{"name":"data class AreaReference(val branchId: String?) : IAreaReference","description":"org.modelix.client.light.LightModelClient.AreaReference","location":"light-model-client/org.modelix.client.light/-light-model-client/-area-reference/index.html","searchKeys":["AreaReference","data class AreaReference(val branchId: String?) : IAreaReference","org.modelix.client.light.LightModelClient.AreaReference"]},{"name":"expect class PlatformSpecificLightModelClientBuilder : LightModelClientBuilder","description":"org.modelix.client.light.PlatformSpecificLightModelClientBuilder","location":"light-model-client/org.modelix.client.light/-platform-specific-light-model-client-builder/index.html","searchKeys":["PlatformSpecificLightModelClientBuilder","expect class PlatformSpecificLightModelClientBuilder : LightModelClientBuilder","org.modelix.client.light.PlatformSpecificLightModelClientBuilder"]},{"name":"fun <T : INode> Iterable<T>.filterLoaded(): List<T>","description":"org.modelix.client.light.filterLoaded","location":"light-model-client/org.modelix.client.light/filter-loaded.html","searchKeys":["filterLoaded","fun <T : INode> Iterable<T>.filterLoaded(): List<T>","org.modelix.client.light.filterLoaded"]},{"name":"fun <T : INode> Sequence<T>.filterLoaded(): Sequence<T>","description":"org.modelix.client.light.filterLoaded","location":"light-model-client/org.modelix.client.light/filter-loaded.html","searchKeys":["filterLoaded","fun <T : INode> Sequence<T>.filterLoaded(): Sequence<T>","org.modelix.client.light.filterLoaded"]},{"name":"fun <T> runRead(body: () -> T): T","description":"org.modelix.client.light.LightModelClient.runRead","location":"light-model-client/org.modelix.client.light/-light-model-client/run-read.html","searchKeys":["runRead","fun <T> runRead(body: () -> T): T","org.modelix.client.light.LightModelClient.runRead"]},{"name":"fun <T> runWrite(body: () -> T): T","description":"org.modelix.client.light.LightModelClient.runWrite","location":"light-model-client/org.modelix.client.light/-light-model-client/run-write.html","searchKeys":["runWrite","fun <T> runWrite(body: () -> T): T","org.modelix.client.light.LightModelClient.runWrite"]},{"name":"fun INode.isLoaded(): Boolean","description":"org.modelix.client.light.isLoaded","location":"light-model-client/org.modelix.client.light/is-loaded.html","searchKeys":["isLoaded","fun INode.isLoaded(): Boolean","org.modelix.client.light.isLoaded"]},{"name":"fun NodeData.asUpdateData(): NodeUpdateData","description":"org.modelix.client.light.asUpdateData","location":"light-model-client/org.modelix.client.light/as-update-data.html","searchKeys":["asUpdateData","fun NodeData.asUpdateData(): NodeUpdateData","org.modelix.client.light.asUpdateData"]},{"name":"fun autoFilterNonLoadedNodes(value: Boolean = true): LightModelClientBuilder","description":"org.modelix.client.light.LightModelClientBuilder.autoFilterNonLoadedNodes","location":"light-model-client/org.modelix.client.light/-light-model-client-builder/auto-filter-non-loaded-nodes.html","searchKeys":["autoFilterNonLoadedNodes","fun autoFilterNonLoadedNodes(value: Boolean = true): LightModelClientBuilder","org.modelix.client.light.LightModelClientBuilder.autoFilterNonLoadedNodes"]},{"name":"fun autoTransactions(): LightModelClientBuilder","description":"org.modelix.client.light.LightModelClientBuilder.autoTransactions","location":"light-model-client/org.modelix.client.light/-light-model-client-builder/auto-transactions.html","searchKeys":["autoTransactions","fun autoTransactions(): LightModelClientBuilder","org.modelix.client.light.LightModelClientBuilder.autoTransactions"]},{"name":"fun build(): LightModelClient","description":"org.modelix.client.light.LightModelClientBuilder.build","location":"light-model-client/org.modelix.client.light/-light-model-client-builder/build.html","searchKeys":["build","fun build(): LightModelClient","org.modelix.client.light.LightModelClientBuilder.build"]},{"name":"fun builder(): LightModelClientBuilder","description":"org.modelix.client.light.LightModelClient.Companion.builder","location":"light-model-client/org.modelix.client.light/-light-model-client/-companion/builder.html","searchKeys":["builder","fun builder(): LightModelClientBuilder","org.modelix.client.light.LightModelClient.Companion.builder"]},{"name":"fun builder(): LightModelClientBuilder","description":"org.modelix.client.light.LightModelClientJVM.builder","location":"light-model-client/org.modelix.client.light/-light-model-client-j-v-m/builder.html","searchKeys":["builder","fun builder(): LightModelClientBuilder","org.modelix.client.light.LightModelClientJVM.builder"]},{"name":"fun changeQuery(query: ModelQuery)","description":"org.modelix.client.light.LightModelClient.changeQuery","location":"light-model-client/org.modelix.client.light/-light-model-client/change-query.html","searchKeys":["changeQuery","fun changeQuery(query: ModelQuery)","org.modelix.client.light.LightModelClient.changeQuery"]},{"name":"fun checkContainmentConsistency()","description":"org.modelix.client.light.LightModelClient.NodeAdapter.checkContainmentConsistency","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/check-containment-consistency.html","searchKeys":["checkContainmentConsistency","fun checkContainmentConsistency()","org.modelix.client.light.LightModelClient.NodeAdapter.checkContainmentConsistency"]},{"name":"fun checkException()","description":"org.modelix.client.light.LightModelClient.checkException","location":"light-model-client/org.modelix.client.light/-light-model-client/check-exception.html","searchKeys":["checkException","fun checkException()","org.modelix.client.light.LightModelClient.checkException"]},{"name":"fun connection(connection: LightModelClient.IConnection): LightModelClientBuilder","description":"org.modelix.client.light.LightModelClientBuilder.connection","location":"light-model-client/org.modelix.client.light/-light-model-client-builder/connection.html","searchKeys":["connection","fun connection(connection: LightModelClient.IConnection): LightModelClientBuilder","org.modelix.client.light.LightModelClientBuilder.connection"]},{"name":"fun createLightModelClient(url: String = \"ws://localhost:48302/ws\", query: ModelQuery? = null): LightModelClient","description":"org.modelix.client.light.createLightModelClient","location":"light-model-client/org.modelix.client.light/create-light-model-client.html","searchKeys":["createLightModelClient","fun createLightModelClient(url: String = \"ws://localhost:48302/ws\", query: ModelQuery? = null): LightModelClient","org.modelix.client.light.createLightModelClient"]},{"name":"fun debugName(debugName: String): LightModelClientBuilder","description":"org.modelix.client.light.LightModelClientBuilder.debugName","location":"light-model-client/org.modelix.client.light/-light-model-client-builder/debug-name.html","searchKeys":["debugName","fun debugName(debugName: String): LightModelClientBuilder","org.modelix.client.light.LightModelClientBuilder.debugName"]},{"name":"fun dispose()","description":"org.modelix.client.light.LightModelClient.dispose","location":"light-model-client/org.modelix.client.light/-light-model-client/dispose.html","searchKeys":["dispose","fun dispose()","org.modelix.client.light.LightModelClient.dispose"]},{"name":"fun getClient(): LightModelClient","description":"org.modelix.client.light.LightModelClient.Area.getClient","location":"light-model-client/org.modelix.client.light/-light-model-client/-area/get-client.html","searchKeys":["getClient","fun getClient(): LightModelClient","org.modelix.client.light.LightModelClient.Area.getClient"]},{"name":"fun getClient(): LightModelClient","description":"org.modelix.client.light.LightModelClient.NodeAdapter.getClient","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/get-client.html","searchKeys":["getClient","fun getClient(): LightModelClient","org.modelix.client.light.LightModelClient.NodeAdapter.getClient"]},{"name":"fun getData(): NodeData","description":"org.modelix.client.light.LightModelClient.NodeAdapter.getData","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/get-data.html","searchKeys":["getData","fun getData(): NodeData","org.modelix.client.light.LightModelClient.NodeAdapter.getData"]},{"name":"fun getNode(nodeId: NodeId): LightModelClient.NodeAdapter","description":"org.modelix.client.light.LightModelClient.getNode","location":"light-model-client/org.modelix.client.light/-light-model-client/get-node.html","searchKeys":["getNode","fun getNode(nodeId: NodeId): LightModelClient.NodeAdapter","org.modelix.client.light.LightModelClient.getNode"]},{"name":"fun getNodeIfLoaded(nodeId: NodeId): INode?","description":"org.modelix.client.light.LightModelClient.getNodeIfLoaded","location":"light-model-client/org.modelix.client.light/-light-model-client/get-node-if-loaded.html","searchKeys":["getNodeIfLoaded","fun getNodeIfLoaded(nodeId: NodeId): INode?","org.modelix.client.light.LightModelClient.getNodeIfLoaded"]},{"name":"fun getRepositoryId(): String?","description":"org.modelix.client.light.LightModelClient.getRepositoryId","location":"light-model-client/org.modelix.client.light/-light-model-client/get-repository-id.html","searchKeys":["getRepositoryId","fun getRepositoryId(): String?","org.modelix.client.light.LightModelClient.getRepositoryId"]},{"name":"fun getRootNode(): INode?","description":"org.modelix.client.light.LightModelClient.getRootNode","location":"light-model-client/org.modelix.client.light/-light-model-client/get-root-node.html","searchKeys":["getRootNode","fun getRootNode(): INode?","org.modelix.client.light.LightModelClient.getRootNode"]},{"name":"fun host(host: String): LightModelClientBuilder","description":"org.modelix.client.light.LightModelClientBuilder.host","location":"light-model-client/org.modelix.client.light/-light-model-client-builder/host.html","searchKeys":["host","fun host(host: String): LightModelClientBuilder","org.modelix.client.light.LightModelClientBuilder.host"]},{"name":"fun httpClient(httpClient: HttpClient): LightModelClientBuilder","description":"org.modelix.client.light.LightModelClientBuilder.httpClient","location":"light-model-client/org.modelix.client.light/-light-model-client-builder/http-client.html","searchKeys":["httpClient","fun httpClient(httpClient: HttpClient): LightModelClientBuilder","org.modelix.client.light.LightModelClientBuilder.httpClient"]},{"name":"fun httpEngine(httpEngine: HttpClientEngine): LightModelClientBuilder","description":"org.modelix.client.light.LightModelClientBuilder.httpEngine","location":"light-model-client/org.modelix.client.light/-light-model-client-builder/http-engine.html","searchKeys":["httpEngine","fun httpEngine(httpEngine: HttpClientEngine): LightModelClientBuilder","org.modelix.client.light.LightModelClientBuilder.httpEngine"]},{"name":"fun httpEngine(httpEngineFactory: HttpClientEngineFactory<*>): LightModelClientBuilder","description":"org.modelix.client.light.LightModelClientBuilder.httpEngine","location":"light-model-client/org.modelix.client.light/-light-model-client-builder/http-engine.html","searchKeys":["httpEngine","fun httpEngine(httpEngineFactory: HttpClientEngineFactory<*>): LightModelClientBuilder","org.modelix.client.light.LightModelClientBuilder.httpEngine"]},{"name":"fun isInSync(): Boolean","description":"org.modelix.client.light.LightModelClient.isInSync","location":"light-model-client/org.modelix.client.light/-light-model-client/is-in-sync.html","searchKeys":["isInSync","fun isInSync(): Boolean","org.modelix.client.light.LightModelClient.isInSync"]},{"name":"fun isInitialized(): Boolean","description":"org.modelix.client.light.LightModelClient.isInitialized","location":"light-model-client/org.modelix.client.light/-light-model-client/is-initialized.html","searchKeys":["isInitialized","fun isInitialized(): Boolean","org.modelix.client.light.LightModelClient.isInitialized"]},{"name":"fun modelQLClient(c: ModelQLClient): LightModelClientBuilder","description":"org.modelix.client.light.LightModelClientBuilder.modelQLClient","location":"light-model-client/org.modelix.client.light/-light-model-client-builder/model-q-l-client.html","searchKeys":["modelQLClient","fun modelQLClient(c: ModelQLClient): LightModelClientBuilder","org.modelix.client.light.LightModelClientBuilder.modelQLClient"]},{"name":"fun port(port: Int): LightModelClientBuilder","description":"org.modelix.client.light.LightModelClientBuilder.port","location":"light-model-client/org.modelix.client.light/-light-model-client-builder/port.html","searchKeys":["port","fun port(port: Int): LightModelClientBuilder","org.modelix.client.light.LightModelClientBuilder.port"]},{"name":"fun register()","description":"org.modelix.client.light.LightClientReferenceSerializer.register","location":"light-model-client/org.modelix.client.light/-light-client-reference-serializer/register.html","searchKeys":["register","fun register()","org.modelix.client.light.LightClientReferenceSerializer.register"]},{"name":"fun tryGetParentId(nodeId: NodeId): NodeId?","description":"org.modelix.client.light.LightModelClient.tryGetParentId","location":"light-model-client/org.modelix.client.light/-light-model-client/try-get-parent-id.html","searchKeys":["tryGetParentId","fun tryGetParentId(nodeId: NodeId): NodeId?","org.modelix.client.light.LightModelClient.tryGetParentId"]},{"name":"fun unregister()","description":"org.modelix.client.light.LightClientReferenceSerializer.unregister","location":"light-model-client/org.modelix.client.light/-light-client-reference-serializer/unregister.html","searchKeys":["unregister","fun unregister()","org.modelix.client.light.LightClientReferenceSerializer.unregister"]},{"name":"fun url(url: String): LightModelClientBuilder","description":"org.modelix.client.light.LightModelClientBuilder.url","location":"light-model-client/org.modelix.client.light/-light-model-client-builder/url.html","searchKeys":["url","fun url(url: String): LightModelClientBuilder","org.modelix.client.light.LightModelClientBuilder.url"]},{"name":"inner class Area : IArea","description":"org.modelix.client.light.LightModelClient.Area","location":"light-model-client/org.modelix.client.light/-light-model-client/-area/index.html","searchKeys":["Area","inner class Area : IArea","org.modelix.client.light.LightModelClient.Area"]},{"name":"inner class NodeAdapter(var nodeId: NodeId) : INodeEx, ISupportsModelQL","description":"org.modelix.client.light.LightModelClient.NodeAdapter","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/index.html","searchKeys":["NodeAdapter","inner class NodeAdapter(var nodeId: NodeId) : INodeEx, ISupportsModelQL","org.modelix.client.light.LightModelClient.NodeAdapter"]},{"name":"interface IConnection","description":"org.modelix.client.light.LightModelClient.IConnection","location":"light-model-client/org.modelix.client.light/-light-model-client/-i-connection/index.html","searchKeys":["IConnection","interface IConnection","org.modelix.client.light.LightModelClient.IConnection"]},{"name":"object Companion","description":"org.modelix.client.light.LightModelClient.Companion","location":"light-model-client/org.modelix.client.light/-light-model-client/-companion/index.html","searchKeys":["Companion","object Companion","org.modelix.client.light.LightModelClient.Companion"]},{"name":"object LightClientReferenceSerializer : INodeReferenceSerializerEx","description":"org.modelix.client.light.LightClientReferenceSerializer","location":"light-model-client/org.modelix.client.light/-light-client-reference-serializer/index.html","searchKeys":["LightClientReferenceSerializer","object LightClientReferenceSerializer : INodeReferenceSerializerEx","org.modelix.client.light.LightClientReferenceSerializer"]},{"name":"object LightModelClientJVM","description":"org.modelix.client.light.LightModelClientJVM","location":"light-model-client/org.modelix.client.light/-light-model-client-j-v-m/index.html","searchKeys":["LightModelClientJVM","object LightModelClientJVM","org.modelix.client.light.LightModelClientJVM"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"org.modelix.client.light.LightModelClient.NodeAdapter.equals","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","org.modelix.client.light.LightModelClient.NodeAdapter.equals"]},{"name":"open override fun <T> executeRead(f: () -> T): T","description":"org.modelix.client.light.LightModelClient.Area.executeRead","location":"light-model-client/org.modelix.client.light/-light-model-client/-area/execute-read.html","searchKeys":["executeRead","open override fun <T> executeRead(f: () -> T): T","org.modelix.client.light.LightModelClient.Area.executeRead"]},{"name":"open override fun <T> executeWrite(f: () -> T): T","description":"org.modelix.client.light.LightModelClient.Area.executeWrite","location":"light-model-client/org.modelix.client.light/-light-model-client/-area/execute-write.html","searchKeys":["executeWrite","open override fun <T> executeWrite(f: () -> T): T","org.modelix.client.light.LightModelClient.Area.executeWrite"]},{"name":"open override fun addListener(l: IAreaListener)","description":"org.modelix.client.light.LightModelClient.Area.addListener","location":"light-model-client/org.modelix.client.light/-light-model-client/-area/add-listener.html","searchKeys":["addListener","open override fun addListener(l: IAreaListener)","org.modelix.client.light.LightModelClient.Area.addListener"]},{"name":"open override fun addNewChild(role: String?, index: Int, concept: IConcept?): INode","description":"org.modelix.client.light.LightModelClient.NodeAdapter.addNewChild","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(role: String?, index: Int, concept: IConcept?): INode","org.modelix.client.light.LightModelClient.NodeAdapter.addNewChild"]},{"name":"open override fun addNewChild(role: String?, index: Int, concept: IConceptReference?): INode","description":"org.modelix.client.light.LightModelClient.NodeAdapter.addNewChild","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/add-new-child.html","searchKeys":["addNewChild","open override fun addNewChild(role: String?, index: Int, concept: IConceptReference?): INode","org.modelix.client.light.LightModelClient.NodeAdapter.addNewChild"]},{"name":"open override fun canRead(): Boolean","description":"org.modelix.client.light.LightModelClient.Area.canRead","location":"light-model-client/org.modelix.client.light/-light-model-client/-area/can-read.html","searchKeys":["canRead","open override fun canRead(): Boolean","org.modelix.client.light.LightModelClient.Area.canRead"]},{"name":"open override fun canWrite(): Boolean","description":"org.modelix.client.light.LightModelClient.Area.canWrite","location":"light-model-client/org.modelix.client.light/-light-model-client/-area/can-write.html","searchKeys":["canWrite","open override fun canWrite(): Boolean","org.modelix.client.light.LightModelClient.Area.canWrite"]},{"name":"open override fun collectAreas(): List<IArea>","description":"org.modelix.client.light.LightModelClient.Area.collectAreas","location":"light-model-client/org.modelix.client.light/-light-model-client/-area/collect-areas.html","searchKeys":["collectAreas","open override fun collectAreas(): List<IArea>","org.modelix.client.light.LightModelClient.Area.collectAreas"]},{"name":"open override fun connect(messageReceiver: (message: MessageFromServer) -> Unit)","description":"org.modelix.client.light.WebsocketConnection.connect","location":"light-model-client/org.modelix.client.light/-websocket-connection/connect.html","searchKeys":["connect","open override fun connect(messageReceiver: (message: MessageFromServer) -> Unit)","org.modelix.client.light.WebsocketConnection.connect"]},{"name":"open override fun createQueryExecutor(): IQueryExecutor<INode>","description":"org.modelix.client.light.LightModelClient.NodeAdapter.createQueryExecutor","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/create-query-executor.html","searchKeys":["createQueryExecutor","open override fun createQueryExecutor(): IQueryExecutor<INode>","org.modelix.client.light.LightModelClient.NodeAdapter.createQueryExecutor"]},{"name":"open override fun deserialize(serialized: String): INodeReference","description":"org.modelix.client.light.LightClientReferenceSerializer.deserialize","location":"light-model-client/org.modelix.client.light/-light-client-reference-serializer/deserialize.html","searchKeys":["deserialize","open override fun deserialize(serialized: String): INodeReference","org.modelix.client.light.LightClientReferenceSerializer.deserialize"]},{"name":"open override fun disconnect()","description":"org.modelix.client.light.WebsocketConnection.disconnect","location":"light-model-client/org.modelix.client.light/-websocket-connection/disconnect.html","searchKeys":["disconnect","open override fun disconnect()","org.modelix.client.light.WebsocketConnection.disconnect"]},{"name":"open override fun getArea(): IArea","description":"org.modelix.client.light.LightModelClient.NodeAdapter.getArea","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/get-area.html","searchKeys":["getArea","open override fun getArea(): IArea","org.modelix.client.light.LightModelClient.NodeAdapter.getArea"]},{"name":"open override fun getChildren(role: String?): List<LightModelClient.NodeAdapter>","description":"org.modelix.client.light.LightModelClient.NodeAdapter.getChildren","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/get-children.html","searchKeys":["getChildren","open override fun getChildren(role: String?): List<LightModelClient.NodeAdapter>","org.modelix.client.light.LightModelClient.NodeAdapter.getChildren"]},{"name":"open override fun getConceptReference(): IConceptReference?","description":"org.modelix.client.light.LightModelClient.NodeAdapter.getConceptReference","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/get-concept-reference.html","searchKeys":["getConceptReference","open override fun getConceptReference(): IConceptReference?","org.modelix.client.light.LightModelClient.NodeAdapter.getConceptReference"]},{"name":"open override fun getPropertyRoles(): List<String>","description":"org.modelix.client.light.LightModelClient.NodeAdapter.getPropertyRoles","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/get-property-roles.html","searchKeys":["getPropertyRoles","open override fun getPropertyRoles(): List<String>","org.modelix.client.light.LightModelClient.NodeAdapter.getPropertyRoles"]},{"name":"open override fun getPropertyValue(role: String): String?","description":"org.modelix.client.light.LightModelClient.NodeAdapter.getPropertyValue","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/get-property-value.html","searchKeys":["getPropertyValue","open override fun getPropertyValue(role: String): String?","org.modelix.client.light.LightModelClient.NodeAdapter.getPropertyValue"]},{"name":"open override fun getReference(): IAreaReference","description":"org.modelix.client.light.LightModelClient.Area.getReference","location":"light-model-client/org.modelix.client.light/-light-model-client/-area/get-reference.html","searchKeys":["getReference","open override fun getReference(): IAreaReference","org.modelix.client.light.LightModelClient.Area.getReference"]},{"name":"open override fun getReferenceRoles(): List<String>","description":"org.modelix.client.light.LightModelClient.NodeAdapter.getReferenceRoles","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/get-reference-roles.html","searchKeys":["getReferenceRoles","open override fun getReferenceRoles(): List<String>","org.modelix.client.light.LightModelClient.NodeAdapter.getReferenceRoles"]},{"name":"open override fun getReferenceTarget(role: String): LightModelClient.NodeAdapter?","description":"org.modelix.client.light.LightModelClient.NodeAdapter.getReferenceTarget","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/get-reference-target.html","searchKeys":["getReferenceTarget","open override fun getReferenceTarget(role: String): LightModelClient.NodeAdapter?","org.modelix.client.light.LightModelClient.NodeAdapter.getReferenceTarget"]},{"name":"open override fun getReferenceTargetRef(role: String): LightClientNodeReference?","description":"org.modelix.client.light.LightModelClient.NodeAdapter.getReferenceTargetRef","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/get-reference-target-ref.html","searchKeys":["getReferenceTargetRef","open override fun getReferenceTargetRef(role: String): LightClientNodeReference?","org.modelix.client.light.LightModelClient.NodeAdapter.getReferenceTargetRef"]},{"name":"open override fun getRoot(): INode","description":"org.modelix.client.light.LightModelClient.Area.getRoot","location":"light-model-client/org.modelix.client.light/-light-model-client/-area/get-root.html","searchKeys":["getRoot","open override fun getRoot(): INode","org.modelix.client.light.LightModelClient.Area.getRoot"]},{"name":"open override fun hashCode(): Int","description":"org.modelix.client.light.LightModelClient.NodeAdapter.hashCode","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","org.modelix.client.light.LightModelClient.NodeAdapter.hashCode"]},{"name":"open override fun moveChild(role: String?, index: Int, child: INode)","description":"org.modelix.client.light.LightModelClient.NodeAdapter.moveChild","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/move-child.html","searchKeys":["moveChild","open override fun moveChild(role: String?, index: Int, child: INode)","org.modelix.client.light.LightModelClient.NodeAdapter.moveChild"]},{"name":"open override fun removeChild(child: INode)","description":"org.modelix.client.light.LightModelClient.NodeAdapter.removeChild","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/remove-child.html","searchKeys":["removeChild","open override fun removeChild(child: INode)","org.modelix.client.light.LightModelClient.NodeAdapter.removeChild"]},{"name":"open override fun removeListener(l: IAreaListener)","description":"org.modelix.client.light.LightModelClient.Area.removeListener","location":"light-model-client/org.modelix.client.light/-light-model-client/-area/remove-listener.html","searchKeys":["removeListener","open override fun removeListener(l: IAreaListener)","org.modelix.client.light.LightModelClient.Area.removeListener"]},{"name":"open override fun resolveArea(ref: IAreaReference): IArea?","description":"org.modelix.client.light.LightModelClient.Area.resolveArea","location":"light-model-client/org.modelix.client.light/-light-model-client/-area/resolve-area.html","searchKeys":["resolveArea","open override fun resolveArea(ref: IAreaReference): IArea?","org.modelix.client.light.LightModelClient.Area.resolveArea"]},{"name":"open override fun resolveBranch(id: String): IBranch?","description":"org.modelix.client.light.LightModelClient.Area.resolveBranch","location":"light-model-client/org.modelix.client.light/-light-model-client/-area/resolve-branch.html","searchKeys":["resolveBranch","open override fun resolveBranch(id: String): IBranch?","org.modelix.client.light.LightModelClient.Area.resolveBranch"]},{"name":"open override fun resolveConcept(ref: IConceptReference): IConcept?","description":"org.modelix.client.light.LightModelClient.Area.resolveConcept","location":"light-model-client/org.modelix.client.light/-light-model-client/-area/resolve-concept.html","searchKeys":["resolveConcept","open override fun resolveConcept(ref: IConceptReference): IConcept?","org.modelix.client.light.LightModelClient.Area.resolveConcept"]},{"name":"open override fun resolveNode(area: IArea?): INode?","description":"org.modelix.client.light.LightClientNodeReference.resolveNode","location":"light-model-client/org.modelix.client.light/-light-client-node-reference/resolve-node.html","searchKeys":["resolveNode","open override fun resolveNode(area: IArea?): INode?","org.modelix.client.light.LightClientNodeReference.resolveNode"]},{"name":"open override fun resolveNode(ref: INodeReference): INode?","description":"org.modelix.client.light.LightModelClient.Area.resolveNode","location":"light-model-client/org.modelix.client.light/-light-model-client/-area/resolve-node.html","searchKeys":["resolveNode","open override fun resolveNode(ref: INodeReference): INode?","org.modelix.client.light.LightModelClient.Area.resolveNode"]},{"name":"open override fun resolveOriginalNode(ref: INodeReference): INode?","description":"org.modelix.client.light.LightModelClient.Area.resolveOriginalNode","location":"light-model-client/org.modelix.client.light/-light-model-client/-area/resolve-original-node.html","searchKeys":["resolveOriginalNode","open override fun resolveOriginalNode(ref: INodeReference): INode?","org.modelix.client.light.LightModelClient.Area.resolveOriginalNode"]},{"name":"open override fun sendMessage(message: MessageFromClient)","description":"org.modelix.client.light.WebsocketConnection.sendMessage","location":"light-model-client/org.modelix.client.light/-websocket-connection/send-message.html","searchKeys":["sendMessage","open override fun sendMessage(message: MessageFromClient)","org.modelix.client.light.WebsocketConnection.sendMessage"]},{"name":"open override fun serialize(ref: INodeReference): String","description":"org.modelix.client.light.LightClientReferenceSerializer.serialize","location":"light-model-client/org.modelix.client.light/-light-client-reference-serializer/serialize.html","searchKeys":["serialize","open override fun serialize(ref: INodeReference): String","org.modelix.client.light.LightClientReferenceSerializer.serialize"]},{"name":"open override fun setPropertyValue(propertyRole: String, value: String?)","description":"org.modelix.client.light.LightModelClient.NodeAdapter.setPropertyValue","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/set-property-value.html","searchKeys":["setPropertyValue","open override fun setPropertyValue(propertyRole: String, value: String?)","org.modelix.client.light.LightModelClient.NodeAdapter.setPropertyValue"]},{"name":"open override fun setReferenceTarget(role: String, target: INode?)","description":"org.modelix.client.light.LightModelClient.NodeAdapter.setReferenceTarget","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(role: String, target: INode?)","org.modelix.client.light.LightModelClient.NodeAdapter.setReferenceTarget"]},{"name":"open override fun setReferenceTarget(role: String, target: INodeReference?)","description":"org.modelix.client.light.LightModelClient.NodeAdapter.setReferenceTarget","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/set-reference-target.html","searchKeys":["setReferenceTarget","open override fun setReferenceTarget(role: String, target: INodeReference?)","org.modelix.client.light.LightModelClient.NodeAdapter.setReferenceTarget"]},{"name":"open override fun toString(): String","description":"org.modelix.client.light.LightModelClient.NodeAdapter.toString","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/to-string.html","searchKeys":["toString","open override fun toString(): String","org.modelix.client.light.LightModelClient.NodeAdapter.toString"]},{"name":"open override fun usesRoleIds(): Boolean","description":"org.modelix.client.light.LightModelClient.NodeAdapter.usesRoleIds","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/uses-role-ids.html","searchKeys":["usesRoleIds","open override fun usesRoleIds(): Boolean","org.modelix.client.light.LightModelClient.NodeAdapter.usesRoleIds"]},{"name":"open override val allChildren: List<LightModelClient.NodeAdapter>","description":"org.modelix.client.light.LightModelClient.NodeAdapter.allChildren","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/all-children.html","searchKeys":["allChildren","open override val allChildren: List<LightModelClient.NodeAdapter>","org.modelix.client.light.LightModelClient.NodeAdapter.allChildren"]},{"name":"open override val concept: IConcept?","description":"org.modelix.client.light.LightModelClient.NodeAdapter.concept","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/concept.html","searchKeys":["concept","open override val concept: IConcept?","org.modelix.client.light.LightModelClient.NodeAdapter.concept"]},{"name":"open override val isValid: Boolean","description":"org.modelix.client.light.LightModelClient.NodeAdapter.isValid","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/is-valid.html","searchKeys":["isValid","open override val isValid: Boolean","org.modelix.client.light.LightModelClient.NodeAdapter.isValid"]},{"name":"open override val parent: LightModelClient.NodeAdapter?","description":"org.modelix.client.light.LightModelClient.NodeAdapter.parent","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/parent.html","searchKeys":["parent","open override val parent: LightModelClient.NodeAdapter?","org.modelix.client.light.LightModelClient.NodeAdapter.parent"]},{"name":"open override val prefix: String","description":"org.modelix.client.light.LightClientReferenceSerializer.prefix","location":"light-model-client/org.modelix.client.light/-light-client-reference-serializer/prefix.html","searchKeys":["prefix","open override val prefix: String","org.modelix.client.light.LightClientReferenceSerializer.prefix"]},{"name":"open override val reference: INodeReference","description":"org.modelix.client.light.LightModelClient.NodeAdapter.reference","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/reference.html","searchKeys":["reference","open override val reference: INodeReference","org.modelix.client.light.LightModelClient.NodeAdapter.reference"]},{"name":"open override val roleInParent: String?","description":"org.modelix.client.light.LightModelClient.NodeAdapter.roleInParent","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/role-in-parent.html","searchKeys":["roleInParent","open override val roleInParent: String?","org.modelix.client.light.LightModelClient.NodeAdapter.roleInParent"]},{"name":"open override val supportedReferenceClasses: Set<KClass<LightClientNodeReference>>","description":"org.modelix.client.light.LightClientReferenceSerializer.supportedReferenceClasses","location":"light-model-client/org.modelix.client.light/-light-client-reference-serializer/supported-reference-classes.html","searchKeys":["supportedReferenceClasses","open override val supportedReferenceClasses: Set<KClass<LightClientNodeReference>>","org.modelix.client.light.LightClientReferenceSerializer.supportedReferenceClasses"]},{"name":"suspend fun waitForRootNode(timeout: Duration = 30.seconds): INode?","description":"org.modelix.client.light.LightModelClient.waitForRootNode","location":"light-model-client/org.modelix.client.light/-light-model-client/wait-for-root-node.html","searchKeys":["waitForRootNode","suspend fun waitForRootNode(timeout: Duration = 30.seconds): INode?","org.modelix.client.light.LightModelClient.waitForRootNode"]},{"name":"val autoFilterNonLoadedNodes: Boolean","description":"org.modelix.client.light.LightModelClient.autoFilterNonLoadedNodes","location":"light-model-client/org.modelix.client.light/-light-model-client/auto-filter-non-loaded-nodes.html","searchKeys":["autoFilterNonLoadedNodes","val autoFilterNonLoadedNodes: Boolean","org.modelix.client.light.LightModelClient.autoFilterNonLoadedNodes"]},{"name":"val branchId: String?","description":"org.modelix.client.light.LightModelClient.AreaReference.branchId","location":"light-model-client/org.modelix.client.light/-light-model-client/-area-reference/branch-id.html","searchKeys":["branchId","val branchId: String?","org.modelix.client.light.LightModelClient.AreaReference.branchId"]},{"name":"val connection: LightModelClient.IConnection","description":"org.modelix.client.light.LightModelClient.connection","location":"light-model-client/org.modelix.client.light/-light-model-client/connection.html","searchKeys":["connection","val connection: LightModelClient.IConnection","org.modelix.client.light.LightModelClient.connection"]},{"name":"val coroutineScope: CoroutineScope","description":"org.modelix.client.light.WebsocketConnection.coroutineScope","location":"light-model-client/org.modelix.client.light/-websocket-connection/coroutine-scope.html","searchKeys":["coroutineScope","val coroutineScope: CoroutineScope","org.modelix.client.light.WebsocketConnection.coroutineScope"]},{"name":"val debugName: String","description":"org.modelix.client.light.LightModelClient.debugName","location":"light-model-client/org.modelix.client.light/-light-model-client/debug-name.html","searchKeys":["debugName","val debugName: String","org.modelix.client.light.LightModelClient.debugName"]},{"name":"val httpClient: HttpClient","description":"org.modelix.client.light.WebsocketConnection.httpClient","location":"light-model-client/org.modelix.client.light/-websocket-connection/http-client.html","searchKeys":["httpClient","val httpClient: HttpClient","org.modelix.client.light.WebsocketConnection.httpClient"]},{"name":"val modelQLClient: ModelQLClient? = null","description":"org.modelix.client.light.LightModelClient.modelQLClient","location":"light-model-client/org.modelix.client.light/-light-model-client/model-q-l-client.html","searchKeys":["modelQLClient","val modelQLClient: ModelQLClient? = null","org.modelix.client.light.LightModelClient.modelQLClient"]},{"name":"val nodeId: NodeId","description":"org.modelix.client.light.LightClientNodeReference.nodeId","location":"light-model-client/org.modelix.client.light/-light-client-node-reference/node-id.html","searchKeys":["nodeId","val nodeId: NodeId","org.modelix.client.light.LightClientNodeReference.nodeId"]},{"name":"val outgoingMessagesChannel: Channel<MessageFromClient>","description":"org.modelix.client.light.WebsocketConnection.outgoingMessagesChannel","location":"light-model-client/org.modelix.client.light/-websocket-connection/outgoing-messages-channel.html","searchKeys":["outgoingMessagesChannel","val outgoingMessagesChannel: Channel<MessageFromClient>","org.modelix.client.light.WebsocketConnection.outgoingMessagesChannel"]},{"name":"val url: String","description":"org.modelix.client.light.WebsocketConnection.url","location":"light-model-client/org.modelix.client.light/-websocket-connection/url.html","searchKeys":["url","val url: String","org.modelix.client.light.WebsocketConnection.url"]},{"name":"var nodeId: NodeId","description":"org.modelix.client.light.LightModelClient.NodeAdapter.nodeId","location":"light-model-client/org.modelix.client.light/-light-model-client/-node-adapter/node-id.html","searchKeys":["nodeId","var nodeId: NodeId","org.modelix.client.light.LightModelClient.NodeAdapter.nodeId"]}]