# WARNING - EXPERIMENTAL
# This file was auto generated from the existing API using an IntelliJ plugin,
# see https://www.jetbrains.com/help/idea/openapi.html#generate_openapi
#
# Manual changes were done for this 'spec' to work in-place with the
# model-server for now. A lot of changes were done and are still necessary
# to make this OpenAPI a viable artifact. It will most likely be split
# into multiple OpenAPI files.

openapi: "3.0.3"
info:
  title: "model-server public API"
  description: "modelix public API"
  version: "1.0.0"
servers:
  - url: "/"
    description: model-server
paths:
  /headers:
    get:
      operationId: getHeaders
      tags:
        - v1
      responses:
        "200":
          $ref: "#/components/responses/200"
        default:
          $ref: "#/components/responses/GeneralError"
  /counter/{key}:
    post:
      tags:
        - v1
      parameters:
        - name: key
          in: "path"
          required: true
          schema:
            type: string
      responses:
        "403":
          $ref: "#/components/responses/403"
        "401":
          $ref: "#/components/responses/401"
        "200":
          $ref: "#/components/responses/200"
        default:
          $ref: "#/components/responses/GeneralError"
  /get/{key}:
    get:
      tags:
        - v1
      parameters:
        - name: key
          in: "path"
          required: true
          schema:
            type: string
      responses:
        "403":
          $ref: "#/components/responses/403"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "200":
          $ref: "#/components/responses/200"
        default:
          $ref: "#/components/responses/GeneralError"
  /getAll:
    put:
      tags:
        - v1
      responses:
        "403":
          $ref: "#/components/responses/403"
        "401":
          $ref: "#/components/responses/401"
        "200":
          $ref: "#/components/responses/200json"
        default:
          $ref: "#/components/responses/GeneralError"
  /getEmail:
    get:
      tags:
        - v1
      responses:
        "200":
          $ref: "#/components/responses/200"
        default:
          $ref: "#/components/responses/GeneralError"
  /getRecursively/{key}:
    get:
      tags:
        - v1
      parameters:
        - name: key
          in: "path"
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/200json"
        default:
          $ref: "#/components/responses/GeneralError"
  /poll/{key}:
    get:
      tags:
        - v1
      parameters:
        - name: key
          in: "path"
          required: true
          schema:
            type: string
        - name: lastKnownValue
          in: "query"
          required: false
          schema:
            type: string
      responses:
        "403":
          $ref: "#/components/responses/403"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "200":
          $ref: "#/components/responses/200"
        default:
          $ref: "#/components/responses/GeneralError"
  /put/{key}:
    put:
      tags:
        - v1
      parameters:
        - name: key
          in: "path"
          required: true
          schema:
            type: string
      responses:
        "403":
          $ref: "#/components/responses/403"
        "401":
          $ref: "#/components/responses/401"
        "200":
          $ref: "#/components/responses/200"
        "404":
          $ref: "#/components/responses/404"
        default:
          $ref: "#/components/responses/GeneralError"
  /putAll:
    put:
      tags:
        - v1
      responses:
        "403":
          $ref: "#/components/responses/403"
        "401":
          $ref: "#/components/responses/401"
        "200":
          $ref: "#/components/responses/200"
        "404":
          $ref: "#/components/responses/404"
        default:
          $ref: "#/components/responses/GeneralError"
components:
  responses:
    "200":
      description: OK
      content:
        text/plain:
          schema:
            type: string
    "200json":
      description: OK
      content:
        application/json:
          schema:
            type: string

    "400":
      description: "Bad Request"
      content:
        application/problem+json:
          schema:
            $ref: "problem.yaml#/Problem"
    "401":
      description: "Unauthorized"
      content:
        application/problem+json:
          schema:
            $ref: "problem.yaml#/Problem"
    "403":
      description: "Forbidden"
      content:
        application/problem+json:
          schema:
            $ref: "problem.yaml#/Problem"
    "404":
      description: "Not Found"
      content:
        application/problem+json:
          schema:
            $ref: "problem.yaml#/Problem"
    GeneralError:
      description: Unexpected error
      content:
        application/problem+json:
          schema:
            $ref: "problem.yaml#/Problem"
