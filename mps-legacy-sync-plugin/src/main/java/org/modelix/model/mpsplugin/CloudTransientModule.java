package org.modelix.model.mpsplugin;

/*Generated by MPS */

import jetbrains.mps.project.AbstractModule;
import jetbrains.mps.extapi.module.TransientSModule;
import jetbrains.mps.project.structure.modules.ModuleDescriptor;
import org.modelix.model.util.pmap.CustomPMap;
import org.modelix.model.util.pmap.SmallPMap;
import jetbrains.mps.project.ModuleId;
import jetbrains.mps.vfs.IFile;
import org.jetbrains.annotations.Nullable;
import java.util.Set;

public class CloudTransientModule extends AbstractModule implements IUserObjectContainer, TransientSModule {
  private final ModuleDescriptor myDescriptor;
  private CustomPMap<Object, Object> userObjects = SmallPMap.Companion.empty();

  public CloudTransientModule(String name, ModuleId id) {
    super((IFile) null);
    myDescriptor = new ModuleDescriptor();
    myDescriptor.setId(id);
    myDescriptor.setNamespace(name);
    setModuleReference(myDescriptor.getModuleReference());
  }
  @Override
  public <T> T getUserObject(UserObjectKey<T> key) {
    return (T) userObjects.get(key);
  }
  @Override
  public <T> void putUserObject(UserObjectKey<T> key, T value) {
    userObjects = userObjects.put(key, value);
  }
  @Nullable
  @Override
  public ModuleDescriptor getModuleDescriptor() {
    return myDescriptor;
  }
  @Override
  protected void collectMandatoryFacetTypes(Set<String> types) {
  }
  @Override
  public boolean isPackaged() {
    return false;
  }
  @Override
  public boolean isReadOnly() {
    return false;
  }
}
