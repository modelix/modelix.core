package org.modelix.model.mpsplugin;

/*Generated by MPS */

import javax.swing.Icon;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.geom.RoundRectangle2D;
import java.awt.Font;

public class LetterInSquareIcon implements Icon {
  private String letter;
  private int fontSize;
  private float offsetX;
  private float offsetY;
  private Color backgroundColor;
  private Color foregroundColor;
  public LetterInSquareIcon(String letter, int fontSize, float offsetX, float offsetY) {
    this(letter, fontSize, offsetX, offsetY, Color.BLACK, new Color(200, 200, 200));
  }
  public LetterInSquareIcon(String letter, int fontSize, float offsetX, float offsetY, Color backgroundColor, Color foregroundColor) {
    this.letter = letter;
    this.fontSize = fontSize;
    this.offsetX = offsetX;
    this.offsetY = offsetY;
    this.backgroundColor = backgroundColor;
    this.foregroundColor = foregroundColor;
  }
  public void paintIcon(Component p0, Graphics g_, int x, int y) {
    Graphics2D g = (Graphics2D) g_.create();
    try {
      g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
      g.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
      g.setRenderingHint(RenderingHints.KEY_FRACTIONALMETRICS, RenderingHints.VALUE_FRACTIONALMETRICS_ON);
      g.setColor(backgroundColor);
      g.fill(new RoundRectangle2D.Double(x, y, getIconWidth(), getIconHeight(), 5, 5));
      g.setFont(new Font("Arial", Font.BOLD, fontSize));
      g.setColor(foregroundColor);
      g.drawString(letter, x + offsetX, y + offsetY);
    } finally {
      g.dispose();
    }
  }
  public int getIconWidth() {
    return 16;
  }
  public int getIconHeight() {
    return 16;
  }
}
