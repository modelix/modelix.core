package org.modelix.model.mpsplugin.history;

/*Generated by MPS */

import org.modelix.model.api.INode;
import org.modelix.model.api.PNodeAdapter;
import org.modelix.model.api.ITree;
import org.modelix.model.api.IConcept;
import org.modelix.model.mpsadapters.mps.SConceptAdapter;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class CloudNodeTreeNodeClassification {
  public CloudNodeTreeNodeClassification() {
  }
  public static boolean isCloudNodeRootNode(final CloudNodeTreeNode _this) {
    INode node = _this.getNode();
    if (!(node instanceof PNodeAdapter)) {
      return false;
    }
    return ((PNodeAdapter) node).getNodeId() == ITree.ROOT_ID;
  }
  public static boolean isCloudNodeModuleNode(final CloudNodeTreeNode _this) {
    IConcept concept = _this.getConcept();
    if (concept == null) {
      return false;
    }
    return concept.isSubConceptOf(SConceptAdapter.wrap(CONCEPTS.Module$4i));
  }
  public static boolean isCloudNodeAProjectNode(final CloudNodeTreeNode _this) {
    IConcept concept = _this.getConcept();
    if (concept == null) {
      return false;
    }
    return concept.isSubConceptOf(SConceptAdapter.wrap(CONCEPTS.Project$An));
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Module$4i = MetaAdapterFactory.getConcept(0xa7577d1d4e5431dL, 0x98b1fae38f9aee80L, 0x69652614fd1c50fL, "org.modelix.model.repositoryconcepts.structure.Module");
    /*package*/ static final SConcept Project$An = MetaAdapterFactory.getConcept(0xa7577d1d4e5431dL, 0x98b1fae38f9aee80L, 0x37a0917d689de959L, "org.modelix.model.repositoryconcepts.structure.Project");
  }
}
