package org.modelix.model.mpsplugin.plugin;

/*Generated by MPS */

import jetbrains.mps.workbench.action.BaseAction;
import org.apache.log4j.Logger;
import org.apache.log4j.LogManager;
import javax.swing.Icon;
import com.intellij.openapi.actionSystem.AnActionEvent;
import java.util.Map;
import com.intellij.openapi.project.Project;
import com.intellij.openapi.actionSystem.CommonDataKeys;
import org.jetbrains.annotations.NotNull;
import com.intellij.openapi.ui.Messages;
import org.apache.log4j.Level;
import jetbrains.mps.ide.project.ProjectHelper;
import org.modelix.model.mpsplugin.ModelServerConnections;
import java.util.function.Consumer;
import org.modelix.model.mpsplugin.ModelServerConnection;

public class AddModelServer_Action extends BaseAction {
  private static final Logger LOG = LogManager.getLogger(AddModelServer_Action.class);
  private static final Icon ICON = null;

  public AddModelServer_Action() {
    super("Add Model Server", "", ICON);
    this.setIsAlwaysVisible(false);
    this.setExecuteOutsideCommand(true);
  }
  @Override
  public boolean isDumbAware() {
    return true;
  }
  @Override
  protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {
    if (!(super.collectActionData(event, _params))) {
      return false;
    }
    {
      Project p = event.getData(CommonDataKeys.PROJECT);
      if (p == null) {
        return false;
      }
    }
    return true;
  }
  @Override
  public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {
    String url = Messages.showInputDialog(event.getData(CommonDataKeys.PROJECT), "URL", "Add Model Server", null, "http://", null);
    if (!(url.toLowerCase().startsWith("http://")) && !(url.toLowerCase().startsWith("https://"))) {
      Messages.showErrorDialog(event.getData(CommonDataKeys.PROJECT), "Invalid URL: it should shart with http:// or https://", "Add Model Server");
      return;
    }
    if (url != null && (url != null && url.length() > 0)) {
      if (!(url.endsWith("/"))) {
        String originalUrl = url;
        url = url + "/";
        LOG.info("A Model Server URL should end with a slash. URL modified from '" + originalUrl + "' to '" + url + "'");
      }
      if (ModelServerConnections.getInstance().existModelServer(url)) {
        Messages.showErrorDialog(event.getData(CommonDataKeys.PROJECT), "Already present!", "Add Model Server");
        return;
      }
      String token = null;
      final String finalUrl = url;
//      if (AuthenticationManager.getAuthenticationProcess(finalUrl).areWeUsingAuthentication(event.getData(CommonDataKeys.PROJECT))) {
//        AuthenticationManager.getAuthenticationProcess(finalUrl).getToken(event.getData(CommonDataKeys.PROJECT), new Consumer<String>() {
//          @Override
//          public void accept(String token) {
//            ModelServerConnection modelServer = ModelServerConnections.getInstance().ensureModelServerIsPresent(finalUrl);
//            PersistedBindingConfiguration.getInstance(event.getData(CommonDataKeys.PROJECT)).ensureModelServerIsPresent(modelServer);
//          }
//        });
//      } else {
        ModelServerConnection modelServer = ModelServerConnections.getInstance().ensureModelServerIsPresent(finalUrl);
        PersistedBindingConfiguration.getInstance(event.getData(CommonDataKeys.PROJECT)).ensureModelServerIsPresent(modelServer);
//      }
    }
  }
}
