package org.modelix.model.mpsadapters.mps;

/*Generated by MPS */

import org.modelix.model.api.ILanguage;
import org.jetbrains.mps.openapi.language.SLanguage;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.MetaIdHelper;
import java.util.List;
import org.modelix.model.api.IConcept;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.internal.collections.runtime.ISelector;

public class SLanguageAdapter implements ILanguage {
  private SLanguage language;
  public SLanguageAdapter(SLanguage language) {
    this.language = language;
  }

  @NotNull
  @Override
  public String getUID() {
    return MetaIdHelper.getLanguage(language).serialize();
  }

  @NotNull
  @Override
  public String getName() {
    return language.getQualifiedName();
  }

  @NotNull
  @Override
  public List<IConcept> getConcepts() {
    Iterable<SAbstractConcept> concepts = language.getConcepts();
    return Sequence.fromIterable(concepts).select(new ISelector<SAbstractConcept, IConcept>() {
      public IConcept select(SAbstractConcept it) {
        IConcept c = new SConceptAdapter(it);
        return c;
      }
    }).toListSequence();
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || this.getClass() != o.getClass()) {
      return false;
    }

    SLanguageAdapter that = (SLanguageAdapter) o;
    if ((language != null ? !(language.equals(that.language)) : that.language != null)) {
      return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int result = 0;
    result = 31 * result + ((language != null ? ((Object) language).hashCode() : 0));
    return result;
  }
}
