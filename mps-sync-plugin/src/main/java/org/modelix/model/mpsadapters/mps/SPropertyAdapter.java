package org.modelix.model.mpsadapters.mps;

/*Generated by MPS */

import org.modelix.model.api.IProperty;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.smodel.adapter.ids.MetaIdHelper;
import org.modelix.model.api.IConcept;

public class SPropertyAdapter implements IProperty {

  private SProperty property;

  public SPropertyAdapter(SProperty property1) {
    property = property1;
  }

  @NotNull
  @Override
  public String getUID() {
    return MetaIdHelper.getProperty(property).serialize();
  }

  @NotNull
  @Override
  public IConcept getConcept() {
    return SConceptAdapter.wrap(property.getOwner());
  }

  public SProperty getProperty() {
    return property;
  }

  @NotNull
  @Override
  public String getSimpleName() {
    return property.getName();
  }

  @Override
  public boolean isOptional() {
    return true;
  }
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || this.getClass() != o.getClass()) {
      return false;
    }

    SPropertyAdapter that = (SPropertyAdapter) o;
    if ((property != null ? !(property.equals(that.property)) : that.property != null)) {
      return false;
    }

    return true;
  }
  @Override
  public int hashCode() {
    int result = 0;
    result = 31 * result + ((property != null ? ((Object) property).hashCode() : 0));
    return result;
  }
}
