package org.modelix.model.mpsplugin;

/*Generated by MPS */

import java.util.List;
import org.jetbrains.mps.openapi.model.SNode;
import org.modelix.model.area.PArea;
import kotlin.jvm.functions.Function0;
import jetbrains.mps.internal.collections.runtime.IListSequence;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ISelector;
import org.modelix.model.lazy.RepositoryId;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;

public class ModelServerNavigation {
  public ModelServerNavigation() {
  }
  public static List<CloudRepository> trees(final ModelServerConnection _this) {
    final SNode info = _this.getInfo();
    return new PArea(_this.getInfoBranch()).executeRead(new Function0<IListSequence<CloudRepository>>() {
      public IListSequence<CloudRepository> invoke() {
        // We want to obtain a list within the transaction.
        // A sequence (which is lazy) would not work
        return ListSequence.fromList(SLinkOperations.getChildren(info, LINKS.repositories$b56J)).select(new ISelector<SNode, CloudRepository>() {
          public CloudRepository select(SNode it) {
            RepositoryId repositoryId = new RepositoryId(SPropertyOperations.getString(it, PROPS.id$baYB));
            return new CloudRepository(_this, repositoryId);
          }
        }).toListSequence();
      }
    });
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink repositories$b56J = MetaAdapterFactory.getContainmentLink(0xb6980ebdf01d459dL, 0xa95238740f6313b4L, 0x62b7d9b07cecbcbfL, 0x62b7d9b07cecbcc2L, "repositories");
  }

  private static final class PROPS {
    /*package*/ static final SProperty id$baYB = MetaAdapterFactory.getProperty(0xb6980ebdf01d459dL, 0xa95238740f6313b4L, 0x62b7d9b07cecbcc0L, 0x62b7d9b07cecbcc6L, "id");
  }
}
