package org.modelix.model.mpsplugin.history;

/*Generated by MPS */

import javax.swing.tree.TreeNode;

public class TreeNodeClassification {
  public TreeNodeClassification() {
  }
  public static boolean isRootNode(final TreeNode _this) {
    CloudNodeTreeNode nodeTreeNode = as_k32uer_a0a0a1(_this, CloudNodeTreeNode.class);
    if (nodeTreeNode == null) {
      return false;
    } else {
      return CloudNodeTreeNodeClassification.isCloudNodeRootNode(nodeTreeNode);
    }
  }
  public static boolean isProperNode(final TreeNode _this) {
    CloudNodeTreeNode nodeTreeNode = as_k32uer_a0a0a2(_this, CloudNodeTreeNode.class);
    return nodeTreeNode != null;
  }
  public static boolean isModuleNode(final TreeNode _this) {
    CloudNodeTreeNode nodeTreeNode = as_k32uer_a0a0a3(_this, CloudNodeTreeNode.class);
    if (nodeTreeNode == null) {
      return false;
    } else {
      return CloudNodeTreeNodeClassification.isCloudNodeModuleNode(nodeTreeNode);
    }
  }
  public static boolean isProjectNode(final TreeNode _this) {
    CloudNodeTreeNode nodeTreeNode = as_k32uer_a0a0a4(_this, CloudNodeTreeNode.class);
    if (nodeTreeNode == null) {
      return false;
    } else {
      return CloudNodeTreeNodeClassification.isCloudNodeAProjectNode(nodeTreeNode);
    }
  }
  private static <T> T as_k32uer_a0a0a1(Object o, Class<T> type) {
    return (type.isInstance(o) ? (T) o : null);
  }
  private static <T> T as_k32uer_a0a0a2(Object o, Class<T> type) {
    return (type.isInstance(o) ? (T) o : null);
  }
  private static <T> T as_k32uer_a0a0a3(Object o, Class<T> type) {
    return (type.isInstance(o) ? (T) o : null);
  }
  private static <T> T as_k32uer_a0a0a4(Object o, Class<T> type) {
    return (type.isInstance(o) ? (T) o : null);
  }
}
