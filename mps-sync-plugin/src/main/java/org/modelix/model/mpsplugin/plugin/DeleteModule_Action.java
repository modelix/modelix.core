package org.modelix.model.mpsplugin.plugin;

/*Generated by MPS */

import jetbrains.mps.workbench.action.BaseAction;
import javax.swing.Icon;
import com.intellij.openapi.actionSystem.AnActionEvent;
import java.util.Map;
import org.modelix.model.mpsplugin.history.TreeNodeClassification;
import jetbrains.mps.ide.actions.MPSCommonDataKeys;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.project.MPSProject;
import javax.swing.tree.TreeNode;
import com.intellij.openapi.ui.Messages;
import org.modelix.model.mpsplugin.history.TreeNodeAccess;

public class DeleteModule_Action extends BaseAction {
  private static final Icon ICON = null;

  public DeleteModule_Action() {
    super("Delete Module", "", ICON);
    this.setIsAlwaysVisible(false);
    this.setExecuteOutsideCommand(true);
  }
  @Override
  public boolean isDumbAware() {
    return true;
  }
  @Override
  public boolean isApplicable(AnActionEvent event, final Map<String, Object> _params) {
    return TreeNodeClassification.isModuleNode(event.getData(MPSCommonDataKeys.TREE_NODE));
  }
  @Override
  public void doUpdate(@NotNull AnActionEvent event, final Map<String, Object> _params) {
    this.setEnabledState(event.getPresentation(), this.isApplicable(event, _params));
  }
  @Override
  protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {
    if (!(super.collectActionData(event, _params))) {
      return false;
    }
    {
      MPSProject p = event.getData(MPSCommonDataKeys.MPS_PROJECT);
      if (p == null) {
        return false;
      }
    }
    {
      TreeNode p = event.getData(MPSCommonDataKeys.TREE_NODE);
      if (p == null) {
        return false;
      }
    }
    return true;
  }
  @Override
  public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {
    int dialogResult = Messages.showOkCancelDialog(event.getData(MPSCommonDataKeys.MPS_PROJECT).getProject(), "Are you sure you want to delete module '" + TreeNodeAccess.getName(event.getData(MPSCommonDataKeys.TREE_NODE)) + "' ?", "Delete Module", null);
    if (dialogResult != Messages.OK) {
      return;
    }
    TreeNodeAccess.delete(event.getData(MPSCommonDataKeys.TREE_NODE));
  }
}
