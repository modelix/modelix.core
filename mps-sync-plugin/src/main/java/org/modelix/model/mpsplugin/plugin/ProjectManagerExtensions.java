package org.modelix.model.mpsplugin.plugin;

/*Generated by MPS */

import com.intellij.openapi.project.ProjectManager;
import java.util.function.Consumer;
import jetbrains.mps.project.Project;
import java.util.List;
import jetbrains.mps.project.ProjectManagerListener;
import org.jetbrains.annotations.NotNull;

public class ProjectManagerExtensions {
  public ProjectManagerExtensions() {
  }
  public static void withTheOnlyProject(final ProjectManager _this, final Consumer<Project> stuffToDoOnceWeGetAProject) {
    List<Project> openProjects = jetbrains.mps.project.ProjectManager.getInstance().getOpenedProjects();
    if (openProjects.size() == 0) {
      jetbrains.mps.project.ProjectManager.getInstance().addProjectListener(new ProjectManagerListener() {
        @Override
        public void projectOpened(@NotNull Project project) {
          stuffToDoOnceWeGetAProject.accept(project);
        }
        @Override
        public void projectClosed(@NotNull Project project) {
          // nothing to do here
        }
      });
    } else if (openProjects.size() == 1) {
      stuffToDoOnceWeGetAProject.accept(openProjects.get(0));
    } else {
      throw new IllegalStateException("Exactly one open project expected. Open projects: " + openProjects);
    }
  }
}
