package org.modelix.model.mpsplugin.plugin;

/*Generated by MPS */

import jetbrains.mps.workbench.action.BaseAction;
import javax.swing.Icon;
import jetbrains.mps.workbench.action.ActionAccess;
import com.intellij.openapi.actionSystem.AnActionEvent;
import java.util.Map;
import javax.swing.tree.TreeNode;
import jetbrains.mps.ide.actions.MPSCommonDataKeys;
import org.jetbrains.annotations.NotNull;
import org.modelix.model.mpsplugin.history.RepositoryTreeNode;
import org.modelix.model.mpsplugin.ModelServerConnection;

public class RemoveRepository_Action extends BaseAction {
  private static final Icon ICON = null;

  public RemoveRepository_Action() {
    super("Remove Repository", "", ICON);
    this.setIsAlwaysVisible(false);
    this.setActionAccess(ActionAccess.UNDO_PROJECT);
  }
  @Override
  public boolean isDumbAware() {
    return true;
  }
  @Override
  protected boolean collectActionData(AnActionEvent event, final Map<String, Object> _params) {
    if (!(super.collectActionData(event, _params))) {
      return false;
    }
    {
      TreeNode p = event.getData(MPSCommonDataKeys.TREE_NODE);
      if (p == null) {
        return false;
      }
    }
    return true;
  }
  @Override
  public void doExecute(@NotNull final AnActionEvent event, final Map<String, Object> _params) {
    RepositoryTreeNode repositoryNode = (RepositoryTreeNode) event.getData(MPSCommonDataKeys.TREE_NODE);
    ModelServerConnection modelServer = repositoryNode.getModelServer();
    modelServer.removeRepository(repositoryNode.getRepositoryId().getId());
  }
}
